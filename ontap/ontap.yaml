basePath: /api
consumes:
- application/json
- application/hal+json
definitions:
  account:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      applications:
        items:
          $ref: '#/definitions/account_application'
        type: array
      comment:
        description: Optional comment for the user account.
        type: string
      locked:
        default: false
        description: Locked status of the account.
        type: boolean
      name:
        description: User or group account name
        example: joe.smith
        maxLength: 64
        minLength: 3
        type: string
        x-ntap-readCreate: true
      owner:
        description: Owner name and UUID that uniquely identifies the user account.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      password:
        description: Password for the account. The password can contain a mix of lower
          and upper case alphabetic characters, digits, and special characters.
        format: password
        maxLength: 128
        minLength: 8
        type: string
        writeOnly: true
      role:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Role name
            example: admin
            type: string
        type: object
      scope:
        description: Scope of the entity. Set to "cluster" for cluster owned objects
          and to "svm" for SVM owned objects.
        enum:
        - cluster
        - svm
        readOnly: true
        type: string
    type: object
  account_application:
    properties:
      application:
        description: Applications
        enum:
        - console
        - http
        - ontapi
        - service_processor
        - ssh
        type: string
      authentication_methods:
        items:
          enum:
          - password
          - publickey
          - domain
          - nsswitch
          - certificate
          - saml
          type: string
        type: array
      second_authentication_method:
        default: none
        description: An optional additional authentication method for MFA. This only
          works with SSH as the application. It is ignored for all other applications.
        enum:
        - none
        - password
        - publickey
        - nsswitch
        type: string
    type: object
  account_password:
    description: The password object
    properties:
      name:
        description: The user account name whose password is being modified.
        type: string
      owner:
        description: Owner name and UUID that uniquely identifies the user account.
          This field is optional and valid only when a cluster administrator is executing
          the API to uniquely identify the account whose password is being modified.
          The "owner" field is not required to be specified for SVM user accounts
          trying to modify their password.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      password:
        description: The password string
        format: password
        maxLength: 128
        minLength: 8
        type: string
        writeOnly: true
    type: object
  account_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: User account
        example: joe.smith
        type: string
    type: object
    x-ntap-readCreate: true
  account_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/account'
        type: array
    type: object
  ad_domain:
    properties:
      fqdn:
        description: The fully qualified domain name of the Windows Active Directory
          to which this CIFS server belongs. A CIFS server appears as a member of
          Windows server object in the Active Directory store. POST and PATCH only.
        example: example.com
        type: string
      organizational_unit:
        default: CN=Computers
        description: Specifies the organizational unit within the Active Directory
          domain to associate with the CIFS server. POST and PATCH only.
        type: string
      password:
        description: The account password used to add this CIFS server to the Active
          Directory. This is not audited.
        type: string
        x-ntap-writeOnly: true
      user:
        description: The user account used to add this CIFS server to the Active Directory.
          POST and DELETE only.
        type: string
        x-ntap-readCreate: true
    type: object
  ad_domain_svm:
    properties:
      fqdn:
        description: |
          The fully qualified domain name of the Windows Active Directory to which this CIFS server belongs. A CIFS server appears as a member of Windows server object in the Active Directory store.
        example: example.com
        type: string
        x-ntap-readCreate: true
      organizational_unit:
        default: CN=Computers
        description: |
          Specifies the organizational unit within the Active Directory domain to associate with the CIFS server.
        type: string
        x-ntap-readCreate: true
      password:
        description: |
          The account password used to add this CIFS server to the Active Directory. This is not audited. Valid in POST only.
        type: string
        x-ntap-createOnly: true
      user:
        description: |
          The user account used to add this CIFS server to the Active Directory. Valid in POST only.
        type: string
        x-ntap-createOnly: true
    type: object
  aggregate:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      block_storage:
        description: Configuration information for the locally attached portion of
          the aggregate. When a cloud store is also used by this aggregate, this is
          referred to as the performance tier.
        properties:
          hybrid_cache:
            description: Contains the configuration for the hybrid cache. The hybrid
              cache is made up of either whole SSDs or storage pool SSDs.
            properties:
              disk_count:
                description: Number of disks used in the cache tier of the aggregate.
                  Only provided when hybrid_cache.enabled is 'true'.
                example: 6
                readOnly: true
                type: integer
              enabled:
                description: Aggregate uses HDDs with SSDs as a cache
                readOnly: true
                type: boolean
              raid_type:
                description: RAID type for SSD cache of the aggregate. Only provided
                  when hybrid_cache.enabled is 'true'.
                enum:
                - raid_dp
                - raid_tec
                - raid4
                readOnly: true
                type: string
              size:
                description: Total usable space in bytes of SSD cache. Only provided
                  when hybrid_cache.enabled is 'true'.
                example: 1612709888
                readOnly: true
                type: integer
              used:
                description: Space used in bytes of SSD cache. Only provided when
                  hybrid_cache.enabled is 'true'.
                example: 26501122
                readOnly: true
                type: integer
            readOnly: true
            type: object
          mirror:
            properties:
              enabled:
                description: Aggregate is SyncMirror protected
                example: false
                type: boolean
              state:
                enum:
                - unmirrored
                - normal
                - degraded
                - resynchronizing
                - failed
                readOnly: true
                type: string
            type: object
          plexes:
            description: Plex reference for each plex in the aggregate.
            items:
              $ref: '#/definitions/plex_reference'
            readOnly: true
            type: array
          primary:
            description: Configuration information for the primary storage portion
              of the aggregate. This excludes the hybrid cache details.
            properties:
              checksum_style:
                description: The checksum style used by the aggregate.
                enum:
                - block
                - advanced_zoned
                - mixed
                type: string
                x-ntap-readCreate: true
              disk_class:
                description: The class of disks being used by the aggregate.
                enum:
                - capacity
                - performance
                - archive
                - solid_state
                - array
                - virtual
                - data_center
                - capacity_flash
                example: performance
                type: string
                x-ntap-readCreate: true
              disk_count:
                description: Number of disks used in the aggregate. This includes
                  parity disks, but excludes disks in the hybrid cache.
                example: 8
                type: integer
              disk_type:
                description: The type of disk being used by the aggregate.
                enum:
                - fc
                - lun
                - nl_sas
                - nvme_ssd
                - sas
                - sata
                - scsi
                - ssd
                - vm_disk
                readOnly: true
                type: enum
              raid_size:
                description: Option to specify the maximum number of disks that can
                  be included in a RAID group.
                example: 16
                type: integer
              raid_type:
                description: RAID type of the aggregate.
                enum:
                - raid_dp
                - raid_tec
                - raid0
                - raid4
                type: string
            type: object
        type: object
      cloud_storage:
        description: Configuration information for the cloud storage portion of the
          aggregate. This is referred to as the capacity tier.
        properties:
          attach_eligible:
            description: Aggregate is eligible for a cloud store to be attached.
            readOnly: true
            type: boolean
          stores:
            description: Configuration information for each cloud storage portion
              of the aggregate.
            items:
              $ref: '#/definitions/cloud_storage_tier'
            readOnly: true
            type: array
          tiering_fullness_threshold:
            description: The percentage of space in the performance tier that must
              be used before data is tiered out to the cloud store. Only valid for
              PATCH operations.
            type: integer
            x-ntap-modifyOnly: true
        type: object
        x-ntap-modifyOnly: true
      create_time:
        description: Timestamp of aggregate creation
        example: 2018-01-01T12:00:00-04:00
        readOnly: true
        type: string
      data_encryption:
        properties:
          drive_protection_enabled:
            description: Aggregate uses self-encrypting drives with data protection
              enabled.
            readOnly: true
            type: boolean
          software_encryption_enabled:
            description: NetApp Aggregate Encryption enabled. All data in the aggregate
              is encrypted.
            readOnly: true
            type: boolean
        readOnly: true
        type: object
      dr_home_node:
        description: Node where the aggregate belongs after disaster recovery. The
          value for this field might differ from the 'node' field during switchover.
        properties:
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      home_node:
        description: Node where the aggregate belongs after giveback. The value for
          this field might differ from the value of the 'node' field during takeover.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      metric:
        description: The most recent sample of I/O metrics for the aggregate.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        description: Aggregate name
        example: node1_aggr_1
        type: string
      node:
        description: Node where the aggregate currently resides.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      snaplock_type:
        description: SnapLock type
        enum:
        - non_snaplock
        - compliance
        - enterprise
        type: string
        x-ntap-readCreate: true
      space:
        properties:
          block_storage:
            properties:
              available:
                description: Space available in bytes
                example: 10156560384
                readOnly: true
                type: integer
              full_threshold_percent:
                description: The aggregate used percentage at which 'monitor.volume.full'
                  EMS is generated.
                readOnly: true
                type: integer
              inactive_user_data:
                description: |
                  The size that is physically used in the block storage and has a cold temperature, in bytes. This property is only supported if the aggregate is either attached to a cloud store or can be attached to a cloud store.
                  This is an advanced property; there is an added cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the <i>fields</i> query parameter containing either block_storage.inactive_user_data or **.
                example: 304448
                readOnly: true
                type: integer
              size:
                description: Total usable space in bytes, not including WAFL reserve
                  and aggregate Snapshot copy reserve.
                example: 10156769280
                readOnly: true
                type: integer
              used:
                description: Space used or reserved in bytes. Includes volume guarantees
                  and aggregate metadata.
                example: 2088960
                readOnly: true
                type: integer
            readOnly: true
            type: object
          cloud_storage:
            properties:
              used:
                description: Used space in bytes in the cloud store. Only applicable
                  for aggregate with a cloud store tier.
                example: 402743264
                readOnly: true
                type: integer
            readOnly: true
            type: object
          efficiency:
            description: Storage efficiency
            properties:
              logical_used:
                description: Logical used
                readOnly: true
                type: integer
              ratio:
                description: Data reduction ratio (logical_used / used)
                readOnly: true
                type: number
              savings:
                description: Space saved by storage efficiencies (logical_used - used)
                readOnly: true
                type: integer
            type: object
          efficiency_without_snapshots:
            description: Storage efficiency that does not include the savings provided
              by Snapshot copies
            properties:
              logical_used:
                description: Logical used
                readOnly: true
                type: integer
              ratio:
                description: Data reduction ratio (logical_used / used)
                readOnly: true
                type: number
              savings:
                description: Space saved by storage efficiencies (logical_used - used)
                readOnly: true
                type: integer
            type: object
          footprint:
            description: |
              A summation of volume footprints (including volume guarantees), in bytes. This includes all of the volume footprints in the block_storage tier and the cloud_storage tier.
              This is an advanced property; there is an added cost to retrieving its value. The field is not populated for either a collection GET or an instance GET unless it is explicitly requested using the <i>fields</i> query parameter containing either footprint or **.
            example: 608896
            readOnly: true
            type: integer
        readOnly: true
        type: object
      state:
        description: Operational state of the aggregate
        enum:
        - online
        - onlining
        - offline
        - offlining
        - relocating
        - unmounted
        - restricted
        - inconsistent
        - failed
        - unknown
        readOnly: true
        type: string
      statistics:
        description: The real time I/O statistics for the aggregate.
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This can
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: Aggregate UUID
        readOnly: true
        type: string
    type: object
  aggregate_reference:
    description: Aggregate
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: aggr1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  aggregate_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        $ref: '#/definitions/error'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/aggregate'
        type: array
      spares:
        items:
          $ref: '#/definitions/aggregate_spare'
        type: array
    type: object
  aggregate_spare:
    properties:
      checksum_style:
        description: The checksum type that has been assigned to the spares
        enum:
        - block
        - advanced_zoned
        readOnly: true
        type: string
      disk_class:
        description: Disk class of spares
        enum:
        - unknown
        - capacity
        - performance
        - archive
        - solid_state
        - array
        - virtual
        - data_center
        - capacity_flash
        example: solid_state
        readOnly: true
        type: string
      layout_requirements:
        description: Available RAID protections and their restrictions
        items:
          $ref: '#/definitions/layout_requirement'
        type: array
      node:
        description: Node where the spares are assigned
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      size:
        description: Usable size of each spare in bytes
        example: 10156769280
        readOnly: true
        type: integer
      syncmirror_pool:
        description: SyncMirror spare pool
        enum:
        - pool0
        - pool1
        readOnly: true
        type: string
      usable:
        description: Total number of usable spares
        example: 9
        readOnly: true
        type: integer
    type: object
  app_cifs_access:
    description: The list of CIFS access controls.
    properties:
      access:
        default: full_control
        description: The CIFS access granted to the user or group.
        enum:
        - change
        - full_control
        - no_access
        - read
        type: string
        x-ntap-readCreate: true
      user_or_group:
        default: Everyone
        description: The name of the CIFS user or group that will be granted access.
        type: string
        x-ntap-readCreate: true
    type: object
  app_nfs_access:
    description: The list of NFS access controls.
    properties:
      access:
        default: rw
        description: The NFS access granted.
        enum:
        - none
        - ro
        - rw
        type: string
        x-ntap-readCreate: true
      host:
        default: 0.0.0.0/0
        description: The name of the NFS entity granted access.
        type: string
        x-ntap-readCreate: true
    type: object
  application:
    description: Applications
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
          snapshots:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      creation_timestamp:
        description: The time when the application was created.
        readOnly: true
        type: string
      generation:
        description: The generation number of the application. This indicates which
          features are supported on the application. For example, generation 1 applications
          do not support Snapshot copies. Support for Snapshot copies was added at
          generation 2. Any future generation numbers and their feature set will be
          documented.
        readOnly: true
        type: integer
      maxdata_on_san:
        $ref: '#/definitions/maxdata_on_san'
        x-ntap-advanced: true
      mongo_db_on_san:
        $ref: '#/definitions/mongo_db_on_san'
        x-ntap-advanced: true
      name:
        description: Application Name. This field is user supplied when the application
          is created.
        type: string
        x-ntap-readCreate: true
      nas:
        $ref: '#/definitions/nas'
        x-ntap-advanced: true
      nvme:
        $ref: '#/definitions/zapp_nvme'
        x-ntap-advanced: true
      oracle_on_nfs:
        $ref: '#/definitions/oracle_on_nfs'
        x-ntap-advanced: true
      oracle_on_san:
        $ref: '#/definitions/oracle_on_san'
        x-ntap-advanced: true
      oracle_rac_on_nfs:
        $ref: '#/definitions/oracle_rac_on_nfs'
        x-ntap-advanced: true
      oracle_rac_on_san:
        $ref: '#/definitions/oracle_rac_on_san'
        x-ntap-advanced: true
      protection_granularity:
        description: Protection granularity determines the scope of Snapshot copy
          operations for the application. Possible values are "application" and "component".
          If the value is "application", Snapshot copy operations are performed on
          the entire application. If the value is "component", Snapshot copy operations
          are performed separately on the application components.
        enum:
        - application
        - component
        readOnly: true
        type: string
      rpo:
        properties:
          components:
            items:
              properties:
                name:
                  description: Component Name.
                  readOnly: true
                  type: string
                rpo:
                  properties:
                    local:
                      properties:
                        description:
                          description: A detailed description of the local RPO. This
                            will include details about the Snapshot copy schedule.
                          readOnly: true
                          type: string
                        name:
                          description: The local RPO of the component. This indicates
                            how often component Snapshot copies are automatically
                            created.
                          enum:
                          - 6_hourly
                          - 15_minutely
                          - hourly
                          - none
                          readOnly: true
                          type: string
                      readOnly: true
                      type: object
                    remote:
                      properties:
                        description:
                          description: A detailed description of the remote RPO.
                          readOnly: true
                          type: string
                        name:
                          description: The remote RPO of the component. A remote RPO
                            of zero indicates that the component is synchronously
                            replicated to another cluster.
                          enum:
                          - 6_hourly
                          - 15_minutely
                          - hourly
                          - none
                          - zero
                          readOnly: true
                          type: string
                      readOnly: true
                      type: object
                  readOnly: true
                  type: object
                uuid:
                  description: Component UUID.
                  readOnly: true
                  type: string
              type: object
            readOnly: true
            type: array
          is_supported:
            description: Is RPO supported for this application? Generation 1 applications
              did not support Snapshot copies or MetroCluster.
            readOnly: true
            type: boolean
          local:
            properties:
              description:
                description: A detailed description of the local RPO. This will include
                  details about the Snapshot copy schedule.
                readOnly: true
                type: string
              name:
                description: The local RPO of the application. This indicates how
                  often application Snapshot copies are automatically created.
                enum:
                - 6_hourly
                - 15_minutely
                - hourly
                - none
                readOnly: true
                type: string
            readOnly: true
            type: object
          remote:
            properties:
              description:
                description: A detailed description of the remote RPO.
                readOnly: true
                type: string
              name:
                description: The remote RPO of the application. A remote RPO of zero
                  indicates that the application is synchronously replicated to another
                  cluster.
                enum:
                - 6_hourly
                - 15_minutely
                - hourly
                - none
                - zero
                readOnly: true
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      san:
        $ref: '#/definitions/san'
        x-ntap-advanced: true
      smart_container:
        description: Identifies if this is a smart container or not.
        type: boolean
        x-ntap-readCreate: true
      sql_on_san:
        $ref: '#/definitions/sql_on_san'
        x-ntap-advanced: true
      sql_on_smb:
        $ref: '#/definitions/sql_on_smb'
        x-ntap-advanced: true
      state:
        description: The state of the application. For full functionality, applications
          must be in the online state. Other states indicate that the application
          is in a transient state and not all operations are supported.
        enum:
        - creating
        - deleting
        - modifying
        - online
        - restoring
        readOnly: true
        type: string
      statistics:
        properties:
          components:
            items:
              properties:
                iops:
                  properties:
                    per_tb:
                      description: The number of IOPS per terabyte of logical space
                        currently being used by the application component.
                      readOnly: true
                      type: integer
                    total:
                      description: The total number of IOPS being used by the application
                        component.
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                latency:
                  properties:
                    average:
                      description: The cumulative average response time in microseconds
                        for this component.
                      readOnly: true
                      type: integer
                    raw:
                      description: The cumulative response time in microseconds for
                        this component.
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                name:
                  description: Component Name.
                  readOnly: true
                  type: string
                shared_storage_pool:
                  description: An application component is considered to use a shared
                    storage pool if storage elements for for other components reside
                    on the same aggregate as storage elements for this component.
                  readOnly: true
                  type: boolean
                snapshot:
                  properties:
                    reserve:
                      description: The amount of space reserved by the system for
                        Snapshot copies.
                      readOnly: true
                      type: integer
                    used:
                      description: The amount of spacing currently in use by the system
                        to store Snapshot copies.
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                space:
                  properties:
                    available:
                      description: The available amount of space left in the application
                        component. Note that this field has limited meaning for SAN
                        applications. Space may be considered used from ONTAP's perspective
                        while the host filesystem still considers it available.
                      readOnly: true
                      type: integer
                    logical_used:
                      description: The amount of space that would currently be used
                        if no space saving features were enabled. For example, if
                        compression were the only space saving feature enabled, this
                        field would represent the uncompressed amount of space used.
                      readOnly: true
                      type: integer
                    provisioned:
                      description: The originally requested amount of space that was
                        provisioned for the application component.
                      readOnly: true
                      type: integer
                    reserved_unused:
                      description: The amount of space reserved for system features
                        such as Snapshot copies that has not yet been used.
                      readOnly: true
                      type: integer
                    savings:
                      description: The amount of space saved by all enabled space
                        saving features.
                      readOnly: true
                      type: integer
                    used:
                      description: The amount of space that is currently being used
                        by the application component. Note that this includes any
                        space reserved by the system for features such as Snapshot
                        copies.
                      readOnly: true
                      type: integer
                    used_excluding_reserves:
                      description: The amount of space that is currently being used,
                        excluding any space that is reserved by the system for features
                        such as Snapshot copies.
                      readOnly: true
                      type: integer
                    used_percent:
                      description: The percentage of the originally provisioned space
                        that is currently being used by the application component.
                      readOnly: true
                      type: integer
                  readOnly: true
                  type: object
                statistics_incomplete:
                  description: If not all storage elements of the application component
                    are currently available, the returned statistics might only include
                    data from those elements that were available.
                  readOnly: true
                  type: boolean
                storage_service:
                  properties:
                    name:
                      description: The storage service name. AFF systems support the
                        extreme storage service. All other systems only support value.
                      readOnly: true
                      type: string
                    uuid:
                      description: The storage service UUID.
                      readOnly: true
                      type: string
                  readOnly: true
                  type: object
                uuid:
                  description: Component UUID.
                  readOnly: true
                  type: string
              type: object
            readOnly: true
            type: array
          iops:
            properties:
              per_tb:
                description: The number of IOPS per terabyte of logical space currently
                  being used by the application.
                readOnly: true
                type: integer
              total:
                description: The total number of IOPS being used by the application.
                readOnly: true
                type: integer
            readOnly: true
            type: object
          latency:
            properties:
              average:
                description: The cumulative average response time in microseconds
                  for this application.
                readOnly: true
                type: integer
              raw:
                description: The cumulative response time in microseconds for this
                  application.
                readOnly: true
                type: integer
            readOnly: true
            type: object
          shared_storage_pool:
            description: An application is considered to use a shared storage pool
              if storage elements for multiple components reside on the same aggregate.
            readOnly: true
            type: boolean
          snapshot:
            properties:
              reserve:
                description: The amount of space reserved by the system for Snapshot
                  copies.
                readOnly: true
                type: integer
              used:
                description: The amount of spacing currently in use by the system
                  to store Snapshot copies.
                readOnly: true
                type: integer
            readOnly: true
            type: object
          space:
            properties:
              available:
                description: The available amount of space left in the application.
                  Note that this field has limited meaning for SAN applications. Space
                  may be considered used from ONTAP's perspective while the host filesystem
                  still considers it available.
                readOnly: true
                type: integer
              logical_used:
                description: The amount of space that would currently be used if no
                  space saving features were enabled. For example, if compression
                  were the only space saving feature enabled, this field would represent
                  the uncompressed amount of space used.
                readOnly: true
                type: integer
              provisioned:
                description: The originally requested amount of space that was provisioned
                  for the application.
                readOnly: true
                type: integer
              reserved_unused:
                description: The amount of space reserved for system features such
                  as Snapshot copies that has not yet been used.
                readOnly: true
                type: integer
              savings:
                description: The amount of space saved by all enabled space saving
                  features.
                readOnly: true
                type: integer
              used:
                description: The amount of space that is currently being used by the
                  application. Note that this includes any space reserved by the system
                  for features such as Snapshot copies.
                readOnly: true
                type: integer
              used_excluding_reserves:
                description: The amount of space that is currently being used, excluding
                  any space that is reserved by the system for features such as Snapshot
                  copies.
                readOnly: true
                type: integer
              used_percent:
                description: The percentage of the originally provisioned space that
                  is currently being used by the application.
                readOnly: true
                type: integer
            readOnly: true
            type: object
          statistics_incomplete:
            description: If not all storage elements of the application are currently
              available, the returned statistics might only include data from those
              elements that were available.
            readOnly: true
            type: boolean
        readOnly: true
        type: object
      svm:
        properties:
          name:
            description: SVM Name. Either the SVM name or UUID must be provided to
              create an application.
            type: string
            x-ntap-readCreate: true
          uuid:
            description: SVM UUID. Either the SVM name or UUID must be provided to
              create an application.
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      template:
        properties:
          _links:
            $ref: '#/definitions/self_link'
          name:
            description: The name of the template that was used to provision this
              application.
            type: string
            x-ntap-readCreate: true
          protocol:
            description: The protocol access of the template that was used to provision
              this application.
            enum:
            - nas
            - nvme
            - san
            readOnly: true
            type: string
          version:
            description: The version of the template that was used to provision this
              application. The template version changes only if the layout of the
              application changes over time. For example, redo logs in Oracle RAC
              templates were updated and provisioned differently in DATA ONTAP 9.3.0
              compared to prior releases, so the version number was increased. If
              layouts change in the future, the changes will be documented along with
              the corresponding version numbers.
            readOnly: true
            type: integer
        type: object
      uuid:
        description: Application UUID. This field is generated when the application
          is created.
        readOnly: true
        type: string
      vdi_on_nas:
        $ref: '#/definitions/vdi_on_nas'
        x-ntap-advanced: true
      vdi_on_san:
        $ref: '#/definitions/vdi_on_san'
        x-ntap-advanced: true
      vsi_on_nas:
        $ref: '#/definitions/vsi_on_nas'
        x-ntap-advanced: true
      vsi_on_san:
        $ref: '#/definitions/vsi_on_san'
        x-ntap-advanced: true
    required:
    - name
    type: object
  application_backing_storage:
    properties:
      luns:
        items:
          $ref: '#/definitions/application_lun_object'
        type: array
      namespaces:
        items:
          $ref: '#/definitions/application_namespace_object'
        type: array
      volumes:
        items:
          $ref: '#/definitions/application_volume_object'
        type: array
    type: object
  application_cifs_properties:
    properties:
      backing_storage:
        properties:
          type:
            description: Backing storage type
            enum:
            - volume
            readOnly: true
            type: string
          uuid:
            description: Backing storage UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      ips:
        items:
          description: Recommended IP addresses
          readOnly: true
          type: string
        type: array
      path:
        description: Junction path
        readOnly: true
        type: string
      permissions:
        items:
          properties:
            access:
              description: Access granted to the user or group
              readOnly: true
              type: string
            user_or_group:
              description: User or group
              readOnly: true
              type: string
          type: object
        readOnly: true
        type: array
      server:
        properties:
          name:
            description: Server name
            readOnly: true
            type: string
        readOnly: true
        type: object
      share:
        properties:
          name:
            description: Share name
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  application_component:
    description: Application component
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Application name
            readOnly: true
            type: string
          uuid:
            description: The application UUID. Valid in URL.
            readOnly: true
            type: string
        readOnly: true
        required:
        - uuid
        type: object
      backing_storage:
        $ref: '#/definitions/application_backing_storage'
      cifs_access:
        items:
          $ref: '#/definitions/application_cifs_properties'
        type: array
      file_system:
        default: m1fs
        description: Defines the type of file system that will be installed on this
          application component.
        enum:
        - m1fs
        - xfs
        - generic
        readOnly: true
        type: string
      host_management_url:
        description: Host management URL
        readOnly: true
        type: string
      host_name:
        description: L2 Host FQDN
        readOnly: true
        type: string
      name:
        description: Application component name
        readOnly: true
        type: string
      nfs_access:
        items:
          $ref: '#/definitions/application_nfs_properties'
        type: array
      nvme_access:
        items:
          $ref: '#/definitions/application_nvme_access'
        type: array
      protection_groups:
        items:
          $ref: '#/definitions/application_protection_groups'
        type: array
      san_access:
        items:
          $ref: '#/definitions/application_san_access'
        type: array
      storage_service:
        properties:
          name:
            description: Storage service name
            readOnly: true
            type: string
          uuid:
            description: Storage service UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      svm:
        properties:
          name:
            description: SVM name
            readOnly: true
            type: string
          uuid:
            description: SVM UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: The application component UUID. Valid in URL.
        readOnly: true
        type: string
    type: object
  application_component_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/application_component'
        type: array
    type: object
  application_component_snapshot:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Application Name
            readOnly: true
            type: string
          uuid:
            description: Application UUID. Valid in URL
            readOnly: true
            type: string
        readOnly: true
        type: object
      comment:
        description: Comment. Valid in POST
        maxLength: 255
        minLength: 0
        type: string
      component:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Component Name
            readOnly: true
            type: string
          uuid:
            description: Component UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      consistency_type:
        description: Consistency Type. This is for categorization only. A Snapshot
          copy should not be set to application consistent unless the host application
          is quiesced for the Snapshot copy. Valid in POST
        enum:
        - crash
        - application
        type: string
      create_time:
        description: Creation Time
        readOnly: true
        type: string
      is_partial:
        description: A partial Snapshot copy means that not all volumes in an application
          component were included in the Snapshot copy.
        readOnly: true
        type: boolean
      name:
        description: Snapshot copy name. Valid in POST
        type: string
      svm:
        properties:
          name:
            description: SVM Name
            readOnly: true
            type: string
          uuid:
            description: SVM UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: Snapshot copy UUID. Valid in URL
        readOnly: true
        type: string
    type: object
  application_component_snapshot_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/application_component_snapshot'
        type: array
    type: object
  application_component_snapshot_restore:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: Application UUID. Valid in URL or POST
            type: string
        type: object
      component:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: Application Component UUID. Valid in URL or POST
            type: string
        type: object
      uuid:
        description: Snapshot UUID. Valid in URL or POST
        type: string
    type: object
  application_lun_mapping_object:
    properties:
      fcp:
        description: All possible Fibre Channel Protocol (FCP) access endpoints for
          the LUN.
        items:
          $ref: '#/definitions/application_san_access_fcp_endpoint'
        readOnly: true
        type: array
      igroup:
        properties:
          initiators:
            items:
              description: Initiators
              readOnly: true
              type: string
            type: array
          name:
            description: Igroup name
            readOnly: true
            type: string
          uuid:
            description: Igroup UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      iscsi:
        description: All possible iSCSI access endpoints for the LUN.
        items:
          $ref: '#/definitions/application_san_access_iscsi_endpoint'
        readOnly: true
        type: array
      lun_id:
        description: LUN ID
        maximum: 4095
        minimum: 0
        readOnly: true
        type: integer
    type: object
  application_lun_object:
    description: LUN object
    properties:
      creation_timestamp:
        description: LUN creation time
        format: date-time
        readOnly: true
        type: string
      path:
        description: LUN path
        readOnly: true
        type: string
      size:
        description: LUN size
        readOnly: true
        type: integer
      uuid:
        description: LUN UUID
        readOnly: true
        type: string
    type: object
  application_namespace_object:
    description: Namespace object
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      creation_timestamp:
        description: Namespace creation time
        format: date-time
        readOnly: true
        type: string
      name:
        description: Namespace name
        readOnly: true
        type: string
      size:
        description: Namespace size
        readOnly: true
        type: integer
      uuid:
        description: Namespace UUID
        readOnly: true
        type: string
    type: object
  application_nfs_properties:
    properties:
      backing_storage:
        properties:
          type:
            description: Backing storage type
            enum:
            - volume
            readOnly: true
            type: string
          uuid:
            description: Backing storage UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      export_policy:
        properties:
          name:
            description: Export policy name
            readOnly: true
            type: string
        readOnly: true
        type: object
      ips:
        items:
          description: Recommended IP addresses
          readOnly: true
          type: string
        type: array
      path:
        description: Junction path
        readOnly: true
        type: string
      permissions:
        items:
          properties:
            access:
              description: Access granted to the host
              readOnly: true
              type: string
            host:
              description: Host granted access
              readOnly: true
              type: string
          type: object
        readOnly: true
        type: array
    type: object
  application_nvme_access:
    description: Application NVME access
    properties:
      backing_storage:
        properties:
          type:
            description: Backing storage type
            enum:
            - namespace
            readOnly: true
            type: string
          uuid:
            description: Backing storage UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      is_clone:
        description: Clone
        readOnly: true
        type: boolean
      subsystem_map:
        description: Subsystem map object
        properties:
          anagrpid:
            description: Subsystem ANA group ID
            readOnly: true
            type: string
          nsid:
            description: Subsystem namespace ID
            readOnly: true
            type: string
          subsystem:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              hosts:
                items:
                  properties:
                    _links:
                      properties:
                        self:
                          properties:
                            self:
                              $ref: '#/definitions/href'
                          readOnly: true
                          type: object
                      readOnly: true
                      type: object
                    nqn:
                      description: Host
                      readOnly: true
                      type: string
                  type: object
                readOnly: true
                type: array
              name:
                description: Subsystem name
                readOnly: true
                type: string
              uuid:
                description: Subsystem UUID
                readOnly: true
                type: string
            readOnly: true
            type: object
        type: object
    type: object
  application_protection_groups:
    properties:
      name:
        description: Protection group name
        readOnly: true
        type: string
      rpo:
        properties:
          local:
            properties:
              description:
                description: A detailed description of the local RPO. This includes
                  details on the Snapshot copy schedule.
                readOnly: true
                type: string
              name:
                description: The local RPO of the component. This indicates how often
                  component Snapshot copies are automatically created.
                enum:
                - none
                - hourly
                - 6_hourly
                - 15_minutely
                readOnly: true
                type: string
            readOnly: true
            type: object
          remote:
            properties:
              description:
                description: A detailed description of the remote RPO.
                readOnly: true
                type: string
              name:
                description: The remote RPO of the component. A remote RPO of zero
                  indicates that the component is synchronously replicated to another
                  cluster.
                enum:
                - none
                - zero
                - hourly
                - 6_hourly
                - 15_minutely
                readOnly: true
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      uuid:
        description: Protection group UUID
        readOnly: true
        type: string
    type: object
  application_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/application'
        type: array
    type: object
  application_san_access:
    properties:
      backing_storage:
        properties:
          type:
            description: Backing storage type
            enum:
            - lun
            readOnly: true
            type: string
          uuid:
            description: Backing storage UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      is_clone:
        description: Clone
        readOnly: true
        type: boolean
      lun_mappings:
        items:
          $ref: '#/definitions/application_lun_mapping_object'
        type: array
      serial_number:
        description: LUN serial number
        maxLength: 12
        minLength: 12
        readOnly: true
        type: string
    type: object
  application_san_access_fcp_endpoint:
    description: A Fibre Channel Protocol (FCP) access endpoint for the LUN.
    properties:
      interface:
        $ref: '#/definitions/fc_interface_reference'
        readOnly: true
    readOnly: true
    type: object
  application_san_access_iscsi_endpoint:
    description: An iSCSI access endpoint for the LUN.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      interface:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          ip:
            description: IP information
            properties:
              address:
                $ref: '#/definitions/ip_address_readonly'
            readOnly: true
            type: object
          name:
            description: The name of the interface.
            example: lif1
            type: string
          uuid:
            description: The UUID that uniquely identifies the interface.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      port:
        description: The TCP port number of the iSCSI access endpoint.
        example: 3260
        maximum: 65536
        minimum: 1
        readOnly: true
        type: integer
    type: object
  application_snapshot:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Application name
            readOnly: true
            type: string
          uuid:
            description: The application UUID. Valid in URL.
            readOnly: true
            type: string
        readOnly: true
        type: object
      comment:
        description: Comment. Valid in POST.
        maxLength: 255
        minLength: 0
        type: string
      components:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              description: Component name
              readOnly: true
              type: string
            uuid:
              description: Component UUID
              readOnly: true
              type: string
          type: object
        readOnly: true
        type: array
      consistency_type:
        description: Consistency type. This is for categorization purposes only. A
          Snapshot copy should not be set to 'application consistent' unless the host
          application is quiesced for the Snapshot copy. Valid in POST.
        enum:
        - crash
        - application
        type: string
      create_time:
        description: Creation time
        readOnly: true
        type: string
      is_partial:
        description: A partial Snapshot copy means that not all volumes in an application
          component were included in the Snapshot copy.
        readOnly: true
        type: boolean
      name:
        description: The Snapshot copy name. Valid in POST.
        type: string
      svm:
        properties:
          name:
            description: SVM name
            readOnly: true
            type: string
          uuid:
            description: SVM UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: The Snapshot copy UUID. Valid in URL.
        readOnly: true
        type: string
    type: object
  application_snapshot_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/application_snapshot'
        type: array
    type: object
  application_snapshot_restore:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: The application UUID. Valid in URL or POST.
            type: string
        type: object
      uuid:
        description: The Snapshot copy UUID. Valid in URL or POST.
        type: string
    type: object
  application_subsystem_map_object:
    description: Subsystem map object
    properties:
      anagrpid:
        description: Subsystem ANA group ID
        readOnly: true
        type: string
      nsid:
        description: Subsystem namespace ID
        readOnly: true
        type: string
      subsystem:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          hosts:
            items:
              properties:
                _links:
                  properties:
                    self:
                      properties:
                        self:
                          $ref: '#/definitions/href'
                      readOnly: true
                      type: object
                  readOnly: true
                  type: object
                nqn:
                  description: Host
                  readOnly: true
                  type: string
              type: object
            readOnly: true
            type: array
          name:
            description: Subsystem name
            readOnly: true
            type: string
          uuid:
            description: Subsystem UUID
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  application_template:
    description: Application templates
    properties:
      _links:
        $ref: '#/definitions/self_link'
      description:
        description: Description.
        readOnly: true
        type: string
      maxdata_on_san:
        $ref: '#/definitions/maxdata_on_san'
      missing_prerequisites:
        description: Missing prerequisites.
        readOnly: true
        type: string
      mongo_db_on_san:
        $ref: '#/definitions/mongo_db_on_san'
      name:
        description: Template name.
        readOnly: true
        type: string
      nas:
        $ref: '#/definitions/nas'
      nvme:
        $ref: '#/definitions/zapp_nvme'
      oracle_on_nfs:
        $ref: '#/definitions/oracle_on_nfs'
      oracle_on_san:
        $ref: '#/definitions/oracle_on_san'
      oracle_rac_on_nfs:
        $ref: '#/definitions/oracle_rac_on_nfs'
      oracle_rac_on_san:
        $ref: '#/definitions/oracle_rac_on_san'
      protocol:
        description: Access protocol.
        enum:
        - nas
        - nvme
        - san
        readOnly: true
        type: string
      san:
        $ref: '#/definitions/san'
      sql_on_san:
        $ref: '#/definitions/sql_on_san'
      sql_on_smb:
        $ref: '#/definitions/sql_on_smb'
      vdi_on_nas:
        $ref: '#/definitions/vdi_on_nas'
      vdi_on_san:
        $ref: '#/definitions/vdi_on_san'
      vsi_on_nas:
        $ref: '#/definitions/vsi_on_nas'
      vsi_on_san:
        $ref: '#/definitions/vsi_on_san'
    required:
    - name
    type: object
  application_template_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/application_template'
        type: array
    type: object
  application_volume_object:
    description: Volume object
    properties:
      creation_timestamp:
        description: Creation time
        format: date-time
        readOnly: true
        type: string
      name:
        description: Name
        readOnly: true
        type: string
      size:
        description: Size
        readOnly: true
        type: integer
      uuid:
        description: UUID
        readOnly: true
        type: string
    type: object
  audit:
    description: Auditing for NAS events is a security measure that enables you to
      track and log certain CIFS and NFS events on SVMs.
    properties:
      enabled:
        default: true
        description: Specifies whether or not auditing is enabled on the SVM.
        type: boolean
      events:
        properties:
          authorization_policy:
            default: false
            description: Authorization policy change events
            type: boolean
          cap_staging:
            default: false
            description: Central access policy staging events
            type: boolean
          cifs_logon_logoff:
            default: true
            description: CIFS logon and logoff events
            type: boolean
          file_operations:
            default: true
            description: File operation events
            type: boolean
          file_share:
            default: false
            description: File share category events
            type: boolean
          security_group:
            default: false
            description: Local security group management events
            type: boolean
          user_account:
            default: false
            description: Local user account management events
            type: boolean
        type: object
      log:
        $ref: '#/definitions/log'
      log_path:
        description: The audit log destination path where consolidated audit logs
          are stored.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  audit_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/audit'
        type: array
    type: object
  audit_schedule:
    description: Rotates the audit logs based on a schedule by using the time-based
      rotation parameters in any combination. The rotation schedule is calculated
      by using all the time-related values.
    properties:
      days:
        description: Specifies the day of the month schedule to rotate audit log.
          Leave empty for all.
        items:
          maxItems: 31
          maximum: 31
          minimum: 1
          type: integer
        type: array
      hours:
        description: Specifies the hourly schedule to rotate audit log. Leave empty
          for all.
        items:
          maxItems: 24
          maximum: 23
          minimum: 0
          type: integer
        type: array
      minutes:
        description: Specifies the minutes schedule to rotate the audit log.
        items:
          maxItems: 60
          maximum: 59
          minimum: 0
          type: integer
        type: array
      months:
        description: Specifies the months schedule to rotate audit log. Leave empty
          for all.
        items:
          maxItems: 12
          maximum: 12
          minimum: 1
          type: integer
        type: array
      weekdays:
        description: Specifies the weekdays schedule to rotate audit log. Leave empty
          for all.
        items:
          maxItems: 7
          maximum: 6
          minimum: 0
          type: integer
        type: array
    type: object
  autosupport:
    properties:
      contact_support:
        description: Specifies whether to send the AutoSupport messages to vendor
          support.
        example: true
        type: boolean
      enabled:
        description: Specifies whether the AutoSupport daemon is enabled.  When this
          setting is disabled, delivery of all AutoSupport messages is turned off.
        example: true
        type: boolean
      from:
        description: The e-mail address from which the AutoSupport messages are sent.
          To generate node-specific 'from' addresses, enable '-node-specific-from'
          parameter via ONTAP CLI.
        example: postmaster@example.com
        format: email
        type: string
      is_minimal:
        description: Specifies whether the system information is collected in compliant
          form, to remove private data or in complete form, to enhance diagnostics.
        example: true
        type: boolean
      issues:
        description: A list of nodes in the cluster with connectivity issues to HTTP/SMTP/AOD
          AutoSupport destinations along with the corresponding error descriptions
          and corrective actions.
        items:
          $ref: '#/definitions/autosupport_issues'
        readOnly: true
        type: array
      mail_hosts:
        description: The names of the mail servers used to deliver AutoSupport messages
          via SMTP.
        example:
        - mailhost1.example.com
        - mailhost2.example.com
        items:
          format: uri
          type: string
        maxItems: 5
        type: array
      partner_addresses:
        description: The list of partner addresses.
        example:
        - user1@partner.com
        - user2@partner.com
        items:
          format: email
          type: string
        maxItems: 5
        type: array
      proxy_url:
        description: Proxy server for AutoSupport message delivery via HTTP/S. Optionally
          specify a username/password for authentication with the proxy server.
        example: https://proxy.company.com
        format: uri
        type: string
      to:
        description: The e-mail addresses to which the AutoSupport messages are sent.
        example:
        - user1@example.com
        - user2@example.com
        items:
          format: email
          type: string
        maxItems: 5
        type: array
      transport:
        default: https
        description: The name of the transport protocol used to deliver AutoSupport
          messages.
        enum:
        - smtp
        - http
        - https
        example: smtp
        type: string
    type: object
  autosupport_connectivity_corrective_action:
    properties:
      code:
        description: Corrective action code
        example: '53149746'
        readOnly: true
        type: string
      message:
        description: Corrective action message. The corrective action might contain
          commands which needs to be executed on the ONTAP CLI.
        example: Check the hostname of the SMTP server
        readOnly: true
        type: string
    type: object
  autosupport_connectivity_issue:
    properties:
      code:
        description: Error code
        example: '53149746'
        readOnly: true
        type: string
      message:
        description: Error message
        example: 'SMTP connectivity check failed for destination: mailhost. Error:
          Could not resolve host - ''mailhost'''
        readOnly: true
        type: string
    type: object
  autosupport_issues:
    properties:
      corrective_action:
        $ref: '#/definitions/autosupport_connectivity_corrective_action'
      issue:
        $ref: '#/definitions/autosupport_connectivity_issue'
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
    type: object
  autosupport_message:
    properties:
      destination:
        description: Destination for the AutoSupport
        enum:
        - smtp
        - http
        - noteto
        - retransmit
        example: http
        readOnly: true
        type: string
      error:
        description: Last error during delivery attempt. Empty if "status=sent-successful".
        properties:
          code:
            description: Error code
            example: '53149746'
            readOnly: true
            type: integer
          message:
            description: Error message
            example: 'Could not resolve host: test.com'
            readOnly: true
            type: string
        readOnly: true
        type: object
      generated_on:
        description: Date and Time of AutoSupport generation in ISO-8601 format
        example: 2019-03-25T17:30:04-04:00
        format: date-time
        readOnly: true
        type: string
      index:
        description: Sequence number of the AutoSupport
        example: 9
        readOnly: true
        type: integer
      message:
        description: Message included in the AutoSupport subject
        example: invoked_test_autosupport_rest
        type: string
        x-ntap-createOnly: true
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      state:
        description: State of AutoSupport delivery
        enum:
        - initializing
        - collection_failed
        - collection_in_progress
        - queued
        - transmitting
        - sent_successful
        - ignore
        - re_queued
        - transmission_failed
        - ondemand_ignore
        - cancelled
        example: sent_successful
        readOnly: true
        type: string
      subject:
        description: Subject line for the AutoSupport
        example: WEEKLY_LOG
        readOnly: true
        type: string
      type:
        default: all
        description: Type of AutoSupport collection to issue
        enum:
        - test
        - performance
        - all
        example: test
        type: string
        x-ntap-createOnly: true
      uri:
        description: Alternate destination for the AutoSupport
        example: http://1.2.3.4/delivery_uri
        format: uri
        type: string
        x-ntap-createOnly: true
    type: object
  autosupport_message_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        description: List of messages invoked on the node
        items:
          $ref: '#/definitions/autosupport_message'
        readOnly: true
        type: array
    type: object
  azure_key_vault:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      client_id:
        description: Application client ID of the deployed Azure application with
          appropriate access to an AKV.
        example: aaaaaaaa-bbbb-aaaa-bbbb-aaaaaaaaaaaa
        type: string
      client_secret:
        description: Password used by the application to prove its identity to AKV.
        example: abcdef
        format: password
        type: string
        x-ntap-writeOnly: true
      key_id:
        description: Key Identifier of AKV key encryption key.
        example: https://keyvault1.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74
        format: uri
        type: string
      name:
        description: Name of the deployed AKV that will be used by ONTAP for storing
          keys.
        example: https://kmip-akv-keyvault.vault.azure.net/
        format: uri
        type: string
      scope:
        description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to
          "cluster".
        enum:
        - svm
        - cluster
        type: string
        x-ntap-readOnly: true
      state:
        description: |
          Indicates whether the AKV key protection is available cluster wide.
        properties:
          cluster_state:
            description: Set to true when AKV key protection is available on all nodes
              of the cluster.
            type: boolean
          code:
            description: Code corresponding to the status message. Returns a 0 if
              AKV key protection is available in all nodes of the cluster.
            example: 346758
            type: integer
          message:
            description: Error message set when cluster availability is false.
            example: AKV key protection is unavailable in following nodes - node1,
              node2.
            type: string
        type: object
        x-ntap-readOnly: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      tenant_id:
        description: Directory (tenant) ID of the deployed Azure application with
          appropriate access to an AKV.
        example: zzzzzzzz-yyyy-zzzz-yyyy-zzzzzzzzzzzz
        type: string
      uuid:
        description: A unique identifier for the Azure Key Vault (AKV).
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  azure_key_vault_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/azure_key_vault'
        type: array
    type: object
  azure_key_vault_state:
    description: |
      Indicates whether the AKV key protection is available cluster wide.
    properties:
      cluster_state:
        description: Set to true when AKV key protection is available on all nodes
          of the cluster.
        type: boolean
      code:
        description: Code corresponding to the status message. Returns a 0 if AKV
          key protection is available in all nodes of the cluster.
        example: 346758
        type: integer
      message:
        description: Error message set when cluster availability is false.
        example: AKV key protection is unavailable in following nodes - node1, node2.
        type: string
    type: object
    x-ntap-readOnly: true
  backup_node:
    description: The node name in the backup.
    properties:
      name:
        type: string
    type: object
  bgp_peer_group:
    description: A BGP peer group between a local network interface and a router,
      for the purpose of announcing VIP interface locations for SVMs in this IPspace.
    properties:
      ipspace:
        description: Either the UUID or name is supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      local:
        description: Information describing the local interface that is being used
          to peer with a router using BGP. On a POST operation, an existing BGP interface
          is used by specifying the interface, or create a new one by specifying the
          port and IP address.
        properties:
          interface:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              ip:
                description: IP information
                properties:
                  address:
                    $ref: '#/definitions/ip_address_readonly'
                readOnly: true
                type: object
              name:
                description: The name of the interface.
                example: lif1
                type: string
              uuid:
                description: The UUID that uniquely identifies the interface.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
            x-ntap-readCreate: true
          ip:
            description: IP information to create a new interface.
            properties:
              address:
                $ref: '#/definitions/ip_address'
              netmask:
                $ref: '#/definitions/ip_netmask'
            type: object
            x-ntap-createOnly: true
          port:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: e1b
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    type: string
                type: object
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
            x-ntap-readCreate: true
        type: object
      name:
        description: Name of the peer group
        example: bgpv4peer
        type: string
      peer:
        description: Information describing the router to peer with
        properties:
          address:
            description: Peer router address
            example: 10.10.10.7
            type: string
          asn:
            description: Autonomous system number of peer
            type: integer
            x-ntap-readCreate: true
        type: object
      state:
        description: State of the peer group
        enum:
        - up
        - down
        readOnly: true
        type: string
      uuid:
        description: UUID of the peer group
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  bgp_peer_group_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/bgp_peer_group'
        type: array
    type: object
  broadcast_domain:
    description: Set of ports that will receive a broadcast Ethernet packet from any
      of them
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ipspace:
        description: Applies to both SVM and cluster-scoped objects. Either the UUID
          or name is supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      mtu:
        description: Maximum transmission unit, largest packet size on this network
        example: 1500
        minimum: 68
        type: integer
      name:
        description: Name of the broadcast domain, scoped to its IPspace
        example: bd1
        type: string
      ports:
        description: Ports that belong to the broadcast domain
        items:
          description: Port UUID along with readable names
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: e1b
              type: string
            node:
              properties:
                name:
                  description: Name of node on which the port is located.
                  example: node1
                  type: string
              type: object
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      uuid:
        description: Broadcast domain UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  broadcast_domain_reference:
    description: Broadcast domain UUID along with a readable name. Either the UUID
      or both names may be provided on input.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ipspace:
        properties:
          name:
            description: Name of the broadcast domain's IPspace
            example: ipspace1
            type: string
        type: object
      name:
        description: Name of the broadcast domain, scoped to its IPspace
        example: bd1
        type: string
      uuid:
        description: Broadcast domain UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  broadcast_domain_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/broadcast_domain'
        type: array
    type: object
  broadcast_domain_svm_reference:
    description: Broadcast domain UUID along with a readable name.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Name of the broadcast domain, scoped to its IPspace
        example: bd1
        type: string
      uuid:
        description: Broadcast domain UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  chassis:
    properties:
      frus:
        description: List of FRUs in chassis.
        items:
          properties:
            id:
              type: string
            state:
              enum:
              - ok
              - error
              type: string
            type:
              enum:
              - fan
              - psu
              type: string
          type: object
        type: array
      id:
        example: 021352005981
        type: string
      nodes:
        description: List of nodes in chassis.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: node1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        type: array
      shelves:
        description: List of shelves in chassis.
        items:
          $ref: '#/definitions/shelf_reference'
        type: array
      state:
        enum:
        - ok
        - error
        type: string
    readOnly: true
    type: object
  chassis_reference:
    description: Chassis
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        example: 021352005981
        type: string
    type: object
  chassis_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/chassis'
        type: array
    type: object
  cifs_netbios:
    properties:
      aliases:
        example:
        - ALIAS_1
        - ALIAS_2
        - ALIAS_3
        items:
          description: |
            List of NetBIOS aliases, which are alternate names for the CIFS server
            and can be used by SMB clients to connect to the CIFS server.
          maxLength: 15
          minLength: 1
          type: string
        maxItems: 200
        type: array
      enabled:
        default: false
        description: Specifies whether NetBios name service (NBNS) is enabled for
          the CIFS. If this service is enabled, the CIFS server will start sending
          the broadcast for name registration.
        type: boolean
      wins_servers:
        example:
        - 10.224.65.20
        - 10.224.65.21
        items:
          description: List of Windows Internet Name Server (WINS) addresses which
            manages and maps the NetBIOS name of the CIFS server to their network
            IP addresses. The IP addresses must be IPv4 addresses.
          type: string
        maxItems: 4
        type: array
    type: object
  cifs_search_path:
    description: This is a list of CIFS home directory search paths. When a CIFS client
      connects to a home directory share, these paths are searched in the order indicated
      by the position field to find the home directory of the connected CIFS client.
    properties:
      index:
        description: The position in the list of paths that is searched to find the
          home directory of the CIFS client. Not available in POST.
        readOnly: true
        type: integer
      path:
        description: The file system path that is searched to find the home directory
          of the CIFS client.
        example: /HomeDirectory/EngDomain
        type: string
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  cifs_search_path_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_search_path'
        type: array
    type: object
  cifs_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ad_domain:
        $ref: '#/definitions/ad_domain'
      comment:
        description: A descriptive text comment for the CIFS server. SMB clients can
          see the CIFS server comment when browsing servers on the network. If there
          is a space in the comment, you must enclose the entire string in quotation
          marks.
        example: This CIFS Server Belongs to CS Department
        maxLength: 48
        minLength: 0
        type: string
      default_unix_user:
        default: pcuser
        description: Specifies the UNIX user to which any authenticated CIFS user
          is mapped to, if the normal user mapping rules fails.
        type: string
      enabled:
        default: true
        description: |
          Specifies if the CIFS service is administratively enabled.
        type: boolean
      metric:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      name:
        description: The name of the CIFS server.
        example: CIFS1
        maxLength: 15
        minLength: 1
        type: string
      netbios:
        $ref: '#/definitions/cifs_netbios'
      security:
        $ref: '#/definitions/cifs_service_security'
      statistics:
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This should be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This should be divided by the raw IOPS value to calculate the average
              latency per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This should
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  cifs_service_delete:
    properties:
      ad_domain:
        $ref: '#/definitions/ad_domain'
    type: object
  cifs_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_service'
        type: array
    type: object
  cifs_service_security:
    properties:
      kdc_encryption:
        default: false
        description: |
          Specifies whether AES-128 and AES-256 encryption is enabled for all Kerberos-based communication with the Active Directory KDC.
          To take advantage of the strongest security with Kerberos-based communication, AES-256 and AES-128 encryption can be enabled on the CIFS server.
          Kerberos-related communication for CIFS is used during CIFS server creation on the SVM, as well
          as during the SMB session setup phase.
          The CIFS server supports the following encryption types for Kerberos communication:
              * RC4-HMAC
              * DES
              * AES
          When the CIFS server is created, the domain controller creates a computer machine account in
          Active Directory. After a newly created machine account authenticates, the KDC and the CIFS server
          negotiates encryption types. At this time, the KDC becomes aware of the encryption capabilities of
          the particular machine account and uses those capabilities in subsequent communication with the
          CIFS server.
          In addition to negotiating encryption types during CIFS server creation, the encryption types are
          renegotiated when a machine account password is reset.
        type: boolean
      restrict_anonymous:
        default: no_enumeration
        description: |
          Specifies what level of access an anonymous user is granted. An anonymous user (also known as a "null user") can list or enumerate certain types of system information from Windows hosts on the network, including user names and details, account policies, and share names. Access for the anonymous user can be controlled by specifying one of three access restriction settings.
           The available values are:
           * no_restriction   - No access restriction for an anonymous user.
           * no_enumeration   - Enumeration is restricted for an anonymous user.
           * no_access        - All access is restricted for an anonymous user.
        enum:
        - no_restriction
        - no_enumeration
        - no_access
        type: string
      smb_encryption:
        default: false
        description: Specifies whether encryption is required for incoming CIFS traffic.
        type: boolean
      smb_signing:
        default: false
        description: |
          Specifies whether signing is required for incoming CIFS traffic. SMB signing helps to ensure that network traffic between the CIFS server and the client is not compromised.
        type: boolean
    type: object
  cifs_share:
    description: |
      CIFS share is a named access point in a volume. Before users and applications can access data on the CIFS server over SMB,
      a CIFS share must be created with sufficient share permission. CIFS shares are tied to the CIFS server on the SVM.
      When a CIFS share is created, ONTAP creates a default ACL for the share with Full Control permissions for Everyone.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      access_based_enumeration:
        default: false
        description: |
          If enabled, all folders inside this share are visible to a user based on that individual user access right; prevents
          the display of folders or other shared resources that the user does not have access to.
        type: boolean
      acls:
        items:
          $ref: '#/definitions/cifs_share_acl'
        type: array
        x-ntap-readCreate: true
      change_notify:
        default: true
        description: Specifies whether CIFS clients can request for change notifications
          for directories on this share.
        type: boolean
      comment:
        description: Specify the CIFS share descriptions.
        example: HR Department Share
        maxLength: 256
        minLength: 1
        type: string
      encryption:
        default: false
        description: |
          Specifies that SMB encryption must be used when accessing this share. Clients that do not support encryption are not
          able to access this share.
        type: boolean
      home_directory:
        default: false
        description: |
          Specifies whether or not the share is a home directory share, where the share and path names are dynamic.
          ONTAP home directory functionality automatically offer each user a dynamic share to their home directory without creating an
          individual SMB share for each user.
          The ONTAP CIFS home directory feature enable us to configure a share that maps to
          different directories based on the user that connects to it. Instead of creating a separate shares for each user,
          a single share with a home directory parameters can be created.
          In a home directory share, ONTAP dynamically generates the share-name and share-path by substituting
          %w, %u, and %d variables with the corresponding Windows user name, UNIX user name, and domain name, respectively.
        type: boolean
        x-ntap-readCreate: true
      name:
        description: |
          Specifies the name of the CIFS share that you want to create. If this
          is a home directory share then the share name includes the pattern as
          %w (Windows user name), %u (UNIX user name) and %d (Windows domain name)
          variables in any combination with this parameter to generate shares dynamically.
        example: HR_SHARE
        maxLength: 80
        minLength: 1
        type: string
        x-ntap-readCreate: true
      oplocks:
        default: true
        description: |
          Specify whether opportunistic locks are enabled on this share. "Oplocks" allow clients to lock files and cache content locally,
          which can increase performance for file operations.
        type: boolean
      path:
        description: |
          The fully-qualified pathname in the owning SVM namespace that is shared through this share.
          If this is a home directory share then the path should be dynamic by specifying the pattern
          %w (Windows user name), %u (UNIX user name), or %d (domain name) variables in any combination.
          ONTAP generates the path dynamically for the connected user and this path is appended to each
          search path to find the full Home Directory path.
        example: /volume_1/eng_vol/
        maxLength: 256
        minLength: 1
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      unix_symlink:
        default: local
        description: |
          Controls the access of UNIX symbolic links to CIFS clients.
          The supported values are:
              * local - Enables only local symbolic links which is within the same CIFS share.
              * widelink - Enables both local symlinks and widelinks.
              * disable - Disables local symlinks and widelinks.
        enum:
        - local
        - widelink
        - disable
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  cifs_share_acl:
    description: The permissions that users and groups have on a CIFS share.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      permission:
        description: |
          Specifies the access rights that a user or group has on the defined CIFS Share.
          The following values are allowed:
          * no_access    - User does not have CIFS share access
          * read         - User has only read access
          * change       - User has change access
          * full_control - User has full_control access
        enum:
        - no_access
        - read
        - change
        - full_control
        type: string
      type:
        default: windows
        description: |
          Specifies the type of the user or group to add to the access control
          list of a CIFS share. The following values are allowed:
          * windows    - Windows user or group
          * unix_user  - UNIX user
          * unix_group - UNIX group
        enum:
        - windows
        - unix_user
        - unix_group
        type: string
        x-ntap-readCreate: true
      user_or_group:
        description: Specifies the user or group name to add to the access control
          list of a CIFS share.
        example: ENGDOMAIN\ad_user
        type: string
        x-ntap-readCreate: true
    type: object
  cifs_share_acl_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_share_acl'
        type: array
    type: object
  cifs_share_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_share'
        type: array
    type: object
  cifs_symlink_mapping:
    description: ONTAP allows for both CIFS and NFS access to the same datastore.
      This datastore can contain symbolic links created by UNIX clients which can
      point anywhere from the perspective of the UNIX client. To Access such UNIX
      symlink from CIFS share, we need to create a CIFS symbolic link path mapping
      from a UNIX symlink and target it as a CIFS path.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      target:
        $ref: '#/definitions/cifs_target'
      unix_path:
        description: Specifies the UNIX path prefix to be matched for the mapping.
        example: /mnt/eng_volume/
        maxLength: 256
        type: string
        x-ntap-readCreate: true
    type: object
  cifs_symlink_mapping_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cifs_symlink_mapping'
        type: array
    type: object
  cifs_target:
    properties:
      home_directory:
        default: false
        description: Specify if the destination share is a home directory.
        type: boolean
      locality:
        default: local
        description: |
          Specifies whether the CIFS symbolic link is a local link or wide link.
          The following values are supported:
          * local - Local symbolic link maps only to the same CIFS share.
          * widelink - Wide symbolic link maps to any CIFS share on the network.
        enum:
        - local
        - widelink
        type: string
      path:
        description: Specifies the CIFS path on the destination to which the symbolic
          link maps. The final path is generated by concatenating the CIFS server
          name, the share name, the cifs-path and the remaining path in the symbolic
          link left after the prefix match. This value is specified by using a UNIX-style
          path name. The trailing forward slash is required for the full path name
          to be properly interpreted.
        example: /dir1/dir2/
        maxLength: 256
        type: string
      server:
        description: |
          Specifies the destination CIFS server where the
          UNIX symbolic link is pointing. This field is mandatory if the
          locality of the symbolic link is 'widelink'.
          You can specify the value in any of the following formats:
            * DNS name of the CIFS server.
            * IP address of the CIFS server.
            * NetBIOS name of the CIFS server.
        example: ENGCIFS
        maxLength: 45
        type: string
      share:
        description: Specifies the CIFS share name on the destination CIFS server
          to which the UNIX symbolic link is pointing.
        example: ENG_SHARE
        maxLength: 80
        type: string
    type: object
  cipher:
    description: Cipher for encrypting the data.
    enum:
    - aes256_ctr
    - aes192_ctr
    - aes128_ctr
    - aes256_cbc
    - aes192_cbc
    - aes128_cbc
    - 3des_cbc
    - aes128_gcm
    - aes256_gcm
    example: aes256_ctr
    type: string
  cloud_storage_tier:
    properties:
      cloud_store:
        description: Cloud store
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: store1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      used:
        description: Capacity used in bytes in the cloud store by this aggregate.
          This is a cached value calculated every 5 minutes.
        readOnly: true
        type: integer
    readOnly: true
    type: object
  cloud_store:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      availability:
        description: Availability of the object store.
        enum:
        - available
        - unavailable
        readOnly: true
        type: string
      mirror_degraded:
        description: This field identifies if the mirror cloud store is in sync with
          the primary cloud store of a FabricPool.
        readOnly: true
        type: boolean
      primary:
        default: true
        description: This field indicates whether the cloud store is the primary cloud
          store of a mirrored FabricPool.
        type: boolean
      target:
        description: Cloud target
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: target1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      unavailable_reason:
        properties:
          message:
            description: Indicates why the object store is unavailable.
            readOnly: true
            type: string
        type: object
      unreclaimed_space_threshold:
        description: Usage threshold for reclaiming unused space in the cloud store.
          Valid values are 0 to 99. The default value depends on the provider type.
          This can be specified in PATCH but not POST.
        example: 20
        type: integer
      used:
        description: The amount of object space used. Calculated every 5 minutes and
          cached.
        readOnly: true
        type: integer
    type: object
  cloud_store_reference:
    description: Cloud store
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: store1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  cloud_store_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cloud_store'
        type: array
    type: object
  cloud_target:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      access_key:
        description: Access key ID for AWS_S3 and other S3 compatible provider types.
        type: string
      authentication_type:
        description: Authentication used to access the target. SnapMirror does not
          yet support CAP. Required in POST.
        enum:
        - key
        - cap
        - ec2_iam
        - gcp_sa
        - azure_msi
        type: string
      azure_account:
        description: Azure account
        type: string
      azure_private_key:
        description: Azure access key
        format: password
        type: string
        x-ntap-writeOnly: true
      cap_url:
        description: This parameter is available only when auth-type is CAP. It specifies
          a full URL of the request to a CAP server for retrieving temporary credentials
          (access-key, secret-pasword, and session token) for accessing the object
          store.
        example: https://123.45.67.89:1234/CAP/api/v1/credentials?agency=myagency&mission=mymission&role=myrole
        type: string
      certificate_validation_enabled:
        description: Is SSL/TLS certificate validation enabled? The default value
          is true. This can only be modified for SGWS, IBM_COS, and ONTAP_S3 provider
          types.
        type: boolean
      cluster:
        properties:
          name:
            description: The name of the cluster that owns the cloud target. For POST,
              this accepts the name of the peer cluster only if the cluster is in
              switchover state.
            type: string
            x-ntap-readCreate: true
          uuid:
            description: The UUID of the cluster that owns the cloud target. For POST,
              this accepts the UUID of the peer cluster only if the cluster is in
              switchover state.
            type: string
            x-ntap-readCreate: true
        type: object
      container:
        description: Data bucket/container name
        example: bucket1
        type: string
        x-ntap-readCreate: true
      ipspace:
        description: IPspace to use in order to reach the cloud target.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      name:
        description: Cloud target name
        type: string
      owner:
        description: Owner of the target. Allowed values are FabricPool or SnapMirror.
          A target can be used by only one feature.
        enum:
        - fabricpool
        - snapmirror
        type: string
        x-ntap-readCreate: true
      port:
        description: Port number of the object store that ONTAP uses when establishing
          a connection. Required in POST.
        type: integer
      provider_type:
        description: Type of cloud provider. Allowed values depend on owner type.
          For FabricPool, AliCloud, AWS_S3, Azure_Cloud, GoggleCloud, IBM_COS, SGWS,
          and ONTAP_S3 are allowed. For SnapMirror, the valid values are AWS_S3 or
          SGWS.
        type: string
        x-ntap-readCreate: true
      secret_password:
        description: Secret access key for AWS_S3 and other S3 compatible provider
          types.
        format: password
        type: string
        x-ntap-writeOnly: true
      server:
        description: Fully qualified domain name of the object store server. Required
          on POST.  For Amazon S3, server name must be an AWS regional endpoint in
          the format s3.amazonaws.com or s3-<region>.amazonaws.com, for example, s3-us-west-2.amazonaws.com.
          The region of the server and the bucket must match. For Azure, if the server
          is a "blob.core.windows.net" or a "blob.core.usgovcloudapi.net", then a
          value of azure-account followed by a period is added in front of the server.
        type: string
      server_side_encryption:
        description: Encryption of data at rest by the object store server for AWS_S3
          and other S3 compatible provider types. This is an advanced property. In
          most cases it is best not to change default value of "sse_s3" for object
          store servers which support SSE-S3 encryption. The encryption is in addition
          to any encryption done by ONTAP at a volume or at an aggregate level. Note
          that changing this option does not change encryption of data which already
          exist in the object store.
        enum:
        - none
        - sse_s3
        type: string
      snapmirror_use:
        description: Use of the cloud target by SnapMirror.
        enum:
        - data
        - metadata
        type: string
      ssl_enabled:
        default: true
        description: SSL/HTTPS enabled or not
        type: boolean
      svm:
        description: This field is only applicable when used for SnapMirror. For POST
          and PATCH, SVM information is required for SnapMirror targets and not allowed
          for FabricPool targets.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      url_style:
        description: URL style used to access S3 bucket.
        enum:
        - path_style
        - virtual_hosted_style
        type: string
      use_http_proxy:
        default: false
        description: Use HTTP proxy when connecting to the object store.
        type: boolean
      used:
        description: The amount of cloud space used by all the aggregates attached
          to the target, in bytes. This field is only populated for FabricPool targets.
          The value is recalculated once every 5 minutes.
        readOnly: true
        type: integer
      uuid:
        description: Cloud target UUID
        readOnly: true
        type: string
    type: object
  cloud_target_reference:
    description: Cloud target
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: target1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  cloud_target_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cloud_target'
        type: array
    type: object
  cluster:
    description: Complete cluster information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      certificate:
        description: Certificate used by cluster and node management interfaces for
          TLS connection requests.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: Certificate UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readModify: true
      configuration_backup:
        properties:
          password:
            example: yourpassword
            format: password
            type: string
            x-ntap-modifyOnly: true
          url:
            description: An external backup location for the cluster configuration.
              This is mostly required for single node clusters where node and cluster
              configuration backups cannot be copied to other nodes in the cluster.
            example: http://10.224.65.198/backups
            type: string
          username:
            example: me
            type: string
          validate_certificate:
            description: Use this parameter with the value "true" to validate the
              digital certificate of the remote server. Digital certificate validation
              is available only when the HTTPS protocol is used in the URL; it is
              disabled by default.
            type: boolean
        type: object
        x-ntap-createOnly: true
      contact:
        example: support@company.com
        type: string
      dns_domains:
        description: |
          A list of DNS domains.
          Domain names have the following requirements:
          * The name must contain only the following characters: A through Z,
            a through z, 0 through 9, ".", "-" or "_".
          * The first character of each label, delimited by ".", must be one
            of the following characters: A through Z or a through z or 0
            through 9.
          * The last character of each label, delimited by ".", must be one of
            the following characters: A through Z, a through z, or 0 through 9.
          * The top level domain must contain only the following characters: A
            through Z, a through z.
          * The system reserves the following names:"all", "local", and "localhost".
        example:
        - example.com
        - example2.example3.com
        items:
          maxLength: 255
          minLength: 1
          type: string
        maxItems: 6
        type: array
      license:
        description: License keys or NLF contents.
        properties:
          keys:
            items:
              example: AMEPOSOIKLKGEEEEDGNDEKSJDE
              type: string
            type: array
        type: object
        x-ntap-createOnly: true
      location:
        example: building 1
        type: string
      management_interface:
        description: The management interface of the cluster. The subnet mask and
          gateway for this interface are used for the node management interfaces provided
          in the node configuration.
        properties:
          ip:
            description: Object to setup an interface along with its default router.
            properties:
              address:
                description: IPv4 or IPv6 address
                example: 10.10.10.7
                type: string
              gateway:
                description: The IPv4 or IPv6 address of the default router.
                example: 10.1.1.1
                type: string
              netmask:
                $ref: '#/definitions/ip_netmask'
            type: object
        type: object
        x-ntap-createOnly: true
      management_interfaces:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            ip:
              description: IP information
              properties:
                address:
                  $ref: '#/definitions/ip_address_readonly'
              readOnly: true
              type: object
            name:
              description: The name of the interface.
              example: lif1
              type: string
            uuid:
              description: The UUID that uniquely identifies the interface.
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      metric:
        description: Performance numbers, such as IOPS latency and throughput.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        example: cluster1
        type: string
      name_servers:
        description: |
          The list of IP addresses of the DNS servers. Addresses can be either
          IPv4 or IPv6 addresses.
        example:
        - 10.224.65.20
        - 2001:db08:a0b:12f0::1
        items:
          type: string
        maxItems: 3
        type: array
      nodes:
        items:
          description: Complete node information
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            cluster_interface:
              description: The cluster network IP address of the node to be added.
              properties:
                ip:
                  $ref: '#/definitions/node_setup_ip'
              type: object
              x-ntap-createOnly: true
            cluster_interfaces:
              items:
                description: Network interface
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  ip:
                    description: IP information
                    properties:
                      address:
                        $ref: '#/definitions/ip_address_readonly'
                    readOnly: true
                    type: object
                  name:
                    description: The name of the interface.
                    example: lif1
                    type: string
                  uuid:
                    description: The UUID that uniquely identifies the interface.
                    example: 1cd8a442-86d1-11e0-ae1c-123478563412
                    type: string
                readOnly: true
                type: object
              readOnly: true
              type: array
            controller:
              description: Controller information
              properties:
                flash_cache:
                  description: A list of Flash-Cache devices. Only returned when requested
                    by name.
                  items:
                    properties:
                      capacity:
                        description: Size in bytes
                        example: 1024000000000
                        readOnly: true
                        type: integer
                      firmware_version:
                        example: NA05
                        readOnly: true
                        type: string
                      hardware_revision:
                        example: A1
                        readOnly: true
                        type: string
                      model:
                        example: X1970A
                        readOnly: true
                        type: string
                      part_number:
                        example: 119-00207
                        readOnly: true
                        type: string
                      serial_number:
                        example: A22P5061550000187
                        readOnly: true
                        type: string
                      slot:
                        example: 6-1
                        readOnly: true
                        type: string
                      state:
                        enum:
                        - ok
                        - erasing
                        - erased
                        - failed
                        - removed
                        readOnly: true
                        type: string
                    type: object
                  readOnly: true
                  type: array
                frus:
                  description: List of FRUs on the node. Only returned when requested
                    by name.
                  items:
                    properties:
                      id:
                        readOnly: true
                        type: integer
                      state:
                        enum:
                        - ok
                        - error
                        readOnly: true
                        type: string
                      type:
                        enum:
                        - fan
                        - psu
                        - pcie
                        - disk
                        - nvs
                        - dimm
                        - controller
                        readOnly: true
                        type: string
                    type: object
                  type: array
                over_temperature:
                  description: Specifies whether the hardware is currently operating
                    outside of its recommended temperature range. The hardware shuts
                    down if the temperature exceeds critical thresholds.
                  enum:
                  - over
                  - normal
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            date:
              description: |
                The current or "wall clock" time of the node in ISO-8601 date, time, and time zone format.
                The ISO-8601 date and time are localized based on the ONTAP cluster's timezone setting.
              example: 2019-04-17T11:49:26-04:00
              format: date-time
              readOnly: true
              type: string
            ha:
              properties:
                auto_giveback:
                  description: Specifies whether giveback is automatically initiated
                    when the node that owns the storage is ready.
                  readOnly: true
                  type: boolean
                enabled:
                  default: true
                  description: Specifies whether or not storage failover is enabled.
                  readOnly: true
                  type: boolean
                giveback:
                  description: Represents the state of the node that is giving storage
                    back to its HA partner.
                  properties:
                    failure:
                      description: Indicates the failure code and message.
                      properties:
                        code:
                          description: Message code
                          example: 852126
                          type: integer
                        message:
                          description: Detailed message based on the state.
                          example: Failed to initiate giveback. Run the "storage failover
                            show-giveback" command for more information.
                          type: string
                      readOnly: true
                      type: object
                    state:
                      enum:
                      - nothing_to_giveback
                      - not_attempted
                      - in_progress
                      - failed
                      example: failed
                      type: string
                  readOnly: true
                  type: object
                partners:
                  description: Nodes in this node's High Availability (HA) group.
                  items:
                    properties:
                      _links:
                        properties:
                          self:
                            $ref: '#/definitions/href'
                        readOnly: true
                        type: object
                      name:
                        example: node1
                        type: string
                      uuid:
                        example: 1cd8a442-86d1-11e0-ae1c-123478563412
                        type: string
                    readOnly: true
                    type: object
                  readOnly: true
                  type: array
                ports:
                  items:
                    properties:
                      number:
                        description: HA port number
                        example: 0
                        readOnly: true
                        type: unsigned
                      state:
                        description: |
                          HA port state:
                          * <i>down</i> - Logical HA link is down.
                          * <i>initialized</i> - Logical HA link is initialized. The physical link is up, but the subnet manager hasn’t started to configure the port.
                          * <i>armed</i> - Logical HA link is armed. The physical link is up and the subnet manager started but did not yet complete configuring the port.
                          * <i>active</i> - Logical HA link is active.
                          * <i>reserved</i> - Logical HA link is active, but the physical link is down.
                        enum:
                        - down
                        - initialized
                        - armed
                        - active
                        - reserved
                        example: active
                        readOnly: true
                        type: string
                    readOnly: true
                    type: object
                  readOnly: true
                  type: array
                takeover:
                  description: This represents the state of the node that is taking
                    over storage from its HA partner.
                  properties:
                    failure:
                      description: Indicates the failure code and message.
                      properties:
                        code:
                          description: Message code
                          example: 852130
                          type: integer
                        message:
                          description: Detailed message based on the state.
                          example: Failed to initiate takeover. Run the "storage failover
                            show-takeover" command for more information.
                          type: string
                      readOnly: true
                      type: object
                    state:
                      enum:
                      - not_possible
                      - not_attempted
                      - in_takeover
                      - in_progress
                      - failed
                      example: failed
                      type: string
                  readOnly: true
                  type: object
              readOnly: true
              type: object
            location:
              example: rack 2 row 5
              type: string
            management_interface:
              description: The management interface of the node to be added. The subnet
                mask is set based on the management interface of the cluster or the
                managment interfaces of other nodes.
              properties:
                ip:
                  $ref: '#/definitions/node_setup_ip'
              type: object
              x-ntap-createOnly: true
            management_interfaces:
              items:
                description: Network interface
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  ip:
                    description: IP information
                    properties:
                      address:
                        $ref: '#/definitions/ip_address_readonly'
                    readOnly: true
                    type: object
                  name:
                    description: The name of the interface.
                    example: lif1
                    type: string
                  uuid:
                    description: The UUID that uniquely identifies the interface.
                    example: 1cd8a442-86d1-11e0-ae1c-123478563412
                    type: string
                readOnly: true
                type: object
              readOnly: true
              type: array
            membership:
              description: |
                Possible values:
                * <i>available</i> - A node is detected on the internal cluster network and can be added to the cluster.  Nodes that have a membership of "available" are not returned when a GET request is called when the cluster exists. Provide a query on the "membership" property for <i>available</i> to scan for nodes on the cluster network. Nodes that have a membership of "available" are returned automatically before a cluster is created.
                * <i>joining</i> - Joining nodes are in the process of being added to the cluster. The node might be progressing through the steps to become a member or might have failed. The job to add the node or create the cluster provides details on the current progress of the node.
                * <i>member</i> - Nodes that are members have successfully joined the cluster.
              enum:
              - available
              - joining
              - member
              readOnly: true
              type: string
            model:
              example: FAS3070
              readOnly: true
              type: string
            name:
              example: node-01
              type: string
            serial_number:
              example: 4048820-60-9
              readOnly: true
              type: string
            service_processor:
              properties:
                dhcp_enabled:
                  description: Set to "true" to use DHCP to configure an IPv4 interface.
                  type: boolean
                  x-ntap-readModify: true
                firmware_version:
                  description: The version of firmware installed.
                  readOnly: true
                  type: string
                ipv4_interface:
                  description: Object to setup an interface along with its default
                    router.
                  properties:
                    address:
                      description: IPv4 or IPv6 address
                      example: 10.10.10.7
                      type: string
                    gateway:
                      description: The IPv4 or IPv6 address of the default router.
                      example: 10.1.1.1
                      type: string
                    netmask:
                      $ref: '#/definitions/ip_netmask'
                  type: object
                ipv6_interface:
                  description: Object to setup an interface along with its default
                    router.
                  properties:
                    address:
                      description: IPv6 address
                      example: fd20:8b1e:b255:5011:10:141:4:97
                      type: string
                    gateway:
                      description: The IPv6 address of the default router.
                      example: fd20:8b1e:b255:5011:10::1
                      type: string
                    netmask:
                      description: The IPv6 netmask/prefix length. The default value
                        is 64 with a valid range of 1 to 127.
                      example: 64
                      type: integer
                  type: object
                  x-ntap-readModify: true
                link_status:
                  enum:
                  - up
                  - down
                  - disabled
                  - unknown
                  readOnly: true
                  type: string
                mac_address:
                  readOnly: true
                  type: string
                state:
                  enum:
                  - online
                  - offline
                  - degraded
                  - rebooting
                  - unknown
                  - updating
                  - node_offline
                  - sp_daemon_offline
                  readOnly: true
                  type: string
              type: object
            state:
              description: |
                State of the node:
                * <i>up</i> - Node is up and operational.
                * <i>booting</i> - Node is booting up.
                * <i>down</i> - Node has stopped or is dumping core.
                * <i>taken_over</i> - Node has been taken over by its HA partner and is not yet waiting for giveback.
                * <i>waiting_for_giveback</i> - Node has been taken over by its HA partner and is waiting for the HA partner to giveback disks.
                * <i>degraded</i> - Node has one or more critical services offline.
                * <i>unknown</i> - Node or its HA partner cannot be contacted and there is no information on the node's state.
              enum:
              - up
              - booting
              - down
              - taken_over
              - waiting_for_giveback
              - degraded
              - unknown
              readOnly: true
              type: string
            system_id:
              example: 0537035403
              readOnly: true
              type: string
            system_machine_type:
              description: OEM system machine type.
              example: 7Y56-CTOWW1
              readOnly: true
              type: string
            uptime:
              description: The total time, in seconds, that the node has been up.
              example: 300536
              readOnly: true
              type: integer
            uuid:
              example: 4ea7a442-86d1-11e0-ae1c-123478563412
              format: uuid
              readOnly: true
              type: string
            vendor_serial_number:
              description: OEM vendor serial number.
              example: 791603000068
              readOnly: true
              type: string
            version:
              description: This returns the cluster version information.  When the
                cluster has more than one node, the cluster version is equivalent
                to the lowest of generation, major, and minor versions on all nodes.
              properties:
                full:
                  description: The full cluster version string.
                  example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
                  readOnly: true
                  type: string
                generation:
                  description: The generation portion of the version.
                  example: 9
                  readOnly: true
                  type: integer
                major:
                  description: The major portion of the version.
                  example: 4
                  readOnly: true
                  type: integer
                minor:
                  description: The minor portion of the version.
                  example: 0
                  readOnly: true
                  type: integer
              readOnly: true
              type: object
            vm:
              properties:
                provider_type:
                  description: Cloud provider where the VM is hosted.
                  enum:
                  - GoogleCloud
                  - AWS_S3
                  - Azure_Cloud
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          type: object
        type: array
        x-ntap-createOnly: true
      ntp_servers:
        description: Host name, IPv4 address, or IPv6 address for the external NTP
          time servers.
        example:
        - time.nist.gov
        - 10.98.19.20
        - 2610:20:6F15:15::27
        items:
          type: string
        type: array
        x-ntap-readCreate: true
      password:
        description: Initial admin password used to create the cluster.
        example: mypassword
        format: password
        type: string
        x-ntap-createOnly: true
      san_optimized:
        description: Specifies if this cluster is an All SAN Array.
        readOnly: true
        type: boolean
      statistics:
        description: These are raw performance numbers, such as IOPS latency and throughput.
          These numbers are aggregated across all nodes in the cluster and increase
          with the uptime of the cluster.
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This can
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      timezone:
        description: |
          Provides the cluster-wide time zone information that localizes time found on messages displayed on each node's:
          * console messages;
          * logging to internal ONTAP log files; and
          * localized REST API full ISO-8601 date, time, and time zone format information.
          Machine-to-machine interfaces, such as file access protocols (NFS, CIFS), block access protocols (SAN), and other protocols
          such as Manage ONTAP (ONTAPI), use second or subsecond time values that are based on world time or UTC.
        properties:
          name:
            description: |
              The ONTAP time zone name or identification in either IANA time zone format "Area/Location", or an ONTAP traditional time zone.
              </br>
              The initial first node in cluster setting for time zone is "Etc/UTC".
              "Etc/UTC" is the IANA timezone "Area/Location" specifier for
              Coordinated Universal Time (UTC), which is an offset of 0.
              ### IANA time zone format
              The IANA time zone, formatted as "Area/Location", is based on geographic areas that have had the same time zone offset for many years.
              </br>
              "Location" represents a compound name using additional forward slashes.
              </br>
              An example of the "Area/Location" time zone is "America/New_York" and represents most of the United States Eastern Time Zone.
              Examples of "Area/Location" with "Location" as a compound name are "America/Argentina/Buenos_Aires" and "America/Indiana/Indianapolis".
              ### ONTAP traditional time zone
              Examples of the traditional time zones are "EST5EDT" for the United States Eastern Time Zone and "CET" for Central European Time Zone.
            example: America/New_York
            type: string
        type: object
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
      version:
        description: This returns the cluster version information.  When the cluster
          has more than one node, the cluster version is equivalent to the lowest
          of generation, major, and minor versions on all nodes.
        properties:
          full:
            description: The full cluster version string.
            example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
            readOnly: true
            type: string
          generation:
            description: The generation portion of the version.
            example: 9
            readOnly: true
            type: integer
          major:
            description: The major portion of the version.
            example: 4
            readOnly: true
            type: integer
          minor:
            description: The minor portion of the version.
            example: 0
            readOnly: true
            type: integer
        readOnly: true
        type: object
    type: object
  cluster_ad_proxy:
    description: The SVM configured as proxy for Active Directory authentication of
      cluster accounts.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  cluster_ldap:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      base_dn:
        description: Specifies the default base DN for all searches.
        type: string
      base_scope:
        default: subtree
        description: |
          Specifies the default search scope for LDAP queries:
          * base - search the named entry only
          * onelevel - search all entries immediately below the DN
          * subtree - search the named DN entry and the entire subtree below the DN
        enum:
        - base
        - onelevel
        - subtree
        type: string
      bind_dn:
        description: Specifies the user that binds to the LDAP servers.
        type: string
      bind_password:
        description: Specifies the bind password for the LDAP servers.
        type: string
        x-ntap-writeOnly: true
      min_bind_level:
        default: simple
        description: |
          The minimum bind authentication level. Possible values are:
          * anonymous - anonymous bind
          * simple - simple bind
          * sasl - Simple Authentication and Security Layer (SASL) bind
        enum:
        - anonymous
        - simple
        - sasl
        type: string
      port:
        default: 389
        description: The port used to connect to the LDAP Servers.
        example: 389
        maximum: 65535
        minimum: 1
        type: integer
      schema:
        default: RFC-2307
        description: |
          The name of the schema template used by the SVM.
          * AD-IDMU - Active Directory Identity Management for UNIX
          * AD-SFU - Active Directory Services for UNIX
          * MS-AD-BIS - Active Directory Identity Management for UNIX
          * RFC-2307 - Schema based on RFC 2307
          * Custom schema
        type: string
      servers:
        items:
          description: |
            List of LDAP servers used for this client configuration. This
            parameter takes both FQDNs and IP addresses.
          type: string
        type: array
      session_security:
        default: none
        description: |
          Specifies the level of security to be used for LDAP communications:
          * none - no signing or sealing
          * sign - sign LDAP traffic
          * seal - seal and sign LDAP traffic
        enum:
        - none
        - sign
        - seal
        type: string
      use_start_tls:
        default: false
        description: |
          Specifies whether or not to use Start TLS over LDAP connections.
        type: boolean
    type: object
  cluster_metrics:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  cluster_metrics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  cluster_ndmp_properties:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      mode:
        description: Indicates whether NDMP is in node-scoped or SVM-scoped mode.
        enum:
        - svm
        - node
        type: string
    type: object
  cluster_nis_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      bound_servers:
        items:
          description: NIS Servers bound to an NIS Domain.
          maxLength: 255
          minLength: 1
          type: string
        readOnly: true
        type: array
      domain:
        description: |
          The NIS domain to which this configuration belongs.
        maxLength: 64
        minLength: 1
        type: string
      servers:
        description: |
          A list of hostnames or IP addresses of NIS servers used
          by the NIS domain configuration.
        items:
          maxLength: 255
          minLength: 1
          type: string
        maxItems: 10
        type: array
    type: object
  cluster_nis_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of NIS domain records.
        type: integer
      records:
        items:
          $ref: '#/definitions/cluster_nis_service'
        type: array
    type: object
  cluster_peer:
    properties:
      _links:
        properties:
          interfaces:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication:
        properties:
          expiry_time:
            description: The time when the passphrase will expire, in ISO 8601 duration
              format or date and time format.  The default is 1 hour.
            example: P1DT2H3M4S or '2017-01-25T11:20:13Z'
            type: string
          generate_passphrase:
            default: false
            description: Auto generate a passphrase when true.
            type: boolean
          in_use:
            default: ok
            enum:
            - ok
            - absent
            - revoked
            type: string
          passphrase:
            description: A password to authenticate the cluster peer relationship.
            type: string
          state:
            enum:
            - ok
            - absent
            - pending
            - problem
            readOnly: true
            type: string
        type: object
      encryption:
        properties:
          proposed:
            default: tls_psk
            enum:
            - none
            - tls_psk
            type: string
          state:
            default: tls_psk
            enum:
            - none
            - tls_psk
            readOnly: true
            type: string
        type: object
      initial_allowed_svms:
        description: The local SVMs allowed to peer with the peer cluster's SVMs.
          This list can be modified until the remote cluster accepts this cluster
          peering relationship.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              description: "The name of the SVM.\n"
              example: svm1
              type: string
            uuid:
              description: |
                The unique identifier of the SVM.
              example: 02c9e252-41be-11e9-81d5-00a0986138f7
              type: string
          type: object
        type: array
      ipspace:
        description: The IPspace of the local intercluster LIFs.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      local_network:
        description: Cluster peering requires an intercluster LIF on each local node.
          These can be optionally created by specifying a list of IP addresses corresponding
          to each node.
        properties:
          broadcast_domain:
            description: Broadcast domain that is in use within the IPspace.
            example: bd1
            type: string
          gateway:
            description: The IPv4 or IPv6 address of the default router.
            example: 10.1.1.1
            type: string
          interfaces:
            items:
              properties:
                ip_address:
                  $ref: '#/definitions/ip_address'
                  description: List of local intercluster IP addresses.
              type: object
            type: array
          netmask:
            description: IPv4 mask or netmask length.
            example: 255.255.0.0
            type: string
        type: object
        x-ntap-createOnly: true
      name:
        description: Optional name for the cluster peer relationship. By default,
          it is the name of the remote cluster.
        example: cluster2
        type: string
      peer_applications:
        description: Peering applications against which allowed SVMs are configured.
        example:
        - snapmirror
        - flexcache
        items:
          $ref: '#/definitions/svm_peer_permission_applications'
        type: array
      remote:
        properties:
          ip_addresses:
            description: The IPv4 addresses, IPv6 addresses, or hostnames of the peers.
            items:
              $ref: '#/definitions/ip_address'
            type: array
          name:
            description: The name of the remote cluster.
            example: cluster2
            readOnly: true
            type: string
          serial_number:
            description: The serial number of the remote cluster.
            example: 4048820-60-9
            readOnly: true
            type: string
        type: object
      status:
        properties:
          state:
            enum:
            - available
            - partial
            - unavailable
            - pending
            - unidentified
            example: available
            readOnly: true
            type: string
          update_time:
            description: The last time the state was updated.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: UUID of the cluster peer relationship. For anonymous cluster
          peer offers, the UUID will change when the remote cluster accepts the relationship.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      version:
        description: This returns the cluster version information.  When the cluster
          has more than one node, the cluster version is equivalent to the lowest
          of generation, major, and minor versions on all nodes.
        properties:
          full:
            description: The full cluster version string.
            example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
            readOnly: true
            type: string
          generation:
            description: The generation portion of the version.
            example: 9
            readOnly: true
            type: integer
          major:
            description: The major portion of the version.
            example: 4
            readOnly: true
            type: integer
          minor:
            description: The minor portion of the version.
            example: 0
            readOnly: true
            type: integer
        readOnly: true
        type: object
    type: object
  cluster_peer_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: cluster2
        type: string
      uuid:
        example: ebe27c49-1adf-4496-8335-ab862aebebf2
        type: string
    type: object
  cluster_peer_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/cluster_peer'
        type: array
    type: object
  cluster_peer_setup_response:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication:
        properties:
          expiry_time:
            description: The date and time the passphrase will expire.  The default
              expiry time is one hour.
            example: 2017-01-25T11:20:13Z
            format: date-time
            type: string
          passphrase:
            description: A password to authenticate the cluster peer relationship.
            type: string
        type: object
      ip_address:
        $ref: '#/definitions/ip_address'
        description: A local intercluster IP address that a remote cluster can use,
          together with the passphrase, to create a cluster peer relationship with
          the local cluster.
      name:
        description: Optional name for the cluster peer relationship. By default,
          it is the name of the remote cluster, or a temporary name might be autogenerated
          for anonymous cluster peer offers.
        example: cluster2
        type: string
    type: object
  cluster_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: cluster1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        type: string
    type: object
  cluster_space:
    properties:
      block_storage:
        properties:
          inactive_data:
            description: Inactive data across all aggregates
            type: integer
          medias:
            items:
              properties:
                available:
                  description: Available space
                  type: integer
                efficiency:
                  $ref: '#/definitions/space_efficiency'
                size:
                  description: Total space
                  type: integer
                type:
                  description: The type of media being used
                  enum:
                  - hdd
                  - hybrid
                  - lun
                  - ssd
                  - vmdisk
                  type: string
                used:
                  description: Used space
                  type: integer
              type: object
            type: array
          size:
            description: Total space across the cluster
            type: integer
          used:
            description: Space used (includes volume reserves)
            type: integer
        type: object
      cloud_storage:
        properties:
          used:
            description: Total space used in cloud.
            readOnly: true
            type: integer
        type: object
      efficiency:
        $ref: '#/definitions/space_efficiency'
      efficiency_without_snapshots:
        $ref: '#/definitions/space_efficiency'
    type: object
  cluster_ssh_server:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ciphers:
        description: Ciphers for encrypting the data.
        example:
        - aes256_ctr
        - aes192_ctr
        - aes128_ctr
        items:
          $ref: '#/definitions/cipher'
        type: array
      connections_per_second:
        default: 10
        description: Maximum connections allowed per second.
        maximum: 70
        minimum: 1
        type: integer
      key_exchange_algorithms:
        description: Key exchange algorithms.
        example:
        - diffie_hellman_group_exchange_sha256
        - diffie_hellman_group14_sha1
        items:
          $ref: '#/definitions/key_exchange_algorithm'
        type: array
      mac_algorithms:
        description: MAC algorithms.
        example:
        - hmac_sha1
        - hmac_sha2_512_etm
        items:
          $ref: '#/definitions/mac_algorithm'
        type: array
      max_authentication_retry_count:
        default: 6
        description: Maximum authentication retries allowed before closing the connection.
        maximum: 6
        minimum: 2
        type: integer
      max_instances:
        default: 64
        description: Maximum possible simultaneous connections.
        maximum: 128
        minimum: 1
        type: integer
      per_source_limit:
        default: 32
        description: Maximum connections from the same client host.
        maximum: 64
        minimum: 1
        type: integer
    type: object
  collection_links:
    properties:
      next:
        $ref: '#/definitions/href'
      self:
        $ref: '#/definitions/href'
    readOnly: true
    type: object
  configuration_backup:
    properties:
      password:
        example: yourpassword
        format: password
        type: string
        x-ntap-modifyOnly: true
      url:
        description: An external backup location for the cluster configuration. This
          is mostly required for single node clusters where node and cluster configuration
          backups cannot be copied to other nodes in the cluster.
        example: http://10.224.65.198/backups
        type: string
      username:
        example: me
        type: string
      validate_certificate:
        description: Use this parameter with the value "true" to validate the digital
          certificate of the remote server. Digital certificate validation is available
          only when the HTTPS protocol is used in the URL; it is disabled by default.
        type: boolean
    type: object
  configuration_backup_file:
    description: The configuration backup file.
    properties:
      auto:
        description: Indicates if the backup was created automatically.
        readOnly: true
        type: boolean
      backup_nodes:
        description: The list of nodes included in the backup.
        items:
          $ref: '#/definitions/backup_node'
        readOnly: true
        type: array
      download_link:
        description: The link to download the backup file.
        example: https://10.224.65.198/backups/backup_file.7z
        readOnly: true
        type: string
      name:
        description: The backup name.
        example: backup_file.7z
        type: string
        x-ntap-readCreate: true
      node:
        description: The node that owns the configuration backup.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      size:
        description: The size of the backup in bytes.
        example: 4787563
        readOnly: true
        type: integer
      time:
        description: The backup creation time.
        example: 2019-02-04T13:33:48-05:00
        format: date-time
        readOnly: true
        type: string
      type:
        description: The backup type.
        enum:
        - node
        - cluster
        readOnly: true
        type: string
      version:
        description: The software version.
        example: 9.7.0
        readOnly: true
        type: string
    type: object
  configuration_backup_file_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/configuration_backup_file'
        type: array
    type: object
  disk:
    properties:
      aggregates:
        description: List of aggregates sharing this disk
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
      bay:
        description: Disk shelf bay
        example: 1
        type: integer
      class:
        description: Disk class
        enum:
        - unknown
        - capacity
        - performance
        - archive
        - solid_state
        - array
        - virtual
        example: solid_state
        type: string
      container_type:
        description: Type of overlying disk container
        enum:
        - aggregate
        - broken
        - foreign
        - labelmaint
        - maintenance
        - shared
        - spare
        - unassigned
        - unknown
        - unsupported
        - remote
        - mediator
        example: spare
        type: string
      dr_node:
        properties:
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      drawer:
        properties:
          id:
            type: integer
          slot:
            type: integer
        type: object
      encryption_operation:
        description: |
          Encryption operation to apply to the drives. Possible values are:
          - rekey_data_default
          - rekey_data_auto_id
        type: string
        x-ntap-modifyOnly: true
      fips_certified:
        type: boolean
      firmware_version:
        example: NA51
        type: string
      home_node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      key_id:
        properties:
          data:
            description: Key ID of the data authentication key
            type: string
          fips:
            description: Key ID of the FIPS authentication key
            type: string
        type: object
      model:
        example: X421_HCOBE450A10
        type: string
      name:
        description: Cluster-wide disk name
        example: 1.0.1
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      pool:
        description: Pool to which disk is assigned
        enum:
        - pool0
        - pool1
        - failed
        - none
        example: pool0
        type: string
      protection_mode:
        description: |
          Mode of drive data protection and FIPS compliance. Possible values are:
          - _open_ - Disk is unprotected
          - _data_ - Data protection only without FIPS compliance
          - _part_ - Partial protection with FIPS compliance only
          - _full_ - Full data and FIPS compliance protection
        enum:
        - open
        - data
        - part
        - full
        type: string
      rated_life_used_percent:
        description: Percentage of rated life used
        example: 10
        type: integer
      rpm:
        description: Revolutions per minute
        example: 15000
        type: integer
      self_encrypting:
        type: boolean
      serial_number:
        example: KHG2VX8R
        type: string
      shelf:
        $ref: '#/definitions/shelf_reference'
      state:
        description: State
        enum:
        - broken
        - copy
        - maintenance
        - partner
        - pending
        - present
        - reconstructing
        - removed
        - spare
        - unfail
        - zeroing
        example: present
        type: string
      type:
        description: Disk interface type
        enum:
        - ata
        - bsas
        - fcal
        - fsas
        - lun
        - sas
        - msata
        - ssd
        - vmdisk
        - unknown
        - ssd_nvm
        example: ssd
        type: string
      uid:
        description: The unique identifier for a disk
        example: 002538E5:71B00B2F:00000000:00000000:00000000:00000000:00000000:00000000:00000000:00000000
        type: string
      usable_size:
        example: 959934889984
        type: integer
      vendor:
        example: NETAPP
        type: string
    readOnly: true
    type: object
  disk_reference:
    description: Disk
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: 1.0.1
        type: string
    type: object
  disk_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/disk'
        type: array
    type: object
  dns:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      domains:
        $ref: '#/definitions/dns_domains'
      servers:
        $ref: '#/definitions/name_servers'
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  dns_domains:
    description: |
      A list of DNS domains.
      Domain names have the following requirements:
      * The name must contain only the following characters: A through Z,
        a through z, 0 through 9, ".", "-" or "_".
      * The first character of each label, delimited by ".", must be one
        of the following characters: A through Z or a through z or 0
        through 9.
      * The last character of each label, delimited by ".", must be one of
        the following characters: A through Z, a through z, or 0 through 9.
      * The top level domain must contain only the following characters: A
        through Z, a through z.
      * The system reserves the following names:"all", "local", and "localhost".
    example:
    - example.com
    - example2.example3.com
    items:
      maxLength: 255
      minLength: 1
      type: string
    maxItems: 6
    type: array
  dns_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of DNS domain records
        type: integer
      records:
        items:
          $ref: '#/definitions/dns'
        type: array
    type: object
  dr_node_reference:
    properties:
      name:
        example: node1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    readOnly: true
    type: object
  ebr_operation:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: Operation ID
        example: 16842759
        readOnly: true
        type: integer
      num_files_failed:
        description: Specifies the number of files on which the application of EBR
          policy failed.
        example: 0
        readOnly: true
        type: integer
      num_files_processed:
        description: Specifies the number of files on which EBR policy was applied
          successfully.
        example: 50
        readOnly: true
        type: integer
      num_files_skipped:
        description: Specifies the number of files on which the application of EBR
          policy was skipped.
        example: 2
        readOnly: true
        type: integer
      num_inodes_ignored:
        description: Specifies the number of inodes on which the application of EBR
          policy was not attempted because they were not regular files.
        example: 2
        readOnly: true
        type: integer
      path:
        description: The path for the EBR operation. Specifies the path relative to
          the output volume root, of the form "/path". The path can be path to a file
          or a directory.
        example: /dir1/file
        type: string
        x-ntap-readCreate: true
      policy:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Specifies the EBR policy name
            type: string
          retention_period:
            default: P6M
            description: Specifies the retention period of an EBR policy. The retention
              period value represents a duration and must be specified in the ISO-8601
              duration format. The retention period can be in years, months, days,
              hours or minutes. A period specified for years, months and days is represented
              in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively.
              For example "P10Y" represents a duration of 10 years. Similarly, a duration
              in hours, minutes is represented by "PT<num>H", "PT<num>M" respectively.
              The period string must contain only a single time element i.e. either
              years, months, days, hours or minutes. A duration which combines different
              periods is not supported, example "P1Y10M" is not supported. Apart from
              the duration specified in the ISO-8601 format, the retention period
              field also accepts the string "infinite".
            example: P30M
            type: string
          svm:
            description: SVM, applies only to SVM-scoped objects.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name of the SVM.\n"
                example: svm1
                type: string
              uuid:
                description: |
                  The unique identifier of the SVM.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                type: string
            readOnly: true
            type: object
        type: object
        x-ntap-readCreate: true
      state:
        description: Specifies the operation status of an EBR operation.
        enum:
        - unknown
        - in_progress
        - failed
        - aborting
        - completed
        example: completed
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  ebr_operation_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/ebr_operation'
        type: array
    type: object
  ems_config:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      mail_from:
        description: Mail from
        example: administrator@mycompany.com
        type: string
        x-ntap-readModify: true
      mail_server:
        description: Mail server (SMTP)
        example: mail@mycompany.com
        type: string
        x-ntap-readModify: true
      proxy_password:
        description: Password for HTTP/HTTPS proxy
        example: password
        type: string
        x-ntap-modifyOnly: true
      proxy_url:
        description: HTTP/HTTPS proxy URL
        example: https://proxyserver.mycompany.com
        type: string
        x-ntap-readModify: true
      proxy_user:
        description: User name for HTTP/HTTPS proxy
        example: proxy_user
        type: string
        x-ntap-readModify: true
    type: object
  ems_destination:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      certificate:
        description: Certificate information is valid for the "rest_api" type.
        properties:
          ca:
            description: Client certificate issuing CA
            example: VeriSign
            maxLength: 256
            minLength: 1
            type: string
          serial_number:
            description: Client certificate serial number
            example: 1234567890
            maxLength: 40
            minLength: 1
            type: string
        type: object
      destination:
        description: Event destination
        example: administrator@mycompany.com
        type: string
      filters:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: important-events
              type: string
          type: object
        type: array
      name:
        description: Destination name.  Valid in POST.
        example: Admin_Email
        type: string
        x-ntap-readCreate: true
      type:
        description: Type of destination. Valid in POST.
        enum:
        - snmp
        - email
        - syslog
        - rest_api
        example: email
        type: string
        x-ntap-readCreate: true
    type: object
  ems_destination_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            certificate:
              description: Certificate information is valid for the "rest_api" type.
              properties:
                ca:
                  description: Client certificate issuing CA
                  example: VeriSign
                  maxLength: 256
                  minLength: 1
                  type: string
                serial_number:
                  description: Client certificate serial number
                  example: 1234567890
                  maxLength: 40
                  minLength: 1
                  type: string
              type: object
            destination:
              description: Event destination
              example: administrator@mycompany.com
              type: string
            filters:
              items:
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  name:
                    example: important-events
                    type: string
                type: object
              type: array
            name:
              description: Destination name.  Valid in POST.
              example: Admin_Email
              type: string
              x-ntap-readCreate: true
            type:
              description: Type of destination. Valid in POST.
              enum:
              - snmp
              - email
              - syslog
              - rest_api
              example: email
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
    type: object
  ems_event:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      index:
        description: Index of the event. Returned by default.
        example: 1
        readOnly: true
        type: integer
      log_message:
        description: A formatted text string populated with parameter details. Returned
          by default.
        readOnly: true
        type: string
      message:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Message name of the event. Returned by default.
            example: callhome.spares.low
            readOnly: true
            type: string
          severity:
            description: Severity of the event. Returned by default.
            enum:
            - emergency
            - alert
            - error
            - notice
            - informational
            - debug
            example: emergency
            readOnly: true
            type: string
        type: object
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      parameters:
        description: A list of parameters provided with the EMS event.
        items:
          properties:
            name:
              description: Name of parameter
              example: numOps
              readOnly: true
              type: string
            value:
              description: Value of parameter
              example: 123
              readOnly: true
              type: string
          type: object
        type: array
      source:
        description: Source
        readOnly: true
        type: string
      time:
        description: Timestamp of the event. Returned by default.
        readOnly: true
        type: string
    type: object
  ems_event_parameter:
    properties:
      name:
        description: Name of parameter
        example: numOps
        readOnly: true
        type: string
      value:
        description: Value of parameter
        example: 123
        readOnly: true
        type: string
    type: object
  ems_event_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            index:
              description: Index of the event. Returned by default.
              example: 1
              readOnly: true
              type: integer
            log_message:
              description: A formatted text string populated with parameter details.
                Returned by default.
              readOnly: true
              type: string
            message:
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: Message name of the event. Returned by default.
                  example: callhome.spares.low
                  readOnly: true
                  type: string
                severity:
                  description: Severity of the event. Returned by default.
                  enum:
                  - emergency
                  - alert
                  - error
                  - notice
                  - informational
                  - debug
                  example: emergency
                  readOnly: true
                  type: string
              type: object
            node:
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: node1
                  type: string
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              readOnly: true
              type: object
            parameters:
              description: A list of parameters provided with the EMS event.
              items:
                properties:
                  name:
                    description: Name of parameter
                    example: numOps
                    readOnly: true
                    type: string
                  value:
                    description: Value of parameter
                    example: 123
                    readOnly: true
                    type: string
                type: object
              type: array
            source:
              description: Source
              readOnly: true
              type: string
            time:
              description: Timestamp of the event. Returned by default.
              readOnly: true
              type: string
          type: object
        type: array
    type: object
  ems_filter:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Filter name
        example: snmp-traphost
        type: string
      rules:
        description: Array of event filter rules on which to match.
        items:
          description: Rule for an event filter
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            index:
              description: Rule index. Rules are evaluated in ascending order. If
                a rule's index order is not specified during creation, the rule is
                appended to the end of the list.
              example: 1
              type: integer
            message_criteria:
              description: Matching message definitions for the filter. A property
                must be specified.
              properties:
                _links:
                  properties:
                    related:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name_pattern:
                  description: Message name filter on which to match. Supports wildcards.
                    Defaults to * if not specified.
                  example: callhome.*
                  type: string
                severities:
                  default: '*'
                  description: A comma-separated list of severities or a wildcard.
                  example: error,informational
                  type: string
                snmp_trap_types:
                  default: '*'
                  description: A comma separated list of snmp_trap_types or a wildcard.
                  example: standard|built_in
                  type: string
              type: object
            type:
              description: Rule type
              enum:
              - include
              - exclude
              example: include
              type: string
          type: object
        type: array
    type: object
  ems_filter_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: important-events
        type: string
    type: object
  ems_filter_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              description: Filter name
              example: snmp-traphost
              type: string
            rules:
              description: Array of event filter rules on which to match.
              items:
                description: Rule for an event filter
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  index:
                    description: Rule index. Rules are evaluated in ascending order.
                      If a rule's index order is not specified during creation, the
                      rule is appended to the end of the list.
                    example: 1
                    type: integer
                  message_criteria:
                    description: Matching message definitions for the filter. A property
                      must be specified.
                    properties:
                      _links:
                        properties:
                          related:
                            $ref: '#/definitions/href'
                        readOnly: true
                        type: object
                      name_pattern:
                        description: Message name filter on which to match. Supports
                          wildcards. Defaults to * if not specified.
                        example: callhome.*
                        type: string
                      severities:
                        default: '*'
                        description: A comma-separated list of severities or a wildcard.
                        example: error,informational
                        type: string
                      snmp_trap_types:
                        default: '*'
                        description: A comma separated list of snmp_trap_types or
                          a wildcard.
                        example: standard|built_in
                        type: string
                    type: object
                  type:
                    description: Rule type
                    enum:
                    - include
                    - exclude
                    example: include
                    type: string
                type: object
              type: array
          type: object
        type: array
    type: object
  ems_filter_rule:
    description: Rule for an event filter
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      index:
        description: Rule index. Rules are evaluated in ascending order. If a rule's
          index order is not specified during creation, the rule is appended to the
          end of the list.
        example: 1
        type: integer
      message_criteria:
        description: Matching message definitions for the filter. A property must
          be specified.
        properties:
          _links:
            properties:
              related:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name_pattern:
            description: Message name filter on which to match. Supports wildcards.
              Defaults to * if not specified.
            example: callhome.*
            type: string
          severities:
            default: '*'
            description: A comma-separated list of severities or a wildcard.
            example: error,informational
            type: string
          snmp_trap_types:
            default: '*'
            description: A comma separated list of snmp_trap_types or a wildcard.
            example: standard|built_in
            type: string
        type: object
      type:
        description: Rule type
        enum:
        - include
        - exclude
        example: include
        type: string
    type: object
  ems_filter_rule_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        items:
          description: Rule for an event filter
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            index:
              description: Rule index. Rules are evaluated in ascending order. If
                a rule's index order is not specified during creation, the rule is
                appended to the end of the list.
              example: 1
              type: integer
            message_criteria:
              description: Matching message definitions for the filter. A property
                must be specified.
              properties:
                _links:
                  properties:
                    related:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name_pattern:
                  description: Message name filter on which to match. Supports wildcards.
                    Defaults to * if not specified.
                  example: callhome.*
                  type: string
                severities:
                  default: '*'
                  description: A comma-separated list of severities or a wildcard.
                  example: error,informational
                  type: string
                snmp_trap_types:
                  default: '*'
                  description: A comma separated list of snmp_trap_types or a wildcard.
                  example: standard|built_in
                  type: string
              type: object
            type:
              description: Rule type
              enum:
              - include
              - exclude
              example: include
              type: string
          type: object
        type: array
    type: object
  ems_message:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      corrective_action:
        description: Corrective action
        readOnly: true
        type: string
      deprecated:
        description: Is deprecated?
        example: true
        readOnly: true
        type: boolean
      description:
        description: Description
        readOnly: true
        type: string
      name:
        description: Name of the event.
        example: callhome.spares.low
        readOnly: true
        type: string
      severity:
        description: Severity
        enum:
        - emergency
        - alert
        - error
        - notice
        - informational
        - debug
        example: error
        readOnly: true
        type: string
      snmp_trap_type:
        description: SNMP trap type
        enum:
        - standard
        - built_in
        - severity_based
        example: standard
        readOnly: true
        type: string
    type: object
  ems_message_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 3
        type: integer
      records:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            corrective_action:
              description: Corrective action
              readOnly: true
              type: string
            deprecated:
              description: Is deprecated?
              example: true
              readOnly: true
              type: boolean
            description:
              description: Description
              readOnly: true
              type: string
            name:
              description: Name of the event.
              example: callhome.spares.low
              readOnly: true
              type: string
            severity:
              description: Severity
              enum:
              - emergency
              - alert
              - error
              - notice
              - informational
              - debug
              example: error
              readOnly: true
              type: string
            snmp_trap_type:
              description: SNMP trap type
              enum:
              - standard
              - built_in
              - severity_based
              example: standard
              readOnly: true
              type: string
          type: object
        type: array
    type: object
  error:
    properties:
      arguments:
        description: Message arguments
        items:
          $ref: '#/definitions/error_arguments'
        readOnly: true
        type: array
      code:
        description: Error code
        example: '4'
        readOnly: true
        type: string
      message:
        description: Error message
        example: entry doesn't exist
        readOnly: true
        type: string
      target:
        description: The target parameter that caused the error.
        example: uuid
        readOnly: true
        type: string
    readOnly: true
    type: object
  error_arguments:
    properties:
      code:
        description: Argument code
        readOnly: true
        type: string
      message:
        description: Message argument
        readOnly: true
        type: string
    readOnly: true
    type: object
  error_response:
    properties:
      error:
        $ref: '#/definitions/error'
    readOnly: true
    type: object
  error_responses:
    properties:
      errors:
        items:
          $ref: '#/definitions/error'
        type: array
    readOnly: true
    type: object
  export_authentication_flavor:
    description: |
      Represents an authentication flavor. The following flavors are supported:
      * any - All authentication flavors
      * none - Special authentication flavor for anonymization
      * never - Special authentication flavor to represent access denial
      * krb5 - Kerberos V4 Authentication
      * krb5i - Kerberos V4 Integrity
      * krb5p - Kerberos V4 Privacy
      * ntlm - CIFS NTLM Authentication
      * sys - AUTH_SYS or AUTH_UNIX Authentication
    enum:
    - any
    - none
    - never
    - krb5
    - krb5i
    - krb5p
    - ntlm
    - sys
    type: string
  export_client:
    properties:
      match:
        description: |
          Client Match Hostname, IP Address, Netgroup, or Domain.
          You can specify the match as a string value in any of the
                    following formats:
          * As a hostname; for instance, host1
          * As an IPv4 address; for instance, 10.1.12.24
          * As an IPv6 address; for instance, fd20:8b1e:b255:4071::100:1
          * As an IPv4 address with a subnet mask expressed as a number of bits; for instance, 10.1.12.0/24
          * As an IPv6 address with a subnet mask expressed as a number of bits; for instance, fd20:8b1e:b255:4071::/64
          * As an IPv4 address with a network mask; for instance, 10.1.16.0/255.255.255.0
          * As a netgroup, with the netgroup name preceded by the @ character; for instance, @eng
          * As a domain name preceded by the . character; for instance, .example.com
        example: 0.0.0.0/0
        type: string
    type: object
  export_client_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of export rule client records
        type: integer
      records:
        items:
          $ref: '#/definitions/export_client'
        type: array
    type: object
  export_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: Export Policy ID
        readOnly: true
        type: integer
      name:
        description: Export Policy Name
        type: string
      rules:
        description: Rules of the Export Policy.
        items:
          $ref: '#/definitions/export_rule'
        type: array
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  export_policy_reference:
    description: Export Policy
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        example: 100
        type: integer
      name:
        example: default
        type: string
    type: object
  export_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: The number of export policy records
        type: integer
      records:
        items:
          $ref: '#/definitions/export_policy'
        type: array
    type: object
  export_rule:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      anonymous_user:
        default: 65534
        description: User ID To Which Anonymous Users Are Mapped.
        type: string
      clients:
        description: Array of client matches
        items:
          $ref: '#/definitions/export_client'
        type: array
      index:
        description: |
          Index of the rule within the export policy.
        readOnly: true
        type: integer
      protocols:
        items:
          default: any
          description: |
            Access Protocol(s) that the export rule describes. The following values are supported:
            * any - All protocols are considered
            * nfs - All NFS versions are considered
            * nfs3 - NFS Version 3 protocol
            * nfs4 - NFS Version 4 protocol
            * cifs - CIFS protocol
            * flexcache - Flexcache protocol
          enum:
          - any
          - nfs
          - nfs3
          - nfs4
          - cifs
          - flexcache
          type: string
        type: array
      ro_rule:
        description: |
          Authentication flavors that the read-only access rule governs
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
      rw_rule:
        description: |
          Authentication flavors that the read/write access rule governs
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
      superuser:
        default:
        - none
        description: |
          Authentication flavors that the superuser security type governs
        items:
          $ref: '#/definitions/export_authentication_flavor'
        type: array
    type: object
  export_rule_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Export Rule records
        type: integer
      records:
        items:
          $ref: '#/definitions/export_rule'
        type: array
    type: object
  failover_scope:
    description: Defines where an interface may failover.
    enum:
    - home_port_only
    - default
    - home_node_only
    - sfo_partners_only
    - broadcast_domain_only
    type: string
  fc_interface:
    description: |-
      A Fibre Channel (FC) interface is the logical endpoint for FC network connections to an SVM. An FC interface provides FC access to storage within the interface SVM using either Fibre Channel Protocol or NVMe over Fibre Channel (NVMe/FC).<br/>
      An FC interface is created on an FC port which is located on a cluster node. The FC port must be specified to identify the location of the interface for a POST or PATCH operation that relocates an interface. You can identify the port by supplying either the node and port names or the port UUID.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: |
          A user configurable comment. Optional in POST; valid in PATCH. To clear a prior comment, set the property to an empty string in PATCH.
        type: string
      data_protocol:
        description: |
          The data protocol for which the FC interface is configured. Required in POST.
        enum:
        - fcp
        - fc_nvme
        type: string
        x-ntap-readCreate: true
      enabled:
        default: true
        description: |
          The administrative state of the FC interface. The FC interface can be disabled to block all FC communication with the SVM through this interface. Optional in POST and PATCH; defaults to _true_ (enabled) in POST.
        type: boolean
      location:
        description: |
          The location of the FC interface is defined by the location of its port. An FC port is identified by its UUID, or a combination of its node name and port name. Either the UUID or the node name and port name are required for POST. To move an interface, supply either the UUID or the node name and port name in a PATCH.
        properties:
          node:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: node1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            readOnly: true
            type: object
          port:
            $ref: '#/definitions/fc_port_reference'
        type: object
      name:
        description: |
          The name of the FC interface. Required in POST; optional in PATCH.
        example: lif1
        type: string
      port_address:
        description: |
          The port address of the FC interface. Each FC port in an FC switched fabric has its own unique FC port address for routing purposes. The FC port address is assigned by a switch in the fabric when that port logs in to the fabric. This property refers to the address given by a switch to the FC interface when the SVM performs a port login (PLOGI).<br/>
          This is useful for obtaining statistics and diagnostic information from FC switches.<br/>
          This is a hexadecimal encoded numeric value.
        example: 5060F
        readOnly: true
        type: string
      state:
        description: |
          The current operational state of the FC interface. The state is set to _down_ if the interface is not enabled.<br/>
          If the node hosting the port is down or unavailable, no state value is returned.
        enum:
        - up
        - down
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: |
          The unique identifier of the FC interface. Required in the URL.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      wwnn:
        description: |
          The world wide node name (WWNN) of the FC interface SVM. The WWNN is generated by ONTAP when Fibre Channel Protocol or the NVMe service is created for the FC interface SVM.
        example: 20:00:00:50:56:b4:13:01
        readOnly: true
        type: string
      wwpn:
        description: |
          The world wide port name (WWPN) of the FC interface. The WWPN is generated by ONTAP when the FC interface is created.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
    type: object
  fc_interface_reference:
    description: "An FC interface.\n"
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: "The name of the FC interface.\n"
        example: lif1
        type: string
      uuid:
        description: |
          The unique identifier of the FC interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      wwpn:
        description: "The WWPN of the FC interface.\n"
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
    readOnly: true
    type: object
  fc_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_interface'
        type: array
    type: object
  fc_interface_svm:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      data_protocol:
        description: The data protocol for which the Fibre Channel interface is configured.
        enum:
        - fcp
        - fc_nvme
        type: string
        x-ntap-readCreate: true
      location:
        description: The location of the Fibre Channel interface is defined by the
          location of its port.
        properties:
          port:
            $ref: '#/definitions/fc_port_reference'
        type: object
        x-ntap-createOnly: true
      name:
        description: The name of the Fibre Channel interface.
        example: lif1
        type: string
        x-ntap-readCreate: true
      uuid:
        description: The unique identifier of the Fibre Channel interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
    x-ntap-readCreate: true
  fc_login:
    description: |
      A Fibre Channel (FC) login represents a connection formed by an FC initiator that has successfully logged in to ONTAP. This represents the FC login on which higher-level protocols such as Fibre Channel Protocol and NVMe over Fibre Channel (NVMe/FC) rely.
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      igroups:
        description: |
          The initiator groups in which the initiator is a member.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              description: |
                The name of the initiator group.
              example: igroup1
              maxLength: 96
              minLength: 1
              type: string
            uuid:
              description: |
                The unique identifier of the initiator group.
              example: 4ea7a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      initiator:
        description: |
          Information about the logged in FC initiator.
        properties:
          aliases:
            description: |
              The logged in initiator world wide port name (WWPN) aliases.
            items:
              description: "A WWPN alias.\n"
              example: alias1
              readOnly: true
              type: string
            readOnly: true
            type: array
          port_address:
            description: |
              The port address of the initiator's FC port.<br/>
              Each port in an FC switched fabric has its own unique port address for routing purposes. The port address is assigned by a switch in the fabric when that port logs in to the fabric. This property refers to the address given by a switch to the initiator port.<br/>
              This is useful for obtaining statistics and diagnostic information from FC switches.<br/>
              This is a hexadecimal encoded numeric value.
            example: 5060A
            readOnly: true
            type: string
          wwnn:
            description: |
              The logged in initiator world wide node name (WWNN).
            example: 2f:a0:00:a0:98:0b:56:13
            readOnly: true
            type: string
          wwpn:
            description: "The logged in initiator WWPN.\n"
            example: 2f:a0:00:a0:98:0b:56:13
            readOnly: true
            type: string
        readOnly: true
        type: object
      interface:
        description: "An FC interface.\n"
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the FC interface.\n"
            example: lif1
            type: string
          uuid:
            description: |
              The unique identifier of the FC interface.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
          wwpn:
            description: "The WWPN of the FC interface.\n"
            example: 20:00:00:50:56:b4:13:a8
            readOnly: true
            type: string
        readOnly: true
        type: object
      protocol:
        description: |
          The data protocol used to perform the login.
        enum:
        - fc_nvme
        - fcp
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    readOnly: true
    type: object
  fc_login_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_login'
        type: array
    type: object
  fc_port:
    description: |
      A Fibre Channel (FC) port is the physical port of an FC adapter on an ONTAP cluster node that can be connected to an FC network to provide FC network connectivity. An FC port defines the location of an FC interface within the ONTAP cluster.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      description:
        description: "A description of the FC port.\n"
        example: Fibre Channel Target Adapter 0a (ACME Fibre Channel Adapter, rev.
          1.0.0, 8G)
        readOnly: true
        type: string
      enabled:
        description: |
          The administrative state of the FC port. If this property is set to _false_, all FC connectivity to FC interfaces are blocked. Optional in PATCH.
        type: boolean
      fabric:
        description: |
          Properties of the fabric to which the FC port is attached.
        properties:
          connected:
            description: |
              Reports if the physical port has established a connection with the FC fabric.
            readOnly: true
            type: boolean
          connected_speed:
            description: |
              The negotiated data rate between the target FC port and the fabric in gigabits per second.
            example: 16
            readOnly: true
            type: integer
          name:
            description: |
              The name of the fabric to which the port is connected. This is only available when the FC port is connected to a fabric.<br/>
              There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
            readOnly: true
            type: string
          port_address:
            description: |
              The FC port address of the host bus adapter (HBA) physical port.<br/>
              Each FC port in an FC switched fabric has its own unique FC port address for routing purposes. The FC port address is assigned by a switch in the fabric when that port logs in to the fabric. This property refers to the FC port address given to the physical host bus adapter (HBA) port when the port performs a fabric login (FLOGI).<br/>
              This is useful for obtaining statistics and diagnostic information from FC switches.<br/>
              This is a six-digit hexadecimal encoded numeric value.
            example: 52100A
            readOnly: true
            type: string
          switch_port:
            description: |
              The switch port to which the FC port is connected.
            example: ssan-g620-03:33
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        description: "The FC port name.\n"
        example: 0a
        readOnly: true
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      physical_protocol:
        description: |
          The physical network protocol of the FC port.
        enum:
        - fibre_channel
        - ethernet
        readOnly: true
        type: string
      speed:
        description: |
          The physical device speed related properties of the FC port.
        properties:
          configured:
            description: |
              The configured speed of the FC port in gigabits per second.
            enum:
            - 1
            - 2
            - 4
            - 8
            - 10
            - 16
            - 32
            - auto
            example: auto
            readOnly: true
            type: string
          maximum:
            description: |
              The maximum speed supported by the FC port in gigabits per second.
            enum:
            - 1
            - 2
            - 4
            - 8
            - 10
            - 16
            - 32
            - auto
            example: 32
            readOnly: true
            type: string
        readOnly: true
        type: object
      state:
        description: |
          The operational state of the FC port.
          - startup - The port is booting up.
          - link_not_connected - The port has finished initialization, but a link with the fabric is not established.
          - online - The port is initialized and a link with the fabric has been established.
          - link_disconnected - The link was present at one point on this port but is currently not established.
          - offlined_by_user - The port is administratively disabled.
          - offlined_by_system - The port is set to offline by the system. This happens when the port encounters too many errors.
          - node_offline - The state information for the port cannot be retrieved. The node is offline or inaccessible.
        enum:
        - startup
        - link_not_connected
        - online
        - link_disconnected
        - offlined_by_user
        - offlined_by_system
        - node_offline
        - unknown
        example: online
        readOnly: true
        type: string
      supported_protocols:
        description: |
          The network protocols supported by the FC port.
        items:
          enum:
          - fcp
          - fc_nvme
          readOnly: true
          type: string
        readOnly: true
        type: array
      transceiver:
        description: |
          Properties of the transceiver connected to the FC port.
        properties:
          capabilities:
            description: |
              The speeds of which the transceiver is capable in gigabits per second.
            items:
              enum:
              - 1
              - 2
              - 4
              - 8
              - 10
              - 16
              - 32
              example: 16
              readOnly: true
              type: integer
            readOnly: true
            type: array
          form-factor:
            description: |
              The form factor of the transceiver. Possible values are:
              - _sfp_ - Small Form Factor - Pluggable
              - _sff_ - Small Form Factor
              - _unk_ - Unknown
            enum:
            - sfp
            - sff
            - unk
            readOnly: true
            type: string
          manufacturer:
            description: |
              The manufacturer of the transceiver.
            example: Acme, Inc.
            readOnly: true
            type: string
          part_number:
            description: The part number of the transceiver.
            readOnly: true
            type: string
        readOnly: true
        type: object
      uuid:
        description: |
          The unique identifier of the FC port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      wwnn:
        description: |
          The base world wide node name (WWNN) for the FC port.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
      wwpn:
        description: |
          The base world wide port name (WWPN) for the FC port.
        example: 20:00:00:50:56:b4:13:a8
        readOnly: true
        type: string
    type: object
  fc_port_reference:
    description: |
      An FC port is the physical port of an FC adapter on a cluster node that can be connected to an FC network.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: "The name of the FC port.\n"
        example: 0a
        type: string
      node:
        description: |
          The node on which the FC port is located.
        properties:
          name:
            description: |
              The name of the node on which the FC port is located.
            example: node1
            type: string
        type: object
      uuid:
        description: |
          The unique identifier of the FC port.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  fc_port_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/fc_port'
        type: array
    type: object
  fcp_service:
    description: |
      A Fibre Channel (FC) Protocol service defines the properties of the FC Protocol target for an SVM. There can be at most one FC Protocol service for an SVM. An SVM's FC Protocol service must be created before FC Protocol initiators can login to the SVM.<br/>
      A FC Protocol service is identified by the UUID of its SVM.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        default: true
        description: |
          The administrative state of the FC Protocol service. The FC Protocol service can be disabled to block all FC Protocol connectivity to the SVM.<br/>
          This is optional in POST and PATCH. The default setting is _true_ (enabled) in POST.
        type: boolean
      metric:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      statistics:
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This should be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This should be divided by the raw IOPS value to calculate the average
              latency per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This should
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      target:
        properties:
          name:
            description: |
              The target name of the FC Protocol service. This is generated for the SVM during POST.<br/>
              The FC Protocol target name is a world wide node name (WWNN).<br/>
              If required, the target name can be modified using the ONTAP command line.
            example: 20:00:00:50:56:bb:b2:4b
            maxLength: 128
            minLength: 1
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  fcp_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/fcp_service'
        type: array
    type: object
  file_clone:
    description: File clone
    properties:
      autodelete:
        description: Mark clone file for auto deletion.
        type: boolean
      destination_path:
        description: Relative path of the clone/destination file in the volume.
        example: dest_file1, dir1/dest_file2
        type: string
      is_backup:
        description: Mark clone file for backup.
        type: boolean
      overwrite_destination:
        description: Destination file gets overwritten.
        type: boolean
      range:
        description: List of block ranges for sub-file cloning in the format "source-file-block-number:destination-file-block-number:block-count"
        example:
        - 10:10:5
        - 20:20:10
        items:
          type: string
        type: array
      source_path:
        description: Relative path of the source file in the volume.
        example: src_file1, dir1/src_file2, ./.snapshot/snap1/src_file3
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  file_copy:
    description: File copy
    properties:
      cutover_time:
        default: 10
        description: The maximum amount of time (in seconds) that the source can be
          quiesced before a destination file must be made available for read-write
          traffic.
        example: 10
        type: integer
      files_to_copy:
        description: A list of source files along with the destinations they are copied
          to. If the terminal path component of the destination is a directory, then
          the source file's basename is replicated in that directory.
        items:
          properties:
            destination:
              $ref: '#/definitions/file_reference'
            source:
              $ref: '#/definitions/file_reference'
          type: object
        type: array
      hold_quiescence:
        default: false
        description: Specifies whether the source file should be held quiescent for
          the duration of the copy operation.
        type: boolean
      max_throughput:
        default: 0
        description: The maximum amount of data (in bytes) that can be transferred
          per second in support of this operation.
        type: integer
      reference_cutover_time:
        default: 10
        description: The maximum amount of time (in seconds) that the source reference
          file can be quiesced before the corresponding destination file must be made
          available for read-write traffic.
        example: 10
        type: integer
      reference_file:
        properties:
          path:
            description: The source reference file. If a reference file is specified,
              data for other files being copied will be transferred as a difference
              from the reference file. This can save bandwidth and destination storage
              if the specified source files share blocks. If provided, this input
              must match one of the source file paths. This input need not be provided
              if only one source file is specified.
            type: string
          volume:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: The name of the volume.
                example: volume1
                type: string
              uuid:
                description: Unique identifier for the volume. This corresponds to
                  the instance-uuid that is exposed in the CLI and ONTAPI. It does
                  not change due to a volume move.
                example: 028baa66-41bd-11e9-81d5-00a0986138f7
                type: string
            type: object
        type: object
    type: object
  file_info:
    description: Information about a single file.
    properties:
      _links:
        properties:
          metadata:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        type: object
        x-ntap-readOnly: true
      accessed_time:
        description: Last access time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
        x-ntap-readOnly: true
      bytes_used:
        description: The actual number of bytes used on disk by this file. If byte_offset
          and length parameters are specified, this will return the bytes used by
          the file within the given range.
        example: 4096
        type: integer
        x-ntap-readOnly: true
      changed_time:
        description: Last time data or attributes changed on the file in date-time
          format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
        x-ntap-readOnly: true
      creation_time:
        description: Creation time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
        x-ntap-readOnly: true
      group_id:
        description: The integer ID of the group of the file owner.
        example: 30
        type: integer
        x-ntap-readOnly: true
      hard_links_count:
        description: The number of hard links to the file.
        example: 1
        type: integer
        x-ntap-readOnly: true
      inode_generation:
        description: Inode generation number.
        example: 214753547
        type: integer
        x-ntap-readOnly: true
      inode_number:
        description: The file inode number.
        example: 1695
        type: integer
        x-ntap-readOnly: true
      is_empty:
        description: Specifies whether or not a directory is empty. A directory is
          considered empty if it only contains entries for "." and "..". This element
          is present if the file is a directory. In some special error cases, such
          as when the volume goes offline or when the directory is moved while retrieving
          this info, this field might not get set.
        example: false
        type: boolean
        x-ntap-readOnly: true
      is_junction:
        description: Returns "true" if the directory is a junction.
        example: false
        type: boolean
        x-ntap-readOnly: true
      is_snapshot:
        description: Returns "true" if the directory is a Snapshot copy.
        example: false
        type: boolean
        x-ntap-readOnly: true
      is_vm_aligned:
        description: Returns true if the file is vm-aligned. A vm-aligned file is
          a file that is initially padded with zero-filled data so that its actual
          data starts at an offset other than zero. The amount by which the start
          offset is adjusted depends on the vm-align setting of the hosting volume.
        example: false
        type: boolean
        x-ntap-readOnly: true
      modified_time:
        description: Last data modification time of the file in date-time format.
        example: 2019-06-12T11:00:16-04:00
        format: date-time
        type: string
        x-ntap-readOnly: true
      name:
        description: Name of the file.
        example: test_file
        type: string
      owner_id:
        description: The integer ID of the file owner.
        example: 54738
        type: integer
        x-ntap-readOnly: true
      path:
        description: Path of the file.
        example: d1/d2/d3
        type: string
        x-ntap-readCreate: true
      qos_policy:
        description: |
          The QoS policy for the file. Both traditional and adaptive QoS policies are supported. If both `qos_policy.uuid` and `qos_policy.name` properties are specified in the same request, they must refer to the same QoS policy. To remove the file from a QoS policy, set the property `qos_policy.name` in a PATCH request to an empty string "" or "none". Note: Files which are in use as a LUN cannot be assigned to a QoS policy, instead use PATCH on /storage/luns to assign a QoS policy for such files. <br/>
          Note that a QoS policy can be set on a file, or a file's volume, but not on both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The name of the QoS policy. To remove the file from a QoS policy, set this property to an empty string "" or set it to "none" in a PATCH request.
            example: qos1
            type: string
          uuid:
            description: |
              The unique identifier of the QoS policy. Valid in PATCH.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readModify: true
      size:
        description: The size of the file, in bytes.
        example: 200
        type: integer
        x-ntap-readModify: true
      target:
        description: The relative or absolute path contained in a symlink, in the
          form <some>/<path>.
        example: some_directory/some_other_directory/some_file
        type: string
      type:
        description: Type of the file.
        enum:
        - file
        - directory
        - blockdev
        - chardev
        - symlink
        - socket
        - fifo
        - stream
        - lun
        example: file
        type: string
        x-ntap-readCreate: true
      unix_permissions:
        description: UNIX permissions to be viewed as an octal number. It consists
          of 4 digits derived by adding up bits 4 (read), 2 (write), and 1 (execute).
          The first digit selects the set user ID(4), set group ID (2), and sticky
          (1) attributes. The second digit selects permissions for the owner of the
          file; the third selects permissions for other users in the same group; the
          fourth selects permissions for other users not in the group.
        example: 0755
        type: integer
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readOnly: true
    type: object
    x-ntap-readOnly: true
  file_info_links:
    properties:
      metadata:
        $ref: '#/definitions/href'
      self:
        $ref: '#/definitions/href'
    type: object
    x-ntap-readOnly: true
  file_info_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/file_info'
        type: array
    type: object
  file_reference:
    properties:
      path:
        description: Path of the file or directory.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  flexcache:
    description: Defines the cache endpoint of FlexCache.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
        x-ntap-readCreate: true
      constituents_per_aggregate:
        default: 4
        description: Number of FlexCache constituents per aggregate when the 'aggregates'
          field is mentioned.
        type: integer
        x-ntap-readCreate: true
      guarantee:
        properties:
          type:
            description: The type of space guarantee of this volume in the aggregate.
            enum:
            - volume
            - none
            type: string
        type: object
        x-ntap-readCreate: true
      name:
        description: FlexCache name
        example: vol1
        maxLength: 203
        minLength: 1
        type: string
      origins:
        items:
          $ref: '#/definitions/flexcache_relationship'
        type: array
        x-ntap-readCreate: true
      path:
        description: The fully-qualified path in the owning SVM's namespace at which
          the FlexCache is mounted. The path is case insensitive and must be unique
          within a SVM's namespace. Path must begin with '/' and must not end with
          '/'. Only one FlexCache be mounted at any given junction path.
        example: /user/my_fc
        type: string
        x-ntap-readCreate: true
      size:
        description: Physical size of the FlexCache. The recommended size for a FlexCache
          is 10% of the origin volume. The minimum FlexCache constituent size is 1GB.
        type: integer
        x-ntap-readCreate: true
      svm:
        description: FlexCache SVM
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: FlexCache UUID. Unique identifier for the FlexCache.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  flexcache_origin:
    description: Defines the origin endpoint of FlexCache.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      flexcaches:
        items:
          $ref: '#/definitions/flexcache_relationship'
        type: array
        x-ntap-readCreate: true
      name:
        description: Origin volume name
        example: vol1, vol_2
        maxLength: 203
        minLength: 1
        type: string
      svm:
        description: Origin volume SVM
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: Origin volume UUID. Unique identifier for origin of FlexCache.
        example: 1cd8a442-86d1-11e0-ae1c-123478563512
        readOnly: true
        type: string
    type: object
  flexcache_origin_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/flexcache_origin'
        type: array
    type: object
  flexcache_relationship:
    description: ~
    properties:
      cluster:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: cluster1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            format: uuid
            type: string
        readOnly: true
        type: object
      create_time:
        description: Creation time of the relationship.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      ip_address:
        description: Cluster managerment IP of the remote cluster.
        example: 10.10.10.7
        readOnly: true
        type: string
      size:
        description: Size of the remote volume.
        readOnly: true
        type: integer
      state:
        description: Volume state
        enum:
        - error
        - mixed
        - offline
        - online
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  flexcache_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/flexcache'
        type: array
    type: object
  fpolicy:
    description: FPolicy is an infrastructure component of ONTAP that enables partner
      applications connected to your storage systems to monitor and set file access
      permissions. Every time a client accesses a file from a storage system, based
      on the configuration of FPolicy, the partner application is notified about file
      access.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      engines:
        items:
          $ref: '#/definitions/fpolicy_engine'
        type: array
        x-ntap-readCreate: true
      events:
        items:
          $ref: '#/definitions/fpolicy_event'
        type: array
        x-ntap-readCreate: true
      policies:
        items:
          $ref: '#/definitions/fpolicy_policy'
        type: array
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  fpolicy_engine:
    description: The engine defines how ONTAP makes and manages connections to external
      FPolicy servers.
    properties:
      name:
        description: Specifies the name to assign to the external server configuration.
        example: fp_ex_eng
        type: string
        x-ntap-readCreate: true
      port:
        description: Port number of the FPolicy server application.
        example: 9876
        type: integer
      primary_servers:
        example:
        - 10.132.145.20
        - 10.140.101.109
        items:
          description: Specifies the primary FPolicy servers to which the node sends
            notifications for a given FPolicy policy. The value is specified as a
            comma-delimited list of IP addresses. If more than one primary server
            IP address is specified, every node on which the SVM participates creates
            a control connection to every specified primary FPolicy server at the
            time the policy is enabled. If you configure multiple primary FPolicy
            servers, notifications are sent to the FPolicy servers in a round-robin
            fashion.
          type: string
        type: array
      secondary_servers:
        example:
        - 10.132.145.20
        - 10.132.145.21
        items:
          description: Specifies the secondary FPolicy servers to which to send file
            access events for a given FPolicy policy. The value is specified as a
            comma-delimited list of IP addresses. Secondary servers are used only
            when none of the primary servers are reachable. Connections to secondary
            servers are established when the policy is enabled, but notifications
            are sent to secondary servers only if none of the primary servers are
            reachable.
          type: string
        type: array
      type:
        default: synchronous
        description: |
          The notification mode determines what ONTAP does after sending notifications to FPolicy servers.
            The possible values are:
              * synchronous  - After sending a notification, wait for a response from the FPolicy server.
              * asynchronous - After sending a notification, file request processing continues.
        enum:
        - synchronous
        - asynchronous
        type: string
    type: object
  fpolicy_engine_reference:
    description: FPolicy external engine
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: The name of the FPolicy external engine.
        type: string
    type: object
  fpolicy_engine_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/fpolicy_engine'
        type: array
    type: object
  fpolicy_event:
    description: The information that a FPolicy process needs to determine what file
      access operations to monitor and for which of the monitored events notifications
      should be sent to the external FPolicy server.
    properties:
      file_operations:
        description: |
          Specifies the file operations for the FPolicy event. You must specify a valid protocol in the protocol parameter.
          The event will check the operations specified from all client requests using the protocol.
        properties:
          close:
            description: File close operations
            type: boolean
          create:
            description: File create operations
            type: boolean
          create_dir:
            description: Directory create operations
            type: boolean
          delete:
            description: File delete operations
            type: boolean
          delete_dir:
            description: Directory delete operations
            type: boolean
          getattr:
            description: Get attribute operations
            type: boolean
          link:
            description: Link operations
            type: boolean
          lookup:
            description: Lookup operations
            type: boolean
          open:
            description: File open operations
            type: boolean
          read:
            description: File read operations
            type: boolean
          rename:
            description: File rename operations
            type: boolean
          rename_dir:
            description: Directory rename operations
            type: boolean
          setattr:
            description: Set attribute operations
            type: boolean
          symlink:
            description: Symbolic link operations
            type: boolean
          write:
            description: File write operations
            type: boolean
        type: object
      filters:
        description: |
          Specifies the list of filters for a given file operation for the specified protocol.
          When you specify the filters, you must specify the valid protocols and a valid file operations.
        properties:
          close_with_modification:
            description: Filter the client request for close with modification.
            type: boolean
          close_with_read:
            description: Filter the client request for close with read.
            type: boolean
          close_without_modification:
            description: Filter the client request for close without modification.
            type: boolean
          exclude_directory:
            description: Filter the client requests for directory operations. When
              this filter is specified directory operations are not monitored.
            type: boolean
          first_read:
            description: Filter the client requests for the first-read.
            type: boolean
          first_write:
            description: Filter the client requests for the first-write.
            type: boolean
          monitor_ads:
            description: Filter the client request for alternate data stream.
            type: boolean
          offline_bit:
            description: Filter the client request for offline bit set. FPolicy server
              receives notification only when offline files are accessed.
            type: boolean
          open_with_delete_intent:
            description: Filter the client request for open with delete intent.
            type: boolean
          open_with_write_intent:
            description: Filter the client request for open with write intent.
            type: boolean
          setattr_with_access_time_change:
            description: Filter the client setattr requests for changing the access
              time of a file or directory.
            type: boolean
          setattr_with_allocation_size_change:
            description: Filter the client setattr requests for changing the allocation
              size of a file.
            type: boolean
          setattr_with_creation_time_change:
            description: Filter the client setattr requests for changing the creation
              time of a file or directory.
            type: boolean
          setattr_with_dacl_change:
            description: Filter the client setattr requests for changing dacl on a
              file or directory.
            type: boolean
          setattr_with_group_change:
            description: Filter the client setattr requests for changing group of
              a file or directory.
            type: boolean
          setattr_with_mode_change:
            description: Filter the client setattr requests for changing the mode
              bits on a file or directory.
            type: boolean
          setattr_with_modify_time_change:
            description: Filter the client setattr requests for changing the modification
              time of a file or directory.
            type: boolean
          setattr_with_owner_change:
            description: Filter the client setattr requests for changing owner of
              a file or directory.
            type: boolean
          setattr_with_sacl_change:
            description: Filter the client setattr requests for changing sacl on a
              file or directory.
            type: boolean
          setattr_with_size_change:
            description: Filter the client setattr requests for changing the size
              of a file.
            type: boolean
          write_with_size_change:
            description: Filter the client request for write with size change.
            type: boolean
        type: object
      name:
        description: Specifies the name of the FPolicy event.
        example: event_nfs_close
        type: string
        x-ntap-readCreate: true
      protocol:
        description: |
          Protocol for which event is created. If you specify protocol, then you
          must also specify a valid value for the file operation parameters.
            The value of this parameter must be one of the following:
              * cifs  - for the CIFS protocol.
              * nfsv3 - for the NFSv3 protocol.
              * nfsv4 - for the NFSv4 protocol.
        enum:
        - cifs
        - nfsv3
        - nfsv4
        type: string
      volume_monitoring:
        default: false
        description: Specifies whether volume operation monitoring is required.
        type: boolean
    type: object
  fpolicy_event_reference:
    description: FPolicy events
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        type: string
    type: object
  fpolicy_event_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/fpolicy_event'
        type: array
    type: object
  fpolicy_policy:
    properties:
      enabled:
        description: |
          Specifies if the policy is enabled on the SVM or not. If no value is
          mentioned for this field but priority is set, then this policy will be enabled.
        type: boolean
        x-ntap-readModify: true
      engine:
        $ref: '#/definitions/fpolicy_engine_reference'
      events:
        example:
        - event_nfs_close
        - event_open
        items:
          $ref: '#/definitions/fpolicy_event_reference'
        type: array
      mandatory:
        default: true
        description: Specifies what action to take on a file access event in a case
          when all primary and secondary servers are down or no response is received
          from the FPolicy servers within a given timeout period. When this parameter
          is set to true, file access events will be denied under these circumstances.
        type: boolean
      name:
        description: Specifies the name of the policy.
        example: fp_policy_1
        type: string
        x-ntap-readCreate: true
      priority:
        description: Specifies the priority that is assigned to this policy.
        maximum: 10
        minimum: 1
        type: integer
      scope:
        properties:
          exclude_export_policies:
            items:
              description: Specifies a list of export_policies to exclude from file
                access monitoring. The possible values can contain regular expressions
                and can include metacharacters such as "?" and "*".
              type: string
            type: array
          exclude_extension:
            items:
              description: Specifies a list of file extensions to exclude from file
                access monitoring. It can contain regular expressions and can also
                include metacharacters such as "?".
              type: string
            type: array
          exclude_shares:
            items:
              description: Specifies a list of shares to exclude from file access
                monitoring. The possible values can contain regular expressions and
                can include metacharacters such as "?" and "*".
              type: string
            type: array
          exclude_volumes:
            example:
            - vol1
            - vol_svm1
            - '*'
            items:
              description: Specifies a list of volumes to exclude from file access
                monitoring. The possible values can contain regular expressions and
                can include metacharacters such as "?" and "*".
              type: string
            type: array
          include_export_policies:
            items:
              description: Specifies a list of export_policies or file access monitoring.
                The possible values can contain regular expressions and can include
                metacharacters such as "?" and "*".
              type: string
            type: array
          include_extension:
            items:
              description: Specifies a list of file extensions for file access monitoring.
                It can contain regular expressions and can also include metacharacters
                such as "?".
              type: string
            type: array
          include_shares:
            example:
            - sh1
            - share_cifs
            items:
              description: Specifies a list of shares for file access monitoring.
                The possible values can contain regular expressions and can include
                metacharacters such as "?" and "*".
              type: string
            type: array
          include_volumes:
            example:
            - vol1
            - vol_svm1
            items:
              description: Specifies a list of volumes for file access monitoring.
                The possible values can contain regular expressions and can include
                metacharacters such as "?" and "*".
              type: string
            type: array
        type: object
    type: object
  fpolicy_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          $ref: '#/definitions/fpolicy_policy'
        type: array
    type: object
  fpolicy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/fpolicy'
        type: array
    type: object
  href:
    properties:
      href:
        example: /api/resourcelink
        readOnly: true
        type: string
    readOnly: true
    type: object
  igroup:
    description: |
      An initiator group (igroup) is a collection of Fibre Channel (FC) world wide port names (WWPN), and/or iSCSI Qualified Names (IQNs), and/or iSCSI EUIs (Extended Unique Identifiers) that identify host initiators.<br/>
      Initiator groups are used to control which hosts can access specific LUNs. To grant access to a LUN from one or more hosts, create an initiator group containing the hosts' initiator names, then create a LUN map that associates the initiator group with the LUN.<br/>
      An initiator can appear in multiple initiator groups. An initiator group can be mapped to multiple LUNs. A specific initiator can be mapped to a specific LUN only once.<br/>
      All initiators in an initiator group must be from the same operating system. The initiator group's operating system is specified when the initiator group is created.<br/>
      When an initiator group is created, the `protocol` property is used to restrict member initiators to Fibre Channel (_fcp_), iSCSI (_iscsi_), or both (_mixed_).<br/>
      Zero or more initiators can be supplied when the initiator group is created. After creation, initiators can be added or removed from the initiator group using the `/protocols/san/igroups/{igroup.uuid}/initiators` endpoint. See [`POST /protocols/san/igroups/{igroup.uuid}/initiators`](#/SAN/igroup_initiator_create) and [`DELETE /protocols/san/igroups/{igroup.uuid}/initiators/{name}`](#/SAN/igroup_initiator_delete) for more details.<br/>
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      delete_on_unmap:
        default: false
        description: |
          An option that causes the initiator group to be deleted when the last LUN map associated with it is deleted. Optional in PATCH only; not available in POST. This property defaults to _false_ when the initiator group is created.
        type: boolean
        x-ntap-readModify: true
      initiators:
        description: |
          The initiators that are members of the group. Optional in POST.<br/>
          Zero or more initiators can be supplied when the initiator group is created. After creation, initiators can be added or removed from the initiator group using the `/protocols/san/igroups/{igroup.uuid}/initiators` endpoint. See [`POST /protocols/san/igroups/{igroup.uuid}/initiators`](#/SAN/igroup_initiator_create) and [`DELETE /protocols/san/igroups/{igroup.uuid}/initiators/{name}`](#/SAN/igroup_initiator_delete) for more details.
        items:
          $ref: '#/definitions/igroup_initiator_no_records'
        type: array
        x-ntap-readCreate: true
      lun_maps:
        description: |
          All LUN maps with which the initiator is associated.<br/>
          There is an added cost to retrieving property values for `lun_maps`. They not populated for either a collection GET or an instance GET unless explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        items:
          description: |
            A LUN map with which the initiator group is associated.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            logical_unit_number:
              description: |
                The logical unit number assigned to the LUN for initiators in the initiator group.
              readOnly: true
              type: integer
            lun:
              description: |
                The LUN to which the initiator group is mapped.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: "The name of the LUN.\n"
                  example: lun1
                  readOnly: true
                  type: string
                node:
                  properties:
                    _links:
                      properties:
                        self:
                          $ref: '#/definitions/href'
                      readOnly: true
                      type: object
                    name:
                      example: node1
                      type: string
                    uuid:
                      example: 1cd8a442-86d1-11e0-ae1c-123478563412
                      type: string
                  readOnly: true
                  type: object
                uuid:
                  description: |
                    The unique identifier of the LUN.
                  example: 4ea7a442-86d1-11e0-ae1c-123478563412
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          readOnly: true
          type: object
        readOnly: true
        type: array
      name:
        description: |
          The name of the initiator group. Required in POST; optional in PATCH.<br/>
          Note that renaming an initiator group must be done in a PATCH request separate from any other modifications.
        example: igroup1
        maxLength: 96
        minLength: 1
        type: string
      os_type:
        description: |
          The host operating system of the initiator group. All initiators in the group should be hosts of the same operating system. Required in POST; optional in PATCH.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - vmware
        - windows
        - xen
        type: string
      protocol:
        default: mixed
        description: |
          The protocols supported by the initiator group. This restricts the type of initiators that can be added to the initiator group. Optional in POST; if not supplied, this defaults to _mixed_.<br/>
          The protocol of an initiator group cannot be changed after creation of the group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: |
          The unique identifier of the initiator group.
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  igroup_initiator:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      igroup:
        description: |
          The initiator group in which the initiator is found.<br/>
          Note that this does not mean that the initiator cannot also be found in other initiator groups.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: |
              The unique identifier of the initiator group.
            example: 4ea7a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        description: |
          The FC WWPN, iSCSI IQN, or iSCSI EUI that identifies the host initiator. Valid in POST only and not allowed when the `records` property is used.<br/>
          An FC WWPN consist of 16 hexadecimal digits grouped as 8 pairs separated by colons. The format for an iSCSI IQN is _iqn.yyyy-mm.reverse_domain_name:any_. The iSCSI EUI format consists of the _eui._ prefix followed by 16 hexadecimal characters.
        example: iqn.1998-01.com.corp.iscsi:name1
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-readCreate: true
      records:
        description: |
          An array of initiators specified to add multiple initiators to an initiator group in a single API call. Valid in POST only and not allowed when the `name` property is used.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            igroup:
              description: |
                The initiator group in which the initiator is found.<br/>
                Note that this does not mean that the initiator cannot also be found in other initiator groups.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                uuid:
                  description: |
                    The unique identifier of the initiator group.
                  example: 4ea7a442-86d1-11e0-ae1c-123478563412
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            name:
              description: |
                The FC WWPN, iSCSI IQN, or iSCSI EUI that identifies the host initiator. Valid in POST only and not allowed when the `records` property is used.<br/>
                An FC WWPN consist of 16 hexadecimal digits grouped as 8 pairs separated by colons. The format for an iSCSI IQN is _iqn.yyyy-mm.reverse_domain_name:any_. The iSCSI EUI format consists of the _eui._ prefix followed by 16 hexadecimal characters.
              example: iqn.1998-01.com.corp.iscsi:name1
              maxLength: 96
              minLength: 1
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
        x-ntap-createOnly: true
    type: object
  igroup_initiator_no_records:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      igroup:
        description: |
          The initiator group in which the initiator is found.<br/>
          Note that this does not mean that the initiator cannot also be found in other initiator groups.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: |
              The unique identifier of the initiator group.
            example: 4ea7a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        description: |
          The FC WWPN, iSCSI IQN, or iSCSI EUI that identifies the host initiator. Valid in POST only and not allowed when the `records` property is used.<br/>
          An FC WWPN consist of 16 hexadecimal digits grouped as 8 pairs separated by colons. The format for an iSCSI IQN is _iqn.yyyy-mm.reverse_domain_name:any_. The iSCSI EUI format consists of the _eui._ prefix followed by 16 hexadecimal characters.
        example: iqn.1998-01.com.corp.iscsi:name1
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-readCreate: true
    type: object
  igroup_initiator_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/igroup_initiator'
        type: array
    type: object
  igroup_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: |
          The name of the initiator group.
        example: igroup1
        maxLength: 96
        minLength: 1
        type: string
      uuid:
        description: |
          The unique identifier of the initiator group.
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  igroup_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/igroup'
        type: array
    type: object
  ip_address:
    description: IPv4 or IPv6 address
    example: 10.10.10.7
    type: string
  ip_address_family:
    description: IPv4 or IPv6
    enum:
    - ipv4
    - ipv6
    readOnly: true
    type: string
  ip_address_range:
    description: IP address range
    properties:
      end:
        $ref: '#/definitions/ip_address'
      family:
        $ref: '#/definitions/ip_address_family'
      start:
        $ref: '#/definitions/ip_address'
    type: object
  ip_address_readcreate:
    description: IPv4 or IPv6 address
    example: 10.10.10.7
    type: string
    x-ntap-readCreate: true
  ip_address_readonly:
    description: IPv4 or IPv6 address
    example: 10.10.10.7
    readOnly: true
    type: string
  ip_info:
    description: IP information
    properties:
      address:
        $ref: '#/definitions/ip_address'
      family:
        $ref: '#/definitions/ip_address_family'
      netmask:
        $ref: '#/definitions/ip_netmask'
    type: object
  ip_interface:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        default: true
        description: The administrative state of the interface.
        type: boolean
      ip:
        $ref: '#/definitions/ip_info'
      ipspace:
        description: Either the UUID or name must be supplied on POST for cluster-scoped
          objects.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      location:
        description: Current or home location can be modified. Specifying a port implies
          a node. Specifying a node allows an appropriate port to be automatically
          selected. Ports are not valid and not shown for VIP interfaces. For POST,
          broadcast_domain can be specified alone or with home_node.
        properties:
          auto_revert:
            type: boolean
          broadcast_domain:
            description: Broadcast domain UUID along with a readable name.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: Name of the broadcast domain, scoped to its IPspace
                example: bd1
                type: string
              uuid:
                description: Broadcast domain UUID
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
            x-ntap-createOnly: true
          failover:
            $ref: '#/definitions/failover_scope'
          home_node:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: node1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          home_port:
            description: Port UUID along with readable names. Either the UUID or both
              names may be supplied on input.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: e1b
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    type: string
                type: object
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          is_home:
            readOnly: true
            type: boolean
          node:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: node1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
            x-ntap-readModify: true
          port:
            description: Port UUID along with readable names. Either the UUID or both
              names may be supplied on input.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: e1b
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    type: string
                type: object
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
            x-ntap-readModify: true
        type: object
      name:
        description: Interface name
        example: dataLif1
        type: string
      scope:
        description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to
          "cluster".
        enum:
        - svm
        - cluster
        type: string
        x-ntap-readCreate: true
      service_policy:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: default-intercluster
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      services:
        description: The services associated with the interface.
        items:
          $ref: '#/definitions/ip_service'
        readOnly: true
        type: array
      state:
        description: The operational state of the interface.
        enum:
        - up
        - down
        readOnly: true
        type: string
      svm:
        description: Applies only to SVM-scoped objects. Either the UUID or name must
          be supplied on POST.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: The UUID that uniquely identifies the interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      vip:
        default: false
        description: True for a VIP interface, whose location is announced via BGP.
        type: boolean
        x-ntap-readCreate: true
    type: object
  ip_interface_and_gateway:
    description: Object to setup an interface along with its default router.
    properties:
      address:
        description: IPv4 or IPv6 address
        example: 10.10.10.7
        type: string
      gateway:
        description: The IPv4 or IPv6 address of the default router.
        example: 10.1.1.1
        type: string
      netmask:
        $ref: '#/definitions/ip_netmask'
    type: object
  ip_interface_reference:
    description: A network interface. Either UUID or name may be supplied on input.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ip:
        description: IP information
        properties:
          address:
            $ref: '#/definitions/ip_address_readonly'
        readOnly: true
        type: object
      name:
        description: The name of the interface.
        example: lif1
        type: string
      uuid:
        description: The UUID that uniquely identifies the interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  ip_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/ip_interface'
        type: array
    type: object
  ip_interface_svm:
    description: Interface parameters.  Name and home_node are optional.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ip:
        description: IP information
        properties:
          address:
            $ref: '#/definitions/ip_address_readcreate'
          netmask:
            $ref: '#/definitions/ip_netmask_createonly'
        type: object
      location:
        description: Home_node is optional.
        properties:
          broadcast_domain:
            description: Broadcast domain UUID along with a readable name.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: Name of the broadcast domain, scoped to its IPspace
                example: bd1
                type: string
              uuid:
                description: Broadcast domain UUID
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          home_node:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: node1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
        type: object
        x-ntap-createOnly: true
      name:
        description: The name of the interface (optional).
        example: lif1
        type: string
        x-ntap-readCreate: true
      service_policy:
        $ref: '#/definitions/ip_service_policy_svm_enum'
      services:
        description: The services associated with the interface.
        items:
          $ref: '#/definitions/ip_service'
        readOnly: true
        type: array
      uuid:
        description: The UUID that uniquely identifies the interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  ip_netmask:
    description: Input as netmask length (16) or IPv4 mask (255.255.0.0). For IPv6,
      you must set the netmask length. The default value is 64. Output is always netmask
      length.
    example: '24'
    type: string
  ip_netmask_createonly:
    description: Input as netmask length (16) or IPv4 mask (255.255.0.0).
    example: '24'
    type: string
    x-ntap-createOnly: true
  ip_service:
    enum:
    - cluster_core
    - intercluster_core
    - management_core
    - management_autosupport
    - management_bgp
    - management_https
    - management_ssh
    - data_core
    - data_nfs
    - data_cifs
    - data_flexcache
    - data_iscsi
    example: data_nfs
    type: string
  ip_service_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ipspace:
        description: Applies to both SVM and cluster-scoped objects. Either the UUID
          or name may be supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      name:
        example: default-intercluster
        type: string
      scope:
        $ref: '#/definitions/network_scope'
      services:
        items:
          $ref: '#/definitions/ip_service'
        type: array
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  ip_service_policy_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: default-intercluster
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  ip_service_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/ip_service_policy'
        type: array
    type: object
  ip_service_policy_svm_enum:
    description: Built-in service policies for SVMs.
    enum:
    - default-management
    - default-data-files
    - default-data-blocks
    type: string
    x-ntap-createOnly: true
  ipsec:
    description: Manages IPsec configuration via REST APIs.
    properties:
      _links:
        $ref: '#/definitions/self_link'
      enabled:
        description: Indicates whether or not IPsec is enabled.
        type: boolean
    type: object
  ipsec_endpoint:
    description: Endpoint specification for the IPsec policy
    properties:
      address:
        $ref: '#/definitions/ip_address'
      family:
        $ref: '#/definitions/ip_address_family'
      netmask:
        $ref: '#/definitions/ip_netmask'
      port:
        description: Application port to be covered by the IPsec policy
        example: '23'
        type: string
    type: object
  ipsec_policy:
    description: IPsec policy object.
    properties:
      action:
        description: Action for the IPsec policy.
        enum:
        - bypass
        - discard
        - esp_transport
        type: string
        x-ntap-createOnly: true
      enabled:
        default: true
        description: Indicates whether or not the policy is enabled.
        type: boolean
      local_endpoint:
        description: Local endpoint for the IPsec policy.
        properties:
          address:
            $ref: '#/definitions/ip_address'
          family:
            $ref: '#/definitions/ip_address_family'
          netmask:
            $ref: '#/definitions/ip_netmask'
          port:
            description: Application port to be covered by the IPsec policy
            example: '23'
            type: string
        type: object
      name:
        description: IPsec policy name.
        type: string
      protocol:
        description: Lower layer protocol to be covered by the IPsec policy.
        example: '17'
        type: string
      remote_endpoint:
        description: Remote endpoint for the IPsec policy.
        properties:
          address:
            $ref: '#/definitions/ip_address'
          family:
            $ref: '#/definitions/ip_address_family'
          netmask:
            $ref: '#/definitions/ip_netmask'
          port:
            description: Application port to be covered by the IPsec policy
            example: '23'
            type: string
        type: object
      scope:
        description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to
          "cluster".
        enum:
        - svm
        - cluster
        type: string
        x-ntap-readOnly: true
      secret_key:
        description: Pre-shared key for IKE negotiation.
        maxLength: 128
        minLength: 18
        type: string
        x-ntap-createOnly: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: Unique identifier of the IPsec policy.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  ipsec_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        properties:
          arguments:
            description: Message arguments
            items:
              $ref: '#/definitions/error_arguments'
            readOnly: true
            type: array
          code:
            description: Error code
            example: '4'
            readOnly: true
            type: string
          message:
            description: Error message
            example: entry doesn't exist
            readOnly: true
            type: string
          target:
            description: The target parameter that caused the error.
            example: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 1
        type: integer
      records:
        items:
          description: IPsec policy object.
          properties:
            action:
              description: Action for the IPsec policy.
              enum:
              - bypass
              - discard
              - esp_transport
              type: string
              x-ntap-createOnly: true
            enabled:
              default: true
              description: Indicates whether or not the policy is enabled.
              type: boolean
            local_endpoint:
              description: Local endpoint for the IPsec policy.
              properties:
                address:
                  $ref: '#/definitions/ip_address'
                family:
                  $ref: '#/definitions/ip_address_family'
                netmask:
                  $ref: '#/definitions/ip_netmask'
                port:
                  description: Application port to be covered by the IPsec policy
                  example: '23'
                  type: string
              type: object
            name:
              description: IPsec policy name.
              type: string
            protocol:
              description: Lower layer protocol to be covered by the IPsec policy.
              example: '17'
              type: string
            remote_endpoint:
              description: Remote endpoint for the IPsec policy.
              properties:
                address:
                  $ref: '#/definitions/ip_address'
                family:
                  $ref: '#/definitions/ip_address_family'
                netmask:
                  $ref: '#/definitions/ip_netmask'
                port:
                  description: Application port to be covered by the IPsec policy
                  example: '23'
                  type: string
              type: object
            scope:
              description: Set to "svm" for interfaces owned by an SVM. Otherwise,
                set to "cluster".
              enum:
              - svm
              - cluster
              type: string
              x-ntap-readOnly: true
            secret_key:
              description: Pre-shared key for IKE negotiation.
              maxLength: 128
              minLength: 18
              type: string
              x-ntap-createOnly: true
            svm:
              description: SVM, applies only to SVM-scoped objects.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: "The name of the SVM.\n"
                  example: svm1
                  type: string
                uuid:
                  description: |
                    The unique identifier of the SVM.
                  example: 02c9e252-41be-11e9-81d5-00a0986138f7
                  type: string
              type: object
            uuid:
              description: Unique identifier of the IPsec policy.
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              readOnly: true
              type: string
          type: object
        type: array
    type: object
  ipspace:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: IPspace name
        example: ipspace1
        type: string
      uuid:
        description: The UUID that uniquely identifies the IPspace.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  ipspace_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: IPspace name
        example: exchange
        type: string
      uuid:
        description: IPspace UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  ipspace_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/ipspace'
        type: array
    type: object
  ipv6_interface_and_gateway:
    description: Object to setup an interface along with its default router.
    properties:
      address:
        description: IPv6 address
        example: fd20:8b1e:b255:5011:10:141:4:97
        type: string
      gateway:
        description: The IPv6 address of the default router.
        example: fd20:8b1e:b255:5011:10::1
        type: string
      netmask:
        description: The IPv6 netmask/prefix length. The default value is 64 with
          a valid range of 1 to 127.
        example: 64
        type: integer
    type: object
  iscsi_connection:
    description: "An active iSCSI connection.\n"
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_type:
        description: |
          The iSCSI authentication type used to establish the connection.
        enum:
        - chap
        - none
        readOnly: true
        type: string
      cid:
        description: |
          The identifier of the connection within the session.
        readOnly: true
        type: integer
      initiator_address:
        description: |
          The TCP socket information for the initiator end of the connection. This is useful for network packet debugging.
        properties:
          address:
            description: |
              The TCP IPv4 or IPv6 address of the initiator end of the iSCSI connection.
            example: 10.10.10.7
            readOnly: true
            type: string
          port:
            description: |
              The TCP port number of the initiator end of the iSCSI connection.
            example: 55432
            readOnly: true
            type: integer
        readOnly: true
        type: object
      interface:
        description: The network interface information for the target end of the connection.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          ip:
            description: The IP information. ONTAP only supports port 3260.
            properties:
              address:
                $ref: '#/definitions/ip_address_readonly'
              port:
                description: The TCP port number of the iSCSI access endpoint.
                example: 3260
                maximum: 65536
                minimum: 1
                readOnly: true
                type: integer
            readOnly: true
            type: object
          name:
            description: The name of the interface.
            example: lif1
            readOnly: true
            type: string
          uuid:
            description: The UUID that uniquely identifies the interface.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  iscsi_credentials:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_type:
        description: The iSCSI authentication type. Required in POST and optional
          in PATCH.
        enum:
        - chap
        - none
        - deny
        type: string
      chap:
        description: Challenge-Handshake Authentication Protocol (CHAP) credentials.
        properties:
          inbound:
            description: Inbound CHAP credentials.
            properties:
              password:
                description: The inbound CHAP password. Write-only; optional in POST
                  and PATCH.
                minLength: 1
                type: string
                x-ntap-writeOnly: true
              user:
                description: The inbound CHAP user name. Optional in POST and PATCH.
                maxLength: 128
                minLength: 1
                type: string
            type: object
          outbound:
            description: Output CHAP credentials.
            properties:
              password:
                description: The outbound CHAP password. Write-only; optional in POST
                  and PATCH.
                minLength: 1
                type: string
                x-ntap-writeOnly: true
              user:
                description: The outbound CHAP user name. Optional in POST and PATCH.
                maxLength: 128
                minLength: 1
                type: string
            type: object
        type: object
      initiator:
        description: |
          The iSCSI initiator to which the credentials apply. Required in POST.
        example: iqn.1998-01.com.corp.iscsi:name1
        type: string
        x-ntap-readCreate: true
      initiator_address:
        description: Initiator address ranges.
        properties:
          masks:
            items:
              $ref: '#/definitions/ip_info'
            type: array
          ranges:
            items:
              $ref: '#/definitions/ip_address_range'
            type: array
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  iscsi_credentials_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/iscsi_credentials'
        type: array
    type: object
  iscsi_service:
    description: |
      An iSCSI service defines the properties of the iSCSI target for an SVM. There can be at most one iSCSI service for an SVM. An SVM's iSCSI service must be created before iSCSI initiators can log in to the SVM.<br/>
      An iSCSI service is identified by the UUID of its SVM.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        default: true
        description: |
          The administrative state of the iSCSI service. The iSCSI service can be disabled to block all iSCSI connectivity to the SVM.<br/>
          Optional in POST and PATCH. The default setting is _true_ (enabled) in POST.
        type: boolean
      metric:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      statistics:
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This should be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This should be divided by the raw IOPS value to calculate the average
              latency per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This should
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      target:
        properties:
          alias:
            description: |
              The iSCSI target alias of the iSCSI service.<br/>
              The target alias can contain one (1) to 128 characters and feature any printable character except space (" "). A PATCH request with an empty alias ("") clears the alias.<br/>
              Optional in POST and PATCH. In POST, this defaults to the name of the SVM.
            example: svm1
            maxLength: 128
            minLength: 1
            type: string
          name:
            description: |
              The iSCSI target name of the iSCSI service. This is generated for the SVM during POST.<br/>
              If required, the target name can be modified using the ONTAP command line.
            example: iqn.1992-08.com.netapp:sn.574caf71890911e8a6b7005056b4ea79:vs.2
            maxLength: 128
            minLength: 1
            readOnly: true
            type: string
        type: object
    type: object
  iscsi_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/iscsi_service'
        type: array
    type: object
  iscsi_session:
    description: |
      An iSCSI session is one or more TCP connections that link an iSCSI initiator with an iSCSI target. TCP connections can be added and removed from an iSCSI session by the iSCSI initiator. Across all TCP connections within an iSCSI session, an initiator sees one and the same target. After the connection is established, iSCSI control, data, and status messages are communicated over the session.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      connections:
        description: |
          The iSCSI connections that make up the iSCSI session.
        items:
          $ref: '#/definitions/iscsi_connection'
        readOnly: true
        type: array
      igroups:
        description: |
          The initiator groups in which the initiator is a member.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              description: |
                The name of the initiator group.
              example: igroup1
              maxLength: 96
              minLength: 1
              type: string
            uuid:
              description: |
                The unique identifier of the initiator group.
              example: 4ea7a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      initiator:
        description: |
          The initiator that created the session.
        properties:
          alias:
            description: "The initiator alias.\n"
            example: initiator_alias1
            readOnly: true
            type: string
          name:
            description: |
              The world wide unique name of the initiator.
            example: iqn.1992-01.example.com:string
            readOnly: true
            type: string
        readOnly: true
        type: object
      isid:
        description: |
          The initiator portion of the session identifier specified by the initiator during login.
        example: 61:62:63:64:65:00
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
      target_portal_group:
        description: |
          The target portal group to which the session belongs.
        example: tpgroup1
        readOnly: true
        type: string
      target_portal_group_tag:
        description: |
          The target portal group tag of the session.
        readOnly: true
        type: integer
      tsih:
        description: |
          The target session identifier handle (TSIH) of the session.
        readOnly: true
        type: integer
    readOnly: true
    type: object
  iscsi_session_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/iscsi_session'
        type: array
    type: object
  job:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      code:
        description: If the state indicates "failure", this is the final error code.
        example: 0
        readOnly: true
        type: integer
      description:
        description: The description of the job to help identify it independent of
          the UUID.
        example: App Snapshot Job
        readOnly: true
        type: string
      end_time:
        description: The time the job ended.
        format: date-time
        readOnly: true
        type: string
      message:
        description: A message corresponding to the state of the job providing additional
          details about the current state.
        example: 'Complete: Successful'
        readOnly: true
        type: string
      start_time:
        description: The time the job started.
        format: date-time
        readOnly: true
        type: string
      state:
        description: The state of the job.
        enum:
        - queued
        - running
        - paused
        - success
        - failure
        readOnly: true
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  job_link:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      uuid:
        description: The UUID of the asynchronous job that is triggered by a POST,
          PATCH, or DELETE operation.
        format: uuid
        readOnly: true
        type: string
    type: object
  job_link_response:
    properties:
      job:
        $ref: '#/definitions/job_link'
    readOnly: true
    type: object
  job_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/job'
        type: array
    type: object
  kerberos_interface:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        description: Specifies if Kerberos is enabled.
        type: boolean
      encryption_types:
        items:
          description: |
            Permitted encryption types:
            * des - Data Encryption Standard
            * 3des - Triple Data Encryption Standard
            * aes_128 - Advanced Encryption Standard with 128-bit encryption
            * aes_256 - Advanced Encryption Standard with 256-bit encryption
          enum:
          - des
          - des3
          - aes_128
          - aes_256
          readOnly: true
          type: string
        readOnly: true
        type: array
      interface:
        description: Network interface
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          ip:
            description: IP information
            properties:
              address:
                $ref: '#/definitions/ip_address_readonly'
            readOnly: true
            type: object
          name:
            description: The name of the interface.
            example: lif1
            type: string
          uuid:
            description: The UUID that uniquely identifies the interface.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      keytab_uri:
        description: Load keytab from URI
        type: string
        x-ntap-writeOnly: true
      organizational_unit:
        description: Organizational unit
        type: string
        x-ntap-writeOnly: true
      password:
        description: Account creation password
        type: string
        x-ntap-writeOnly: true
      spn:
        description: Service principal name. Valid in PATCH.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
      user:
        description: Account creation user name
        type: string
        x-ntap-writeOnly: true
    type: object
  kerberos_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/kerberos_interface'
        type: array
    type: object
  kerberos_realm:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ad_server:
        properties:
          address:
            description: Active Directory server IP address
            example: 1.2.3.4
            type: string
          name:
            description: Active Directory server name
            type: string
        type: object
      comment:
        description: Comment
        type: string
      encryption_types:
        items:
          description: |
            Permitted encryption types:
            * des - Data Encryption Standard
            * 3des - Triple Data Encryption Standard
            * aes_128 - Advanced Encryption Standard with 128-bit encryption
            * aes_256 - Advanced Encryption Standard with 256-bit encryption
          enum:
          - des
          - des3
          - aes_128
          - aes_256
          readOnly: true
          type: string
        readOnly: true
        type: array
      kdc:
        properties:
          ip:
            description: KDC IP address
            example: 1.2.3.4
            type: string
          port:
            default: 88
            description: KDC port
            example: 88
            maximum: 65535
            minimum: 1
            type: integer
          vendor:
            description: |
              Key Distribution Center (KDC) vendor. Following values are suported:
              * microsoft - Microsoft Active Directory KDC
              * other - MIT Kerberos KDC or other KDC
            enum:
            - microsoft
            - other
            type: string
        type: object
      name:
        description: Kerberos realm
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  kerberos_realm_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/kerberos_realm'
        type: array
    type: object
  key_exchange_algorithm:
    description: Key Exchange Algorithm.
    enum:
    - diffie_hellman_group_exchange_sha256
    - diffie_hellman_group_exchange_sha1
    - diffie_hellman_group14_sha1
    - ecdh_sha2_nistp256
    - ecdh_sha2_nistp384
    - ecdh_sha2_nistp521
    example: diffie_hellman_group_exchange_sha256
    type: string
  key_manager_state:
    description: |
      Optional status information on the current state of the key manager indicating if it is fully setup or requires more action.
    properties:
      code:
        description: Code corresponding to the status message. Returns 0 if the setup
          is complete. This is an advanced property; there is an added cost to retrieving
          its value. The property is not populated for either a collection GET or
          an instance GET unless it is explicitly requested using the `fields` query
          parameter or GET for all advanced properties is enabled.
        example: 346758
        type: integer
      message:
        description: Current state of the key manager indicating any additional steps
          to perform to finish the setup. This is an advanced property; there is an
          added cost to retrieving its value. The property is not populated for either
          a collection GET or an instance GET unless it is explicitly requested using
          the `fields` query parameter or GET for all advanced properties is enabled.
        example: This cluster is part of a MetroCluster configuration. Use the REST
          API POST method security/key_managers/ with the synchronize option and the
          same passphrase on the partner cluster before proceeding with any key manager
          operations.  Failure to do so could lead to switchover or switchback failure.
        type: string
    readOnly: true
    type: object
  key_server:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      connectivity:
        description: |
          This property returns the key server connectivity state on all nodes of the cluster. The state is returned for a node only if the connectivity is not in an available state on that node.
          This is an advanced property; there is an added cost to retrieving its value. The property is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter or GET for all advanced properties is enabled.
        properties:
          cluster_availability:
            description: Set to true when key server connectivity state is available
              on all nodes of the cluster.
            readOnly: true
            type: boolean
          records:
            description: |
              An array of key server connectivity states for each node.
            items:
              $ref: '#/definitions/key_server_state'
            readOnly: true
            type: array
        readOnly: true
        type: object
      password:
        default: ''
        description: Password credentials for connecting with the key server. This
          is not audited.
        example: password
        format: password
        type: string
        x-ntap-modifyOnly: true
      records:
        description: |
          An array of key servers specified to add multiple key servers to a key manager in a single API call. Valid in POST only and not valid if `server` is provided.
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            connectivity:
              description: |
                This property returns the key server connectivity state on all nodes of the cluster. The state is returned for a node only if the connectivity is not in an available state on that node.
                This is an advanced property; there is an added cost to retrieving its value. The property is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter or GET for all advanced properties is enabled.
              properties:
                cluster_availability:
                  description: Set to true when key server connectivity state is available
                    on all nodes of the cluster.
                  readOnly: true
                  type: boolean
                records:
                  description: |
                    An array of key server connectivity states for each node.
                  items:
                    $ref: '#/definitions/key_server_state'
                  readOnly: true
                  type: array
              readOnly: true
              type: object
            password:
              default: ''
              description: Password credentials for connecting with the key server.
                This is not audited.
              example: password
              format: password
              type: string
              x-ntap-modifyOnly: true
            server:
              description: External key server for key management. If no port is provided,
                a default port of 5696 is used. Not valid in POST if `records` is
                provided.
              example: keyserver1.com:5698
              type: string
              x-ntap-readCreate: true
            timeout:
              default: 25
              description: I/O timeout in seconds for communicating with the key server.
              example: 60
              maximum: 60
              minimum: 1
              type: integer
              x-ntap-readModify: true
            username:
              default: ''
              description: KMIP username credentials for connecting with the key server.
              example: username
              type: string
              x-ntap-readModify: true
          type: object
        maxItems: 4
        type: array
        x-ntap-createOnly: true
      server:
        description: External key server for key management. If no port is provided,
          a default port of 5696 is used. Not valid in POST if `records` is provided.
        example: keyserver1.com:5698
        type: string
        x-ntap-readCreate: true
      timeout:
        default: 25
        description: I/O timeout in seconds for communicating with the key server.
        example: 60
        maximum: 60
        minimum: 1
        type: integer
        x-ntap-readModify: true
      username:
        default: ''
        description: KMIP username credentials for connecting with the key server.
        example: username
        type: string
        x-ntap-readModify: true
    type: object
  key_server_no_records:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      connectivity:
        description: |
          This property returns the key server connectivity state on all nodes of the cluster. The state is returned for a node only if the connectivity is not in an available state on that node.
          This is an advanced property; there is an added cost to retrieving its value. The property is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter or GET for all advanced properties is enabled.
        properties:
          cluster_availability:
            description: Set to true when key server connectivity state is available
              on all nodes of the cluster.
            readOnly: true
            type: boolean
          records:
            description: |
              An array of key server connectivity states for each node.
            items:
              $ref: '#/definitions/key_server_state'
            readOnly: true
            type: array
        readOnly: true
        type: object
      password:
        default: ''
        description: Password credentials for connecting with the key server. This
          is not audited.
        example: password
        format: password
        type: string
        x-ntap-modifyOnly: true
      server:
        description: External key server for key management. If no port is provided,
          a default port of 5696 is used. Not valid in POST if `records` is provided.
        example: keyserver1.com:5698
        type: string
        x-ntap-readCreate: true
      timeout:
        default: 25
        description: I/O timeout in seconds for communicating with the key server.
        example: 60
        maximum: 60
        minimum: 1
        type: integer
        x-ntap-readModify: true
      username:
        default: ''
        description: KMIP username credentials for connecting with the key server.
        example: username
        type: string
        x-ntap-readModify: true
    type: object
  key_server_readcreate:
    properties:
      _links:
        $ref: '#/definitions/self_link'
      connectivity:
        description: |
          This property returns the key server connectivity state on all nodes of the cluster. The state is returned for a node only if the connectivity is not in an available state on that node.
          This is an advanced property; there is an added cost to retrieving its value. The property is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter or GET for all advanced properties is enabled.
        properties:
          cluster_availability:
            description: Set to true when key server connectivity state is available
              on all nodes of the cluster.
            readOnly: true
            type: boolean
          records:
            description: |
              An array of key server connectivity states for each node.
            items:
              $ref: '#/definitions/key_server_state'
            readOnly: true
            type: array
        readOnly: true
        type: object
      server:
        description: External key server for key management. If no port is provided,
          a default port of 5696 is used.
        example: keyserver1.com:5698
        type: string
        x-ntap-readCreate: true
      timeout:
        default: 25
        description: I/O timeout in seconds for communicating with the key server.
        example: 60
        maximum: 60
        minimum: 1
        readOnly: true
        type: integer
      username:
        default: ''
        description: Username credentials for connecting with the key server.
        example: admin
        readOnly: true
        type: string
    type: object
  key_server_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/key_server'
        type: array
    type: object
  key_server_state:
    description: |
      The state of the key server for a specific node.
    properties:
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      state:
        description: Key server connectivity state
        enum:
        - not_responding
        - unknown
        example: not_responding
        type: string
    readOnly: true
    type: object
  key_server_state_array:
    description: |
      A container for holding an array of key server connectivity states for each node.
    properties:
      cluster_availability:
        description: Set to true when key server connectivity state is available on
          all nodes of the cluster.
        readOnly: true
        type: boolean
      records:
        description: |
          An array of key server connectivity states for each node.
        items:
          $ref: '#/definitions/key_server_state'
        readOnly: true
        type: array
    readOnly: true
    type: object
  layout_requirement:
    properties:
      aggregate_min_disks:
        description: Minimum number of disks to create an aggregate
        example: 6
        readOnly: true
        type: integer
      default:
        description: Indicates if this RAID type is the default
        readOnly: true
        type: boolean
      raid_group:
        properties:
          default:
            description: Default number of disks in a RAID group
            example: 16
            readOnly: true
            type: integer
          max:
            description: Maximum number of disks allowed in a RAID group
            example: 28
            readOnly: true
            type: integer
          min:
            description: Minimum number of disks allowed in a RAID group
            example: 5
            readOnly: true
            type: integer
        type: object
      raid_type:
        description: RAID type
        enum:
        - raid_dp
        - raid_tec
        - raid4
        - raid0
        readOnly: true
        type: string
    readOnly: true
    type: object
  ldap_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ad_domain:
        description: |
          This parameter specifies the name of the Active Directory domain
          used to discover LDAP servers for use by this client.
          This is mutually exclusive with `servers` during POST and PATCH.
        type: string
      base_dn:
        description: Specifies the default base DN for all searches.
        type: string
      base_scope:
        default: subtree
        description: |
          Specifies the default search scope for LDAP queries:
          * base - search the named entry only
          * onelevel - search all entries immediately below the DN
          * subtree - search the named DN entry and the entire subtree below the DN
        enum:
        - base
        - onelevel
        - subtree
        type: string
      bind_dn:
        description: Specifies the user that binds to the LDAP servers.
        type: string
      bind_password:
        description: Specifies the bind password for the LDAP servers.
        type: string
        x-ntap-writeOnly: true
      min_bind_level:
        default: simple
        description: |
          The minimum bind authentication level. Possible values are:
          * anonymous - anonymous bind
          * simple - simple bind
          * sasl - Simple Authentication and Security Layer (SASL) bind
        enum:
        - anonymous
        - simple
        - sasl
        type: string
      port:
        default: 389
        description: The port used to connect to the LDAP Servers.
        example: 389
        maximum: 65535
        minimum: 1
        type: integer
      preferred_ad_servers:
        items:
          description: |
            This parameter specifies a list of LDAP servers preferred over
            discovered servers.
          type: string
        type: array
      schema:
        default: RFC-2307
        description: |
          The name of the schema template used by the SVM.
          * AD-IDMU - Active Directory Identity Management for UNIX
          * AD-SFU - Active Directory Services for UNIX
          * MS-AD-BIS - Active Directory Identity Management for UNIX
          * RFC-2307 - Schema based on RFC 2307
          * Custom schema
        type: string
      servers:
        items:
          description: |
            List of LDAP servers used for this client configuration. This
            parameter takes both FQDNs and IP addresses.
            This is mutually exclusive with `ad_domain` during POST and PATCH.
          type: string
        type: array
      session_security:
        default: none
        description: |
          Specifies the level of security to be used for LDAP communications:
          * none - no signing or sealing
          * sign - sign LDAP traffic
          * seal - seal and sign LDAP traffic
        enum:
        - none
        - sign
        - seal
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      use_start_tls:
        default: false
        description: |
          Specifies whether or not to use Start TLS over LDAP connections.
        type: boolean
    type: object
  ldap_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of LDAP records.
        type: integer
      records:
        items:
          $ref: '#/definitions/ldap_service'
        type: array
    type: object
  license:
    properties:
      active:
        description: A flag indicating whether the license is currently being enforced.
        readOnly: true
        type: boolean
      capacity:
        properties:
          maximum_size:
            description: Licensed capacity size (in bytes) that can be used.
            format: int64
            readOnly: true
            type: integer
          used_size:
            description: Capacity that is currently used (in bytes).
            format: int64
            readOnly: true
            type: integer
        readOnly: true
        type: object
      compliance:
        properties:
          state:
            description: Compliance state of the license.
            enum:
            - compliant
            - noncompliant
            - unlicensed
            - unknown
            example: compliant
            readOnly: true
            type: string
        type: object
      evaluation:
        description: A flag indicating whether the license is in evaluation mode.
        readOnly: true
        type: boolean
      expiry_time:
        description: Date and time when the license expires.
        example: 2019-03-02T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      owner:
        description: Cluster, node or license manager that owns the license.
        example: cluster1
        readOnly: true
        type: string
      serial_number:
        description: Serial number of the license.
        example: '123456789'
        readOnly: true
        type: string
      start_time:
        description: Date and time when the license starts.
        example: 2019-02-02T19:00:00Z
        format: date-time
        readOnly: true
        type: string
    type: object
  license_keys:
    description: License keys or NLF contents.
    properties:
      keys:
        items:
          example: AMEPOSOIKLKGEEEEDGNDEKSJDE
          type: string
        type: array
    type: object
  license_package:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      keys:
        items:
          example: AMEPOSOIKLKGEEEEDGNDEKSJDE
          type: string
        type: array
        x-ntap-createOnly: true
      licenses:
        description: Installed licenses of the package.
        items:
          properties:
            active:
              description: A flag indicating whether the license is currently being
                enforced.
              readOnly: true
              type: boolean
            capacity:
              properties:
                maximum_size:
                  description: Licensed capacity size (in bytes) that can be used.
                  format: int64
                  readOnly: true
                  type: integer
                used_size:
                  description: Capacity that is currently used (in bytes).
                  format: int64
                  readOnly: true
                  type: integer
              readOnly: true
              type: object
            compliance:
              properties:
                state:
                  description: Compliance state of the license.
                  enum:
                  - compliant
                  - noncompliant
                  - unlicensed
                  - unknown
                  example: compliant
                  readOnly: true
                  type: string
              type: object
            evaluation:
              description: A flag indicating whether the license is in evaluation
                mode.
              readOnly: true
              type: boolean
            expiry_time:
              description: Date and time when the license expires.
              example: 2019-03-02T19:00:00Z
              format: date-time
              readOnly: true
              type: string
            owner:
              description: Cluster, node or license manager that owns the license.
              example: cluster1
              readOnly: true
              type: string
            serial_number:
              description: Serial number of the license.
              example: '123456789'
              readOnly: true
              type: string
            start_time:
              description: Date and time when the license starts.
              example: 2019-02-02T19:00:00Z
              format: date-time
              readOnly: true
              type: string
          type: object
        readOnly: true
        type: array
      name:
        description: Name of the license.
        example: NFS
        readOnly: true
        type: string
      scope:
        description: Scope of the license.
        enum:
        - not_available
        - site
        - cluster
        - node
        readOnly: true
        type: string
      state:
        description: Summary state of package based on all installed licenses.
        enum:
        - compliant
        - noncompliant
        - unlicensed
        - unknown
        example: compliant
        readOnly: true
        type: string
    type: object
  license_package_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            keys:
              items:
                example: AMEPOSOIKLKGEEEEDGNDEKSJDE
                type: string
              type: array
              x-ntap-createOnly: true
            licenses:
              description: Installed licenses of the package.
              items:
                properties:
                  active:
                    description: A flag indicating whether the license is currently
                      being enforced.
                    readOnly: true
                    type: boolean
                  capacity:
                    properties:
                      maximum_size:
                        description: Licensed capacity size (in bytes) that can be
                          used.
                        format: int64
                        readOnly: true
                        type: integer
                      used_size:
                        description: Capacity that is currently used (in bytes).
                        format: int64
                        readOnly: true
                        type: integer
                    readOnly: true
                    type: object
                  compliance:
                    properties:
                      state:
                        description: Compliance state of the license.
                        enum:
                        - compliant
                        - noncompliant
                        - unlicensed
                        - unknown
                        example: compliant
                        readOnly: true
                        type: string
                    type: object
                  evaluation:
                    description: A flag indicating whether the license is in evaluation
                      mode.
                    readOnly: true
                    type: boolean
                  expiry_time:
                    description: Date and time when the license expires.
                    example: 2019-03-02T19:00:00Z
                    format: date-time
                    readOnly: true
                    type: string
                  owner:
                    description: Cluster, node or license manager that owns the license.
                    example: cluster1
                    readOnly: true
                    type: string
                  serial_number:
                    description: Serial number of the license.
                    example: '123456789'
                    readOnly: true
                    type: string
                  start_time:
                    description: Date and time when the license starts.
                    example: 2019-02-02T19:00:00Z
                    format: date-time
                    readOnly: true
                    type: string
                type: object
              readOnly: true
              type: array
            name:
              description: Name of the license.
              example: NFS
              readOnly: true
              type: string
            scope:
              description: Scope of the license.
              enum:
              - not_available
              - site
              - cluster
              - node
              readOnly: true
              type: string
            state:
              description: Summary state of package based on all installed licenses.
              enum:
              - compliant
              - noncompliant
              - unlicensed
              - unknown
              example: compliant
              readOnly: true
              type: string
          type: object
        type: array
    type: object
  license_state:
    enum:
    - compliant
    - noncompliant
    - unlicensed
    - unknown
    example: compliant
    readOnly: true
    type: string
  log:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      format:
        default: evtx
        description: |
          The format in which the logs are generated by consolidation process.
            Possible values are:
            * xml  - Data ONTAP-specific XML log format
            * evtx - Microsoft Windows EVTX log format
        enum:
        - xml
        - evtx
        type: string
      retention:
        properties:
          count:
            description: |
              Determines how many audit log files to retain before
              rotating the oldest log file out. This is mutually exclusive with
              duration.
            type: integer
          duration:
            description: |
              Specifies an ISO-8601 format date and time to retain the audit log file. The audit log files are
              deleted once they reach the specified date/time. This is mutually exclusive with count.
            example: P4DT12H30M5S
            type: string
        type: object
      rotation:
        $ref: '#/definitions/rotation'
    type: object
  login_messages:
    description: |
      The login banner and message of the day (MOTD) configuration.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      banner:
        description: |
          The login banner text. This message is displayed during SSH and console device
          login just before the password prompt displays. When configured, a cluster-level
          login banner is used for every incoming connection. Each data SVM can override
          the cluster-level banner to instead display when you log into the SVM. To restore
          the default setting for a data SVM, set the banner to an empty string.
          New lines are supplied as either LF or CRLF but are always returned as LF.
          Optional in the PATCH body.
        maxLength: 2048
        minLength: 0
        type: string
      message:
        description: |
          The message of the day (MOTD). This message appears just before the clustershell
          prompt after a successful login. When configured, the cluster message
          displays first. If you log in as a data SVM administrator, the
          SVM message is then printed. The cluster-level MOTD can be disabled
          for a given data SVM using the "show_cluster_message" property.
          New lines are supplied as either LF or CRLF but are always returned as LF.
          Optional in the PATCH body.
        maxLength: 2048
        minLength: 0
        type: string
      scope:
        $ref: '#/definitions/network_scope'
      show_cluster_message:
        default: true
        description: |
          Specifies whether to show a cluster-level message before the SVM message
          when logging in as an SVM administrator.
          This setting can only be modified by the cluster administrator.
          Optional in the PATCH body.
        type: boolean
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: |
          The unique identifier (ID) of the login messages configuration.
        readOnly: true
        type: string
    type: object
  login_messages_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/login_messages'
        type: array
    type: object
  lun:
    description: |
      A LUN is the logical representation of storage in a storage area network (SAN).<br/>
      In ONTAP, a LUN is located within a volume. Optionally, it can be located within a qtree in a volume.<br/>
      A LUN can be created to a specified size using thin or thick provisioning. A LUN can then be renamed, resized, cloned, and moved to a different volume. LUNs support the assignment of a quality of service (QoS) policy for performance management or a QoS policy can be assigned to the volume containing the LUN. See the LUN object model to learn more about each of the properties supported by the LUN REST API.<br/>
      A LUN must be mapped to an initiator group to grant access to the initiator group's initiators (client hosts). Initiators can then access the LUN and perform I/O over a Fibre Channel (FC) fabric using the Fibre Channel Protocol or a TCP/IP network using iSCSI.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      auto_delete:
        default: false
        description: |
          This property marks the LUN for auto deletion when the volume containing the LUN runs out of space. This is most commonly set on LUN clones.<br/>
          When set to _true_, the LUN becomes eligible for automatic deletion when the volume runs out of space. Auto deletion only occurs when the volume containing the LUN is also configured for auto deletion and free space in the volume decreases below a particular threshold.<br/>
          This property is optional in POST and PATCH. The default value for a new LUN is _false_.<br/>
          There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        type: boolean
      class:
        description: |
          The class of LUN. Only _regular_ LUNs can be created using the REST API.
        enum:
        - regular
        - protocol_endpoint
        - vvol
        readOnly: true
        type: string
      clone:
        description: |
          This sub-object is used in POST to create a new LUN as a clone of an existing LUN, or PATCH to overwrite an existing LUN as a clone of another. Setting a property in this sub-object indicates that a LUN clone is desired. Consider the following other properties when cloning a LUN: `auto_delete`, `qos_policy`, and `space.guarantee.requested`.<br/>
          When used in a PATCH, the patched LUN's data is over-written as a clone of the source and the following properties are preserved from the patched LUN unless otherwise specified as part of the PATCH: `class`, `auto_delete`, `lun_maps`, `serial_number`, `status.state`, and `uuid`.<br/>
          Persistent reservations for the patched LUN are also preserved.
        properties:
          source:
            description: |
              The source LUN for a LUN clone operation. This can be specified using property `clone.source.uuid` or `clone.source.name`. If both properties are supplied, they must refer to the same LUN.<br/>
              Valid in POST to create a new LUN as a clone of the source.<br/>
              Valid in PATCH to overwrite an existing LUN's data as a clone of another.
            properties:
              name:
                description: |
                  The fully qualified path name of the clone source LUN composed of a "/vol" prefix, the volume name, the (optional) qtree name, and base name of the LUN. Valid in POST and PATCH.
                example: /vol/volume1/lun1
                type: string
                x-ntap-writeOnly: true
              uuid:
                description: |
                  The unique identifier of the clone source LUN. Valid in POST and PATCH.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
                x-ntap-writeOnly: true
            type: object
            x-ntap-writeOnly: true
        type: object
        x-ntap-writeOnly: true
      comment:
        description: |
          A configurable comment available for use by the administrator. Valid in POST and PATCH.
        maxLength: 254
        minLength: 0
        type: string
      create_time:
        description: The time the LUN was created.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      enabled:
        description: |
          The enabled state of the LUN. LUNs can be disabled to prevent access to the LUN. Certain error conditions also cause the LUN to become disabled. If the LUN is disabled, you can consult the `state` property to determine if the LUN is administratively disabled (_offline_) or has become disabled as a result of an error. A LUN in an error condition can be brought online by setting the `enabled` property to _true_ or brought administratively offline by setting the `enabled` property to _false_. Upon creation, a LUN is enabled by default. Valid in PATCH.
        type: boolean
        x-ntap-readModify: true
      location:
        description: |
          The location of the LUN within the ONTAP cluster. Valid in POST and PATCH.
        properties:
          logical_unit:
            description: |
              The base name component of the LUN. Valid in POST and PATCH.<br/>
              If properties `name` and `location.logical_unit` are specified in the same request, they must refer to the base name.<br/>
              A PATCH that modifies the base name of the LUN is considered a rename operation.
            example: lun1
            type: string
          qtree:
            description: |
              The qtree in which the LUN is optionally located. Valid in POST and PATCH.<br/>
              If properties `name` and `location.qtree.name` and/or `location.qtree.uuid` are specified in the same request, they must refer to the same qtree.<br/>
              A PATCH that modifies the qtree of the LUN is considered a rename operation.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              id:
                description: |
                  The identifier for the qtree, unique within the qtree's volume.
                example: 1
                maximum: 4994
                minimum: 0
                type: integer
              name:
                description: The name of the qtree.
                example: qt1
                type: string
            type: object
          volume:
            description: |
              The volume in which the LUN is located. Valid in POST and PATCH.<br/>
              If properties `name` and `location.volume.name` and/or `location.volume.uuid` are specified in the same request, they must refer to the same volume.<br/>
              A PATCH that modifies the volume of the LUN begins an asynchronous LUN movement operation.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: The name of the volume.
                example: volume1
                type: string
              uuid:
                description: Unique identifier for the volume. This corresponds to
                  the instance-uuid that is exposed in the CLI and ONTAPI. It does
                  not change due to a volume move.
                example: 028baa66-41bd-11e9-81d5-00a0986138f7
                type: string
            type: object
        type: object
      lun_maps:
        description: |
          The LUN maps with which the LUN is associated.<br/>
          There is an added cost to retrieving property values for `lun_maps`. They are not populated for either a collection GET or an instance GET unless explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        items:
          description: |
            A LUN map with which the LUN is associated.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            igroup:
              description: |
                The initiator group to which the LUN is mapped.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: |
                    The name of the initiator group.
                  example: igroup1
                  readOnly: true
                  type: string
                uuid:
                  description: |
                    The unique identifier of the initiator group.
                  example: 4ea7a442-86d1-11e0-ae1c-123478563412
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            logical_unit_number:
              description: |
                The logical unit number assigned to the LUN for initiators in the initiator group.
              readOnly: true
              type: integer
          readOnly: true
          type: object
        readOnly: true
        type: array
      metric:
        description: Performance numbers, such as IOPS latency and throughput.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      movement:
        description: |
          This sub-object applies to LUN movement between volumes. A LUN can be moved to a new volume with a PATCH request that changes either the volume portion of property `name`, `location.volume.uuid`, or `location.volume.name`. If the volume is changed using more than one of these properties, the supplied properties used must refer to the same volume.<br/>
          Moving a LUN between volumes is an asynchronous activity begun by a PATCH request. The data for the LUN is then asynchronously copied from the source volume to the destination volume. The time required to complete the move depends on the size of the LUN and the load on the cluster. The `movement` sub-object is populated while a LUN movement is in progress and for two (2) minutes following completion of a movement.<br/>
          While the LUN is being moved, the status of the LUN movement operation can be obtained using a GET for the LUN that requests the `movement` properties. The LUN movement operation can be further modified using a PATCH on the properties on the `movement` sub-object.<br/>
          There is added cost to retrieving property values for `movement`. They are not populated for either a collection GET or an instance GET unless explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        properties:
          max_throughput:
            description: |
              The maximum data throughput that should be utilized in support of the LUN movement. This property can be used to throttle a transfer and limit its impact on the performance of the source and destination nodes. The specified value will be rounded up to the nearest megabyte.<br/>
              If this property is not specified in a POST that begins a LUN movement, throttling is not applied to the data transfer.<br/>
              For more information, see _Size properties_ in the _docs_ section of the ONTAP REST API documentation.<br/>
              This property is valid only in a POST that begins a LUN movement or a PATCH when a LUN movement is already in process.
            type: string
          paths:
            description: |
              The fully qualified LUN path names involved in the LUN movement.
            properties:
              destination:
                description: The fully qualified path of the LUN movement destination
                  composed of a "/vol" prefix, the volume name, the (optional) qtree
                  name, and base name of the LUN.
                example: /vol/vol1/lun1
                readOnly: true
                type: string
              source:
                description: |
                  The fully qualified path of the LUN movement source composed of a "/vol" prefix, the volume name, the (optional) qtree name, and base name of the LUN.
                example: /vol/vol2/lun2
                readOnly: true
                type: string
            readOnly: true
            type: object
          progress:
            properties:
              elapsed:
                description: |
                  The amount of time, in seconds, that has elapsed since the start of the LUN movement.
                readOnly: true
                type: integer
              failure:
                description: |
                  Error information provided if the asynchronous LUN movement operation fails.
                properties:
                  code:
                    description: "The error code.\n"
                    example: '4'
                    readOnly: true
                    type: string
                  message:
                    description: "The error message.\n"
                    example: Destination volume is offline.
                    readOnly: true
                    type: string
                readOnly: true
                type: object
              percent_complete:
                description: |
                  The percentage complete of the LUN movement.
                maxValue: 100
                minValue: 0
                readOnly: true
                type: integer
              state:
                description: |
                  The state of the LUN movement.<br/>
                  Valid in PATCH when an LUN movement is active. Set to _paused_ to pause a LUN movement. Set to _replicating_ to resume a paused LUN movement.
                enum:
                - preparing
                - replicating
                - paused
                - paused_error
                - complete
                - reverting
                - failed
                type: string
                x-ntap-readModify: true
              volume_snapshot_blocked:
                description: |
                  This property reports if volume Snapshot copies are blocked by the LUN movement. This property can be polled to identify when volume Snapshot copies can be resumed after beginning a LUN movement.
                readOnly: true
                type: boolean
            type: object
            x-ntap-readModify: true
        type: object
      name:
        description: |
          The fully qualified path name of the LUN composed of a "/vol" prefix, the volume name, the (optional) qtree name, and base name of the LUN. Valid in POST and PATCH.<br/>
          A PATCH that modifies the qtree and/or base name portion of the LUN path is considered a rename operation.<br/>
          A PATCH that modifies the volume portion of the LUN path begins an asynchronous LUN movement operation.
        example: /vol/volume1/qtree1/lun1
        type: string
      os_type:
        description: |
          The operating system type of the LUN.<br/>
          Required in POST when creating a LUN that is not a clone of another. Disallowed in POST when creating a LUN clone.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
      qos_policy:
        description: |
          The QoS policy for the LUN. Both traditional and adaptive QoS policies are supported. If both property `qos_policy.uuid` and `qos_policy.name` are specified in the same request, they must refer to the same QoS policy. To remove the QoS policy from a LUN, leaving it with no QoS policy, set property `qos_policy.name` to an empty string ("") in a PATCH request. Valid in POST and PATCH.<br/>
          Note that a QoS policy can be set on a LUN, or a LUN's volume, but not both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The name of the QoS policy. To remove the QoS policy from a LUN, leaving it with no QoS policy, set this property to an empty string ("") in a PATCH request. Valid in POST and PATCH.
            example: qos1
            type: string
          uuid:
            description: |
              The unique identifier of the QoS policy. Valid in POST and PATCH.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      serial_number:
        description: |
          The LUN serial number. The serial number is generated by ONTAP when the LUN is created.
        maxLength: 12
        minLength: 12
        readOnly: true
        type: string
      space:
        description: |
          The storage space related properties of the LUN.
        properties:
          guarantee:
            description: |
              Properties that request and report the space guarantee for the LUN.
            properties:
              requested:
                default: false
                description: |
                  The requested space reservation policy for the LUN. If _true_, a space reservation is requested for the LUN; if _false_, the LUN is thin provisioned. Guaranteeing a space reservation request for a LUN requires that the volume in which the LUN resides is also space reserved and that the fractional reserve for the volume is 100%. Valid in POST and PATCH.
                type: boolean
              reserved:
                description: |
                  Reports if the LUN is space guaranteed.<br/>
                  If _true_, a space guarantee is requested and the containing volume and aggregate support the request. If _false_, a space guarantee is not requested or a space guarantee is requested and either the containing volume or aggregate do not support the request.
                readOnly: true
                type: boolean
            type: object
          size:
            description: |
              The total provisioned size of the LUN. The LUN size can be increased but not be made smaller using the REST interface.<br/>
              For more information, see _Size properties_ in the _docs_ section of the ONTAP REST API documentation.
            example: 1073741824
            type: integer
          used:
            description: |
              The amount of space consumed by the main data stream of the LUN.<br/>
              This value is the total space consumed in the volume by the LUN, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways SAN filesystems and applications utilize blocks within a LUN, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the LUN blocks are utilized outside of ONTAP, this property should not be used as an indicator for an out-of-space condition.<br/>
              For more information, see _Size properties_ in the _docs_ section of the ONTAP REST API documentation.
            readOnly: true
            type: integer
        type: object
      statistics:
        description: These are raw performance numbers, such as IOPS latency and throughput.
          These numbers are aggregated across all nodes in the cluster and increase
          with the uptime of the cluster.
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This can
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      status:
        description: |
          Status information about the LUN.
        properties:
          container_state:
            description: |
              The state of the volume and aggregate that contain the LUN. LUNs are only available when their containers are available.
            enum:
            - online
            - aggregate_offline
            - volume_offline
            readOnly: true
            type: string
          mapped:
            description: |
              Reports if the LUN is mapped to one or more initiator groups.<br/>
              There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
            readOnly: true
            type: boolean
          read_only:
            description: |
              Reports if the LUN allows only read access.
            readOnly: true
            type: boolean
          state:
            description: |
              The state of the LUN. Normal states for a LUN are _online_ and _offline_. Other states indicate errors.
            enum:
            - foreign_lun_error
            - nvfail
            - offline
            - online
            - space_error
            example: online
            readOnly: true
            type: string
        readOnly: true
        type: object
      svm:
        description: |
          The SVM in which the LUN is located.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: |
          The unique identifier of the LUN.  The UUID is generated by ONTAP when the LUN is created.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  lun_map:
    description: |
      A LUN map is an association between a LUN and an initiator group. When a LUN is mapped to an initiator group, the initiator group's initiators are granted access to the LUN. The relationship between a LUN and an initiator group is many LUNs to many initiator groups.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      igroup:
        description: |
          The initiator group to which the LUN is mapped. Required in POST by supplying either the `igroup.uuid`, `igroup.name`, or both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          initiators:
            description: |
              The initiators that are members of the initiator group.
            items:
              description: |
                An initiator that is a member of the initiator group.
              example: iqn.1998-01.com.corp.iscsi:name1
              readOnly: true
              type: string
            readOnly: true
            type: array
          name:
            description: |
              The name of the initiator group. Valid in POST.
            example: igroup1
            type: string
            x-ntap-readCreate: true
          os_type:
            description: |
              The host operating system of the initiator group. All initiators in the group should be hosts of the same operating system.
            enum:
            - aix
            - hpux
            - hyper_v
            - linux
            - netware
            - openvms
            - solaris
            - vmware
            - windows
            - xen
            readOnly: true
            type: string
          protocol:
            description: |
              The protocols supported by the initiator group. This restricts the type of initiators that can be added to the initiator group.
            enum:
            - fcp
            - iscsi
            - mixed
            readOnly: true
            type: string
          uuid:
            description: |
              The unique identifier of the initiator group. Valid in POST.
            example: 1ad8544d-8cd1-91e0-9e1c-723478563412
            type: string
            x-ntap-readCreate: true
        type: object
      logical_unit_number:
        description: |
          The logical unit number assigned to the LUN when mapped to the specified initiator group. The number is used to identify the LUN to initiators in the initiator group when communicating through Fibre Channel Protocol or iSCSI. Optional in POST; if no value is provided, ONTAP assigns the lowest available value.
        example: 1
        maxValue: 4095
        minValue: 0
        type: integer
        x-ntap-readCreate: true
      lun:
        description: |
          The LUN to which the initiator group is mapped. Required in POST by supplying either the `lun.uuid`, `lun.name`, or both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The fully qualified path name of the LUN composed of a \"/vol\" prefix, the volume name, the (optional) qtree name, and file name of the LUN. Valid in POST.
            example: /vol/volume1/qtree1/lun1
            type: string
            x-ntap-readCreate: true
          node:
            description: "The LUN node.\n"
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name the LUN's node.\n"
                example: node1
                readOnly: true
                type: string
              uuid:
                description: |
                  The unique identifier of the LUN node.
                example: 1cf8aa42-8cd1-12e0-a11c-423468563412
                readOnly: true
                type: string
            readOnly: true
            type: object
          uuid:
            description: |
              The unique identifier of the LUN. Valid in POST.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
            x-ntap-readCreate: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  lun_map_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/lun_map'
        type: array
    type: object
  lun_reference:
    description: A reference to a LUN.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: |
          The fully qualified path name of the LUN composed of the "/vol" prefix, the volume name, the (optional) qtree name, and base name of the LUN. Valid in POST and PATCH.
        example: /vol/volume1/lun1
        type: string
      uuid:
        description: |
          The unique identifier of the LUN.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  lun_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/lun'
        type: array
    type: object
  mac_algorithm:
    description: MAC Algorithm.
    enum:
    - hmac_sha1
    - hmac_sha1_96
    - hmac_sha2_256
    - hmac_sha2_512
    - hmac_sha1_etm
    - hmac_sha1_96_etm
    - hmac_sha2_256_etm
    - hmac_sha2_512_etm
    - hmac_md5
    - hmac_md5_96
    - umac_64
    - umac_128
    - hmac_md5_etm
    - hmac_md5_96_etm
    - umac_64_etm
    - umac_128_etm
    example: hmac_sha1
    type: string
  maxdata_on_san:
    description: MAX Data application using SAN.
    properties:
      app_type:
        description: Type of the application that is being deployed on the L2.
        enum:
        - mongodb
        - oracle
        - san
        type: string
        x-ntap-readCreate: true
      application_components:
        description: The list of application components to be created.
        items:
          $ref: '#/definitions/maxdata_on_san_application_components'
        maxItems: 20
        minItems: 1
        type: array
      metadata:
        items:
          properties:
            key:
              description: Key to look up metadata associated with an application.
              type: string
              x-ntap-readCreate: true
            value:
              description: Value associated with the key.
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
        x-ntap-readCreate: true
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/maxdata_on_san_new_igroups'
        maxItems: 20
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      ocsm_url:
        description: The OnCommand System Manager URL for this application.
        readOnly: true
        type: string
      os_type:
        description: The name of the host OS running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
    required:
    - app_type
    - application_components
    - os_type
    type: object
  maxdata_on_san_application_components:
    description: The list of application components to be created.
    properties:
      file_system:
        default: m1fs
        description: Defines the type of file system that will be installed on this
          application component.
        enum:
        - generic
        - m1fs
        - xfs
        type: string
        x-ntap-readCreate: true
      host_management_url:
        description: The host management URL for this application component.
        readOnly: true
        type: string
      host_name:
        description: FQDN of the L2 host that contains the hot tier of this application
          component.
        type: string
        x-ntap-readCreate: true
      igroup_name:
        description: The name of the initiator group through which the contents of
          this application will be accessed. Modification of this parameter is a disruptive
          operation. All LUNs in the application component will be unmapped from the
          current igroup and re-mapped to the new igroup.
        maxLength: 96
        minLength: 1
        type: string
      lun_count:
        description: The number of LUNs in the application component.
        maximum: 100
        minimum: 1
        type: integer
      metadata:
        items:
          properties:
            key:
              description: Key to look up metadata associated with an application
                component.
              type: string
              x-ntap-readCreate: true
            value:
              description: Value associated with the key.
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
        x-ntap-readCreate: true
      name:
        description: The name of the application component.
        maxLength: 512
        minLength: 1
        type: string
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application component.
            enum:
            - 6_hourly
            - 15_minutely
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application component.
            enum:
            - 6_hourly
            - 15_minutely
            - hourly
            - none
            type: string
        type: object
      storage_service:
        properties:
          name:
            default: maxdata
            description: The storage service of the application component.
            enum:
            - extreme
            - maxdata
            - performance
            - value
            type: string
        type: object
      total_size:
        description: 'The total size of the application component, split across the
          member LUNs. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
        type: integer
    required:
    - name
    - host_name
    - igroup_name
    - lun_count
    - total_size
    type: object
  maxdata_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - vmware
        - windows
        - xen
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: iscsi
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  mongo_db_on_san:
    description: MongoDB using SAN.
    properties:
      dataset:
        properties:
          element_count:
            default: 8
            description: The number of storage elements (LUNs for SAN) of the database
              to maintain.  Must be an even number between 2 and 16.  Odd numbers
              will be rounded up to the next even number within range.
            maximum: 16
            minimum: 2
            type: integer
            x-ntap-readCreate: true
          replication_factor:
            default: 3
            description: The number of data bearing members of the replicaset, including
              1 primary and at least 1 secondary.
            maximum: 20
            minimum: 2
            type: integer
            x-ntap-readCreate: true
          size:
            description: 'The size of the database. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the database.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/mongo_db_on_san_new_igroups'
        maxItems: 20
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      os_type:
        default: linux
        description: The name of the host OS running the application.
        enum:
        - hyper_v
        - linux
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
      primary_igroup_name:
        description: The initiator group for the primary.
        maxLength: 96
        minLength: 1
        type: string
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      secondary_igroups:
        items:
          properties:
            name:
              description: The name of the initiator group for each secondary.
              maxLength: 96
              minLength: 1
              type: string
          type: object
        maxItems: 19
        minItems: 0
        type: array
    required:
    - dataset
    - primary_igroup_name
    type: object
  mongo_db_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - hyper_v
        - linux
        - solaris
        - vmware
        - windows
        - xen
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  name_mapping:
    description: Name mapping is used to map CIFS identities to UNIX identities, Kerberos
      identities to UNIX identities, and UNIX identities to CIFS identities. It needs
      this information to obtain user credentials and provide proper file access regardless
      of whether they are connecting from an NFS client or a CIFS client.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      client_match:
        description: |
          Client workstation IP Address which is matched when searching for the pattern.
            You can specify the value in any of the following formats:
          * As an IPv4 address with a subnet mask expressed as a number of bits; for instance, 10.1.12.0/24
          * As an IPv6 address with a subnet mask expressed as a number of bits; for instance, fd20:8b1e:b255:4071::/64
          * As an IPv4 address with a network mask; for instance, 10.1.16.0/255.255.255.0
          * As a hostname
        example: 10.254.101.111/28
        type: string
      direction:
        description: |
          Direction in which the name mapping is applied. The possible values are:
            * krb_unix  - Kerberos principal name to UNIX user name
            * win_unix  - Windows user name to UNIX user name
            * unix_win  - UNIX user name to Windows user name mapping
        enum:
        - win_unix
        - unix_win
        - krb_unix
        example: win_unix
        type: string
        x-ntap-readCreate: true
      index:
        description: Position in the list of name mappings.
        example: 1
        maximum: 2147483647
        minimum: 1
        type: integer
        x-ntap-readCreate: true
      pattern:
        description: Pattern used to match the name while searching for a name that
          can be used as a replacement. The pattern is a UNIX-style regular expression.
          Regular expressions are case-insensitive when mapping from Windows to UNIX,
          and they are case-sensitive for mappings from Kerberos to UNIX and UNIX
          to Windows.
        example: ENGCIFS_AD_USER
        maximum: 256
        minimum: 1
        type: string
      replacement:
        description: The name that is used as a replacement, if the pattern associated
          with this entry matches.
        example: unix_user1
        maximum: 256
        minimum: 1
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  name_mapping_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/name_mapping'
        type: array
    type: object
  name_servers:
    description: |
      The list of IP addresses of the DNS servers. Addresses can be either
      IPv4 or IPv6 addresses.
    example:
    - 10.224.65.20
    - 2001:db08:a0b:12f0::1
    items:
      type: string
    maxItems: 3
    type: array
  nas:
    description: A generic NAS application.
    properties:
      application_components:
        items:
          properties:
            flexcache:
              properties:
                origin:
                  properties:
                    component:
                      properties:
                        name:
                          description: Name of the source component.
                          type: string
                          x-ntap-readCreate: true
                      required:
                      - name
                      type: object
                      x-ntap-readCreate: true
                    svm:
                      properties:
                        name:
                          description: Name of the source SVM.
                          type: string
                          x-ntap-readCreate: true
                      required:
                      - name
                      type: object
                      x-ntap-readCreate: true
                  required:
                  - svm
                  - component
                  type: object
                  x-ntap-readCreate: true
              type: object
              x-ntap-readCreate: true
            name:
              description: The name of the application component.
              maxLength: 512
              minLength: 1
              type: string
            scale_out:
              description: Denotes a Flexgroup.
              enum:
              - false
              - true
              type: boolean
              x-ntap-readCreate: true
            share_count:
              description: The number of shares in the application component.
              maximum: 10
              minimum: 1
              type: integer
              x-ntap-readCreate: true
            storage_service:
              properties:
                name:
                  default: value
                  description: The storage service of the application component.
                  enum:
                  - extreme
                  - performance
                  - value
                  type: string
              type: object
            tiering:
              $ref: '#/definitions/nas_application_components_tiering'
            total_size:
              description: 'The total size of the application component, split across
                the member shares. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
              type: integer
          required:
          - name
          - share_count
          - total_size
          type: object
        maxItems: 10
        minItems: 1
        type: array
      cifs_access:
        description: The list of CIFS access controls.
        items:
          $ref: '#/definitions/app_cifs_access'
        type: array
        x-ntap-readCreate: true
      nfs_access:
        description: The list of NFS access controls.
        items:
          $ref: '#/definitions/app_nfs_access'
        type: array
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_policy:
            description: 'The snapshot policy to apply to each volume in the smart
              container. This property is only supported for smart containers. Usage:
              &lt;snapshot policy&gt;'
            type: string
            x-ntap-readCreate: true
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - application_components
    type: object
  nas_application_components_tiering:
    description: application-components.tiering
    properties:
      control:
        default: best_effort
        description: Storage tiering placement rules for the container(s)
        enum:
        - required
        - best_effort
        - disallowed
        type: string
        x-ntap-createOnly: true
      object_stores:
        items:
          properties:
            name:
              description: 'The name of the object-store to use. Usage: &lt;(size
                1..512)&gt;'
              maxLength: 512
              minLength: 1
              type: string
              x-ntap-createOnly: true
          type: object
        type: array
        x-ntap-createOnly: true
      policy:
        default: none
        description: The storage tiering type of the application component.
        enum:
        - all
        - auto
        - none
        - snapshot_only
        type: string
        x-ntap-readCreate: true
    type: object
  ndmp_addr_type:
    description: The different NDMP connection types.
    enum:
    - local
    - tcp
    type: string
  ndmp_auth_type:
    description: The different interface roles.
    enum:
    - plaintext
    - challenge
    - plaintext_sso
    type: string
  ndmp_connect:
    properties:
      address:
        description: Indicates the NDMP data connection address.
        type: string
      port:
        description: Indicates the NDMP data connection port.
        example: 18600
        type: integer
      type:
        $ref: '#/definitions/ndmp_addr_type'
        description: Indicates the NDMP data connection type.
        example: local
    type: object
  ndmp_data:
    properties:
      bytes_processed:
        description: Indicates the NDMP data bytes processed.
        example: 5000
        type: integer
      connection:
        $ref: '#/definitions/ndmp_connect'
        description: Indicates the NDMP connection attributes.
      operation:
        description: Indicates the NDMP data server operation.
        enum:
        - backup
        - restore
        - none
        example: backup
        type: string
      reason:
        $ref: '#/definitions/ndmp_reason'
        description: Indicates the reason for the NDMP data server halt.
        example: aborted
      state:
        $ref: '#/definitions/ndmp_state'
        description: Indicates the state of the NDMP data server.
        example: halted
    type: object
  ndmp_mover:
    properties:
      bytes_moved:
        description: Indicates the NDMP mover bytes moved.
        example: 645120
        type: integer
      connection:
        $ref: '#/definitions/ndmp_connect'
        description: Indicates the NDMP connection attributes.
      mode:
        $ref: '#/definitions/ndmp_mover_mode'
        description: Indicates the NDMP mover mode of operation.
        example: read
      reason:
        $ref: '#/definitions/ndmp_reason'
        description: Indicates the reason for the NDMP mover pause or halt.
        example: end_of_media
      state:
        $ref: '#/definitions/ndmp_state'
        description: Indicates the NDMP mover state.
        example: connected
    type: object
  ndmp_mover_mode:
    description: The modes of a NDMP mover instance.
    enum:
    - read
    - write
    - data
    - raw
    type: string
  ndmp_node:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_types:
        description: NDMP authentication types.
        example:
        - plaintext
        - challenge
        items:
          $ref: '#/definitions/ndmp_auth_type'
        type: array
      enabled:
        description: Is the NDMP service enabled?
        example: true
        type: boolean
      node:
        description: Storage system node
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      password:
        description: NDMP password. This can only be set and cannot be read back.
        type: string
        x-ntap-writeOnly: true
      user:
        description: NDMP user ID
        example: ndmp_user
        type: string
    type: object
  ndmp_node_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          $ref: '#/definitions/ndmp_node'
        type: array
    type: object
  ndmp_reason:
    description: If the NDMP mover or data server is in the paused or halted state,
      then this property provides additional information for the state.
    enum:
    - aborted
    - connection_closed
    - connect_error
    - end_of_file
    - end_of_media
    - end_of_window
    - internal_error
    - media_error
    - not_available
    - seek
    - successful
    type: string
  ndmp_scsi:
    properties:
      device_id:
        description: Indicates the NDMP SCSI device ID.
        type: string
      host_adapter:
        description: Indicates the NDMP SCSI host adapter.
        type: integer
      lun_id:
        description: Indicates the NDMP SCSI LUN ID.
        type: integer
      target_id:
        description: Indicates the NDMP SCSI target ID.
        type: integer
    type: object
  ndmp_session:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      backup_engine:
        description: Indicates the NDMP backup engine.
        enum:
        - dump
        - smtape
        type: string
      client_address:
        description: Indicates the NDMP client address.
        type: string
      client_port:
        description: Indicates the NDMP client port.
        type: integer
      data:
        $ref: '#/definitions/ndmp_data'
        description: Information about the NDMP data server.
      data_path:
        description: Indicates the NDMP backup or restore path.
        example: /vserver1/vol1
        type: string
      id:
        description: NDMP session identifier.
        type: string
      mover:
        $ref: '#/definitions/ndmp_mover'
        description: Information about the NDMP mover.
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      scsi:
        $ref: '#/definitions/ndmp_scsi'
        description: Information about the NDMP SCSI server.
      source_address:
        description: Indicates the NDMP local address on which connection was established.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      tape_device:
        description: Indicates the NDMP tape device.
        example: nrst0a
        type: string
      tape_mode:
        $ref: '#/definitions/ndmp_mover_mode'
        description: Indicates the NDMP tape device mode of operation.
        example: write
    type: object
  ndmp_session_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records.
        type: integer
      records:
        items:
          $ref: '#/definitions/ndmp_session'
        type: array
    type: object
  ndmp_state:
    description: The various states of the NDMP state machine during a backup or restore
      workflow.
    enum:
    - active
    - connected
    - halted
    - idle
    - listening
    - paused
    type: string
  ndmp_svm:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_types:
        description: NDMP authentication types.
        example:
        - plaintext
        - challenge
        items:
          $ref: '#/definitions/ndmp_auth_type'
        type: array
      enabled:
        description: Is the NDMP service enabled on the SVM?
        example: true
        type: boolean
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  ndmp_svm_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          $ref: '#/definitions/ndmp_svm'
        type: array
    type: object
  network_http_proxy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ipspace:
        description: Applies to both SVM and cluster-scoped objects. Either the UUID
          or name is supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      port:
        description: |
          The port number on which the HTTP proxy service is configured on the
          proxy server.
        example: 3128
        maximum: 65535
        minimum: 1
        type: integer
      scope:
        description: |
          Set to “svm” for proxy owned by an SVM. Otherwise, set to "cluster".
        enum:
        - svm
        - cluster
        readOnly: true
        type: string
      server:
        description: |
          The fully qualified domain name (FQDN) or IP address of the proxy server.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: |
          The UUID that uniquely identifies the HTTP proxy.
        readOnly: true
        type: string
    type: object
  network_http_proxy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        decription: Number of HTTP proxy records
        type: integer
      records:
        items:
          $ref: '#/definitions/network_http_proxy'
        type: array
    type: object
  network_route:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      destination:
        $ref: '#/definitions/ip_info'
      gateway:
        description: The IP address of the gateway router leading to the destination.
        example: 10.1.1.1
        type: string
      ipspace:
        description: Applies to both SVM and cluster-scoped objects. Either the UUID
          or name may be supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      scope:
        $ref: '#/definitions/network_scope_readonly'
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: The UUID that uniquely identifies the route.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  network_route_for_svm:
    properties:
      destination:
        $ref: '#/definitions/ip_info'
      gateway:
        description: The IP address of the gateway router leading to the destination.
        example: 10.1.1.1
        type: string
    type: object
  network_route_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        $ref: '#/definitions/error'
      num_records:
        description: Number of records
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/network_route'
        type: array
    type: object
  network_scope:
    description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to "cluster".
    enum:
    - svm
    - cluster
    type: string
  network_scope_readonly:
    description: Set to "svm" for interfaces owned by an SVM. Otherwise, set to "cluster".
    enum:
    - svm
    - cluster
    readOnly: true
    type: string
  nfs_clients:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      client_ip:
        default: 0.0.0.0
        description: |
          Specifies IP address of the client.
        type: string
      idle_duration:
        description: |
          Specifies an ISO-8601 format of date and time to retrieve the idle time duration in hours, minutes, and seconds format.
        example: P4DT84H30M5S
        type: string
      local_request_count:
        default: 0
        description: |
          A counter that tracks requests that are sent to the volume with fast-path to local node.
        type: integer
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      protocol:
        description: |
          The NFS protocol version over which client is accessing the volume. The following values are supported:
          * nfs - All NFS versions are considered
          * nfs3 - NFS version 3 protocol
          * nfs4 - NFS version 4 protocol
          * nfs4.1 - NFS version 4 minor version 1 protocol
        enum:
        - nfs
        - nfs3
        - nfs4
        - nfs4.1
        example: nfs3
        readOnly: true
        type: string
      remote_request_count:
        default: 0
        description: |
          A counter that tracks requests that are sent to the volume with slow-path to remote node.
        type: integer
      server_ip:
        default: 0.0.0.0
        description: |
          Specifies the IP address of the server.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  nfs_clients_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/nfs_clients'
        type: array
    type: object
  nfs_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        default: true
        description: |
          Specifies if the NFS service is administratively enabled.
        type: boolean
      metric:
        description: Historical performance numbers, such as IOPS latency and throughput,
          for SVM-NFS protocol.
        properties:
          v3:
            description: The NFSv3 operations
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              duration:
                description: |
                  The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
                enum:
                - PT15S
                - PT4M
                - PT30M
                - PT2H
                - P1D
                - PT5M
                example: PT15S
                readOnly: true
                type: string
              iops:
                description: The rate of I/O operations observed at the storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency:
                description: The round trip latency in microseconds observed at the
                  storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Any errors associated with the sample. For example, if
                  the aggregation of data over multiple nodes fails then any of the
                  partial errors might be returned, "ok" on success, or "error" on
                  any internal uncategorized failure. Whenever a sample collection
                  is missed but done at a later time, it is back filled to the previous
                  15 second timestamp and tagged with "backfilled_data". "Inconsistent_
                  delta_time" is encountered when the time between two collections
                  is not the same for all nodes. Therefore, the aggregated value might
                  be over or under inflated. "Negative_delta" is returned when an
                  expected monotonically increasing value has decreased in value.
                  "Inconsistent_old_data" is returned when one or more nodes do not
                  have the latest data.
                enum:
                - ok
                - error
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              throughput:
                description: The rate of throughput bytes per second observed at the
                  storage object.
                properties:
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      protocol:
        properties:
          v3_enabled:
            default: true
            description: Specifies whether NFSv3 protocol is enabled.
            type: boolean
          v40_enabled:
            default: false
            description: Specifies whether NFSv4.0 protocol is enabled.
            type: boolean
          v40_features:
            properties:
              acl_enabled:
                default: false
                description: Specifies whether NFSv4.0 ACLs is enabled.
                type: boolean
              read_delegation_enabled:
                default: false
                description: Specifies whether NFSv4.0 Read Delegation is enabled.
                type: boolean
              write_delegation_enabled:
                default: false
                description: Specifies whether NFSv4.0 Write Delegation is enabled.
                type: boolean
            type: object
          v41_enabled:
            default: false
            description: Specifies whether NFSv4.1 protocol is enabled.
            type: boolean
          v41_features:
            properties:
              acl_enabled:
                default: false
                description: Specifies whether NFSv4.1 ACLs is enabled.
                type: boolean
              pnfs_enabled:
                default: true
                description: Specifies whether NFSv4.1 Parallel NFS is enabled.
                type: boolean
              read_delegation_enabled:
                default: false
                description: Specifies whether NFSv4.1 Read Delegation is enabled.
                type: boolean
              write_delegation_enabled:
                default: false
                description: Specifies whether NFSv4.1 Write Delegation is enabled.
                type: boolean
            type: object
          v4_id_domain:
            default: defaultv4iddomain.com
            description: |
              Specifies the domain portion of the string form of user and group
              names as defined by the NFSv4 protocol.
            type: string
        type: object
      state:
        default: online
        description: |
          Specifies the state of the NFS service on the SVM. The following values are supported:
                    * online - NFS server is ready to accept client requests.
                    * offline - NFS server is not ready to accept client requests.
        enum:
        - online
        - offline
        readOnly: true
        type: string
      statistics:
        description: Realtime performance numbers, such as IOPS latency and throughput,
          for SVM-NFS protocol.
        properties:
          v3:
            description: The NFSv3 operations
            properties:
              iops_raw:
                description: The number of I/O operations observed at the storage
                  object. This should be used along with delta time to calculate the
                  rate of I/O operations per unit of time.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency_raw:
                description: The raw latency in microseconds observed at the storage
                  object. This should be divided by the raw IOPS value to calculate
                  the average latency per I/O operation.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Any errors associated with the sample. For example, if
                  the aggregation of data over multiple nodes fails then any of the
                  partial errors might be returned, "ok" on success, or "error" on
                  any internal uncategorized failure. Whenever a sample collection
                  is missed but done at a later time, it is back filled to the previous
                  15 second timestamp and tagged with "backfilled_data". "Inconsistent_delta_time"
                  is encountered when the time between two collections is not the
                  same for all nodes. Therefore, the aggregated value might be over
                  or under inflated. "Negative_delta" is returned when an expected
                  monotonically increasing value has decreased in value. "Inconsistent_old_data"
                  is returned when one or more nodes do not have the latest data.
                enum:
                - ok
                - error
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              throughput_raw:
                description: Throughput bytes observed at the storage object. This
                  should be used along with delta time to calculate the rate of throughput
                  bytes per unit of time.
                properties:
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      transport:
        properties:
          tcp_enabled:
            default: true
            description: |
              Specifies whether TCP transports are enabled on the server.
            type: boolean
          udp_enabled:
            default: true
            description: |
              Specifies whether UDP transports are enabled on the server.
            type: boolean
        type: object
      vstorage_enabled:
        default: false
        description: Specifies whether VMware vstorage feature is enabled.
        type: boolean
    type: object
  nfs_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of NFS Server Records
        type: integer
      records:
        items:
          $ref: '#/definitions/nfs_service'
        type: array
    type: object
  nis_domain:
    description: |
      The NIS domain to which this configuration belongs.
    maxLength: 64
    minLength: 1
    type: string
  nis_servers:
    description: |
      A list of hostnames or IP addresses of NIS servers used
      by the NIS domain configuration.
    items:
      maxLength: 255
      minLength: 1
      type: string
    maxItems: 10
    type: array
  nis_service:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      bound_servers:
        items:
          description: NIS Servers bound to an NIS Domain.
          maxLength: 255
          minLength: 1
          type: string
        readOnly: true
        type: array
      domain:
        description: |
          The NIS domain to which this configuration belongs.
        maxLength: 64
        minLength: 1
        type: string
      servers:
        description: |
          A list of hostnames or IP addresses of NIS servers used
          by the NIS domain configuration.
        items:
          maxLength: 255
          minLength: 1
          type: string
        maxItems: 10
        type: array
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  nis_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of NIS domain records.
        type: integer
      records:
        items:
          $ref: '#/definitions/nis_service'
        type: array
    type: object
  node:
    description: Complete node information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster_interface:
        description: The cluster network IP address of the node to be added.
        properties:
          ip:
            $ref: '#/definitions/node_setup_ip'
        type: object
        x-ntap-createOnly: true
      cluster_interfaces:
        items:
          description: Network interface
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            ip:
              description: IP information
              properties:
                address:
                  $ref: '#/definitions/ip_address_readonly'
              readOnly: true
              type: object
            name:
              description: The name of the interface.
              example: lif1
              type: string
            uuid:
              description: The UUID that uniquely identifies the interface.
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      controller:
        description: Controller information
        properties:
          flash_cache:
            description: A list of Flash-Cache devices. Only returned when requested
              by name.
            items:
              properties:
                capacity:
                  description: Size in bytes
                  example: 1024000000000
                  readOnly: true
                  type: integer
                firmware_version:
                  example: NA05
                  readOnly: true
                  type: string
                hardware_revision:
                  example: A1
                  readOnly: true
                  type: string
                model:
                  example: X1970A
                  readOnly: true
                  type: string
                part_number:
                  example: 119-00207
                  readOnly: true
                  type: string
                serial_number:
                  example: A22P5061550000187
                  readOnly: true
                  type: string
                slot:
                  example: 6-1
                  readOnly: true
                  type: string
                state:
                  enum:
                  - ok
                  - erasing
                  - erased
                  - failed
                  - removed
                  readOnly: true
                  type: string
              type: object
            readOnly: true
            type: array
          frus:
            description: List of FRUs on the node. Only returned when requested by
              name.
            items:
              properties:
                id:
                  readOnly: true
                  type: integer
                state:
                  enum:
                  - ok
                  - error
                  readOnly: true
                  type: string
                type:
                  enum:
                  - fan
                  - psu
                  - pcie
                  - disk
                  - nvs
                  - dimm
                  - controller
                  readOnly: true
                  type: string
              type: object
            type: array
          over_temperature:
            description: Specifies whether the hardware is currently operating outside
              of its recommended temperature range. The hardware shuts down if the
              temperature exceeds critical thresholds.
            enum:
            - over
            - normal
            readOnly: true
            type: string
        readOnly: true
        type: object
      date:
        description: |
          The current or "wall clock" time of the node in ISO-8601 date, time, and time zone format.
          The ISO-8601 date and time are localized based on the ONTAP cluster's timezone setting.
        example: 2019-04-17T11:49:26-04:00
        format: date-time
        readOnly: true
        type: string
      ha:
        properties:
          auto_giveback:
            description: Specifies whether giveback is automatically initiated when
              the node that owns the storage is ready.
            readOnly: true
            type: boolean
          enabled:
            default: true
            description: Specifies whether or not storage failover is enabled.
            readOnly: true
            type: boolean
          giveback:
            description: Represents the state of the node that is giving storage back
              to its HA partner.
            properties:
              failure:
                description: Indicates the failure code and message.
                properties:
                  code:
                    description: Message code
                    example: 852126
                    type: integer
                  message:
                    description: Detailed message based on the state.
                    example: Failed to initiate giveback. Run the "storage failover
                      show-giveback" command for more information.
                    type: string
                readOnly: true
                type: object
              state:
                enum:
                - nothing_to_giveback
                - not_attempted
                - in_progress
                - failed
                example: failed
                type: string
            readOnly: true
            type: object
          partners:
            description: Nodes in this node's High Availability (HA) group.
            items:
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: node1
                  type: string
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              readOnly: true
              type: object
            readOnly: true
            type: array
          ports:
            items:
              properties:
                number:
                  description: HA port number
                  example: 0
                  readOnly: true
                  type: unsigned
                state:
                  description: |
                    HA port state:
                    * <i>down</i> - Logical HA link is down.
                    * <i>initialized</i> - Logical HA link is initialized. The physical link is up, but the subnet manager hasn’t started to configure the port.
                    * <i>armed</i> - Logical HA link is armed. The physical link is up and the subnet manager started but did not yet complete configuring the port.
                    * <i>active</i> - Logical HA link is active.
                    * <i>reserved</i> - Logical HA link is active, but the physical link is down.
                  enum:
                  - down
                  - initialized
                  - armed
                  - active
                  - reserved
                  example: active
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            readOnly: true
            type: array
          takeover:
            description: This represents the state of the node that is taking over
              storage from its HA partner.
            properties:
              failure:
                description: Indicates the failure code and message.
                properties:
                  code:
                    description: Message code
                    example: 852130
                    type: integer
                  message:
                    description: Detailed message based on the state.
                    example: Failed to initiate takeover. Run the "storage failover
                      show-takeover" command for more information.
                    type: string
                readOnly: true
                type: object
              state:
                enum:
                - not_possible
                - not_attempted
                - in_takeover
                - in_progress
                - failed
                example: failed
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      location:
        example: rack 2 row 5
        type: string
      management_interface:
        description: The management interface of the node to be added. The subnet
          mask is set based on the management interface of the cluster or the managment
          interfaces of other nodes.
        properties:
          ip:
            $ref: '#/definitions/node_setup_ip'
        type: object
        x-ntap-createOnly: true
      management_interfaces:
        items:
          description: Network interface
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            ip:
              description: IP information
              properties:
                address:
                  $ref: '#/definitions/ip_address_readonly'
              readOnly: true
              type: object
            name:
              description: The name of the interface.
              example: lif1
              type: string
            uuid:
              description: The UUID that uniquely identifies the interface.
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      membership:
        description: |
          Possible values:
          * <i>available</i> - A node is detected on the internal cluster network and can be added to the cluster.  Nodes that have a membership of "available" are not returned when a GET request is called when the cluster exists. Provide a query on the "membership" property for <i>available</i> to scan for nodes on the cluster network. Nodes that have a membership of "available" are returned automatically before a cluster is created.
          * <i>joining</i> - Joining nodes are in the process of being added to the cluster. The node might be progressing through the steps to become a member or might have failed. The job to add the node or create the cluster provides details on the current progress of the node.
          * <i>member</i> - Nodes that are members have successfully joined the cluster.
        enum:
        - available
        - joining
        - member
        readOnly: true
        type: string
      model:
        example: FAS3070
        readOnly: true
        type: string
      name:
        example: node-01
        type: string
      serial_number:
        example: 4048820-60-9
        readOnly: true
        type: string
      service_processor:
        properties:
          dhcp_enabled:
            description: Set to "true" to use DHCP to configure an IPv4 interface.
            type: boolean
            x-ntap-readModify: true
          firmware_version:
            description: The version of firmware installed.
            readOnly: true
            type: string
          ipv4_interface:
            description: Object to setup an interface along with its default router.
            properties:
              address:
                description: IPv4 or IPv6 address
                example: 10.10.10.7
                type: string
              gateway:
                description: The IPv4 or IPv6 address of the default router.
                example: 10.1.1.1
                type: string
              netmask:
                $ref: '#/definitions/ip_netmask'
            type: object
          ipv6_interface:
            description: Object to setup an interface along with its default router.
            properties:
              address:
                description: IPv6 address
                example: fd20:8b1e:b255:5011:10:141:4:97
                type: string
              gateway:
                description: The IPv6 address of the default router.
                example: fd20:8b1e:b255:5011:10::1
                type: string
              netmask:
                description: The IPv6 netmask/prefix length. The default value is
                  64 with a valid range of 1 to 127.
                example: 64
                type: integer
            type: object
            x-ntap-readModify: true
          link_status:
            enum:
            - up
            - down
            - disabled
            - unknown
            readOnly: true
            type: string
          mac_address:
            readOnly: true
            type: string
          state:
            enum:
            - online
            - offline
            - degraded
            - rebooting
            - unknown
            - updating
            - node_offline
            - sp_daemon_offline
            readOnly: true
            type: string
        type: object
      state:
        description: |
          State of the node:
          * <i>up</i> - Node is up and operational.
          * <i>booting</i> - Node is booting up.
          * <i>down</i> - Node has stopped or is dumping core.
          * <i>taken_over</i> - Node has been taken over by its HA partner and is not yet waiting for giveback.
          * <i>waiting_for_giveback</i> - Node has been taken over by its HA partner and is waiting for the HA partner to giveback disks.
          * <i>degraded</i> - Node has one or more critical services offline.
          * <i>unknown</i> - Node or its HA partner cannot be contacted and there is no information on the node's state.
        enum:
        - up
        - booting
        - down
        - taken_over
        - waiting_for_giveback
        - degraded
        - unknown
        readOnly: true
        type: string
      system_id:
        example: 0537035403
        readOnly: true
        type: string
      system_machine_type:
        description: OEM system machine type.
        example: 7Y56-CTOWW1
        readOnly: true
        type: string
      uptime:
        description: The total time, in seconds, that the node has been up.
        example: 300536
        readOnly: true
        type: integer
      uuid:
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
      vendor_serial_number:
        description: OEM vendor serial number.
        example: 791603000068
        readOnly: true
        type: string
      version:
        description: This returns the cluster version information.  When the cluster
          has more than one node, the cluster version is equivalent to the lowest
          of generation, major, and minor versions on all nodes.
        properties:
          full:
            description: The full cluster version string.
            example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
            readOnly: true
            type: string
          generation:
            description: The generation portion of the version.
            example: 9
            readOnly: true
            type: integer
          major:
            description: The major portion of the version.
            example: 4
            readOnly: true
            type: integer
          minor:
            description: The minor portion of the version.
            example: 0
            readOnly: true
            type: integer
        readOnly: true
        type: object
      vm:
        properties:
          provider_type:
            description: Cloud provider where the VM is hosted.
            enum:
            - GoogleCloud
            - AWS_S3
            - Azure_Cloud
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  node_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: node1
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  node_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          description: Complete node information
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            cluster_interface:
              description: The cluster network IP address of the node to be added.
              properties:
                ip:
                  $ref: '#/definitions/node_setup_ip'
              type: object
              x-ntap-createOnly: true
            cluster_interfaces:
              items:
                description: Network interface
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  ip:
                    description: IP information
                    properties:
                      address:
                        $ref: '#/definitions/ip_address_readonly'
                    readOnly: true
                    type: object
                  name:
                    description: The name of the interface.
                    example: lif1
                    type: string
                  uuid:
                    description: The UUID that uniquely identifies the interface.
                    example: 1cd8a442-86d1-11e0-ae1c-123478563412
                    type: string
                readOnly: true
                type: object
              readOnly: true
              type: array
            controller:
              description: Controller information
              properties:
                flash_cache:
                  description: A list of Flash-Cache devices. Only returned when requested
                    by name.
                  items:
                    properties:
                      capacity:
                        description: Size in bytes
                        example: 1024000000000
                        readOnly: true
                        type: integer
                      firmware_version:
                        example: NA05
                        readOnly: true
                        type: string
                      hardware_revision:
                        example: A1
                        readOnly: true
                        type: string
                      model:
                        example: X1970A
                        readOnly: true
                        type: string
                      part_number:
                        example: 119-00207
                        readOnly: true
                        type: string
                      serial_number:
                        example: A22P5061550000187
                        readOnly: true
                        type: string
                      slot:
                        example: 6-1
                        readOnly: true
                        type: string
                      state:
                        enum:
                        - ok
                        - erasing
                        - erased
                        - failed
                        - removed
                        readOnly: true
                        type: string
                    type: object
                  readOnly: true
                  type: array
                frus:
                  description: List of FRUs on the node. Only returned when requested
                    by name.
                  items:
                    properties:
                      id:
                        readOnly: true
                        type: integer
                      state:
                        enum:
                        - ok
                        - error
                        readOnly: true
                        type: string
                      type:
                        enum:
                        - fan
                        - psu
                        - pcie
                        - disk
                        - nvs
                        - dimm
                        - controller
                        readOnly: true
                        type: string
                    type: object
                  type: array
                over_temperature:
                  description: Specifies whether the hardware is currently operating
                    outside of its recommended temperature range. The hardware shuts
                    down if the temperature exceeds critical thresholds.
                  enum:
                  - over
                  - normal
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            date:
              description: |
                The current or "wall clock" time of the node in ISO-8601 date, time, and time zone format.
                The ISO-8601 date and time are localized based on the ONTAP cluster's timezone setting.
              example: 2019-04-17T11:49:26-04:00
              format: date-time
              readOnly: true
              type: string
            ha:
              properties:
                auto_giveback:
                  description: Specifies whether giveback is automatically initiated
                    when the node that owns the storage is ready.
                  readOnly: true
                  type: boolean
                enabled:
                  default: true
                  description: Specifies whether or not storage failover is enabled.
                  readOnly: true
                  type: boolean
                giveback:
                  description: Represents the state of the node that is giving storage
                    back to its HA partner.
                  properties:
                    failure:
                      description: Indicates the failure code and message.
                      properties:
                        code:
                          description: Message code
                          example: 852126
                          type: integer
                        message:
                          description: Detailed message based on the state.
                          example: Failed to initiate giveback. Run the "storage failover
                            show-giveback" command for more information.
                          type: string
                      readOnly: true
                      type: object
                    state:
                      enum:
                      - nothing_to_giveback
                      - not_attempted
                      - in_progress
                      - failed
                      example: failed
                      type: string
                  readOnly: true
                  type: object
                partners:
                  description: Nodes in this node's High Availability (HA) group.
                  items:
                    properties:
                      _links:
                        properties:
                          self:
                            $ref: '#/definitions/href'
                        readOnly: true
                        type: object
                      name:
                        example: node1
                        type: string
                      uuid:
                        example: 1cd8a442-86d1-11e0-ae1c-123478563412
                        type: string
                    readOnly: true
                    type: object
                  readOnly: true
                  type: array
                ports:
                  items:
                    properties:
                      number:
                        description: HA port number
                        example: 0
                        readOnly: true
                        type: unsigned
                      state:
                        description: |
                          HA port state:
                          * <i>down</i> - Logical HA link is down.
                          * <i>initialized</i> - Logical HA link is initialized. The physical link is up, but the subnet manager hasn’t started to configure the port.
                          * <i>armed</i> - Logical HA link is armed. The physical link is up and the subnet manager started but did not yet complete configuring the port.
                          * <i>active</i> - Logical HA link is active.
                          * <i>reserved</i> - Logical HA link is active, but the physical link is down.
                        enum:
                        - down
                        - initialized
                        - armed
                        - active
                        - reserved
                        example: active
                        readOnly: true
                        type: string
                    readOnly: true
                    type: object
                  readOnly: true
                  type: array
                takeover:
                  description: This represents the state of the node that is taking
                    over storage from its HA partner.
                  properties:
                    failure:
                      description: Indicates the failure code and message.
                      properties:
                        code:
                          description: Message code
                          example: 852130
                          type: integer
                        message:
                          description: Detailed message based on the state.
                          example: Failed to initiate takeover. Run the "storage failover
                            show-takeover" command for more information.
                          type: string
                      readOnly: true
                      type: object
                    state:
                      enum:
                      - not_possible
                      - not_attempted
                      - in_takeover
                      - in_progress
                      - failed
                      example: failed
                      type: string
                  readOnly: true
                  type: object
              readOnly: true
              type: object
            location:
              example: rack 2 row 5
              type: string
            management_interface:
              description: The management interface of the node to be added. The subnet
                mask is set based on the management interface of the cluster or the
                managment interfaces of other nodes.
              properties:
                ip:
                  $ref: '#/definitions/node_setup_ip'
              type: object
              x-ntap-createOnly: true
            management_interfaces:
              items:
                description: Network interface
                properties:
                  _links:
                    properties:
                      self:
                        $ref: '#/definitions/href'
                    readOnly: true
                    type: object
                  ip:
                    description: IP information
                    properties:
                      address:
                        $ref: '#/definitions/ip_address_readonly'
                    readOnly: true
                    type: object
                  name:
                    description: The name of the interface.
                    example: lif1
                    type: string
                  uuid:
                    description: The UUID that uniquely identifies the interface.
                    example: 1cd8a442-86d1-11e0-ae1c-123478563412
                    type: string
                readOnly: true
                type: object
              readOnly: true
              type: array
            membership:
              description: |
                Possible values:
                * <i>available</i> - A node is detected on the internal cluster network and can be added to the cluster.  Nodes that have a membership of "available" are not returned when a GET request is called when the cluster exists. Provide a query on the "membership" property for <i>available</i> to scan for nodes on the cluster network. Nodes that have a membership of "available" are returned automatically before a cluster is created.
                * <i>joining</i> - Joining nodes are in the process of being added to the cluster. The node might be progressing through the steps to become a member or might have failed. The job to add the node or create the cluster provides details on the current progress of the node.
                * <i>member</i> - Nodes that are members have successfully joined the cluster.
              enum:
              - available
              - joining
              - member
              readOnly: true
              type: string
            model:
              example: FAS3070
              readOnly: true
              type: string
            name:
              example: node-01
              type: string
            serial_number:
              example: 4048820-60-9
              readOnly: true
              type: string
            service_processor:
              properties:
                dhcp_enabled:
                  description: Set to "true" to use DHCP to configure an IPv4 interface.
                  type: boolean
                  x-ntap-readModify: true
                firmware_version:
                  description: The version of firmware installed.
                  readOnly: true
                  type: string
                ipv4_interface:
                  description: Object to setup an interface along with its default
                    router.
                  properties:
                    address:
                      description: IPv4 or IPv6 address
                      example: 10.10.10.7
                      type: string
                    gateway:
                      description: The IPv4 or IPv6 address of the default router.
                      example: 10.1.1.1
                      type: string
                    netmask:
                      $ref: '#/definitions/ip_netmask'
                  type: object
                ipv6_interface:
                  description: Object to setup an interface along with its default
                    router.
                  properties:
                    address:
                      description: IPv6 address
                      example: fd20:8b1e:b255:5011:10:141:4:97
                      type: string
                    gateway:
                      description: The IPv6 address of the default router.
                      example: fd20:8b1e:b255:5011:10::1
                      type: string
                    netmask:
                      description: The IPv6 netmask/prefix length. The default value
                        is 64 with a valid range of 1 to 127.
                      example: 64
                      type: integer
                  type: object
                  x-ntap-readModify: true
                link_status:
                  enum:
                  - up
                  - down
                  - disabled
                  - unknown
                  readOnly: true
                  type: string
                mac_address:
                  readOnly: true
                  type: string
                state:
                  enum:
                  - online
                  - offline
                  - degraded
                  - rebooting
                  - unknown
                  - updating
                  - node_offline
                  - sp_daemon_offline
                  readOnly: true
                  type: string
              type: object
            state:
              description: |
                State of the node:
                * <i>up</i> - Node is up and operational.
                * <i>booting</i> - Node is booting up.
                * <i>down</i> - Node has stopped or is dumping core.
                * <i>taken_over</i> - Node has been taken over by its HA partner and is not yet waiting for giveback.
                * <i>waiting_for_giveback</i> - Node has been taken over by its HA partner and is waiting for the HA partner to giveback disks.
                * <i>degraded</i> - Node has one or more critical services offline.
                * <i>unknown</i> - Node or its HA partner cannot be contacted and there is no information on the node's state.
              enum:
              - up
              - booting
              - down
              - taken_over
              - waiting_for_giveback
              - degraded
              - unknown
              readOnly: true
              type: string
            system_id:
              example: 0537035403
              readOnly: true
              type: string
            system_machine_type:
              description: OEM system machine type.
              example: 7Y56-CTOWW1
              readOnly: true
              type: string
            uptime:
              description: The total time, in seconds, that the node has been up.
              example: 300536
              readOnly: true
              type: integer
            uuid:
              example: 4ea7a442-86d1-11e0-ae1c-123478563412
              format: uuid
              readOnly: true
              type: string
            vendor_serial_number:
              description: OEM vendor serial number.
              example: 791603000068
              readOnly: true
              type: string
            version:
              description: This returns the cluster version information.  When the
                cluster has more than one node, the cluster version is equivalent
                to the lowest of generation, major, and minor versions on all nodes.
              properties:
                full:
                  description: The full cluster version string.
                  example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
                  readOnly: true
                  type: string
                generation:
                  description: The generation portion of the version.
                  example: 9
                  readOnly: true
                  type: integer
                major:
                  description: The major portion of the version.
                  example: 4
                  readOnly: true
                  type: integer
                minor:
                  description: The minor portion of the version.
                  example: 0
                  readOnly: true
                  type: integer
              readOnly: true
              type: object
            vm:
              properties:
                provider_type:
                  description: Cloud provider where the VM is hosted.
                  enum:
                  - GoogleCloud
                  - AWS_S3
                  - Azure_Cloud
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          type: object
        type: array
    type: object
  node_setup_ip:
    description: The IP configuration for cluster setup.
    properties:
      address:
        $ref: '#/definitions/ip_address'
    type: object
    x-ntap-createOnly: true
  nsswitch_source:
    description: Source location for a name service
    enum:
    - files
    - dns
    - ldap
    - nis
    type: string
  ntp_key:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      digest_type:
        description: |
          The type of cryptographic hash used to create and verify the NTP's message authentication code appended to each NTP packet header.
        enum:
        - sha1
        example: sha1
        type: string
      id:
        description: |
          NTP symmetric authentication key identifier or index number (ID). This ID is included
          in the NTP cryptographic hash encoded header.
        example: 10
        maximum: 65535
        minimum: 1
        type: integer
        x-ntap-readCreate: true
      value:
        description: |
          A hexadecimal digit string that represents the cryptographic key that is shared with the remote NTP server.
          The current expected length is 40 characters.
          </br>
          Use the cryptographic key and key ID to create a unique hash value used to authenticate the rest of the NTP data.
        example: da39a3ee5e6b4b0d3255bfef95601890afd80709
        type: string
    type: object
  ntp_key_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: |
          NTP symmetric authentication key identifier or index number (ID). This ID,
          the type of cryptographic hash, and the cryptographic hash value are all
          provided by the remote NTP server.
        example: 10
        maximum: 65535
        minimum: 1
        type: integer
    type: object
  ntp_key_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/ntp_key'
        type: array
    type: object
  ntp_server:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_enabled:
        default: false
        description: Set NTP symmetric authentication on (true) or off (false).
        example: true
        type: boolean
        x-ntap-readModify: true
      key:
        $ref: '#/definitions/ntp_key_reference'
      server:
        description: NTP server host name, IPv4, or IPv6 address.
        example: time.nist.gov
        type: string
        x-ntap-readCreate: true
      version:
        default: auto
        description: NTP protocol version for server. Valid versions are 3, 4, or
          auto.
        enum:
        - '3'
        - '4'
        - auto
        example: auto
        type: string
    type: object
  ntp_server_list:
    description: Host name, IPv4 address, or IPv6 address for the external NTP time
      servers.
    example:
    - time.nist.gov
    - 10.98.19.20
    - 2610:20:6F15:15::27
    items:
      type: string
    type: array
    x-ntap-readCreate: true
  ntp_server_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        example: 3
        type: integer
      records:
        items:
          $ref: '#/definitions/ntp_server'
        type: array
    type: object
  nvme_interface:
    description: |
      NVMe interfaces are network interfaces configured to support an NVMe over Fabrics (NVMe-oF) protocol. The NVMe interfaces are Fibre Channel interfaces supporting an NVMe-oF data protocol. Regardless of the underlying physical and data protocol, NVMe interfaces are treated equally for host-side application configuration. This endpoint provides a consolidated view of all NVMe interfaces for the purpose of configuring host-side applications.<br/>
      NVMe interfaces must be created using the protocol-specific endpoints for Fibre Channel interfaces. See [`POST /network/fc/interfaces`](#/networking/fc_interface_create). After creation, the interfaces are available via this interface.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        description: |
          The administrative state of the NVMe interface.
        readOnly: true
        type: boolean
      fc_interface:
        description: |
          The attributes specific to a Fibre Channel-based NVMe interface.<br/>
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          port:
            description: |
              An FC port is the physical port of an FC adapter on a cluster node that can be connected to an FC network.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name of the FC port.\n"
                example: 0a
                type: string
              node:
                description: |
                  The node on which the FC port is located.
                properties:
                  name:
                    description: |
                      The name of the node on which the FC port is located.
                    example: node1
                    type: string
                type: object
              uuid:
                description: |
                  The unique identifier of the FC port.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            readOnly: true
            type: object
          wwnn:
            description: |
              The WWNN (world wide node name) of the Fibre Channel NVMe interface.
            example: 20:00:00:50:56:b4:13:a9
            readOnly: true
            type: string
          wwpn:
            description: |
              The WWPN (world wide port name) of the Fibre Channel NVMe interface.
            example: 20:00:00:50:56:b4:13:a8
            readOnly: true
            type: string
        readOnly: true
        type: object
      name:
        description: |
          The name of the NVMe interface.
        example: lif1
        readOnly: true
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
      transport_address:
        description: |
          The transport address of the NVMe interface.
        example: nn-0x200a00a0989062da:pn-0x200100a0989062da
        readOnly: true
        type: string
      uuid:
        description: |
          The unique identifier of the NVMe interface.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    readOnly: true
    type: object
  nvme_interface_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_interface'
        type: array
    type: object
  nvme_namespace:
    description: |
      An NVMe namespace is a collection of addressable logical blocks presented to hosts connected to the storage virtual machine using the NVMe over Fabrics protocol.<br/>
      In ONTAP, an NVMe namespace is located within a volume. Optionally, it can be located within a qtree in a volume.<br/>
      An NVMe namespace is created to a specified size using thin or thick provisioning as determined by the volume on which it is created. NVMe namespaces support being cloned. An NVMe namespace cannot be renamed, resized, or moved to a different volume. NVMe namespaces do not support the assignment of a QoS policy for performance management, but a QoS policy can be assigned to the volume containing the namespace. See the NVMe namespace object model to learn more about each of the properties supported by the NVMe namespace REST API.<br/>
      An NVMe namespace must be mapped to an NVMe subsystem to grant access to the subsystem's hosts. Hosts can then access the NVMe namespace and perform I/O using the NVMe over Fabrics protocol.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      auto_delete:
        default: false
        description: |
          This property marks the NVMe namespace for auto deletion when the volume containing the namespace runs out of space. This is most commonly set on namespace clones.<br/>
          When set to _true_, the NVMe namespace becomes eligible for automatic deletion when the volume runs out of space. Auto deletion only occurs when the volume containing the namespace is also configured for auto deletion and free space in the volume decreases below a particular threshold.<br/>
          This property is optional in POST and PATCH. The default value for a new NVMe namespace is _false_.<br/>
          There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        type: boolean
      clone:
        description: |
          This sub-object is used in POST to create a new NVMe namespace as a clone of an existing namespace, or PATCH to overwrite an existing namespace as a clone of another. Setting a property in this sub-object indicates that a namespace clone is desired.<br/>
          When used in a PATCH, the patched NVMe namespace's data is over-written as a clone of the source and the following properties are preserved from the patched namespace unless otherwise specified as part of the PATCH: `auto_delete` (unless specified in the request), `subsystem_map`, `status.state`, and `uuid`.
        properties:
          source:
            description: |
              The source NVMe namespace for a namespace clone operation. This can be specified using property `clone.source.uuid` or `clone.source.name`. If both properties are supplied, they must refer to the same namespace.<br/>
              Valid in POST to create a new NVMe namespace as a clone of the source.<br/>
              Valid in PATCH to overwrite an existing NVMe namespace's data as a clone of another.
            properties:
              name:
                description: |
                  The fully qualified path name of the clone source NVMe namespace composed of a "/vol" prefix, the volume name, the (optional) qtree name and base name of the namespace. Valid in POST and PATCH.
                example: /vol/volume1/namespace1
                type: string
                x-ntap-writeOnly: true
              uuid:
                description: |
                  The unique identifier of the clone source NVMe namespace. Valid in POST and PATCH.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
                x-ntap-writeOnly: true
            type: object
            x-ntap-writeOnly: true
        type: object
        x-ntap-writeOnly: true
      comment:
        description: |
          A configurable comment available for use by the administrator. Valid in POST and PATCH.
        maxLength: 254
        minLength: 0
        type: string
      create_time:
        description: The time the NVMe namespace was created.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      enabled:
        description: |
          The enabled state of the NVMe namespace. Certain error conditions cause the namespace to become disabled. If the namespace is disabled, you can check the `state` property to determine what error disabled the namespace. An NVMe namespace is enabled automatically when it is created.
        readOnly: true
        type: boolean
      location:
        description: |
          The location of the NVMe namespace within the ONTAP cluster. Valid in POST.<br/>
          NVMe namespaces do not support rename, or movement between volumes.
        properties:
          namespace:
            description: |
              The base name component of the NVMe namespace. Valid in POST.<br/>
              If properties `name` and `location.namespace` are specified in the same request, they must refer to the base name.<br/>
              NVMe namespaces do not support rename.
            example: namespace1
            type: string
            x-ntap-readCreate: true
          qtree:
            description: |
              The qtree in which the NVMe namespace is optionally located. Valid in POST.<br/>
              If properties `name` and `location.qtree.name` and/or `location.qtree.uuid` are specified in the same request, they must refer to the same qtree.<br/>
              NVMe namespaces do not support rename.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              id:
                description: |
                  The identifier for the qtree, unique within the qtree's volume.
                example: 1
                maximum: 4994
                minimum: 0
                type: integer
              name:
                description: The name of the qtree.
                example: qt1
                type: string
            type: object
            x-ntap-readCreate: true
          volume:
            description: |
              The volume in which the NVMe namespace is located. Valid in POST.<br/>
              If properties `name` and `location.volume.name` and/or `location.volume.uuid` are specified in the same request, they must refer to the same volume.<br/>
              NVMe namespaces do not support movement between volumes.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: The name of the volume.
                example: volume1
                type: string
              uuid:
                description: Unique identifier for the volume. This corresponds to
                  the instance-uuid that is exposed in the CLI and ONTAPI. It does
                  not change due to a volume move.
                example: 028baa66-41bd-11e9-81d5-00a0986138f7
                type: string
            type: object
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      name:
        description: |
          The fully qualified path name of the NVMe namespace composed of a "/vol" prefix, the volume name, the (optional) qtree name and base name of the namespace. Valid in POST.<br/>
          NVMe namespaces do not support rename, or movement between volumes.
        example: /vol/volume1/qtree1/namespace1
        type: string
        x-ntap-readCreate: true
      os_type:
        description: |
          The operating system type of the NVMe namespace.<br/>
          Required in POST when creating an NVMe namespace that is not a clone of another. Disallowed in POST when creating a namespace clone.
        enum:
        - linux
        - vmware
        - windows
        type: string
        x-ntap-readCreate: true
      space:
        description: |
          The storage space related properties of the NVMe namespace.
        properties:
          block_size:
            default: 4096
            description: |
              The size of blocks in the namespace in bytes.<br/>
              Valid in POST when creating an NVMe namespace that is not a clone of another. Disallowed in POST when creating a namespace clone.
               Valid in POST.
            enum:
            - 512
            - 4096
            type: integer
            x-ntap-readCreate: true
          guarantee:
            description: |
              Properties that request and report the space guarantee for the NVMe namespace.
            properties:
              requested:
                description: |
                  The requested space reservation policy for the NVMe namespace. If _true_, a space reservation is requested for the namespace; if _false_, the namespace is thin provisioned. Guaranteeing a space reservation request for a namespace requires that the volume in which the namespace resides also be space reserved and that the fractional reserve for the volume be 100%.<br/>
                  The space reservation policy for an NVMe namespace is determined by ONTAP.
                readOnly: true
                type: boolean
              reserved:
                description: |
                  Reports if the NVMe namespace is space guaranteed.<br/>
                  This property is _true_ if a space guarantee is requested and the containing volume and aggregate support the request. This property is _false_ if a space guarantee is not requested or if a space guarantee is requested and either the containing volume and aggregate do not support the request.
                readOnly: true
                type: boolean
            readOnly: true
            type: object
          size:
            description: |
              The total provisioned size of the NVMe namespace.<br/>
              NVMe namespaces do not support resize.<br/>
              For more information, see _Size properties_ in the _docs_ section of the ONTAP REST API documentation.
            example: 1073741824
            type: integer
            x-ntap-readCreate: true
          used:
            description: |
              The amount of space consumed by the main data stream of the NVMe namespace.<br/>
              This value is the total space consumed in the volume by the NVMe namespace, including filesystem overhead, but excluding prefix and suffix streams. Due to internal filesystem overhead and the many ways NVMe filesystems and applications utilize blocks within a namespace, this value does not necessarily reflect actual consumption/availability from the perspective of the filesystem or application. Without specific knowledge of how the namespace blocks are utilized outside of ONTAP, this property should not be used and an indicator for an out-of-space condition.<br/>
              For more information, see _Size properties_ in the _docs_ section of the ONTAP REST API documentation.
            readOnly: true
            type: integer
        type: object
        x-ntap-readCreate: true
      status:
        description: |
          Status information about the NVMe namespace.
        properties:
          container_state:
            description: |
              The state of the volume and aggregate that contain the NVMe namespace. Namespaces are only available when their containers are available.
            enum:
            - online
            - aggregate_offline
            - volume_offline
            readOnly: true
            type: string
          mapped:
            description: |
              Reports if the NVMe namespace is mapped to an NVMe subsystem.<br/>
              There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
            readOnly: true
            type: boolean
          read_only:
            description: |
              Reports if the NVMe namespace allows only read access.
            readOnly: true
            type: boolean
          state:
            description: |
              The state of the NVMe namespace. Normal states for a namespace are _online_ and _offline_. Other states indicate errors.
            enum:
            - nvfail
            - offline
            - online
            - space_error
            example: online
            readOnly: true
            type: string
        readOnly: true
        type: object
      subsystem_map:
        description: |
          The NVMe subsystem with which the NVMe namespace is associated. A namespace can be mapped to zero (0) or one (1) subsystems.<br/>
          There is an added cost to retrieving property values for `subsystem_map`. They are not populated for either a collection GET or an instance GET unless explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          anagrpid:
            description: |
              The Asymmetric Namespace Access Group ID (ANAGRPID) of the NVMe namespace.<br/>
              The format for an ANAGRPID is 8 hexadecimal digits (zero-filled) followed by a lower case "h".
            example: 00103050h
            readOnly: true
            type: string
          nsid:
            description: |
              The NVMe namespace identifier. This is an identifier used by an NVMe controller to provide access to the NVMe namespace.<br/>
              The format for an NVMe namespace identifier is 8 hexadecimal digits (zero-filled) followed by a lower case "h".
            example: 00000001h
            readOnly: true
            type: string
          subsystem:
            description: |
              The NVMe subsystem to which the NVMe namespace is mapped.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: |
                  The name of the NVMe subsystem.
                maxLength: 96
                minLength: 1
                type: string
              uuid:
                description: |
                  The unique identifier of the NVMe subsystem.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            readOnly: true
            type: object
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: |
          The unique identifier of the NVMe namespace.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  nvme_namespace_reference:
    description: A reference to a namespace.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: |
          The fully qualified path name of the NVMe namespace composed from the volume name, qtree name and base name of the namespace.
        example: /vol/volume1/namespace1
        type: string
      uuid:
        description: The unique identifier of the NVMe namespace.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  nvme_namespace_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_namespace'
        type: array
    type: object
  nvme_service:
    description: |
      A Non-Volatile Memory Express (NVMe) service defines the properties of the NVMe controller target for an SVM. There can be at most one NVMe service for an SVM. An SVM's NVMe service must be created before NVMe host initiators can connect to the SVM.<br/>
      An NVMe service is identified by the UUID of its SVM.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        default: true
        description: |
          The administrative state of the NVMe service. The NVMe service can be disabled to block all NVMe connectivity to the SVM.<br/>
          This is optional in POST and PATCH. The default setting is _true_ (enabled) in POST.
        type: boolean
      metric:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      statistics:
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This should be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This should be divided by the raw IOPS value to calculate the average
              latency per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This should
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  nvme_service_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_service'
        type: array
    type: object
  nvme_subsystem:
    description: |
      An NVMe subsystem maintains configuration state and namespace access control for a set of NVMe-connected hosts.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: |
          A configurable comment for the NVMe subsystem. Optional in POST and PATCH.
        maxLength: 255
        minLength: 0
        type: string
      delete_on_unmap:
        default: false
        description: |
          An option that causes the subsystem to be deleted when the last subsystem map associated with it is deleted. This property defaults to _false_ when the subsystem is created.
        type: boolean
      hosts:
        descriptions: |
          The NVMe hosts configured for access to the NVMe subsystem. Optional in POST.
        items:
          properties:
            nqn:
              description: |
                The NVMe qualified name (NQN) used to identify the NVMe storage target.
              example: nqn.1992-01.example.com:string
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
        x-ntap-readCreate: true
      io_queue:
        description: |
          The properties of the submission queue used to submit I/O commands for execution by the NVMe controller.
        properties:
          default:
            description: |
              The default I/O queue parameters inherited by NVMe hosts in the NVMe subsystem.
            properties:
              count:
                default: 4
                description: |
                  The number of host I/O queue pairs.
                example: 4
                maximum: 15
                minimum: 1
                readOnly: true
                type: integer
              depth:
                default: 32
                description: "The host I/O queue depth.\n"
                example: 16
                maximum: 128
                minimum: 16
                readOnly: true
                type: integer
            readOnly: true
            type: object
        readOnly: true
        type: object
      name:
        description: |
          The name of the NVMe subsystem. Once created, an NVMe subsystem cannot be renamed. Required in POST.
        example: subsystem1
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-readCreate: true
      os_type:
        description: |
          The host operating system of the NVMe subsystem's hosts. Required in POST.
        enum:
        - linux
        - vmware
        - windows
        type: string
        x-ntap-readCreate: true
      serial_number:
        description: |
          The serial number of the NVMe subsystem.
        example: wCVsgFMiuMhVAAAAAAAB
        maxLength: 20
        minLength: 20
        readOnly: true
        type: string
      subsystem_maps:
        description: |
          The NVMe namespaces mapped to the NVMe subsystem.<br/>
          There is an added cost to retrieving property values for `subsystem_maps`. They are not populated for either a collection GET or an instance GET unless explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        items:
          description: |
            An NVMe namespace mapped to the NVMe subsystem.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            anagrpid:
              description: |
                The Asymmetric Namespace Access Group ID (ANAGRPID) of the NVMe namespace.<br/>
                The format for an ANAGRPIP is 8 hexadecimal digits (zero-filled) followed by a lower case "h".
              example: 00103050h
              readOnly: true
              type: string
            namespace:
              description: |
                An NVMe namespace mapped to the NVMe subsystem.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: |
                    The name of the NVMe namespace.
                  example: /vol/vol1/namespace1
                  readOnly: true
                  type: string
                uuid:
                  description: |
                    The unique identifier of the NVMe namespace.
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  readOnly: true
                  type: string
              readOnly: true
              type: object
            nsid:
              description: |
                The NVMe namespace identifier. This is an identifier used by an NVMe controller to provide access to the NVMe namespace.<br/>
                The format for an NVMe namespace identifier is 8 hexadecimal digits (zero-filled) followed by a lower case "h".
              example: 00000001h
              readOnly: true
              type: string
          readOnly: true
          type: object
        readOnly: true
        type: array
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      target_nqn:
        description: |
          The NVMe qualified name (NQN) used to identify the NVMe storage target.
        example: nqn.1992-01.example.com:string
        maxLength: 223
        minLength: 1
        readOnly: true
        type: string
      uuid:
        description: |
          The unique identifier of the NVMe subsystem.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  nvme_subsystem_controller:
    description: |
      A Non-Volatile Memory Express (NVMe) subsystem controller represents a connection between a host and a storage solution.<br/>
      An NVMe subsystem controller is identified by the NVMe subsystem UUID and the controller ID.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      admin_queue:
        properties:
          depth:
            description: |
              The depth of the admin queue for the controller.
            readOnly: true
            type: integer
        readOnly: true
        type: object
      host:
        description: |
          Properties of the connected host.
        properties:
          id:
            description: |
              The host identifier registered with the controller.
            example: b8546ca6097349e5b1558dc154fc073b
            readOnly: true
            type: string
          nqn:
            description: |
              The NVMe qualified name of the host.
            example: nqn.2014-08.org.nvmexpress:uuid:c2846cb1-89d2-4020-a3b0-71ce907b4eef
            maxLength: 223
            minLength: 1
            readOnly: true
            type: string
          transport_address:
            description: |
              The transport address of the host.
            example: nn-0x20000090fae00806:pn-0x10000090fae00806
            readOnly: true
            type: string
        readOnly: true
        type: object
      id:
        description: |
          The identifier of the subsystem controller. This field consists of 4 zero-filled hexadecimal digits followed by an 'h'.
        example: 0040h
        readOnly: true
        type: string
      interface:
        description: |
          The logical interface through which the host is connected.
        properties:
          name:
            description: |
              The name of the logical interface.
            example: lif1
            readOnly: true
            type: string
          transport_address:
            description: |
              The transport address of the logical interface.
            example: nn-0x200400a0989a1c8d:pn-0x200500a0989a1c8d
            readOnly: true
            type: string
          uuid:
            description: |
              The unique identifier of the logical interface.
            example: fa1c5941-2593-11e9-94c4-00a0989a1c8e
            readOnly: true
            type: string
        readOnly: true
        type: object
      io_queue:
        description: |
          Properties of the I/O queues available to the controller.
        properties:
          count:
            description: |
              The number of I/O queues available to the controller.
            readOnly: true
            type: integer
          depth:
            description: "The depths of the I/O queues.\n"
            items:
              description: "The depth of each I/O queue.\n"
              readOnly: true
              type: integer
            type: array
        readOnly: true
        type: object
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      subsystem:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The name of the NVMe subsystem.
            maxLength: 96
            minLength: 1
            type: string
          uuid:
            description: |
              The unique identifier of the NVMe subsystem.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  nvme_subsystem_controller_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: "Number of records.\n"
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_subsystem_controller'
        type: array
    type: object
  nvme_subsystem_host:
    description: |
      The NVMe host provisioned to access NVMe namespaces mapped to a subsystem.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      io_queue:
        description: |
          The properties of the submission queue used to submit I/O commands for execution by the NVMe controller.
        properties:
          count:
            description: |
              The number of I/O queue pairs. The default value is inherited from the owning NVMe subsystem.
            example: 4
            maximum: 15
            minimum: 1
            readOnly: true
            type: integer
          depth:
            description: |
              The I/O queue depth. The default value is inherited from the owning NVMe subsystem.
            example: 32
            maximum: 128
            minimum: 16
            readOnly: true
            type: integer
        readOnly: true
        type: object
      nqn:
        description: |
          The NVMe qualified name (NQN) used to identify the NVMe storage target. Not allowed in POST when the `records` property is used.
        example: nqn.1992-01.example.com:string
        type: string
        x-ntap-readCreate: true
      records:
        description: |
          An array of NVMe hosts specified to add multiple NVMe hosts to an NVMe subsystem in a single API call. Valid in POST only.
        items:
          description: |
            The NVMe host provisioned to access NVMe namespaces mapped to a subsystem.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            io_queue:
              description: |
                The properties of the submission queue used to submit I/O commands for execution by the NVMe controller.
              properties:
                count:
                  description: |
                    The number of I/O queue pairs. The default value is inherited from the owning NVMe subsystem.
                  example: 4
                  maximum: 15
                  minimum: 1
                  readOnly: true
                  type: integer
                depth:
                  description: |
                    The I/O queue depth. The default value is inherited from the owning NVMe subsystem.
                  example: 32
                  maximum: 128
                  minimum: 16
                  readOnly: true
                  type: integer
              readOnly: true
              type: object
            nqn:
              description: |
                The NVMe qualified name (NQN) used to identify the NVMe storage target. Not allowed in POST when the `records` property is used.
              example: nqn.1992-01.example.com:string
              type: string
              x-ntap-readCreate: true
            subsystem:
              description: |
                The NVMe subsystem to which the NVMe host has been provisioned.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                uuid:
                  description: |
                    The unique identifier of the NVMe subsystem.
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          type: object
        type: array
        x-ntap-createOnly: true
      subsystem:
        description: |
          The NVMe subsystem to which the NVMe host has been provisioned.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: |
              The unique identifier of the NVMe subsystem.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  nvme_subsystem_host_no_records:
    description: |
      The NVMe host provisioned to access NVMe namespaces mapped to a subsystem.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      io_queue:
        description: |
          The properties of the submission queue used to submit I/O commands for execution by the NVMe controller.
        properties:
          count:
            description: |
              The number of I/O queue pairs. The default value is inherited from the owning NVMe subsystem.
            example: 4
            maximum: 15
            minimum: 1
            readOnly: true
            type: integer
          depth:
            description: |
              The I/O queue depth. The default value is inherited from the owning NVMe subsystem.
            example: 32
            maximum: 128
            minimum: 16
            readOnly: true
            type: integer
        readOnly: true
        type: object
      nqn:
        description: |
          The NVMe qualified name (NQN) used to identify the NVMe storage target. Not allowed in POST when the `records` property is used.
        example: nqn.1992-01.example.com:string
        type: string
        x-ntap-readCreate: true
      subsystem:
        description: |
          The NVMe subsystem to which the NVMe host has been provisioned.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: |
              The unique identifier of the NVMe subsystem.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            readOnly: true
            type: string
        readOnly: true
        type: object
    type: object
  nvme_subsystem_host_reference:
    description: |
      An NVMe host of an NVMe subsystem.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      nqn:
        description: |
          The NVMe qualified name (NQN) used to identify the NVMe storage target.
        example: nqn.1992-01.example.com:string
        readOnly: true
        type: string
    type: object
  nvme_subsystem_host_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: "Number of records.\n"
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_subsystem_host'
        type: array
    type: object
  nvme_subsystem_map:
    description: |
      An NVMe subsystem map is an association of an NVMe namespace with an NVMe subsystem. When an NVMe namespace is mapped to an NVMe subsystem, the NVMe subsystem's hosts are granted access to the NVMe namespace. The relationship between an NVMe subsystem and an NVMe namespace is one subsystem to many namespaces.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      anagrpid:
        description: |
          The Asymmetric Namespace Access Group ID (ANAGRPID) of the NVMe namespace.<br/>
          The format for an ANAGRPID is 8 hexadecimal digits (zero-filled) followed by a lower case "h".<br/>
          There is an added cost to retrieving this property's value. It is not populated for either a collection GET or an instance GET unless it is explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        example: 00103050h
        readOnly: true
        type: string
      namespace:
        description: |
          The NVMe namespace to which the NVMe subsystem is mapped. Required in POST by supplying either the UUID, name, or both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The fully qualified path name of the NVMe namespace composed from the volume name, qtree name, and file name of the NVMe namespace. Valid in POST.
            example: /vol/vol1/namespace1
            type: string
            x-ntap-readCreate: true
          node:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: node1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            readOnly: true
            type: object
          uuid:
            description: The unique identifier of the NVMe namespace. Valid in POST.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      nsid:
        description: |
          The NVMe namespace identifier. This is an identifier used by an NVMe controller to provide access to the NVMe namespace.<br/>
          The format for an NVMe namespace identifier is 8 hexadecimal digits (zero-filled) followed by a lower case "h".
        example: 00000001h
        readOnly: true
        type: string
      subsystem:
        description: |
          The NVMe subsystem to which the NVMe namespace is mapped. Required in POST by supplying either `subsystem.uuid`, `subsystem.name`  or both.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: |
              The name of the NVMe subsystem.
            maxLength: 96
            minLength: 1
            type: string
          uuid:
            description: |
              The unique identifier of the NVMe subsystem.
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  nvme_subsystem_map_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: "Number of records.\n"
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_subsystem_map'
        type: array
    type: object
  nvme_subsystem_reference:
    description: |
      An NVMe subsystem maintains configuration state and NVMe namespace access control for a set of NVMe-connected hosts.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: |
          The name of the NVMe subsystem.
        maxLength: 96
        minLength: 1
        type: string
      uuid:
        description: |
          The unique identifier of the NVMe subsystem.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  nvme_subsystem_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: "Number of records.\n"
        type: integer
      records:
        items:
          $ref: '#/definitions/nvme_subsystem'
        type: array
    type: object
  onboard_key_manager_configurable_status:
    description: |
      Indicates whether the Onboard Key Manager can be configured in the cluster.
    properties:
      code:
        description: Code corresponding to the status message. Returns a 0 if the
          Onboard Key Manager can be configured in the cluster.
        example: 65537300
        type: integer
      message:
        description: Reason that Onboard Key Manager cannot be configured in the cluster.
        example: No platform support for volume encryption in following nodes - node1,
          node2.
        type: string
      supported:
        description: Set to true if the Onboard Key Manager can be configured in the
          cluster.
        type: boolean
    readOnly: true
    type: object
  oracle_on_nfs:
    description: Oracle using NFS.
    properties:
      archive_log:
        properties:
          size:
            description: 'The size of the archive log. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the archive log.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      db:
        properties:
          size:
            description: 'The size of the database. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the database.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      nfs_access:
        description: The list of NFS access controls.
        items:
          $ref: '#/definitions/app_nfs_access'
        type: array
        x-ntap-readCreate: true
      ora_home:
        properties:
          size:
            description: 'The size of the ORACLE_HOME storage volume. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the ORACLE_HOME storage volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      redo_log:
        properties:
          mirrored:
            default: false
            description: Specifies whether the redo log group should be mirrored.
            enum:
            - false
            - true
            type: boolean
            x-ntap-readCreate: true
          size:
            description: 'The size of the redo log group. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the redo log group.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
    required:
    - db
    - redo_log
    type: object
  oracle_on_san:
    description: Oracle using SAN.
    properties:
      archive_log:
        properties:
          size:
            description: 'The size of the archive log. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the archive log.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      db:
        properties:
          size:
            description: 'The size of the database. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the database.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      igroup_name:
        description: The name of the initiator group through which the contents of
          this application will be accessed. Modification of this parameter is a disruptive
          operation. All LUNs in the application component will be unmapped from the
          current igroup and re-mapped to the new igroup.
        maxLength: 96
        minLength: 1
        type: string
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/oracle_on_san_new_igroups'
        maxItems: 1
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      ora_home:
        properties:
          size:
            description: 'The size of the ORACLE_HOME storage volume. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the ORACLE_HOME storage volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      os_type:
        description: The name of the host OS running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      redo_log:
        properties:
          mirrored:
            default: false
            description: Specifies whether the redo log group should be mirrored.
            enum:
            - false
            - true
            type: boolean
            x-ntap-readCreate: true
          size:
            description: 'The size of the redo log group. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the redo log group.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
    required:
    - db
    - igroup_name
    - os_type
    - redo_log
    type: object
  oracle_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - solaris
        - vmware
        - windows
        - xen
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  oracle_rac_on_nfs:
    description: Oracle RAC using NFS.
    properties:
      archive_log:
        properties:
          size:
            description: 'The size of the archive log. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the archive log.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      db:
        properties:
          size:
            description: 'The size of the database. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the database.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      grid_binary:
        properties:
          size:
            description: 'The size of the Oracle grid binary storage volume. Usage:
              {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the Oracle grid binary storage
                  volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      nfs_access:
        description: The list of NFS access controls.
        items:
          $ref: '#/definitions/app_nfs_access'
        type: array
        x-ntap-readCreate: true
      ora_home:
        properties:
          size:
            description: 'The size of the ORACLE_HOME storage volume. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the ORACLE_HOME storage volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      oracle_crs:
        properties:
          copies:
            default: 2
            description: The number of CRS volumes.
            maximum: 10
            minimum: 1
            type: integer
            x-ntap-readCreate: true
          size:
            description: 'The size of the Oracle CRS/voting storage volume. Usage:
              {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the Oracle CRS volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      redo_log:
        properties:
          mirrored:
            default: false
            description: Specifies whether the redo log group should be mirrored.
            enum:
            - false
            - true
            type: boolean
            x-ntap-readCreate: true
          size:
            description: 'The size of the redo log group. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the redo log group.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
    required:
    - db
    - redo_log
    type: object
  oracle_rac_on_san:
    description: Oracle RAC using SAN.
    properties:
      archive_log:
        properties:
          size:
            description: 'The size of the archive log. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the archive log.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      db:
        properties:
          size:
            description: 'The size of the database. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the database.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      db_sids:
        items:
          properties:
            igroup_name:
              description: The name of the initiator group through which the contents
                of this application will be accessed. Modification of this parameter
                is a disruptive operation. All LUNs in the application component will
                be unmapped from the current igroup and re-mapped to the new igroup.
              maxLength: 96
              minLength: 1
              type: string
          required:
          - igroup_name
          type: object
        maxItems: 2
        minItems: 2
        type: array
      grid_binary:
        properties:
          size:
            description: 'The size of the Oracle grid binary storage volume. Usage:
              {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the Oracle grid binary storage
                  volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/oracle_rac_on_san_new_igroups'
        maxItems: 2
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      ora_home:
        properties:
          size:
            description: 'The size of the ORACLE_HOME storage volume. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the ORACLE_HOME storage volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      oracle_crs:
        properties:
          copies:
            default: 2
            description: The number of CRS volumes.
            maximum: 10
            minimum: 1
            type: integer
            x-ntap-readCreate: true
          size:
            description: 'The size of the Oracle CRS/voting storage volume. Usage:
              {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the Oracle CRS volume.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
      os_type:
        description: The name of the host OS running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      redo_log:
        properties:
          mirrored:
            default: false
            description: Specifies whether the redo log group should be mirrored.
            enum:
            - false
            - true
            type: boolean
            x-ntap-readCreate: true
          size:
            description: 'The size of the redo log group. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the redo log group.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
    required:
    - db
    - db_sids
    - os_type
    - redo_log
    type: object
  oracle_rac_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - solaris
        - vmware
        - windows
        - xen
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  peer_reference:
    description: Details for a peer SVM object.
    properties:
      cluster:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: cluster2
            type: string
          uuid:
            example: ebe27c49-1adf-4496-8335-ab862aebebf2
            type: string
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  performance_cifs_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  performance_cifs_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  performance_fcp_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  performance_fcp_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  performance_iscsi_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  performance_iscsi_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  performance_lun_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  performance_lun_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  performance_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  performance_metric_io_type_reference:
    description: Indicates the type of I/O operation that can be associated with the
      type of performance metric. I/O operations can be "total", "read", "write",
      and "other". An I/O operation of type "total" is an aggregation of all operation
      types for any type of performance metric.
    properties:
      other:
        description: Performance metric for other I/O operations. Other I/O operations
          can be metadata operations, such as directory lookups and so on.
        type: integer
      read:
        description: Performance metric for read I/O operations.
        example: 200
        type: integer
      total:
        description: Performance metric aggregated over all types of I/O operations.
        example: 1000
        type: integer
      write:
        description: Peformance metric for write I/O operations.
        example: 100
        type: integer
    type: object
  performance_metric_io_type_rwt_reference:
    description: Indicates the type of I/O operation that can be associated with the
      type of performance metric. I/O operations can be "total", "read", "write".
      An I/O operation of type "total" is an aggregation of "read" and "write" for
      any type of performance metric.
    properties:
      read:
        description: Performance metric for read I/O operations.
        example: 200
        type: integer
      total:
        description: Performance metric aggregated over all types of I/O operations.
        example: 1000
        type: integer
      write:
        description: Peformance metric for write I/O operations.
        example: 100
        type: integer
    type: object
  performance_metric_raw_reference:
    description: These are raw performance numbers, such as IOPS latency and throughput.
      These numbers are aggregated across all nodes in the cluster and increase with
      the uptime of the cluster.
    properties:
      iops_raw:
        description: The number of I/O operations observed at the storage object.
          This can be used along with delta time to calculate the rate of I/O operations
          per unit of time.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency_raw:
        description: The raw latency in microseconds observed at the storage object.
          This can be divided by the raw IOPS value to calculate the average latency
          per I/O operation.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput_raw:
        description: Throughput bytes observed at the storage object. This can be
          used along with delta time to calculate the rate of throughput bytes per
          unit of time.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  performance_metric_raw_svm_reference:
    description: These are raw performance numbers, such as IOPS latency and throughput
      for SVM protocols. These numbers are aggregated across all nodes in the cluster
      and increase with the uptime of the cluster.
    properties:
      iops_raw:
        description: The number of I/O operations observed at the storage object.
          This should be used along with delta time to calculate the rate of I/O operations
          per unit of time.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency_raw:
        description: The raw latency in microseconds observed at the storage object.
          This should be divided by the raw IOPS value to calculate the average latency
          per I/O operation.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Any errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails then any of the partial errors might be
          returned, "ok" on success, or "error" on any internal uncategorized failure.
          Whenever a sample collection is missed but done at a later time, it is back
          filled to the previous 15 second timestamp and tagged with "backfilled_data".
          "Inconsistent_delta_time" is encountered when the time between two collections
          is not the same for all nodes. Therefore, the aggregated value might be
          over or under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput_raw:
        description: Throughput bytes observed at the storage object. This should
          be used along with delta time to calculate the rate of throughput bytes
          per unit of time.
        properties:
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  performance_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: true
          type: object
        type: array
    type: object
  performance_metric_svm_reference:
    description: Performance numbers, such as IOPS latency and throughput, for SVM
      protocols.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Any errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails then any of the partial errors might be
          returned, "ok" on success, or "error" on any internal uncategorized failure.
          Whenever a sample collection is missed but done at a later time, it is back
          filled to the previous 15 second timestamp and tagged with "backfilled_data".
          "Inconsistent_ delta_time" is encountered when the time between two collections
          is not the same for all nodes. Therefore, the aggregated value might be
          over or under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  performance_nvme_metric:
    description: Performance numbers, such as IOPS latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: 1
    type: object
  performance_nvme_metric_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: 1
          type: object
        type: array
    type: object
  performance_svm_nfs:
    description: Performance numbers, such as IOPS latency and throughput, for SVM-NFS
      protocol.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
    readOnly: true
    type: object
  performance_svm_nfs_metric:
    description: Historical performance numbers, such as IOPS latency and throughput,
      for SVM-NFS protocol.
    properties:
      v3:
        description: The NFSv3 operations
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
    readOnly: true
    type: object
  performance_svm_nfs_metric_historical:
    description: Historical performance numbers, such as IOPS latency and throughput,
      for SVM-NFS protocol.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
      v3:
        description: The NFSv3 operations
        properties:
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
        readOnly: true
        type: object
    readOnly: true
    type: object
  performance_svm_nfs_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Historical performance numbers, such as IOPS latency and throughput,
            for SVM-NFS protocol.
          properties:
            v3:
              description: The NFSv3 operations
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                duration:
                  description: |
                    The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
                  enum:
                  - PT15S
                  - PT4M
                  - PT30M
                  - PT2H
                  - P1D
                  - PT5M
                  example: PT15S
                  readOnly: true
                  type: string
                iops:
                  description: The rate of I/O operations observed at the storage
                    object.
                  properties:
                    other:
                      description: Performance metric for other I/O operations. Other
                        I/O operations can be metadata operations, such as directory
                        lookups and so on.
                      type: integer
                    read:
                      description: Performance metric for read I/O operations.
                      example: 200
                      type: integer
                    total:
                      description: Performance metric aggregated over all types of
                        I/O operations.
                      example: 1000
                      type: integer
                    write:
                      description: Peformance metric for write I/O operations.
                      example: 100
                      type: integer
                  readOnly: true
                  type: object
                latency:
                  description: The round trip latency in microseconds observed at
                    the storage object.
                  properties:
                    other:
                      description: Performance metric for other I/O operations. Other
                        I/O operations can be metadata operations, such as directory
                        lookups and so on.
                      type: integer
                    read:
                      description: Performance metric for read I/O operations.
                      example: 200
                      type: integer
                    total:
                      description: Performance metric aggregated over all types of
                        I/O operations.
                      example: 1000
                      type: integer
                    write:
                      description: Peformance metric for write I/O operations.
                      example: 100
                      type: integer
                  readOnly: true
                  type: object
                status:
                  description: Any errors associated with the sample. For example,
                    if the aggregation of data over multiple nodes fails then any
                    of the partial errors might be returned, "ok" on success, or "error"
                    on any internal uncategorized failure. Whenever a sample collection
                    is missed but done at a later time, it is back filled to the previous
                    15 second timestamp and tagged with "backfilled_data". "Inconsistent_
                    delta_time" is encountered when the time between two collections
                    is not the same for all nodes. Therefore, the aggregated value
                    might be over or under inflated. "Negative_delta" is returned
                    when an expected monotonically increasing value has decreased
                    in value. "Inconsistent_old_data" is returned when one or more
                    nodes do not have the latest data.
                  enum:
                  - ok
                  - error
                  - partial_no_data
                  - partial_no_uuid
                  - partial_no_response
                  - partial_other_error
                  - negative_delta
                  - backfilled_data
                  - inconsistent_delta_time
                  - inconsistent_old_data
                  example: ok
                  readOnly: true
                  type: string
                throughput:
                  description: The rate of throughput bytes per second observed at
                    the storage object.
                  properties:
                    read:
                      description: Performance metric for read I/O operations.
                      example: 200
                      type: integer
                    total:
                      description: Performance metric aggregated over all types of
                        I/O operations.
                      example: 1000
                      type: integer
                    write:
                      description: Peformance metric for write I/O operations.
                      example: 100
                      type: integer
                  readOnly: true
                  type: object
                timestamp:
                  description: The timestamp of the performance data.
                  example: 2017-01-25T11:20:13Z
                  format: date-time
                  readOnly: true
                  type: string
              readOnly: true
              type: object
          readOnly: true
          type: object
        type: array
    type: object
  performance_svm_nfs_statistics:
    description: Realtime performance numbers, such as IOPS latency and throughput,
      for SVM-NFS protocol.
    properties:
      v3:
        description: The NFSv3 operations
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This should be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This should be divided by the raw IOPS value to calculate the average
              latency per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Any errors associated with the sample. For example, if the
              aggregation of data over multiple nodes fails then any of the partial
              errors might be returned, "ok" on success, or "error" on any internal
              uncategorized failure. Whenever a sample collection is missed but done
              at a later time, it is back filled to the previous 15 second timestamp
              and tagged with "backfilled_data". "Inconsistent_delta_time" is encountered
              when the time between two collections is not the same for all nodes.
              Therefore, the aggregated value might be over or under inflated. "Negative_delta"
              is returned when an expected monotonically increasing value has decreased
              in value. "Inconsistent_old_data" is returned when one or more nodes
              do not have the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This should
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
    readOnly: true
    type: object
  performance_svm_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput, for
            SVM protocols.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Any errors associated with the sample. For example, if
                the aggregation of data over multiple nodes fails then any of the
                partial errors might be returned, "ok" on success, or "error" on any
                internal uncategorized failure. Whenever a sample collection is missed
                but done at a later time, it is back filled to the previous 15 second
                timestamp and tagged with "backfilled_data". "Inconsistent_ delta_time"
                is encountered when the time between two collections is not the same
                for all nodes. Therefore, the aggregated value might be over or under
                inflated. "Negative_delta" is returned when an expected monotonically
                increasing value has decreased in value. "Inconsistent_old_data" is
                returned when one or more nodes do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: true
          type: object
        type: array
    type: object
  plex:
    properties:
      aggregate:
        description: Aggregate
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: aggr1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      name:
        description: Plex name
        example: plex0
        readOnly: true
        type: string
      online:
        description: Plex is online
        readOnly: true
        type: boolean
      pool:
        description: SyncMirror pool assignment
        enum:
        - pool0
        - pool1
        readOnly: true
        type: string
      raid_groups:
        items:
          $ref: '#/definitions/raid_group'
        readOnly: true
        type: array
      resync:
        properties:
          active:
            description: Plex is being resynchronized to its mirrored plex
            readOnly: true
            type: boolean
          level:
            description: Plex resyncing level
            enum:
            - full
            - incremental
            readOnly: true
            type: string
          percent:
            description: Plex resyncing percentage
            example: 10
            readOnly: true
            type: integer
        readOnly: true
        type: object
      state:
        description: Plex state
        enum:
        - normal
        - failed
        - out_of_date
        readOnly: true
        type: string
    readOnly: true
    type: object
  plex_reference:
    description: Plex
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: plex0
        type: string
    type: object
  plex_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        $ref: '#/definitions/error'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/plex'
        type: array
    type: object
  port:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      broadcast_domain:
        description: Broadcast domain UUID along with a readable name. Either the
          UUID or both names may be provided on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          ipspace:
            properties:
              name:
                description: Name of the broadcast domain's IPspace
                example: ipspace1
                type: string
            type: object
          name:
            description: Name of the broadcast domain, scoped to its IPspace
            example: bd1
            type: string
          uuid:
            description: Broadcast domain UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      enabled:
        type: boolean
      lag:
        properties:
          active_ports:
            description: Active ports of a LAG (ifgrp). (Some member ports may be
              inactive.)
            items:
              description: Port UUID along with readable names. Either the UUID or
                both names may be supplied on input.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: e1b
                  type: string
                node:
                  properties:
                    name:
                      description: Name of node on which the port is located.
                      example: node1
                      type: string
                  type: object
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              type: object
            readOnly: true
            type: array
          distribution_policy:
            description: Policy for mapping flows to ports for outbound packets through
              a LAG (ifgrp).
            enum:
            - port
            - ip
            - mac
            - sequential
            type: string
            x-ntap-readCreate: true
          member_ports:
            items:
              description: Port UUID along with readable names. Either the UUID or
                both names may be supplied on input.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: e1b
                  type: string
                node:
                  properties:
                    name:
                      description: Name of node on which the port is located.
                      example: node1
                      type: string
                  type: object
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              type: object
            type: array
          mode:
            description: Determines how the ports interact with the switch.
            enum:
            - multimode_lacp
            - multimode
            - singlemode
            type: string
            x-ntap-readCreate: true
        type: object
      mac_address:
        example: 01:02:03:04:05:06
        readOnly: true
        type: string
      mtu:
        description: MTU of the port in bytes. Set by broadcast domain.
        example: 1500
        minimum: 68
        readOnly: true
        type: integer
      name:
        description: Portname, such as e0a, e1b-100 (VLAN on ethernet), a0c (LAG/ifgrp),
          a0d-200 (vlan on LAG/ifgrp)
        example: e1b
        readOnly: true
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      speed:
        description: Link speed in Mbps
        example: 1000
        readOnly: true
        type: integer
      state:
        description: Operational state of the port.
        enum:
        - up
        - down
        readOnly: true
        type: string
      type:
        description: Type of physical or virtual port
        enum:
        - vlan
        - physical
        - lag
        type: string
        x-ntap-readCreate: true
      uuid:
        description: Port UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      vlan:
        properties:
          base_port:
            description: Port UUID along with readable names. Either the UUID or both
              names may be supplied on input.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: e1b
                type: string
              node:
                properties:
                  name:
                    description: Name of node on which the port is located.
                    example: node1
                    type: string
                type: object
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          tag:
            description: VLAN ID
            example: 100
            maximum: 4095
            minimum: 0
            type: integer
        type: object
        x-ntap-readCreate: true
    type: object
  port_reference:
    description: Port UUID along with readable names. Either the UUID or both names
      may be supplied on input.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: e1b
        type: string
      node:
        properties:
          name:
            description: Name of node on which the port is located.
            example: node1
            type: string
        type: object
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  port_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/port'
        type: array
    type: object
  publickey:
    description: The public key for the user account (to access SSH).
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      account:
        $ref: '#/definitions/account_reference'
      comment:
        description: Optional comment for the public key.
        type: string
      index:
        description: Index number for the public key (where there are multiple keys
          for the same account).
        maximum: 99
        minimum: 0
        type: integer
        x-ntap-readCreate: true
      obfuscated_fingerprint:
        description: The obfuscated fingerprint for the public key (READONLY).
        readOnly: true
        type: string
      owner:
        description: Owner name and UUID that uniquely identifies the public key.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      public_key:
        description: The public key
        type: string
      scope:
        description: Scope of the entity. Set to "cluster" for cluster owned objects
          and to "svm" for SVM owned objects.
        enum:
        - cluster
        - svm
        readOnly: true
        type: string
      sha_fingerprint:
        description: The SHA fingerprint for the public key (READONLY).
        readOnly: true
        type: string
    type: object
  publickey_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/publickey'
        type: array
    type: object
  qos_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      adaptive:
        description: Adaptive QoS policy-groups define measurable service level objectives
          (SLOs) that adjust based on the storage object used space and the storage
          object allocated space.
        properties:
          absolute_min_iops:
            description: Specifies the absolute minimum IOPS that is used as an override
              when the expected_iops is less than this value. These floors are not
              guaranteed on non-AFF platforms or when FabricPool tiering policies
              are set.
            type: integer
          expected_iops:
            description: Expected IOPS. Specifies the minimum expected IOPS per TB
              allocated based on the storage object allocated size. These floors are
              not guaranteed on non-AFF platforms or when FabricPool tiering policies
              are set.
            type: integer
          peak_iops:
            description: Peak IOPS. Specifies the maximum possible IOPS per TB allocated
              based on the storage object allocated size or the storage object used
              size.
            type: integer
        type: object
      fixed:
        description: QoS policy-groups define a fixed service level objective (SLO)
          for a storage object.
        properties:
          capacity_shared:
            default: false
            description: Specifies whether the capacities are shared across all objects
              that use this QoS policy-group. Default is false.
            type: boolean
            x-ntap-readCreate: true
          max_throughput_iops:
            description: Maximum throughput defined by this policy.  It is specified
              in terms of IOPS. 0 means no maximum throughput is enforced.
            type: integer
          max_throughput_mbps:
            description: Maximum throughput defined by this policy.  It is specified
              in terms of Mbps. 0 means no maximum throughput is enforced.
            type: integer
          min_throughput_iops:
            description: Minimum throughput defined by this policy.  It is specified
              in terms of IOPS. 0 means no minimum throughput is enforced. These floors
              are not guaranteed on non-AFF platforms or when FabricPool tiering policies
              are set.
            type: integer
        type: object
      name:
        description: Name of the QoS policy.
        example: extreme
        type: string
      object_count:
        description: Number of objects attached to this policy.
        readOnly: true
        type: integer
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  qos_policy_reference:
    description: When "min_throughput_iops", "max_throughput_iops" or "max_throughput_mbps"
      attributes are specified, the storage object is assigned to an auto-generated
      QoS policy group. If the attributes are later modified, the auto-generated QoS
      policy-group attributes are modified. Attributes can be removed by specifying
      "0" and policy group by specifying "none". Upon deletion of the storage object
      or if the attributes are removed, then the QoS policy-group is also removed.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      max_throughput_iops:
        description: Specifies the maximum throughput in IOPS, 0 means none. This
          is mutually exclusive with name and UUID during POST and PATCH.
        example: 10000
        type: integer
      max_throughput_mbps:
        default: 0
        description: Specifies the maximum throughput in Megabytes per sec, 0 means
          none. This is mutually exclusive with name, UUID and "min_throughput_iops"
          during POST and PATCH.
        example: 500
        type: integer
      min_throughput_iops:
        default: 0
        description: Specifies the minimum throughput in IOPS, 0 means none. Setting
          "min_throughput" is supported on AFF platforms only, unless FabricPool tiering
          policies are set. This is mutually exclusive with name, UUID and" max_throughput_mbps"
          during POST and PATCH.
        example: 2000
        type: integer
      name:
        description: The QoS policy group name. This is mutually exclusive with UUID
          and other QoS attributes during POST and PATCH.
        example: performance
        type: string
      uuid:
        description: The QoS policy group UUID. This is mutually exclusive with name
          and other QoS attributes during POST and PATCH.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  qos_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        $ref: '#/definitions/error'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/qos_policy'
        type: array
    type: object
  qtree:
    description: A qtree is a directory at the top level of a volume to which a custom
      export policy (for fine-grained access control) and a quota rule can be applied,
      if required.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      export_policy:
        description: Export Policy
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          id:
            example: 100
            type: integer
          name:
            example: default
            type: string
        type: object
      id:
        description: |
          The identifier for the qtree, unique within the qtree's volume.
        example: 1
        maximum: 4994
        minimum: 0
        readOnly: true
        type: integer
      name:
        description: The name of the qtree. Required in POST; optional in PATCH.
        type: string
      path:
        description: Client visible path to the qtree. This field is not available
          if the volume does not have a junction-path configured. Not valid in POST
          or PATCH.
        example: /volume3/qtree1
        readOnly: true
        type: string
      security_style:
        $ref: '#/definitions/security_style'
      svm:
        description: Required in POST
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      unix_permissions:
        description: The UNIX permissions for the qtree. Valid in POST or PATCH.
        example: 0755
        type: integer
      volume:
        description: Required in POST
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  qtree_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: |
          The identifier for the qtree, unique within the qtree's volume.
        example: 1
        maximum: 4994
        minimum: 0
        type: integer
      name:
        description: The name of the qtree.
        example: qt1
        type: string
    type: object
  qtree_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/qtree'
        type: array
    type: object
  quota_report:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      files:
        properties:
          hard_limit:
            description: File hard limit
            readOnly: true
            type: integer
          soft_limit:
            description: File soft limit
            readOnly: true
            type: integer
          used:
            properties:
              hard_limit_percent:
                description: Total files used as a percentage of file hard limit
                readOnly: true
                type: integer
              soft_limit_percent:
                description: Total files used as a percentage of file soft limit
                readOnly: true
                type: integer
              total:
                description: Total files used
                readOnly: true
                type: integer
            type: object
        type: object
      group:
        description: This parameter specifies the target group associated with the
          given quota report record. This parameter is available for group quota records
          and is not available for user or tree quota records. The target group is
          identified by a UNIX group name and UNIX group identifer.
        properties:
          id:
            description: Quota target group ID
            readOnly: true
            type: string
          name:
            description: Quota target group name
            readOnly: true
            type: string
        type: object
      index:
        description: Index that identifies a unique quota record. Valid in URL.
        readOnly: true
        type: integer
      qtree:
        description: This parameter specifies the target qtree to which the user/group/tree
          quota policy rule applies. For a user/group quota policy rule at qtree level,
          this parameter takes a qtree name and is valid in GET or POST. For a user/group
          quota policy rule at volume level, this parameter is not valid in GET or
          POST. For a tree quota policy rule, this parameter is mandatory and is valid
          in both POST and GET. For a default tree quota policy rule, this parameter
          needs to be specified as "". For a tree quota policy rule at qtree level,
          this parameter takes a qtree name and is valid in GET or POST.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          id:
            description: The unique identifier for a qtree.
            example: 1
            type: integer
          name:
            description: The name of the qtree.
            example: qt1
            type: string
        readOnly: true
        type: object
      space:
        properties:
          hard_limit:
            description: Space hard limit in bytes
            readOnly: true
            type: integer
          soft_limit:
            description: Space soft limit in bytes
            readOnly: true
            type: integer
          used:
            properties:
              hard_limit_percent:
                description: Total space used as a percentage of space hard limit
                readOnly: true
                type: integer
              soft_limit_percent:
                description: Total space used as a percentage of space soft limit
                readOnly: true
                type: integer
              total:
                description: Total space used
                readOnly: true
                type: integer
            type: object
        type: object
      specifier:
        description: Quota specifier
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      type:
        description: Quota type associated with the quota record.
        enum:
        - tree
        - user
        - group
        readOnly: true
        type: string
      users:
        description: This parameter specifies the target user or users associated
          with the given quota report record. This parameter is available for user
          quota records and is not available for group or tree quota records. The
          target user or users are identified by a user name and user identifier.
          The user name can be a UNIX user name or a Windows user name, and the identifer
          can be a UNIX user identifier or a Windows security identifier.
        items:
          properties:
            id:
              description: Quota target user ID
              readOnly: true
              type: string
            name:
              description: Quota target user name
              readOnly: true
              type: string
          type: object
        type: array
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  quota_report_qtree_reference:
    description: This parameter specifies the target qtree associated with the user,
      group, or tree record. For a user/group quota policy rule at volume level, this
      parameter is not valid. For a default tree quota policy rule, this parameter
      is specified as "" or "*". For a tree quota policy rule at qtree level, this
      parameter specifies a qtree name and a qtree identifier.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: The unique identifier for a qtree.
        example: 1
        type: integer
      name:
        description: The name of the qtree.
        example: qt1
        type: string
    type: object
  quota_report_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/quota_report'
        type: array
    type: object
  quota_rule:
    example:
      files:
        hard_limit: 100
        soft_limit: 80
      qtree:
        id: 1
        name: qt1
      space:
        hard_limit: 1222800
        soft_limit: 51200
      svm:
        name: svm1
      type: user
      user_mapping: on
      users:
      - name: fred
      uuid: 264a9e0b-2e03-11e9-a610-005056a7b72d
      volume:
        name: fv
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      files:
        properties:
          hard_limit:
            description: This parameter specifies the hard limit for files. This is
              valid in POST or PATCH.
            type: integer
          soft_limit:
            description: This parameter specifies the soft limit for files. This is
              valid in POST or PATCH.
            type: integer
        type: object
      group:
        description: This parameter specifies the target group to which the group
          quota policy rule applies. This parameter takes a group name or identifier.
          This parameter is only valid for the POST operation of a group quota policy
          rule. The POST operation will fail with an appropriate error if this parameter
          is used as an input to create a user or a tree quota policy rule. This input
          parameter for POST takes either a group name or a group identifier, but
          not both. For default quota rules, the group name must be chosen and should
          be specified as "". For explicit group quota rules, this parameter can contain
          a UNIX group name or a UNIX group identifier.
        properties:
          id:
            description: Quota target group ID
            type: string
          name:
            description: Quota target group name
            type: string
        type: object
        x-ntap-readCreate: true
      qtree:
        description: This parameter specifies the target qtree to which the user/group/tree
          quota policy rule applies. For a user/group quota policy rule at qtree level,
          this parameter takes a qtree name and is valid in GET or POST. For a user/group
          quota policy rule at volume level, this parameter is not valid in GET or
          POST. For a tree quota policy rule, this parameter is mandatory and is valid
          in both POST and GET. For a default tree quota policy rule, this parameter
          needs to be specified as "". For a tree quota policy rule at qtree level,
          this parameter takes a qtree name and is valid in GET or POST.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          id:
            description: The unique identifier for a qtree.
            example: 1
            type: integer
          name:
            description: The name of the qtree.
            example: qt1
            type: string
        type: object
        x-ntap-readCreate: true
      space:
        properties:
          hard_limit:
            description: This parameter specifies the space hard limit, in bytes.
              If less than 1024 bytes, the value is rounded up to 1024 bytes. Valid
              in POST or PATCH. For a POST operation where the parameter is either
              empty or set to -1, no limit is applied. For a PATCH operation where
              a limit is configured, use a value of -1 to clear the limit.
            type: integer
          soft_limit:
            description: This parameter specifies the space soft limit, in bytes.
              If less than 1024 bytes, the value is rounded up to 1024 bytes. Valid
              in POST or PATCH. For a POST operation where the parameter is either
              empty or set to -1, no limit is applied. For a PATCH operation where
              a limit is configured, use a value of -1 to clear the limit.
            type: integer
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      type:
        description: This parameter specifies the quota policy rule type. This is
          required in POST only and can take either one of the \"user\", \"group\"
          or \"tree\" values.
        enum:
        - tree
        - user
        - group
        type: string
        x-ntap-readCreate: true
      user_mapping:
        description: This parameter enables user mapping for user quota policy rules.
          This is valid in POST or PATCH for user quota policy rules only.
        type: boolean
      users:
        description: This parameter specifies the target user to which the user quota
          policy rule applies. This parameter takes single or multiple user names
          or identifiers. This parameter is valid only for the POST operation of a
          user quota policy rule. If this parameter is used as an input to create
          a group or a tree quota policy rule, the POST operation will fail with an
          appropriate error. For POST, this input parameter takes either a user name
          or a user identifier, not both. For default quota rules, the user name must
          be chosen and specified as "". For explicit user quota rules, this parameter
          can indicate either a user name or user identifier. The user name can be
          a UNIX user name or a Windows user name. If a name contains a space, enclose
          the entire value in quotes. A UNIX user name cannot include a backslash
          (\) or an @ sign; user names with these characters are treated as Windows
          names. The user identifer can be a UNIX user identifier or a Windows security
          identifier. For multi-user quota, this parameter can contain multiple user
          targets separated by a comma.
        items:
          properties:
            id:
              description: Quota target user ID
              type: string
            name:
              description: Quota target user name
              type: string
          type: object
        type: array
        x-ntap-readCreate: true
      uuid:
        description: Unique identifier for the quota policy rule. This field is generated
          when the quota policy rule is created.
        example: 5f1d13a7-f401-11e8-ac1a-005056a7c3b9
        readOnly: true
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  quota_rule_qtree_reference:
    description: This parameter specifies the target qtree to which the user/group/tree
      quota policy rule applies. For a user/group quota policy rule at qtree level,
      this parameter takes a qtree name and is valid in GET or POST. For a user/group
      quota policy rule at volume level, this parameter is not valid in GET or POST.
      For a tree quota policy rule, this parameter is mandatory and is valid in both
      POST and GET. For a default tree quota policy rule, this parameter needs to
      be specified as "". For a tree quota policy rule at qtree level, this parameter
      takes a qtree name and is valid in GET or POST.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: The unique identifier for a qtree.
        example: 1
        type: integer
      name:
        description: The name of the qtree.
        example: qt1
        type: string
    type: object
  quota_rule_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/quota_rule'
        type: array
    type: object
  raid_group:
    properties:
      cache_tier:
        description: RAID group is a cache tier
        readOnly: true
        type: boolean
      degraded:
        description: RAID group is degraded. A RAID group is degraded when at least
          one disk from that group has failed or is offline.
        readOnly: true
        type: boolean
      disks:
        items:
          $ref: '#/definitions/raid_group_disk'
        readOnly: true
        type: array
      name:
        description: RAID group name
        example: rg0
        readOnly: true
        type: string
      recomputing_parity:
        properties:
          active:
            description: RAID group is recomputing parity
            readOnly: true
            type: boolean
          percent:
            description: Recomputing parity percentage
            example: 10
            readOnly: true
            type: integer
        readOnly: true
        type: object
      reconstruct:
        properties:
          active:
            description: One or more disks in this RAID group are being reconstructed.
            readOnly: true
            type: boolean
          percent:
            description: Reconstruct percentage
            example: 10
            readOnly: true
            type: integer
        readOnly: true
        type: object
    readOnly: true
    type: object
  raid_group_disk:
    properties:
      disk:
        description: Disk
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: 1.0.1
            type: string
        type: object
      position:
        description: The position of the disk within the RAID group.
        enum:
        - data
        - parity
        - dparity
        - tparity
        - copy
        readOnly: true
        type: string
      state:
        description: The state of the disk within the RAID group.
        enum:
        - normal
        - failed
        - zeroing
        - copy
        - replacing
        - evacuating
        - prefail
        - offline
        - reconstructing
        readOnly: true
        type: string
      type:
        description: Disk interface type
        enum:
        - ata
        - bsas
        - fcal
        - fsas
        - lun
        - sas
        - msata
        - ssd
        - vmdisk
        - unknown
        - ssd_nvm
        example: ssd
        readOnly: true
        type: string
      usable_size:
        description: Size in bytes that is usable by the aggregate.
        example: 947912704
        readOnly: true
        type: integer
    readOnly: true
    type: object
  related_link:
    properties:
      related:
        $ref: '#/definitions/href'
    readOnly: true
    type: object
  role:
    description: A named set of privileges that defines the rights an account has
      when it is assigned the role.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      builtin:
        description: Indicates if this is a built-in (pre-defined) role which cannot
          be modified or deleted.
        readOnly: true
        type: boolean
      name:
        description: Role name
        example: admin
        type: string
        x-ntap-readCreate: true
      owner:
        description: Owner name and UUID that uniquely identifies the role.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      privileges:
        description: The list of privileges that this role has been granted.
        items:
          $ref: '#/definitions/role_privilege'
        type: array
      scope:
        description: Scope of the entity. Set to "cluster" for cluster owned objects
          and to "svm" for SVM owned objects.
        enum:
        - cluster
        - svm
        readOnly: true
        type: string
    type: object
  role_privilege:
    description: A tuple containing the REST endpoint and the access level assigned
      to that endpoint.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      access:
        $ref: '#/definitions/role_privilege_level'
      path:
        description: REST URI/endpoint
        example: /api/storage/volumes
        type: string
        x-ntap-readCreate: true
    type: object
  role_privilege_level:
    description: Access level for the REST endpoint.
    enum:
    - none
    - readonly
    - all
    example: readonly
    type: string
  role_privilege_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/role_privilege'
        type: array
    type: object
  role_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Role name
        example: admin
        type: string
    type: object
  role_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/role'
        type: array
    type: object
  rotation:
    description: Audit event log files are rotated when they reach a configured threshold
      log size or are on a configured schedule. When an event log file is rotated,
      the scheduled consolidation task first renames the active converted file to
      a time-stamped archive file, and then creates a new active converted event log
      file.
    properties:
      now:
        default: false
        description: Manually rotates the audit logs. Optional in PATCH only. Not
          available in POST.
        type: boolean
        x-ntap-modifyOnly: true
      schedule:
        $ref: '#/definitions/audit_schedule'
      size:
        default: 104857600
        description: Rotates logs based on log size in bytes.
        type: integer
    type: object
  s3_bucket:
    description: A bucket is a container of objects. Each bucket defines an object
      namespace. S3 requests specify objects using a bucket-name and object-name pair.
      An object resides within a bucket.
    properties:
      aggregates:
        description: A list of aggregates for FlexGroup volume constituents where
          the bucket is hosted. If this option is not specified, the bucket is auto-provisioned
          as a FlexGroup volume.
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
        x-ntap-createOnly: true
      comment:
        description: Can contain any additional information about the bucket being
          created or modified.
        example: S3 bucket.
        maxLength: 256
        minLength: 0
        type: string
      constituents_per_aggregate:
        default: 1
        description: Specifies the number of constituents or FlexVol volumes per aggregate.
          A FlexGroup volume consisting of all such constituents across all specified
          aggregates is created. This option is used along with the aggregates option
          and cannot be used independently.
        example: 4
        maximum: 1000
        minimum: 1
        type: integer
        x-ntap-createOnly: true
      encryption:
        properties:
          enabled:
            default: false
            description: Specifies whether encryption is enabled on the bucket. By
              default, encryption is disabled on a bucket.
            type: boolean
        readOnly: true
        type: object
      logical_used_size:
        description: Specifies the bucket logical used size up to this point.
        readOnly: true
        type: integer
      name:
        description: Specifies the name of the bucket. Bucket name is a string that
          can only contain the following combination of ASCII-range alphanumeric characters
          0-9, a-z, ".", and "-".
        example: bucket-1
        maxLength: 63
        minLength: 3
        type: string
        x-ntap-readCreate: true
      size:
        description: Specifies the bucket size in bytes; ranges from 80MB to 64TB.
        example: 1677721600
        maximum: 70368744177664
        minimum: 83886080
        type: integer
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
      uuid:
        description: Specifies the unique identifier of the bucket.
        example: 414b29a1-3b26-11e9-bd58-0050568ea055
        format: uuid
        readOnly: true
        type: string
      volume:
        description: Specifies the FlexGroup volume name and UUID where the bucket
          is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  s3_bucket_response:
    properties:
      _links:
        $ref: '#/definitions/collection_links'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/s3_bucket'
        type: array
    type: object
  s3_bucket_svm:
    description: A bucket is a container of objects. Each bucket defines an object
      namespace. S3 requests specify objects using a bucket-name and object-name pair.
      An object resides within a bucket.
    properties:
      aggregates:
        description: A list of aggregates for FlexGroup volume constituents where
          the bucket is hosted. If this option is not specified, the bucket is auto-provisioned
          as a FlexGroup volume.
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
        x-ntap-createOnly: true
      comment:
        description: Can contain any additional information about the bucket being
          created or modified.
        example: S3 bucket.
        maxLength: 256
        minLength: 0
        type: string
      constituents_per_aggregate:
        default: 1
        description: Specifies the number of constituents or FlexVol volumes per aggregate.
          A FlexGroup volume consisting of all such constituents across all specified
          aggregates is created. This option is used along with the aggregates option
          and cannot be used independently.
        example: 4
        maximum: 1000
        minimum: 1
        type: integer
        x-ntap-createOnly: true
      encryption:
        properties:
          enabled:
            default: false
            description: Specifies whether encryption is enabled on the bucket. By
              default, encryption is disabled on a bucket.
            type: boolean
        readOnly: true
        type: object
      logical_used_size:
        description: Specifies the bucket logical used size up to this point.
        readOnly: true
        type: integer
      name:
        description: Specifies the name of the bucket. Bucket name is a string that
          can only contain the following combination of ASCII-range alphanumeric characters
          0-9, a-z, ".", and "-".
        example: bucket-1
        maxLength: 63
        minLength: 3
        type: string
        x-ntap-readCreate: true
      size:
        description: Specifies the bucket size in bytes; ranges from 80MB to 64TB.
        example: 1677721600
        maximum: 70368744177664
        minimum: 83886080
        type: integer
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
      uuid:
        description: Specifies the unique identifier of the bucket.
        example: 414b29a1-3b26-11e9-bd58-0050568ea055
        format: uuid
        readOnly: true
        type: string
      volume:
        description: Specifies the FlexGroup volume name and UUID where the bucket
          is hosted.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  s3_bucket_svm_response:
    properties:
      _links:
        $ref: '#/definitions/collection_links'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/s3_bucket_svm'
        type: array
    type: object
  s3_service:
    description: Specifies the S3 server configuration.
    properties:
      _links:
        $ref: '#/definitions/self_link'
      buckets:
        items:
          $ref: '#/definitions/s3_bucket'
        type: array
        x-ntap-readCreate: true
      comment:
        description: Can contain any additional information about the server being
          created or modified.
        example: S3 server
        maxLength: 256
        minLength: 0
        type: string
      enabled:
        default: true
        description: Specifies whether the S3 server being created or modified should
          be up or down.
        type: boolean
      name:
        description: Specifies the name of the S3 server. A server name can contain
          0 to 15 characters using only the following combination of characters':'
          0-9, A-Z, a-z, ".", and "-".
        example: Server-1
        maxLength: 15
        minLength: 0
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      users:
        items:
          $ref: '#/definitions/s3_user'
        type: array
        x-ntap-readCreate: true
    type: object
  s3_service_delete_response:
    properties:
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          properties:
            job:
              $ref: '#/definitions/job_link'
          type: object
        type: array
    type: object
  s3_service_post_response:
    properties:
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          properties:
            _links:
              $ref: '#/definitions/collection_links'
            job:
              $ref: '#/definitions/job_link'
            users:
              items:
                $ref: '#/definitions/s3_service_user_post_response'
              type: array
          type: object
        type: array
    type: object
  s3_service_response:
    properties:
      _links:
        $ref: '#/definitions/collection_links'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/s3_service'
        type: array
    type: object
  s3_service_user_post_response:
    properties:
      _links:
        $ref: '#/definitions/collection_links'
      access_key:
        description: Specifies the access key for the user.
        example: Pz3SB54G2B_6dsXQPrA5HrTPcf478qoAW6_Xx6qyqZ948AgZ_7YfCf_9nO87YoZmskxx3cq41U2JAH2M3_fs321B4rkzS3a_oC5_8u7D8j_45N8OsBCBPWGD_1d_ccfq
        readOnly: true
        type: string
      name:
        description: The name of the user.
        example: user-1
        readOnly: true
        type: string
      secret_key:
        description: Specifies the secret key for the user.
        example: A20_tDhC_cux2C2BmtL45bXB_a_Q65c_96FsAcOdo14Az8V31jBKDTc0uCL62Bh559gPB8s9rrn0868QrF38_1dsV2u1_9H2tSf3qQ5xp9NT259C6z_GiZQ883Qn63X1
        readOnly: true
        type: string
    type: object
  s3_user:
    description: This is a container of S3 users.
    properties:
      access_key:
        description: Specifies the access key for the user.
        example: Pz3SB54G2B_6dsXQPrA5HrTPcf478qoAW6_Xx6qyqZ948AgZ_7YfCf_9nO87YoZmskxx3cq41U2JAH2M3_fs321B4rkzS3a_oC5_8u7D8j_45N8OsBCBPWGD_1d_ccfq
        readOnly: true
        type: string
      comment:
        description: Can contain any additional information about the user being created
          or modified.
        example: S3 user
        maxLength: 256
        minLength: 0
        type: string
      name:
        description: Specifies the name of the user. A user name length can range
          from 1 to 64 characters and can only contain the following combination of
          characters 0-9, A-Z, a-z, "_", "+", "=", ",", ".","@", and "-".
        example: user-1
        maxLength: 64
        minLength: 1
        type: string
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  s3_user_post_patch_response:
    properties:
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/s3_service_user_post_response'
        type: array
    type: object
  s3_user_response:
    properties:
      _links:
        $ref: '#/definitions/collection_links'
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/s3_user'
        type: array
    type: object
  san:
    description: A generic SAN application.
    properties:
      application_components:
        items:
          properties:
            igroup_name:
              description: The name of the initiator group through which the contents
                of this application will be accessed. Modification of this parameter
                is a disruptive operation. All LUNs in the application component will
                be unmapped from the current igroup and re-mapped to the new igroup.
              maxLength: 96
              minLength: 1
              type: string
            lun_count:
              description: The number of LUNs in the application component.
              maximum: 100
              minimum: 1
              type: integer
              x-ntap-readCreate: true
            name:
              description: The name of the application component.
              maxLength: 512
              minLength: 1
              type: string
            storage_service:
              properties:
                name:
                  default: value
                  description: The storage service of the application component.
                  enum:
                  - extreme
                  - performance
                  - value
                  type: string
              type: object
            tiering:
              $ref: '#/definitions/san_application_components_tiering'
            total_size:
              description: 'The total size of the application component, split across
                the member LUNs. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
              type: integer
          required:
          - name
          - igroup_name
          - lun_count
          - total_size
          type: object
        maxItems: 10
        minItems: 1
        type: array
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/san_new_igroups'
        maxItems: 10
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - solaris_efi
        - vmware
        - windows
        - windows_2008
        - windows_gpt
        - xen
        type: string
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_policy:
            description: 'The snapshot policy to apply to each volume in the smart
              container. This property is only supported for smart containers. Usage:
              &lt;snapshot policy&gt;'
            type: string
            x-ntap-readCreate: true
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - application_components
    - os_type
    type: object
  san_application_components_tiering:
    description: application-components.tiering
    properties:
      control:
        default: best_effort
        description: Storage tiering placement rules for the container(s)
        enum:
        - required
        - best_effort
        - disallowed
        type: string
        x-ntap-createOnly: true
      object_stores:
        items:
          properties:
            name:
              description: 'The name of the object-store to use. Usage: &lt;(size
                1..512)&gt;'
              maxLength: 512
              minLength: 1
              type: string
              x-ntap-createOnly: true
          type: object
        type: array
        x-ntap-createOnly: true
      policy:
        default: none
        description: The storage tiering type of the application component.
        enum:
        - all
        - auto
        - none
        - snapshot_only
        type: string
        x-ntap-readCreate: true
    type: object
  san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - aix
        - hpux
        - hyper_v
        - linux
        - netware
        - openvms
        - solaris
        - vmware
        - windows
        - xen
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  schedule:
    description: Complete schedule information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cluster:
        description: The cluster that owns the schedule. Defaults to the local cluster.
        properties:
          name:
            description: Cluster name
            example: cluster1
            type: string
          uuid:
            description: Cluster UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            format: uuid
            type: string
        type: object
        x-ntap-readCreate: true
      cron:
        description: Details for schedules of type cron.
        properties:
          days:
            description: The days of the month the schedule runs. Leave empty for
              all.
            items:
              maxItems: 31
              maximum: 31
              minimum: 1
              type: integer
            type: array
          hours:
            description: The hours of the day the schedule runs. Leave empty for all.
            items:
              maxItems: 24
              maximum: 23
              minimum: 0
              type: integer
            type: array
          minutes:
            description: The minutes the schedule runs. Required on POST for a cron
              schedule.
            items:
              maxItems: 60
              maximum: 59
              minimum: 0
              type: integer
            type: array
          months:
            description: The months of the year the schedule runs. Leave empty for
              all.
            items:
              maxItems: 12
              maximum: 12
              minimum: 1
              type: integer
            type: array
          weekdays:
            description: The weekdays the schedule runs. Leave empty for all.
            items:
              maxItems: 7
              maximum: 6
              minimum: 0
              type: integer
            type: array
        type: object
      interval:
        description: An ISO-8601 duration formatted string.
        example: P1DT2H3M4S
        type: string
      name:
        description: Schedule name. Required in the URL or POST body.
        maxLength: 256
        minLength: 1
        type: string
        x-ntap-readCreate: true
      type:
        description: Schedule type
        enum:
        - cron
        - interval
        readOnly: true
        type: string
      uuid:
        description: Job schedule UUID
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  schedule_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Job schedule name
        example: weekly
        type: string
      uuid:
        description: Job schedule UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  schedule_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 1
        type: integer
      records:
        items:
          $ref: '#/definitions/schedule'
        type: array
    type: object
  scope_ipspace_reference:
    description: Applies only to cluster-scoped objects. Either the UUID or name may
      be supplied on input.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: IPspace name
        example: exchange
        type: string
      uuid:
        description: IPspace UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  scope_reference:
    description: Scope of the entity. Set to "cluster" for cluster owned objects and
      to "svm" for SVM owned objects.
    enum:
    - cluster
    - svm
    readOnly: true
    type: string
  security_association:
    description: Security association object for IPsec security association and IKE
      (Internet Key Exchange) security association.
    properties:
      cipher_suite:
        default: gcm256
        description: Cipher suite for the security association.
        enum:
        - aescbc
        - gcm256
        - gmac256
        type: string
      ike:
        description: Objects containing parameters specific to IKE (Internet Key Exchange)
          security association.
        properties:
          authentication:
            default: psk
            description: Authentication method for internet key exchange protocol.
            enum:
            - none
            - psk
            - cert
            type: string
          initiator_security_parameter_index:
            description: Initiator's security parameter index for the IKE security
              association.
            format: int64
            type: integer
          responder_security_parameter_index:
            description: Responder's security parameter index for the IKE security
              association.
            format: int64
            type: integer
          state:
            description: State of the IKE connection.
            enum:
            - none
            - connecting
            - established
            - dead_peer_probe
            type: string
          version:
            description: Internet key exchange protocol version.
            type: string
        type: object
      ipsec:
        description: Objects containing parameters specific to IPsec security association.
        properties:
          action:
            default: esp_trasnport
            description: Action for the IPsec security association.
            enum:
            - bypass
            - discard
            - esp_transport
            type: string
          inbound:
            description: Status for inbound parameters for the IPsec security association.
            properties:
              bytes:
                description: Number of inbound bytes for the IPsec security association.
                format: int64
                type: integer
              packets:
                description: Number of inbound packets for the IPsec security association.
                format: int64
                type: integer
              security_parameter_index:
                description: Inbound security parameter index for the IPSec security
                  association.
                format: int64
                type: integer
            type: object
          outbound:
            description: Status for outbound parameters for the IPsec security association.
            properties:
              bytes:
                description: Number of outbound bytes for the IPsec security association.
                format: int64
                type: integer
              packets:
                description: Number of outbound packets for the IPsec security association.
                format: int64
                type: integer
              security_parameter_index:
                description: Outbound security parameter index for the IPSec security
                  association.
                format: int64
                type: integer
            type: object
          state:
            description: State of the IPsec security association.
            type: string
        type: object
      lifetime:
        description: Lifetime for the security association in seconds.
        format: int64
        type: integer
      local_address:
        description: Local address of the security association.
        type: string
      name:
        description: Policy name for the security association.
        type: string
      node:
        description: Node with the security association.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      remote_address:
        description: Remote address of the security association.
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      type:
        default: ipsec
        description: Type of security association, it can be IPsec or IKE (Internet
          Key Exchange).
        enum:
        - ipsec
        - ike
        type: string
      uuid:
        description: Unique identifier of the security association.
        type: string
    type: object
    x-ntap-readOnly: true
  security_association_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      error:
        properties:
          arguments:
            description: Message arguments
            items:
              $ref: '#/definitions/error_arguments'
            readOnly: true
            type: array
          code:
            description: Error code
            example: '4'
            readOnly: true
            type: string
          message:
            description: Error message
            example: entry doesn't exist
            readOnly: true
            type: string
          target:
            description: The target parameter that caused the error.
            example: uuid
            readOnly: true
            type: string
        readOnly: true
        type: object
      num_records:
        description: Number of records
        example: 1
        type: integer
      records:
        items:
          description: Security association object for IPsec security association
            and IKE (Internet Key Exchange) security association.
          properties:
            cipher_suite:
              default: gcm256
              description: Cipher suite for the security association.
              enum:
              - aescbc
              - gcm256
              - gmac256
              type: string
            ike:
              description: Objects containing parameters specific to IKE (Internet
                Key Exchange) security association.
              properties:
                authentication:
                  default: psk
                  description: Authentication method for internet key exchange protocol.
                  enum:
                  - none
                  - psk
                  - cert
                  type: string
                initiator_security_parameter_index:
                  description: Initiator's security parameter index for the IKE security
                    association.
                  format: int64
                  type: integer
                responder_security_parameter_index:
                  description: Responder's security parameter index for the IKE security
                    association.
                  format: int64
                  type: integer
                state:
                  description: State of the IKE connection.
                  enum:
                  - none
                  - connecting
                  - established
                  - dead_peer_probe
                  type: string
                version:
                  description: Internet key exchange protocol version.
                  type: string
              type: object
            ipsec:
              description: Objects containing parameters specific to IPsec security
                association.
              properties:
                action:
                  default: esp_trasnport
                  description: Action for the IPsec security association.
                  enum:
                  - bypass
                  - discard
                  - esp_transport
                  type: string
                inbound:
                  description: Status for inbound parameters for the IPsec security
                    association.
                  properties:
                    bytes:
                      description: Number of inbound bytes for the IPsec security
                        association.
                      format: int64
                      type: integer
                    packets:
                      description: Number of inbound packets for the IPsec security
                        association.
                      format: int64
                      type: integer
                    security_parameter_index:
                      description: Inbound security parameter index for the IPSec
                        security association.
                      format: int64
                      type: integer
                  type: object
                outbound:
                  description: Status for outbound parameters for the IPsec security
                    association.
                  properties:
                    bytes:
                      description: Number of outbound bytes for the IPsec security
                        association.
                      format: int64
                      type: integer
                    packets:
                      description: Number of outbound packets for the IPsec security
                        association.
                      format: int64
                      type: integer
                    security_parameter_index:
                      description: Outbound security parameter index for the IPSec
                        security association.
                      format: int64
                      type: integer
                  type: object
                state:
                  description: State of the IPsec security association.
                  type: string
              type: object
            lifetime:
              description: Lifetime for the security association in seconds.
              format: int64
              type: integer
            local_address:
              description: Local address of the security association.
              type: string
            name:
              description: Policy name for the security association.
              type: string
            node:
              description: Node with the security association.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: node1
                  type: string
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              type: object
            remote_address:
              description: Remote address of the security association.
              type: string
            svm:
              description: SVM, applies only to SVM-scoped objects.
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  description: "The name of the SVM.\n"
                  example: svm1
                  type: string
                uuid:
                  description: |
                    The unique identifier of the SVM.
                  example: 02c9e252-41be-11e9-81d5-00a0986138f7
                  type: string
              type: object
            type:
              default: ipsec
              description: Type of security association, it can be IPsec or IKE (Internet
                Key Exchange).
              enum:
              - ipsec
              - ike
              type: string
            uuid:
              description: Unique identifier of the security association.
              type: string
          type: object
          x-ntap-readOnly: true
        type: array
    type: object
  security_audit:
    properties:
      cli:
        description: Enable auditing of CLI GET Operations. Valid in PATCH
        type: boolean
      http:
        description: Enable auditing of HTTP GET Operations. Valid in PATCH
        type: boolean
      ontapi:
        description: Enable auditing of ONTAP API GET operations. Valid in PATCH
        type: boolean
    type: object
  security_audit_log:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      application:
        description: |
          This identifies the "application" by which the request was processed.
        enum:
        - internal
        - console
        - rsh
        - telnet
        - ssh
        - ontapi
        - http
        readOnly: true
        type: string
      command_id:
        description: |
          This is the command ID for this request.
          Each command received on a CLI session is assigned a command ID. This enables you to correlate a request and response.
        readOnly: true
        type: string
      index:
        description: Internal index for accessing records with same time/node. This
          is a 64 bit unsigned value.
        readOnly: true
        type: integer
      input:
        description: The request.
        readOnly: true
        type: string
      location:
        description: This identifies the location of the remote user. This is an IP
          address or "console".
        readOnly: true
        type: string
      message:
        description: This is an optional field that might contain "error" or "additional
          information" about the status of a command.
        readOnly: true
        type: string
      node:
        description: Node where the audit message resides.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      scope:
        description: Set to "svm" when the request is on a data SVM; otherwise set
          to "cluster".
        enum:
        - svm
        - cluster
        type: string
      session_id:
        description: |
          This is the session ID on which the request is received. Each SSH session is assigned a session ID.
          Each http/ontapi/snmp request is assigned a unique session ID.
        readOnly: true
        type: string
      state:
        description: State of of this request.
        enum:
        - pending
        - success
        - error
        readOnly: true
        type: string
      svm:
        description: This is the SVM through which the user connected.
        properties:
          name:
            type: string
        readOnly: true
        type: object
      timestamp:
        description: Log entry timestamp. Valid in URL
        readOnly: true
        type: string
      user:
        description: Username of the remote user.
        readOnly: true
        type: string
    type: object
  security_audit_log_forward:
    properties:
      address:
        description: Destination syslog|splunk host to forward audit records to. This
          can be an IP address (IPv4|IPv6) or a hostname.
        type: string
        x-ntap-readCreate: true
      facility:
        description: This is the standard Syslog Facility value that is used when
          sending audit records to a remote server.
        enum:
        - kern
        - user
        - local0
        - local1
        - local2
        - local3
        - local4
        - local5
        - local6
        - local7
        type: string
      port:
        description: |
          Destination Port. The default port depends on the protocol chosen:
          For un-encrypted destinations the default port is 514.
          For encrypted destinations the default port is 6514.
        type: integer
        x-ntap-readCreate: true
      protocol:
        default: udp_unencrypted
        description: Log forwarding protocol
        enum:
        - udp_unencrypted
        - tcp_unencrypted
        - tcp_encrypted
        type: string
        x-ntap-readCreate: true
      verify_server:
        description: This is only applicable when the protocol is tcp_encrypted. This
          controls whether the remote server's certificate is validated. Setting "verify_server"
          to "true" will enforce validation of remote server's certificate. Setting
          "verify_server" to "false" will not enforce validation of remote server's
          certificate.
        type: boolean
    type: object
  security_audit_log_forward_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/security_audit_log_forward'
        type: array
    type: object
  security_audit_log_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/security_audit_log'
        type: array
    type: object
  security_certificate:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ca:
        description: Certificate authority
        maxLength: 256
        minLength: 1
        readOnly: true
        type: string
      common_name:
        description: FQDN or custom common name. Provide on POST when creating a self-signed
          certificate.
        example: test.domain.com
        type: string
      expiry_time:
        description: Certificate expiration time. Can be provided on POST if creating
          self-signed certificate. The expiration time range is between 1 day to 10
          years.
        format: datetime
        type: string
      hash_function:
        default: sha256
        description: Hashing function. Can be provided on POST when creating a self-signed
          certificate. Hash functions md5 and sha1 are not allowed on POST.
        enum:
        - sha1
        - sha256
        - md5
        - sha224
        - sha384
        - sha512
        type: string
      intermediate_certificates:
        description: Chain of intermediate Certificates in PEM format. Only valid
          in POST when installing a certificate.
        items:
          description: Public key Certificate
          example: '-----BEGIN CERTIFICATE----- MIIBuzCCAWWgAwIBAgIIFTZBrqZwUUMwDQYJKoZIhvcNAQELBQAwHDENMAsGA1UE
            AxMEVEVTVDELMAkGA1UEBhMCVVMwHhcNMTgwNjA4MTgwOTAxWhcNMTkwNjA4MTgw OTAxWjAcMQ0wCwYDVQQDEwRURVNUMQswCQYDVQQGEwJVUzBcMA0GCSqGSIb3DQEB
            AQUAA0sAMEgCQQDaPvbqUJJFJ6NNTyK3Yb+ytSjJ9aa3yUmYTD9uMiP+6ycjxHWB e8u9z6yCHsW03ync+dnhE5c5z8wuDAY0fv15AgMBAAGjgYowgYcwDAYDVR0TBAUw
            AwEB/zALBgNVHQ8EBAMCAQYwHQYDVR0OBBYEFMJ7Ev/o/3+YNzYh5XNlqqjnw4zm MEsGA1UdIwREMEKAFMJ7Ev/o/3+YNzYh5XNlqqjnw4zmoSCkHjAcMQ0wCwYDVQQD
            EwRURVNUMQswCQYDVQQGEwJVU4IIFTZBrqZwUUMwDQYJKoZIhvcNAQELBQADQQAv DovYeyGNnknjGI+TVNX6nDbyzf7zUPqnri0KuvObEeybrbPW45sgsnT5dyeE/32U
            9Yr6lklnkBtVBDTmLnrC -----END CERTIFICATE-----'
          type: string
        type: array
      key_size:
        default: 2048
        description: Key size of requested Certificate in bits. One of 512, 1024,
          1536, 2048, 3072. Can be provided on POST if creating self-signed certificate.
          Key size of 512 is not allowed on POST.
        type: integer
      private_key:
        description: Private key Certificate in PEM format. Only valid for create
          when installing a CA-signed certificate. This is not audited.
        example: '-----BEGIN PRIVATE KEY----- MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAu1/a8f3G47cZ6pel
          Hd3aONMNkGJ8vSCH5QjicuDm92VtVwkAACEjIoZSLYlJvPD+odL+lFzVQSmkneW7 VCGqYQIDAQABAkAcfNpg6GCQxoneLOghvlUrRotNZGvqpUOEAvHK3X7AJhz5SU4V
          an36qvsAt5ghFMVM2iGvGaXbj0dAd+Jg64pxAiEA32Eh9mPtFSmZhTIUMeGcPmPk qIYCEuP8a/ZLmI9s4TsCIQDWvLQuvjSVfwPhi0TFAb5wqAET8X5LBFqtGX5QlUep
          EwIgFnqM02Gc4wtLoqa2d4qPkYu13+uUW9hLd4XSd6i/OS8CIQDT3elU+Rt+qIwW u0cFrVvNYSV3HNzDfS9N/IoxTagfewIgPvXADe5c2EWbhCUkhN+ZCf38AKewK9TW
          lQcDy4L+f14= -----END PRIVATE KEY-----'
        type: string
      public_certificate:
        description: Public key Certificate in PEM format. If this is not provided
          in POST, a self-signed certificate is created.
        example: '-----BEGIN CERTIFICATE----- MIIBuzCCAWWgAwIBAgIIFTZBrqZwUUMwDQYJKoZIhvcNAQELBQAwHDENMAsGA1UE
          AxMEVEVTVDELMAkGA1UEBhMCVVMwHhcNMTgwNjA4MTgwOTAxWhcNMTkwNjA4MTgw OTAxWjAcMQ0wCwYDVQQDEwRURVNUMQswCQYDVQQGEwJVUzBcMA0GCSqGSIb3DQEB
          AQUAA0sAMEgCQQDaPvbqUJJFJ6NNTyK3Yb+ytSjJ9aa3yUmYTD9uMiP+6ycjxHWB e8u9z6yCHsW03ync+dnhE5c5z8wuDAY0fv15AgMBAAGjgYowgYcwDAYDVR0TBAUw
          AwEB/zALBgNVHQ8EBAMCAQYwHQYDVR0OBBYEFMJ7Ev/o/3+YNzYh5XNlqqjnw4zm MEsGA1UdIwREMEKAFMJ7Ev/o/3+YNzYh5XNlqqjnw4zmoSCkHjAcMQ0wCwYDVQQD
          EwRURVNUMQswCQYDVQQGEwJVU4IIFTZBrqZwUUMwDQYJKoZIhvcNAQELBQADQQAv DovYeyGNnknjGI+TVNX6nDbyzf7zUPqnri0KuvObEeybrbPW45sgsnT5dyeE/32U
          9Yr6lklnkBtVBDTmLnrC -----END CERTIFICATE-----'
        type: string
      scope:
        $ref: '#/definitions/network_scope_readonly'
      serial_number:
        description: Serial number of certificate.
        maxLength: 40
        minLength: 1
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      type:
        description: |
          Type of Certificate. The following types are supported:
          * client - a certificate and its private key used by an SSL client in ONTAP.
          * server - a certificate and its private key used by an SSL server in ONTAP.
          * client_ca - a Certificate Authority certificate used by an SSL server in ONTAP to verify an SSL client certificate.
          * server_ca - a Certificate Authority certificate used by an SSL client in ONTAP to verify an SSL server certificate.
          * root_ca - a self-signed certificate used by ONTAP to sign other certificates by acting as a Certificate Authority.
        enum:
        - client
        - server
        - client_ca
        - server_ca
        - root_ca
        type: string
      uuid:
        description: Unique ID that identifies a certificate.
        readOnly: true
        type: string
    type: object
  security_certificate_reference:
    description: Security certificate object reference
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      uuid:
        description: Certificate UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  security_certificate_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/security_certificate'
        type: array
    type: object
  security_certificate_sign:
    properties:
      expiry_time:
        default: 365days
        description: Certificate expiration time. The allowed expiration time range
          is between 1 day to 10 years.
        format: datetime
        type: string
      hash_function:
        default: sha256
        description: Hashing function
        enum:
        - sha256
        - sha224
        - sha384
        - sha512
        type: string
      signing_request:
        description: Certificate signing request to be signed by the given certificate
          authority. Request should be in X509 PEM format.
        example: '''-----BEGIN CERTIFICATE REQUEST----- MIICYDCCAUgCAQAwGzEMMAoGA1UEAxMDQUJDMQswCQYDVQQGEwJVUzCCASIwDQYJ
          KoZIhvcNAQEBBQADggEPADCCAQoCggEBAPF+82SlqT3Vyu3Jx4IAwHcO5EGwLOxy zQ6KNjz71Fca0n1/A1CbCPyOsSupGVObvdWxX7xLVMJ2SXb7h43GCqYyX6FXJO4F
          HOpmLvB+jxdeiW7SDbiZyLUlsvA+oRO/uNlcug773QZdKLjJD64erZZMRUNbUJB8 bARxAUi0FPvgTraSQ0UW5sRLiGKeAyKA4wekYe1VgjHRTBizFbD4dI3njfva/2Bl
          jf+kkulgcLJTuJNtkgeimqMKyraYuleYcYk2K+C//0NuNOuPbDfTXCM7O61vik09 Szi8nLN7OXE9KoAA93U/BCpSfpl8XIb4cGnEr8hgVHOOtZSo+KZBFxMCAwEAAaAA
          MA0GCSqGSIb3DQEBCwUAA4IBAQC2vFYpvgsFrm5GnPx8tOBD1xsTyYjbWJMD8hAF lFrvF9Sw9QGCtDyacxkwgJhQx8l8JiIS5GOY6WWLBl9FMkLQNAhDL9xF3WF7vfYq
          RKgrz3bd/Vg96fsRZNYIPLGmoEaqLOh3FOCGc2VbdsR9PwOn3fwthxkIRd6ds6/q jc5cpSmVsCOgu+OKcpRXikYDbkWXfTZ1AhSfn6njBYFdZ9+PNAu/0JRQh5bX60nO
          5heniTcAJLwUZP/CQ8nxHY0Wqy+1rAtM33d5cVmhUlBXQSIru/0ZkA/b9fK5Zv8E ZMADYUoEvIG59Vxhyci8lzYf+Mxl8qBSF+ZdC4yWhzDqZtM9
          -----END CERTIFICATE REQUEST-----'''
        type: string
    type: object
  security_certificate_sign_response:
    properties:
      public_certificate:
        description: CA signed public key Certificate
        type: string
    type: object
  security_config:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      onboard_key_manager_configurable_status:
        description: |
          Indicates whether the Onboard Key Manager can be configured in the cluster.
        properties:
          code:
            description: Code corresponding to the status message. Returns a 0 if
              the Onboard Key Manager can be configured in the cluster.
            example: 65537300
            type: integer
          message:
            description: Reason that Onboard Key Manager cannot be configured in the
              cluster.
            example: No platform support for volume encryption in following nodes
              - node1, node2.
            type: string
          supported:
            description: Set to true if the Onboard Key Manager can be configured
              in the cluster.
            type: boolean
        readOnly: true
        type: object
    type: object
  security_key_manager:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      external:
        description: Configures external key management
        properties:
          client_certificate:
            description: Client certificate
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              uuid:
                description: Certificate UUID
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          server_ca_certificates:
            description: The UUIDs of the server CA certificates already installed
              in the cluster or SVM. The array of certificates are common for all
              the keyservers per SVM.
            items:
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                uuid:
                  description: Certificate UUID
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              type: object
            type: array
          servers:
            description: The set of external key servers.
            items:
              $ref: '#/definitions/key_server_readcreate'
            maxItems: 4
            type: array
        type: object
      is_default_data_at_rest_encryption_disabled:
        default: false
        description: Indicates whether default data-at-rest encryption is disabled
          in the cluster.
        type: boolean
        x-ntap-readModify: true
      onboard:
        description: Configures onboard key management. After configuring onboard
          key management, save the encrypted configuration data in a safe location
          so that you can use it if you need to perform a manual recovery operation.
        properties:
          enabled:
            description: Is the onboard key manager enabled?
            readOnly: true
            type: boolean
          existing_passphrase:
            description: The cluster-wide passphrase. This is not audited.
            example: The cluster password of length 32-256 ASCII characters.
            format: password
            type: string
            x-ntap-modifyOnly: true
          key_backup:
            description: Backup of the onboard key manager's key hierarchy. It is
              required to save this backup after configuring the onboard key manager
              to help in the recovery of the cluster in case of catastrophic failures.
            example: '''--------------------------BEGIN BACKUP--------------------------
              TmV0QXBwIEtleSBCbG9iAAEAAAAEAAAAcAEAAAAAAAAxBFWWAAAAACEAAAAAAAAA QAAAAAAAAABzDyyVAAAAALI5Jsjvy6gUxnT78KoDKXHYb6sSeraM00quOULY6BeV
              n6dMFxuErCD1lbERaOQZSuaYy1p8oQHtTEfGMLZM4TYiAAAAAAAAACgAAAAAAAAA 3WTh7gAAAAAAAAAAAAAAAAIAAAAAAAgAZJEIWvdeHr5RCAvHGclo+wAAAAAAAAAA
              IgAAAAAAAAAoAAAAAAAAAEOTcR0AAAAAAAAAAAAAAAACAAAAAAAJAGr3tJA/LRzU QRHwv+1aWvAAAAAAAAAAACQAAAAAAAAAgAAAAAAAAADV1Vd/AAAAAMFM9Q229Bhp
              mDaTSdqku5DCd8wG+fOZSr4bx4JT5WHvV/r5gJnXDQQAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOZXRBcHAgS2V5IEJsb2IA AQAAAAMAAAAYAQAAAAAAALgePkcAAAAAIgAAAAAAAAAoAAAAAAAAAEOTcR0AAAAA
              AAAAAAAAAAACAAAAAAAJAGr3tJA/LRzUQRHwv+1aWvAAAAAAAAAAACIAAAAAAAAA KAAAAAAAAACIlCHZAAAAAAAAAAAAAAAAAgAAAAAAAQCafcabsxRXMM7gxhLRrzxh
              AAAAAAAAAAAkAAAAAAAAAIAAAAAAAAAA2JjQBQAAAACt4IqXcNpVggahl0axLsN4 yQjnNVKWY7mANB29O42hI7b70DTGCTaVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAE5ldEFwcCBLZXkgQmxvYgABAAAAAwAAABgBAAAAAAAA
              7sbaoQAAAAAiAAAAAAAAACgAAAAAAAAAQ5NxHQAAAAAAAAAAAAAAAAIAAAAAAAkA ave0kD8tHNRBEfC/7Vpa8AAAAAAAAAAAIgAAAAAAAAAoAAAAAAAAALOHfWkAAAAA
              AAAAAAAAAAACAAAAAAABAMoI9UxrHOGthQm/CB+EHdAAAAAAAAAAACQAAAAAAAAA gAAAAAAAAACnMmUtAAAAAGVk8AtPzENFgsGdsFvnmucmYrlQCsFew0HDSFKaZqK6
              W8IEVzBAhPoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
              ---------------------------END BACKUP---------------------------'''
            readOnly: true
            type: string
          passphrase:
            description: The cluster-wide passphrase. This is not audited.
            example: The cluster password of length 32-256 ASCII characters.
            format: password
            type: string
            x-ntap-writeOnly: true
          synchronize:
            description: Synchronizes missing onboard keys on any node in the cluster.
              If a node is added to a cluster that has onboard key management configured,
              the synchronize operation needs to be performed in a PATCH operation.
              In a MetroCluster configuration, if onboard key management is enabled
              on one site, then the synchronize operation needs to be run as a POST
              operation on the remote site providing the same passphrase.
            type: boolean
            x-ntap-writeOnly: true
        type: object
      scope:
        $ref: '#/definitions/network_scope_readonly'
      status:
        description: |
          Optional status information on the current state of the key manager indicating if it is fully setup or requires more action.
        properties:
          code:
            description: Code corresponding to the status message. Returns 0 if the
              setup is complete. This is an advanced property; there is an added cost
              to retrieving its value. The property is not populated for either a
              collection GET or an instance GET unless it is explicitly requested
              using the `fields` query parameter or GET for all advanced properties
              is enabled.
            example: 346758
            type: integer
          message:
            description: Current state of the key manager indicating any additional
              steps to perform to finish the setup. This is an advanced property;
              there is an added cost to retrieving its value. The property is not
              populated for either a collection GET or an instance GET unless it is
              explicitly requested using the `fields` query parameter or GET for all
              advanced properties is enabled.
            example: This cluster is part of a MetroCluster configuration. Use the
              REST API POST method security/key_managers/ with the synchronize option
              and the same passphrase on the partner cluster before proceeding with
              any key manager operations.  Failure to do so could lead to switchover
              or switchback failure.
            type: string
        readOnly: true
        type: object
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        readOnly: true
        type: string
      volume_encryption:
        description: |
          Indicates whether volume encryption is supported in the cluster.
        properties:
          code:
            description: Code corresponding to the status message. Returns a 0 if
              volume encryption is supported in all nodes of the cluster.
            example: 346758
            type: integer
          message:
            description: Reason for not supporting volume encryption.
            example: No platform support for volume encryption in following nodes
              - node1, node2.
            type: string
          supported:
            description: Set to true when volume encryption support is available on
              all nodes of the cluster.
            type: boolean
        readOnly: true
        type: object
    type: object
  security_key_manager_reference:
    description: Security key manager object reference.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      uuid:
        description: Key manager UUID
        example: 1cd8a442-86d1-11e0-ae1c-123478563434
        type: string
    type: object
  security_key_manager_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/security_key_manager'
        type: array
    type: object
  security_saml_sp:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      certificate:
        properties:
          ca:
            description: Server certificate issuing certificate authority (CA).  This
              cannot be used with the server certificate common name.
            maxLength: 256
            minLength: 1
            type: string
            x-ntap-readCreate: true
          common_name:
            description: Server certificate common name.  This cannot be used with
              the certificate authority (CA) or serial_number.
            example: cluster1
            type: string
            x-ntap-readCreate: true
          serial_number:
            description: Server certificate serial number.  This cannot be used with
              the server certificate common name.
            example: 1506B24A94F566BA
            maxLength: 40
            minLength: 1
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      enabled:
        default: true
        description: The SAML service provider is enabled.  Valid for PATCH and GET
          operations only.
        type: boolean
        x-ntap-readModify: true
      host:
        description: The SAML service provider host.
        type: string
        x-ntap-readCreate: true
      idp_uri:
        description: The identity provider (IdP) metadata location. Required for POST
          operations.
        example: https://idp.example.com/FederationMetadata/2007-06/FederationMetadata.xml
        type: string
        x-ntap-readCreate: true
    type: object
  security_style:
    description: Security style. Valid in POST or PATCH.
    enum:
    - unix
    - ntfs
    - mixed
    type: string
  self_link:
    properties:
      self:
        $ref: '#/definitions/href'
    readOnly: true
    type: object
  service_processor:
    properties:
      dhcp_enabled:
        description: Set to "true" to use DHCP to configure an IPv4 interface.
        type: boolean
        x-ntap-readModify: true
      firmware_version:
        description: The version of firmware installed.
        readOnly: true
        type: string
      ipv4_interface:
        description: Object to setup an interface along with its default router.
        properties:
          address:
            description: IPv4 or IPv6 address
            example: 10.10.10.7
            type: string
          gateway:
            description: The IPv4 or IPv6 address of the default router.
            example: 10.1.1.1
            type: string
          netmask:
            $ref: '#/definitions/ip_netmask'
        type: object
      ipv6_interface:
        description: Object to setup an interface along with its default router.
        properties:
          address:
            description: IPv6 address
            example: fd20:8b1e:b255:5011:10:141:4:97
            type: string
          gateway:
            description: The IPv6 address of the default router.
            example: fd20:8b1e:b255:5011:10::1
            type: string
          netmask:
            description: The IPv6 netmask/prefix length. The default value is 64 with
              a valid range of 1 to 127.
            example: 64
            type: integer
        type: object
        x-ntap-readModify: true
      link_status:
        enum:
        - up
        - down
        - disabled
        - unknown
        readOnly: true
        type: string
      mac_address:
        readOnly: true
        type: string
      state:
        enum:
        - online
        - offline
        - degraded
        - rebooting
        - unknown
        - updating
        - node_offline
        - sp_daemon_offline
        readOnly: true
        type: string
    type: object
  shelf:
    properties:
      bays:
        items:
          properties:
            has_disk:
              type: boolean
            id:
              example: 0
              type: integer
            state:
              enum:
              - unknown
              - ok
              - error
              example: ok
              type: string
            type:
              enum:
              - unknown
              - single_disk
              - multi_lun
              example: single_disk
              type: string
          type: object
        type: array
      connection_type:
        enum:
        - unknown
        - fc
        - sas
        - nvme
        example: sas
        type: string
      disk_count:
        example: 12
        type: integer
      drawers:
        items:
          properties:
            closed:
              type: boolean
            disk_count:
              example: 12
              type: integer
            error:
              type: string
            id:
              type: integer
            part_number:
              example: 111-03071
              type: string
            serial_number:
              example: 021604008263
              type: string
            state:
              enum:
              - ok
              - error
              example: ok
              type: string
          type: object
        type: array
      frus:
        items:
          properties:
            firmware_version:
              example: 0191
              type: string
            id:
              type: integer
            part_number:
              example: 111-00690+A2
              type: string
            serial_number:
              example: 8000166294
              type: string
            state:
              enum:
              - ok
              - error
              example: error
              type: string
            type:
              enum:
              - module
              - psu
              example: module
              type: string
          type: object
        type: array
      id:
        example: 1
        type: string
      internal:
        type: boolean
      model:
        example: DS2246
        type: string
      module_type:
        enum:
        - unknown
        - iom6
        - iom6e
        - iom12
        - iom12e
        - iom12f
        - nsm100
        - psm3e
        example: iom6
        type: string
      name:
        example: 1.1
        type: string
      paths:
        items:
          description: Storage port
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: 2a
              type: string
            node:
              properties:
                _links:
                  properties:
                    self:
                      $ref: '#/definitions/href'
                  readOnly: true
                  type: object
                name:
                  example: node1
                  type: string
                uuid:
                  example: 1cd8a442-86d1-11e0-ae1c-123478563412
                  type: string
              readOnly: true
              type: object
          type: object
        type: array
      ports:
        items:
          properties:
            cable:
              properties:
                identifier:
                  example: 500a0980000b6c3f-50000d1703544b80
                  type: string
                length:
                  example: 2m
                  type: string
                part_number:
                  example: 112-00431+A0
                  type: string
                serial_number:
                  example: 616930439
                  type: string
              type: object
            designator:
              enum:
              - circle
              - square
              - 1
              - 2
              - 3
              - 4
              example: square
              type: string
            id:
              example: 0
              type: integer
            internal:
              type: boolean
            mac_address:
              type: string
            module_id:
              enum:
              - a
              - b
              example: a
              type: string
            remote:
              properties:
                chassis:
                  type: string
                mac_address:
                  type: string
                phy:
                  example: 12
                  type: string
                port:
                  type: string
                wwn:
                  example: 50000D1703544B80
                  type: string
              type: object
            state:
              enum:
              - connected
              - disconnected
              - error
              example: connected
              type: string
            wwn:
              example: 500A0980000B6C3F
              type: string
          type: object
        type: array
      serial_number:
        example: SHFMS1514000895
        type: string
      state:
        enum:
        - unknown
        - ok
        - error
        example: ok
        type: string
      uid:
        example: 7777841915827391056
        type: string
    readOnly: true
    type: object
  shelf_reference:
    description: Shelf
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      uid:
        example: 7777841915827391056
        type: string
    type: object
  shelf_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/shelf'
        type: array
    type: object
  snaplock_compliance_clock:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      time:
        description: Compliance clock time
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
    type: object
  snaplock_compliance_clock_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snaplock_compliance_clock'
        type: array
    type: object
  snaplock_file_fingerprint:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      algorithm:
        default: sha256
        description: The digest algorithm which is used for the fingerprint computation
        enum:
        - md5
        - sha256
        example: sha256
        type: string
        x-ntap-readCreate: true
      data_fingerprint:
        description: The digest value of data of the file. The fingerprint is base64
          encoded. This field is not included if the scope is metadata-only.
        example: MOFJVevxNSJm3C/4Bn5oEEYH51CrudOzZYK4r5Cfy1g=
        readOnly: true
        type: string
      file_size:
        description: The size of the file in bytes.
        example: 1048576
        readOnly: true
        type: integer
      file_type:
        description: The type of the file.
        enum:
        - worm
        - worm_appendable
        - worm_active_log
        - worm_log
        - regular
        example: worm
        readOnly: true
        type: string
      id:
        description: A unique identifier for the fingerprint operation
        example: 17039367
        readOnly: true
        type: integer
      metadata_fingerprint:
        description: The digest value of metadata of the file. The metadata fingerprint
          is calculated for file size, file ctime, file mtime, file crtime, file retention
          time, file uid, file gid, and file type. The fingerprint is base64 encoded.
          This field is not included if the scope is data-only.
        example: 8iMjqJXiNcqgXT5XuRhLiEwIrJEihDmwS0hrexnjgmc=
        readOnly: true
        type: string
      path:
        description: Specifies the path on which file fingerprint operation is running
          or has completed. Specifies the path relative to the output volume root,
          of the form "/path". The path can be path to a file or a directory.
        example: /homedir/dir1
        type: string
        x-ntap-readCreate: true
      scope:
        default: data_and_metadata
        description: The scope of the file which is used for the fingerprint computation
        enum:
        - data_and_metadata
        - data_only
        - metadata_only
        example: data_only
        readOnly: true
        type: string
        x-ntap-readCreate: true
      state:
        description: Specifies the status of fingerprint operation.
        enum:
        - in_progress
        - failed
        - aborting
        - completed
        example: completed
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  snaplock_file_fingerprint_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records.
        type: integer
      records:
        items:
          $ref: '#/definitions/snaplock_file_fingerprint'
        type: array
    type: object
  snaplock_file_retention:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      expiry_time:
        description: Expiry time of the file in date-time format.
        example: 2058-06-04T19:00:00Z
        format: date-time
        type: string
        x-ntap-readModify: true
      file_path:
        description: Specifies the volume relative path of the file
        example: /dir1/file
        type: string
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  snaplock_legal_hold_operation:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: Operation ID.
        example: 16842759
        readOnly: true
        type: integer
      num_files_failed:
        description: Specifies the number of files on which legal-hold operation failed.
        example: 0
        readOnly: true
        type: string
      num_files_processed:
        description: Specifies the number of files on which legal-hold operation was
          successful.
        example: 30
        readOnly: true
        type: string
      num_files_skipped:
        description: Specifies the number of files on which legal-hold begin operation
          was skipped. The legal-hold begin operation is skipped on a file if it is
          already under hold for a given litigation.
        example: 10
        readOnly: true
        type: string
      num_inodes_ignored:
        description: Specifies the number of inodes on which the legal-hold operation
          was not attempted because they were not regular files.
        example: 10
        readOnly: true
        type: string
      path:
        description: Specifies the path on which legal-hold operation is applied.
        example: /dir1
        type: string
        x-ntap-readCreate: true
      state:
        description: Specifies the status of legal-hold operation.
        enum:
        - in_progress
        - failed
        - aborting
        - completed
        example: completed
        readOnly: true
        type: string
      type:
        description: Specifies the type of legal-hold operation.
        enum:
        - begin
        - end
        example: begin
        type: string
        x-ntap-readModify: true
    type: object
  snaplock_litigation:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      id:
        description: Specifies the litigation ID.
        readOnly: true
        type: string
      name:
        description: Specifies the legal-hold litigation name.
        example: lit1
        type: string
      operations:
        items:
          $ref: '#/definitions/snaplock_legal_hold_operation'
        type: array
      path:
        description: Specifies the path on which legal-hold operation has to be applied.
        example: /dir1
        type: string
        x-ntap-createOnly: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  snaplock_litigation_file:
    properties:
      file:
        description: Name of the file including the path from the root.
        items:
          type: string
        type: array
      sequence_index:
        description: Sequence index of files path list.
        type: integer
    type: object
  snaplock_litigation_file_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        description: List of Files under the specified litigation.
        items:
          properties:
            file:
              description: Name of the file including the path from the root.
              items:
                type: string
              type: array
            sequence_index:
              description: Sequence index of files path list.
              type: integer
          type: object
        type: array
    type: object
  snaplock_litigation_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of Records
        type: integer
      records:
        items:
          $ref: '#/definitions/snaplock_litigation'
        type: array
    type: object
  snaplock_log:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      log_archive:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          archive:
            default: false
            description: Archive the specified SnapLock log file for the given base_name,
              and create a new log file. If base_name is not mentioned, archive all
              log files.
            type: boolean
            x-ntap-modifyOnly: true
          base_name:
            description: Base name of log file
            enum:
            - legal_hold
            - privileged_delete
            - system
            type: string
          expiry_time:
            description: Expiry time of the log file in date-time format. Value '9999-12-31T00:00:00Z'
              indicates infinite expiry time.
            example: 2058-06-04T19:00:00Z
            format: date-time
            readOnly: true
            type: string
          path:
            description: Absolute path of the log file in the volume
            example: /snaplock_log/system_logs/20180822_005947_GMT-present
            readOnly: true
            type: string
          size:
            description: Size of the log file in bytes
            example: 20000
            readOnly: true
            type: integer
        type: object
      log_files:
        items:
          $ref: '#/definitions/snaplock_log_file'
        type: array
        x-ntap-readCreate: true
      log_volume:
        $ref: '#/definitions/snaplock_log_volume'
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  snaplock_log_file:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      archive:
        default: false
        description: Archive the specified SnapLock log file for the given base_name,
          and create a new log file. If base_name is not mentioned, archive all log
          files.
        type: boolean
        x-ntap-modifyOnly: true
      base_name:
        description: Base name of log file
        enum:
        - legal_hold
        - privileged_delete
        - system
        type: string
      expiry_time:
        description: Expiry time of the log file in date-time format. Value '9999-12-31T00:00:00Z'
          indicates infinite expiry time.
        example: 2058-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      path:
        description: Absolute path of the log file in the volume
        example: /snaplock_log/system_logs/20180822_005947_GMT-present
        readOnly: true
        type: string
      size:
        description: Size of the log file in bytes
        example: 20000
        readOnly: true
        type: integer
    type: object
  snaplock_log_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snaplock_log'
        type: array
    type: object
  snaplock_log_volume:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      max_log_size:
        description: Maximum size of log file in bytes
        example: 20971520
        type: integer
      retention_period:
        default: P6M
        description: Specifies the default log record retention period. The retention
          period value represents a duration and must be specified in the ISO-8601
          duration format. The retention period can be in years, months, days, hours,
          minutes and seconds. A period specified for years, months and days is represented
          in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively.
          For example "P10Y" represents a duration of 10 years. A duration in hours,
          minutes and seconds is represented by "PT<num>H", "PT<num>M", and "PT<num>S"
          respectively. The period string must contain only a single time element
          i.e. either years, months, days, hours, minutes or seconds. A duration which
          combines different periods is not supported, example "P1Y10M" is not supported.
          Apart from the duration specified in the ISO-8601 format, the retention
          period field also accepts the string "infinite".
        example: P30M
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  snaplock_retention_policy:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Specifies the EBR policy name
        type: string
      retention_period:
        default: P6M
        description: Specifies the retention period of an EBR policy. The retention
          period value represents a duration and must be specified in the ISO-8601
          duration format. The retention period can be in years, months, days, hours
          or minutes. A period specified for years, months and days is represented
          in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively.
          For example "P10Y" represents a duration of 10 years. Similarly, a duration
          in hours, minutes is represented by "PT<num>H", "PT<num>M" respectively.
          The period string must contain only a single time element i.e. either years,
          months, days, hours or minutes. A duration which combines different periods
          is not supported, example "P1Y10M" is not supported. Apart from the duration
          specified in the ISO-8601 format, the retention period field also accepts
          the string "infinite".
        example: P30M
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  snaplock_retention_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snaplock_retention_policy'
        type: array
    type: object
  snapmirror_destination_creation:
    description: Use this object to provision the destination endpoint when establishing
      a SnapMirror relationship for a FlexVol volume, FlexGroup volume, or SVM. Given
      a source endpoint, the destination endpoint is provisioned in the SVM specified
      in the "destination.path" property. The SVM destination endpoint can only be
      provisioned on the local cluster. To provision the SVM destination endpoint
      use the optional "source.cluster.name" property to specify the remote cluster
      name or use the optional "source.cluster.uuid" property to specify the remote
      cluster UUID. When "create_destination.enabled" option is specified while making
      a POST for a SnapMirror relationship, the relationship can be automatically
      initialized by setting the "state" either to "snapmirrored" when the policy
      is of type "async" or to "in_sync" when the policy is of type "sync". The "destination.path"
      property must specify the destination endpoint path. For example, for FlexVol
      volume and FlexGroup volume, the "destination.path" can be specified as <destination-SVM-name:dp-volume-name>,
      and for SVM data protection, the "destination.path" must be specified as <destination-SVM-name:>.
      For a FlexVol volume or FlexGroup volume destination endpoint, the properties
      in this object can be specified either from the source or destination cluster.
      For an SVM destination endpoint, the properties in this object can be specified
      from the destination cluster. This object is not supported for non ONTAP endpoints.
    properties:
      enabled:
        description: Optional property to create the destination endpoint when establishing
          a SnapMirror relationship. It is assumed to be "false" if no other property
          is set and assumed to be "true" if any other property is set.
        type: boolean
      storage_service:
        properties:
          enabled:
            description: This property indicates whether to create the destination
              endpoint using storage service.
            type: boolean
          enforce_performance:
            default: false
            description: Optional property to enforce storage service performance
              on the destination endpoint when the destination endpoint is used for
              read-write operations. This property is applicable to FlexVol volume
              and FlexGroup volume endpoints.
            type: boolean
          name:
            description: Optional property to specify the storage service name for
              the destination endpoint. This property is considered when the property
              "create_destination.storage_service.enabled" is set to "true". When
              the property "create_destination.storage_service.enabled" is set to
              "true" and the "create_destination.storage_service.name" for the endpoint
              is not specified, then ONTAP selects the highest storage service available
              on the cluster to provision the destination endpoint. This property
              is applicable to FlexVol volume and FlexGroup volume endpoints.
            enum:
            - extreme
            - performance
            - value
            type: string
        type: object
      tiering:
        properties:
          policy:
            description: Optional property to specify the destination endpoint's tiering
              policy when "create_destination.tiering.supported" is set to "true".
              This property is applicable to FlexVol volume and FlexGroup volume endpoints.
              This property determines whether the user data blocks of the destination
              endpoint in a FabricPool will be tiered to the cloud store when they
              become cold. FabricPool combines flash (performance tier) with a cloud
              store into a single aggregate. Temperature of the destination endpoint
              volume blocks increases if they are accessed frequently and decreases
              when they are not.<br>all &dash; This policy allows tiering of both
              destination endpoint Snapshot copies and the user transfered data blocks
              to the cloud store as soon as possible by ignoring the temperature on
              the volume blocks. This tiering policy is not applicable for synchronous
              relationships.<br>auto &dash; This policy allows tiering of both destination
              endpoint Snapshot copies and the active file system user data to the
              cloud store<br>none &dash; Destination endpoint volume blocks will not
              be tiered to the cloud store.<br>snapshot_only &dash; This policy allows
              tiering of only the destination endpoint volume Snapshot copies not
              associated with the active file system. The default tiering policy is
              "snapshot_only" for a FlexVol volume and "none" for a FlexGroup volume.
            enum:
            - all
            - auto
            - none
            - snapshot_only
            type: string
          supported:
            description: Optional property to enable provisioning of the destination
              endpoint volumes on FabricPool aggregates. This property is applicable
              to FlexVol volume and FlexGroup volume endpoints. Only FabricPool aggregates
              are used if this property is set to "true" and only non FabricPool aggregates
              are used if this property is set to "false". Tiering support for a FlexGroup
              volume can be changed by moving all of the constituents to the required
              aggregates. Note that in order to tier data, not only do the destination
              endpoint volumes need to support tiering by using FabricPools, the "create_destination.tiering.policy"
              must not be "none". A destination endpoint that uses FabricPools but
              has a tiering "policy" of "none" supports tiering but will not tier
              any data.
            type: boolean
        type: object
    type: object
    x-ntap-createOnly: true
  snapmirror_endpoint:
    description: Endpoint of a SnapMirror relationship. For a GET request, the property
      "cluster" is populated when the endpoint is on a remote cluster. A POST request
      to create the destination SVM endpoint or to establish an SVM DR relationship
      must have the property "cluster" populated with the remote cluster details.
      A POST request to create the destination FlexVol volume or FlexGroup volume
      endpoints can optionally specify the "cluster" property. A POST request to establish
      a SnapMirror relationship when the source SVM and the destination SVM are not
      peered, must specify the "cluster" property.
    properties:
      cluster:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: cluster1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            format: uuid
            type: string
        type: object
      ipspace:
        default: Default
        description: Optional property to specify the IPSpace of the SVM.
        example: Default
        type: string
        x-ntap-createOnly: true
      path:
        description: |
          ONTAP FlexVol/FlexGroup - svm1:volume1
          ONTAP SVM               - svm1:
        example: svm1:volume1
        type: string
        x-ntap-readCreate: true
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        readOnly: true
        type: object
    type: object
  snapmirror_error:
    description: SnapMirror error
    properties:
      code:
        description: Error code
        type: integer
      message:
        description: Error message
        type: string
      parameters:
        description: Parameters for the error message
        items:
          type: string
        type: array
    type: object
  snapmirror_policy:
    description: SnapMirror policy information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: Comment associated with the policy.
        type: string
      identity_preservation:
        description: Specifies which configuration of the source SVM is replicated
          to the destination. This property is applicable only for SVM data protection
          and async policies.
        enum:
        - full
        - exclude_network_config
        - exclude_network_and_protocol_config
        type: string
      name:
        example: Asynchronous
        type: string
        x-ntap-readCreate: true
      network_compression_enabled:
        default: false
        description: Specifies whether network compression is enabled for transfers.
          This is applicable only to async policies.
        type: boolean
      retention:
        description: Policy on Snapshot copy retention. This is applicable only to
          async policies.
        items:
          $ref: '#/definitions/snapmirror_policy_rule'
        type: array
      scope:
        description: Set to "svm" for policies owned by an SVM, otherwise set to "cluster".
        enum:
        - svm
        - cluster
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      sync_common_snapshot_schedule:
        description: Schedule used to create common Snapshot copies for synchronous
          relationships.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Job schedule name
            example: weekly
            type: string
          uuid:
            description: Job schedule UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      sync_type:
        enum:
        - sync
        - strict_sync
        - active_sync
        type: string
        x-ntap-readCreate: true
      throttle:
        default: 0
        description: Throttle in KB/s. Default to unlimited.
        type: integer
      transfer_schedule:
        description: The schedule used to update asynchronous relationships.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Job schedule name
            example: weekly
            type: string
          uuid:
            description: Job schedule UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      type:
        default: async
        enum:
        - async
        - sync
        type: string
        x-ntap-readCreate: true
      uuid:
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  snapmirror_policy_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: Asynchronous
        type: string
      uuid:
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        type: string
    type: object
  snapmirror_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapmirror_policy'
        type: array
    type: object
  snapmirror_policy_rule:
    description: SnapMirror policy rule for retention.
    properties:
      count:
        description: Number of Snapshot copies to be kept for retention.
        example: 7
        type: integer
      creation_schedule:
        description: Schedule used to create Snapshot copies on the destination for
          long term retention.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Job schedule name
            example: weekly
            type: string
          uuid:
            description: Job schedule UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      label:
        description: Snapshot copy label
        example: hourly
        type: string
      prefix:
        description: Specifies the prefix for the Snapshot copy name to be created
          as per the schedule. If no value is specified, then the label is used as
          the prefix.
        type: string
    type: object
  snapmirror_relationship:
    description: SnapMirror relationship information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      create_destination:
        $ref: '#/definitions/snapmirror_destination_creation'
      destination:
        $ref: '#/definitions/snapmirror_endpoint'
        description: This property is the destination endpoint of the relationship.
          The destination endpoint can be a FlexVol volume, FlexGroup volume, or SVM.
          For the POST request, the destination endpoint must be of type "DP" when
          the endpoint is a FlexVol volume or a FlexGroup volume. The POST request
          for SVM must have a destination endpoint of type "dp-destination". The destination
          endpoint path name must be specified in the "destination.path" property.
          The destination endpoint for FlexVol volume or FlexGroup volume will change
          to type "RW" when the relationship status is "broken_off" and will revert
          to type "DP" when the relationship status is "snapmirrored" using the PATCH
          request. The destination endpoint for SVM will change from "dp-destination"
          to type "default" when the relationship status is "broken_off" and will
          revert to type "dp-destination" when the relationship status is "snapmirrored"
          using the PATCH request.
      exported_snapshot:
        description: Snapshot copy exported to clients on destination.
        readOnly: true
        type: string
      healthy:
        description: Is the relationship healthy?
        readOnly: true
        type: boolean
      lag_time:
        description: Time since the exported Snapshot copy was created.
        example: PT8H35M42S
        readOnly: true
        type: string
      policy:
        description: Basic policy information of the relationship.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: Asynchronous
            type: string
          type:
            enum:
            - async
            - sync
            readOnly: true
            type: string
          uuid:
            example: 4ea7a442-86d1-11e0-ae1c-123478563412
            format: uuid
            type: string
        type: object
      preserve:
        default: false
        description: Set to true on resync to preserve Snapshot copies on the destination
          that are newer than the latest common Snapshot copy. This property is applicable
          only for relationships with FlexGroup or FlexVol endpoints and when the
          PATCH state is being changed to "snapmirrored".
        type: boolean
        x-ntap-modifyOnly: true
      quick_resync:
        default: false
        description: Set to true to reduce resync time by not preserving storage efficiency.
          This property is applicable only for relationships with FlexVol endpoints
          and when the PATCH state is being changed to "snapmirrored".
        type: boolean
        x-ntap-modifyOnly: true
      recover_after_break:
        default: false
        description: Set to true to recover from a failed SnapMirror break operation
          on a FlexGroup relationship. This restores all destination FlexGroup constituents
          to the latest Snapshot copy, and any writes to the read-write constituents
          are lost. This property is applicable only for SnapMirror relationships
          with FlexGroup endpoints and when the PATCH state is being changed to "broken_off".
        type: boolean
        x-ntap-modifyOnly: true
      restore:
        default: false
        description: Set to true to create a relationship for restore. To trigger
          restore-transfer, use transfers POST on the restore relationship.
        type: boolean
        x-ntap-readCreate: true
      restore_to_snapshot:
        description: Specifies the Snapshot copy to restore to on the destination
          during the break operation. This property is applicable only for SnapMirror
          relationships with FlexVol endpoints and when the PATCH state is being changed
          to "broken_off".
        type: string
        x-ntap-modifyOnly: true
      source:
        $ref: '#/definitions/snapmirror_endpoint'
        description: This property is the source endpoint of the relationship. The
          source endpoint can be a FlexVol volume, FlexGroup volume, or SVM.
      state:
        description: State of the relationship. To initialize the relationship, PATCH
          the state to "snapmirrored" for relationships with a policy of type "async"
          or "in-sync" for relationships with a policy of type "sync". To break the
          relationship, PATCH the state to "broken_off". To resync the broken relationship,
          PATCH the state to "snapmirrored" for relationships with a policy of type
          "async" or "in_sync" for relationships with a policy of type "sync". To
          pause the relationship, suspending further transfers, PATCH the state to
          "paused". To resume transfers for a paused relationship, PATCH the state
          to "snapmirrored" or "in_sync". The entries "in_sync", "out_of_sync", and
          "synchronizing" are only applicable to relationships with a policy of type
          "sync". A PATCH call on the state change only triggers the transition to
          the specified state. You must poll on the "state", "healthy" and "unhealthy_reason"
          properties using a GET request to determine if the transition is successful.
          To automatically initialize the relationship when specifying “create_destination”,
          set the state to “snapmirrored” for relationships with a policy of type
          "async" or "in_sync" for relationships with a policy of type "sync".
        enum:
        - broken_off
        - paused
        - snapmirrored
        - uninitialized
        - in_sync
        - out_of_sync
        - synchronizing
        example: snapmirrored
        type: string
      transfer:
        description: Basic information on the current transfer.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          bytes_transferred:
            description: Bytes transferred.
            type: integer
          state:
            enum:
            - aborted
            - failed
            - hard_aborted
            - queued
            - success
            - transferring
            type: string
          uuid:
            example: 4ea7a442-86d1-11e0-ae1c-123478563412
            format: uuid
            type: string
        readOnly: true
        type: object
      unhealthy_reason:
        description: Reason the relationship is not healthy. It is a concatenation
          of up to four levels of error messages.
        example:
        - code: '6621444'
          message: Failed to complete update operation on one or more item relationships.
          parameters: []
        - code: '6621445'
          message: Group Update failed
          parameters: []
        items:
          $ref: '#/definitions/snapmirror_error'
        readOnly: true
        type: array
      uuid:
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  snapmirror_relationship_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapmirror_relationship'
        type: array
    type: object
  snapmirror_transfer:
    description: SnapMirror transfer information
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      bytes_transferred:
        description: Bytes transferred
        readOnly: true
        type: integer
      checkpoint_size:
        description: Amount of data transferred in bytes as recorded in the restart
          checkpoint.
        readOnly: true
        type: integer
      files:
        description: This is supported for transfer of restore relationship only.
          This specifies the list of files or LUNs to be restored. Can contain up
          to eight files or LUNs.
        items:
          description: Specifies a file or LUN consisting of a source_path and an
            optional destination_path. If not specified, the destination_path is the
            same as the source_path.
          properties:
            destination_path:
              example: /dirb/file2
              type: string
            source_path:
              example: /dira/file1
              type: string
          type: object
        type: array
        x-ntap-createOnly: true
      relationship:
        properties:
          destination:
            $ref: '#/definitions/snapmirror_endpoint'
          restore:
            description: Is the relationship for restore?
            type: boolean
          uuid:
            example: d2d7ceea-ab52-11e8-855e-00505682a4c7
            format: uuid
            type: string
        readOnly: true
        type: object
      snapshot:
        description: Name of Snapshot copy being transferred.
        readOnly: true
        type: string
      source_snapshot:
        description: Specifies the Snapshot copy on the source to be transferred to
          the destination.
        type: string
        x-ntap-createOnly: true
      state:
        description: Status of the transfer. Set PATCH state to "aborted" to abort
          the transfer. Set PATCH state to "hard_aborted" to abort the transfer and
          discard the restart checkpoint.
        enum:
        - aborted
        - failed
        - hard_aborted
        - queued
        - success
        - transferring
        type: string
        x-ntap-readModify: true
      storage_efficiency_enabled:
        default: true
        description: This is supported for transfer of restore relationship only.
          Set this property to "false" to turn off storage efficiency for data transferred
          over the wire and written to the destination.
        type: boolean
        x-ntap-createOnly: true
      uuid:
        example: 4ea7a442-86d1-11e0-ae1c-123478563412
        format: uuid
        readOnly: true
        type: string
    type: object
  snapmirror_transfer_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapmirror_transfer'
        type: array
    type: object
  snapshot:
    description: The Snapshot copy object represents a point in time Snapshot copy
      of a volume.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: A comment associated with the Snapshot copy. This is an optional
          attribute for POST or PATCH.
        type: string
      create_time:
        description: Creation time of the Snapshot copy. It is the volume access time
          when the Snapshot copy was created.
        example: 2019-02-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      expiry_time:
        description: The expiry time for the Snapshot copy. This is an optional attribute
          for POST or PATCH. Snapshot copies with an expiry time set are not allowed
          to be deleted until the retention time is reached.
        example: 2019-02-04T19:00:00Z
        format: date-time
        type: string
      name:
        description: Snapshot copy. Valid in POST or PATCH.
        example: this_snapshot
        type: string
      owners:
        items:
          description: Owner name of the Snapshot copy. The owner name represents
            the system which owns or is dependent on the Snapshot copy. When an owner
            is present, the Snapshot copy cannot be deleted. This is different from
            when a Snapshot copy has a dependency, denoted by the "dependent" suffix.
            When a dependency is present, a Snapshot copy can be deleted if the "force"
            flag is specified. Snapshot copy deletion with the "force" flag must be
            done on the command line. If a Snapshot copy has both, an owner and dependency,
            the properties of the owner take precendence over the properties of the
            dependency.
          enum:
          - unknown
          - snapmirror
          - snapmirror_dependent
          - sync_mirror
          - volume_clone
          - volume_clone_dependent
          - snap_restore
          - snap_restore_dependent
          - dump
          - cifs_share
          - volume_copy
          - ndmp
          - worm_volume
          - sis_clone
          - s2c_iron
          - lun_clone
          - backup_dependent
          - snaplock_dependent
          - file_clone_dependent
          - volume_move_dependent
          - svmdr_dependent
          type: string
        readOnly: true
        type: array
      snaplock_expiry_time:
        description: SnapLock expiry time for the Snapshot copy, if the Snapshot copy
          is taken on a SnapLock volume. A Snapshot copy is not allowed to be deleted
          or renamed until the SnapLock ComplianceClock time goes beyond this retention
          time.
        example: 2019-02-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      snapmirror_label:
        description: Label for SnapMirror operations
        type: string
      state:
        description: State of the Snapshot copy. There are cases where some Snapshot
          copies are not complete. In the "partial" state, the Snapshot copy is consistent
          but exists only on the subset of the constituents that existed prior to
          the FlexGroup's expansion. Partial Snapshot copies cannot be used for a
          Snapshot copy restore operation. A Snapshot copy is in an "invalid" state
          when it is present in some FlexGroup constituents but not in others. At
          all other times, a Snapshot copy is valid.
        enum:
        - valid
        - invalid
        - partial
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      uuid:
        description: The UUID of the Snapshot copy in the volume that uniquely identifies
          the Snapshot copy in that volume.
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
      volume:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: The name of the volume.
            example: volume1
            type: string
          uuid:
            description: Unique identifier for the volume. This corresponds to the
              instance-uuid that is exposed in the CLI and ONTAPI. It does not change
              due to a volume move.
            example: 028baa66-41bd-11e9-81d5-00a0986138f7
            type: string
        type: object
    type: object
  snapshot_policy:
    description: The Snapshot copy policy object is associated with a read-write volume
      used to create and delete Snapshot copies at regular intervals.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      comment:
        description: A comment associated with the Snapshot copy policy.
        type: string
      copies:
        items:
          properties:
            count:
              description: The number of Snapshot copies to maintain for this schedule.
              type: integer
            prefix:
              description: The prefix to use while creating Snapshot copies at regular
                intervals.
              type: string
            schedule:
              properties:
                name:
                  description: Schedule at which Snapshot copies are captured on the
                    volume. Some common schedules already defined in the system are
                    hourly, daily, weekly, at 15 minute intervals, and at 5 minute
                    intervals. Snapshot copy policies with custom schedules can be
                    referenced.
                  example: hourly
                  type: string
              type: object
            snapmirror_label:
              description: Label for SnapMirror operations
              type: string
          type: object
        type: array
        x-ntap-readCreate: true
      enabled:
        description: Is the Snapshot copy policy enabled?
        example: true
        type: boolean
      name:
        description: Name of the Snapshot copy policy.
        example: default
        type: string
        x-ntap-readCreate: true
      scope:
        description: Set to "svm" when the request is on a data SVM, otherwise set
          to "cluster".
        enum:
        - svm
        - cluster
        readOnly: true
        type: string
      svm:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        readOnly: true
        type: string
    type: object
  snapshot_policy_reference:
    description: This is a reference to the Snapshot copy policy.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: default
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  snapshot_policy_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapshot_policy'
        type: array
    type: object
  snapshot_policy_schedule:
    description: The Snapshot copy policy schedule object is associated with a Snapshot
      copy policy and it defines the interval at which Snapshot copies are created
      and deleted.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      count:
        description: The number of Snapshot copies to maintain for this schedule.
        type: integer
      prefix:
        description: The prefix to use while creating Snapshot copies at regular intervals.
        type: string
        x-ntap-readCreate: true
      schedule:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Job schedule name
            example: weekly
            type: string
          uuid:
            description: Job schedule UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      snapmirror_label:
        description: Label for SnapMirror operations
        type: string
      snapshot_policy:
        description: This is a reference to the Snapshot copy policy.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: default
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
    type: object
  snapshot_policy_schedule_reference:
    description: This is a reference to the Snapshot copy policy schedule.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: hourly
        type: string
      uuid:
        example: 4cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  snapshot_policy_schedule_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapshot_policy_schedule'
        type: array
    type: object
  snapshot_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: this_snapshot
        type: string
      uuid:
        example: 1cd8a442-86d1-11e0-ae1c-123478563412
        type: string
    type: object
  snapshot_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/snapshot'
        type: array
    type: object
  snmp:
    description: Cluster-wide SNMP configuration.
    properties:
      _links:
        $ref: '#/definitions/self_link'
      auth_traps_enabled:
        description: Specifies whether to enable or disable SNMP authentication traps.
        example: true
        type: boolean
      enabled:
        description: Specifies whether to enable or disable SNMP.
        example: true
        type: boolean
    type: object
    x-ntap-readModify: true
  snmp_traphost:
    description: SNMP manager or host machine that receives SNMP traps from ONTAP.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      host:
        description: Fully qualified domain name (FQDN), IPv4 address or IPv6 address
          of SNMP traphost.
        example: traphost.example.com
        type: string
      ip_address:
        $ref: '#/definitions/ip_address_readonly'
      user:
        description: Optional SNMP user parameter. For an SNMPv3 traphost, this property
          refers to an SNMPv3 or User-based Security Model (USM) user. For an SNMPv1
          or SNMPv2c traphost, this property refers to an SNMP community.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Optional SNMPv1/SNMPv2c or SNMPv3 user name. For an SNMPv3
              traphost, this object refers to an SNMPv3 or User-based Security Model
              (USM) user. For an SNMPv1 or SNMPv2c traphost, this object refers to
              an SNMP community. For an SNMPv3 traphost, this object is mandatory
              and refers to an SNMPv3 or User-based Security Model (USM) user. For
              an SNMPv1 or SNMPv2c traphost, ONTAP automatically uses "public", if
              the same is configured, or any other configured community as user. So,
              for an SNMPv1 or SNMPv2c traphost, this property should not be provided
              in the "POST" method. However, the configured community for the SNMPv1/SNMPv2c
              traphost is returned by the "GET" method.
            example: snmpv3user3
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
    x-ntap-readCreate: true
  snmp_traphost_response:
    description: List of SNMP traphosts, along with their corresponding SNMP users,
      configured in ONTAP. This includes SNMPv1/SNMPv2 traphosts as well as SNMPv3
      traphosts.
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/snmp_traphost'
        type: array
    readOnly: true
    type: object
  snmp_user:
    description: An SNMP user can be an SNMPv1/SNMPv2c user or an SNMPv3 user. SNMPv1/SNMPv2c
      user is also called a "community" user. An SNMPv3 user, also called a User-based
      Security Model (USM) user, can be a local SNMPv3 user or a remote SNMPv3 user.
      A local SNMPv3 user can be used for querying ONTAP SNMP server over SNMPv3 and/or
      for sending SNMPv3 traps. The local SNMPv3 user used for sending SNMPv3 traps
      must be configured with the same authentication and privacy credentials on the
      traphost receiver as well. A remote SNMPv3 user is also configured on a remote
      switch and used by ONTAP SNMP client functionality to query the remote switch
      over SNMPv3. An SNMP user is scoped to its owning Storage Virtual Machine (SVM).
      Owning SVM could be a data SVM or the administrative SVM.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_method:
        default: community
        description: Optional authentication method.
        enum:
        - community
        - usm
        - both
        example: usm
        type: string
        x-ntap-readCreate: true
      comment:
        description: Optional comment text.
        example: This is a comment.
        maxLength: 128
        minLength: 0
        type: string
      engine_id:
        description: Optional SNMPv3 engine identifier. For a local SNMP user belonging
          to the administrative Storage Virtual Machine (SVM), the default value of
          this parameter is the SNMPv3 engine identifier for the administrative SVM.
          For a local SNMP user belonging to a data SVM, the default value of this
          parameter is the SNMPv3 engine identifier for that data SVM. For an SNMPv1/SNMPv2c
          community, this parameter should not be specified in "POST" method. For
          a remote switch SNMPv3 user, this parameter specifies the SNMPv3 engine
          identifier for the remote switch. This parameter can also optionally specify
          a custom engine identifier.
        example: 80000315055415ab26d4aae811ac4d005056bb792e
        type: string
        x-ntap-readCreate: true
      name:
        description: SNMP user name.
        example: snmpv3user2
        maxLength: 32
        type: string
        x-ntap-readCreate: true
      owner:
        description: Optional name and UUID of owning Storage Virtual Machine (SVM).
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      scope:
        $ref: '#/definitions/network_scope_readonly'
        default: cluster
        description: Set to "svm" for data Storage Virtual Machine (SVM) SNMP users
          and to "cluster" for administrative SVM SNMP users.
        example: svm
        readOnly: true
      snmpv3:
        description: Optional parameter that can be specified only for an SNMPv3 user
          i.e. when 'authentication_method' is either 'usm' or 'both'. This parameter
          defines the SNMPv3 credentials for an SNMPv3 user.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          authentication_password:
            description: Authentication protocol password.
            example: humTdumt*@t0nAwa11
            minLength: 8
            type: string
            x-ntap-createOnly: true
          authentication_protocol:
            default: none
            description: Authentication protocol.
            enum:
            - none
            - md5
            - sha
            - sha2_256
            example: sha2_256
            type: string
          privacy_password:
            description: Privacy protocol password.
            example: p@**GOandCLCt*200
            minLength: 8
            type: string
            x-ntap-createOnly: true
          privacy_protocol:
            default: none
            description: Privacy protocol.
            enum:
            - none
            - des
            - aes128
            example: aes128
            type: string
        type: object
        x-ntap-readCreate: true
      switch_address:
        description: Optional remote switch address. It can be an IPv4 address or
          an IPv6 address. A remote switch can be queried over SNMPv3 using ONTAP
          SNMP client functionality. Querying such a switch requires an SNMPv3 user
          (remote switch user) to be configured on the switch. Since ONTAP requires
          remote switch user's SNMPv3 credentials (to query it), this user must be
          configured in ONTAP as well. This parameter is specified when configuring
          such a user.
        example: 10.23.34.45
        type: string
        x-ntap-readCreate: true
    type: object
  snmp_user_reference:
    description: Optional SNMP user parameter. For an SNMPv3 traphost, this property
      refers to an SNMPv3 or User-based Security Model (USM) user. For an SNMPv1 or
      SNMPv2c traphost, this property refers to an SNMP community.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: Optional SNMPv1/SNMPv2c or SNMPv3 user name. For an SNMPv3 traphost,
          this object refers to an SNMPv3 or User-based Security Model (USM) user.
          For an SNMPv1 or SNMPv2c traphost, this object refers to an SNMP community.
          For an SNMPv3 traphost, this object is mandatory and refers to an SNMPv3
          or User-based Security Model (USM) user. For an SNMPv1 or SNMPv2c traphost,
          ONTAP automatically uses "public", if the same is configured, or any other
          configured community as user. So, for an SNMPv1 or SNMPv2c traphost, this
          property should not be provided in the "POST" method. However, the configured
          community for the SNMPv1/SNMPv2c traphost is returned by the "GET" method.
        example: snmpv3user3
        type: string
    type: object
    x-ntap-readCreate: true
  snmp_user_response:
    description: List of SNMP users, along with their associated properties, configured
      in ONTAP. This includes SNMPv1/SNMPv2c community users as well as SNMPv3 users.
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/snmp_user'
        type: array
    readOnly: true
    type: object
  software_errors_reference:
    properties:
      code:
        description: Error code of message
        example: 177
        readOnly: true
        type: integer
      message:
        description: Error message
        example: 'Giveback of CFO aggregate is vetoed. Action: Use the "storage failover
          show-giveback" command to view detailed veto status information. Correct
          the vetoed update check. Use the "storage failover giveback -ofnode "node1"
          command to complete the giveback.'
        readOnly: true
        type: string
      severity:
        description: Severity of error
        enum:
        - informational
        - warning
        - error
        example: warning
        readOnly: true
        type: string
    type: object
  software_history:
    properties:
      end_time:
        description: Completion time of this installation request.
        example: 2019-02-02T20:00:00Z
        format: date-time
        readOnly: true
        type: string
      from_version:
        description: Previous version of node
        example: ONTAP_X1
        readOnly: true
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      start_time:
        description: Start time of this installation request.
        example: 2019-02-02T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      state:
        description: Status of this installation request.
        enum:
        - successful
        - canceled
        example: successful
        readOnly: true
        type: string
      to_version:
        description: Updated version of node
        example: ONTAP_X2
        readOnly: true
        type: string
    type: object
  software_history_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/software_history'
        type: array
    type: object
  software_mcc_reference:
    properties:
      elapsed_duration:
        description: Elapsed duration of update time (in seconds) of MetroCluster.
        example: 2140
        readOnly: true
        type: integer
      estimated_duration:
        description: Estimated duration of update time (in seconds) of MetroCluster.
        example: 3480
        readOnly: true
        type: integer
      name:
        description: Name of the site in MetroCluster.
        example: cluster_A
        readOnly: true
        type: string
      state:
        description: Upgrade state of MetroCluster.
        enum:
        - in_progress
        - waiting
        - paused_by_user
        - paused_on_error
        - completed
        - canceled
        - failed
        - pause_pending
        - cancel_pending
        example: in_progress
        readOnly: true
    type: object
  software_node_reference:
    properties:
      name:
        description: Name of the node.
        example: node1
        readOnly: true
        type: string
      version:
        description: ONTAP version of the node.
        example: ONTAP_X
        readOnly: true
        type: string
    type: object
  software_package:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      create_time:
        description: Indicates when this package was loaded
        example: 2019-02-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      version:
        description: Version of this package
        example: ONTAP_X
        readOnly: true
        type: string
    type: object
  software_package_download:
    properties:
      password:
        description: Password for download
        example: admin_password
        format: password
        type: string
        x-ntap-createOnly: true
      url:
        description: HTTP or FTP URL of the package through a server
        example: http://server/package
        type: string
        x-ntap-createOnly: true
      username:
        description: Username for download
        example: admin
        type: string
        x-ntap-createOnly: true
    type: object
  software_package_download_get:
    properties:
      code:
        description: Code corresponds to download message
        example: 10551496
        type: integer
      message:
        description: Download progress details
        example: Package download in progress
        type: string
      state:
        description: Download status of the package
        enum:
        - not_started
        - running
        - success
        - failure
        example: success
        type: string
    readOnly: true
    type: object
  software_package_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        type: integer
      records:
        items:
          $ref: '#/definitions/software_package'
        type: array
    type: object
  software_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      action:
        description: User triggered action to apply to the install operation
        enum:
        - pause
        - cancel
        - resume
        example: pause
        readOnly: false
        type: string
      elapsed_duration:
        description: Elapsed time during the upgrade or validation operation
        example: 2140
        readOnly: true
        type: integer
      estimated_duration:
        description: Estimated time remaining until completion of the upgrade or validation
          operation.
        example: 5220
        readOnly: true
        type: integer
      metrocluster:
        properties:
          clusters:
            description: List of MetroCluster sites, statuses, and active ONTAP versions.
            items:
              $ref: '#/definitions/software_mcc_reference'
            readOnly: true
            type: array
          progress_details:
            properties:
              message:
                description: MetroCluster update progress details.
                example: Switchover in progress
                type: string
            readOnly: true
            type: object
          progress_summary:
            properties:
              message:
                description: MetroCluster update progress summary.
                example: MetroCluster updated successfully.
                type: string
            readOnly: true
            type: object
        type: object
      nodes:
        description: List of nodes and active versions.
        items:
          $ref: '#/definitions/software_node_reference'
        readOnly: true
        type: array
      pending_version:
        description: Version being installed on the system.
        example: ONTAP_X_1
        readOnly: true
        type: string
      state:
        description: Operational state of the upgrade
        enum:
        - in_progress
        - waiting
        - paused_by_user
        - paused_on_error
        - completed
        - canceled
        - failed
        - pause_pending
        - cancel_pending
        example: completed
        readOnly: true
        type: string
      status_details:
        description: Display status details.
        items:
          $ref: '#/definitions/software_status_details_reference'
        readOnly: true
        type: array
      update_details:
        description: Display update progress details.
        items:
          $ref: '#/definitions/software_update_details_reference'
        readOnly: true
        type: array
      validation_results:
        description: List of validation warnings, errors, and advice.
        items:
          $ref: '#/definitions/software_validation_reference'
        readOnly: true
        type: array
      version:
        description: Version of ONTAP installed and currently active on the system.
          During PATCH, using the 'validate_only' parameter on the request executes
          pre-checks, but does not perform the full installation.
        example: ONTAP_X
        type: string
    type: object
  software_status_details_reference:
    properties:
      action:
        properties:
          message:
            decription: Corrective action to be taken to resolve the status error.
            type: string
        readOnly: true
        type: object
      end_time:
        description: End time for each status phase.
        example: 2019-02-02T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      issue:
        properties:
          message:
            decription: Update status details
            example: Image update complete
            type: string
        readOnly: true
        type: object
      name:
        description: Name of the phase to be retrieved for status details.
        example: initialize
        readOnly: true
        type: string
      node:
        properties:
          name:
            description: Name of the node to be retrieved for status details.
            example: node1
            readOnly: true
            type: string
        type: object
      start_time:
        description: Start time for each status phase.
        example: 2019-02-02T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      state:
        description: Status of the phase
        enum:
        - in_progress
        - waiting
        - paused_by_user
        - paused_on_error
        - completed
        - canceled
        - failed
        - pause_pending
        - cancel_pending
        example: failed
        readOnly: true
        type: string
    type: object
  software_update_details_reference:
    properties:
      elapsed_duration:
        description: Elapsed duration for each update phase
        example: 2100
        readOnly: true
        type: integer
      estimated_duration:
        description: Estimated duration for each update phase
        example: 4620
        readOnly: true
        type: integer
      node:
        properties:
          name:
            description: Name of the node to be retrieved for update details.
            example: node1
            readOnly: true
            type: string
        type: object
      phase:
        description: Phase details
        example: Pre-update checks
        readOnly: true
        type: string
      state:
        description: State of the update phase
        enum:
        - in_progress
        - waiting
        - paused_by_user
        - paused_on_error
        - completed
        - canceled
        - failed
        - pause_pending
        - cancel_pending
        example: failed
        readOnly: true
        type: string
    type: object
  software_upload:
    properties:
      file:
        description: Package file on a local file system
        example: base64 encoded package file content
        format: base64
        readOnly: false
        type: string
    type: object
  software_validation_reference:
    properties:
      action:
        properties:
          message:
            description: Specifies the corrective action to be taken to resolve a
              validation error
            type: string
        readOnly: true
        type: object
      issue:
        properties:
          message:
            description: Details of the error or warning encountered by the update
              checks
            example: 'Validation error: Cluster HA is not configured in the cluster'
            type: string
        readOnly: true
        type: object
      status:
        description: Status of this update check.
        enum:
        - warning
        - error
        example: warning
        readOnly: true
        type: string
      update_check:
        description: Name of the update check to be validated.
        example: nfs_mounts
        readOnly: true
        type: string
    type: object
  space_efficiency:
    properties:
      logical_used:
        description: Logical used
        readOnly: true
        type: integer
      ratio:
        description: Data reduction ratio (logical_used / used)
        readOnly: true
        type: number
      savings:
        description: Space saved by storage efficiencies (logical_used - used)
        readOnly: true
        type: integer
    type: object
  sql_on_san:
    description: Microsoft SQL using SAN.
    properties:
      db:
        properties:
          size:
            description: 'The size of the DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      igroup_name:
        description: The name of the initiator group through which the contents of
          this application will be accessed. Modification of this parameter is a disruptive
          operation. All LUNs in the application component will be unmapped from the
          current igroup and re-mapped to the new igroup.
        maxLength: 96
        minLength: 1
        type: string
      log:
        properties:
          size:
            description: 'The size of the log DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the log DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/sql_on_san_new_igroups'
        maxItems: 1
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      os_type:
        default: windows_2008
        description: The name of the host OS running the application.
        enum:
        - windows
        - windows_2008
        - windows_gpt
        type: string
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      server_cores_count:
        default: 8
        description: The number of server cores for the DB.
        type: integer
        x-ntap-readCreate: true
      temp_db:
        properties:
          size:
            description: 'The size of the temp DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the temp DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
    required:
    - db
    - igroup_name
    - log
    type: object
  sql_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      os_type:
        default: windows
        description: The name of the host OS accessing the application. The default
          value is the host OS that is running the application.
        enum:
        - hyper_v
        - vmware
        - windows
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  sql_on_smb:
    description: Microsoft SQL using SMB.
    properties:
      access:
        properties:
          installer:
            description: SQL installer admin user name.
            maxLength: 256
            minLength: 1
            type: string
            x-ntap-readCreate: true
          service_account:
            description: SQL service account user name.
            maxLength: 256
            minLength: 1
            type: string
            x-ntap-readCreate: true
        required:
        - service_account
        type: object
        x-ntap-readCreate: true
      db:
        properties:
          size:
            description: 'The size of the DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      log:
        properties:
          size:
            description: 'The size of the log DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the log DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
      server_cores_count:
        default: 8
        description: The number of server cores for the DB.
        type: integer
        x-ntap-readCreate: true
      temp_db:
        properties:
          size:
            description: 'The size of the temp DB. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the temp DB.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        type: object
    required:
    - access
    - db
    - log
    type: object
  storage_port:
    properties:
      board_name:
        type: string
      cable:
        properties:
          identifier:
            example: 500a0980000b6c3f-50000d1703544b80
            type: string
          length:
            example: 2m
            type: string
          part_number:
            example: 112-00431+A0
            type: string
          serial_number:
            example: 616930439
            type: string
        type: object
      description:
        example: SAS Host Adapter 2a (PMC-Sierra PM8072 rev. C)
        type: string
      error:
        properties:
          corrective_action:
            description: Error corrective action
            type: string
          message:
            description: Error message
            type: string
        type: object
      mac_address:
        type: string
      name:
        example: 2a
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      part_number:
        example: 111-03801
        type: string
      serial_number:
        example: 7A2463CC45B
        type: string
      speed:
        description: Operational port speed in Gbps
        example: 6
        type: number
      state:
        enum:
        - online
        - offline
        - error
        example: online
        type: string
      wwn:
        description: World Wide Name
        example: 50000d1703544b80
        type: string
    readOnly: true
    type: object
  storage_port_reference:
    description: Storage port
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        example: 2a
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
    type: object
  storage_port_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/storage_port'
        type: array
    type: object
  svm:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        description: List of allowed aggregates for SVM volumes. An administrator
          is allowed to create volumes on these aggregates.
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
      aggregates_delegated:
        description: This property is true when the administrator has delegated the
          aggregates for the SVM volumes.
        readOnly: true
        type: boolean
      certificate:
        description: Certificate for incoming TLS connection requests.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          uuid:
            description: Certificate UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readModify: true
      cifs:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          ad_domain:
            properties:
              fqdn:
                description: |
                  The fully qualified domain name of the Windows Active Directory to which this CIFS server belongs. A CIFS server appears as a member of Windows server object in the Active Directory store.
                example: example.com
                type: string
                x-ntap-readCreate: true
              organizational_unit:
                default: CN=Computers
                description: |
                  Specifies the organizational unit within the Active Directory domain to associate with the CIFS server.
                type: string
                x-ntap-readCreate: true
              password:
                description: |
                  The account password used to add this CIFS server to the Active Directory. This is not audited. Valid in POST only.
                type: string
                x-ntap-createOnly: true
              user:
                description: |
                  The user account used to add this CIFS server to the Active Directory. Valid in POST only.
                type: string
                x-ntap-createOnly: true
            type: object
          enabled:
            description: |
              Specifies whether or not the CIFS service is administratively enabled.
            type: boolean
          name:
            description: The NetBIOS name of the CIFS server.
            example: CIFS1
            maxLength: 15
            minLength: 1
            type: string
        type: object
        x-ntap-readCreate: true
      comment:
        description: Comment
        maxLength: 255
        minLength: 0
        type: string
      dns:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          domains:
            $ref: '#/definitions/dns_domains'
          servers:
            $ref: '#/definitions/name_servers'
        type: object
        x-ntap-readCreate: true
      fc_interfaces:
        description: FC Interface for the SVM
        items:
          $ref: '#/definitions/fc_interface_svm'
        type: array
      fcp:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          enabled:
            description: Enable Fiber Channel Protocol (FCP)? Setting to true creates
              a service if not already created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      ip_interfaces:
        description: IP interfaces for the SVM
        items:
          $ref: '#/definitions/ip_interface_svm'
        type: array
      ipspace:
        description: Either the UUID or name may be supplied on input.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: IPspace name
            example: exchange
            type: string
          uuid:
            description: IPspace UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
        x-ntap-readCreate: true
      iscsi:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          enabled:
            description: Enable iSCSI? Setting to true creates a service if not already
              created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      language:
        description: Default volume language code. UTF-8 encoded languages are valid
          in POST or PATCH. Non UTF-8 language encodings are for backward compatibility
          and are not valid input for POST and PATCH requests.
        enum:
        - c
        - da
        - de
        - en
        - en_us
        - es
        - fi
        - fr
        - he
        - it
        - ja
        - ja_jp.pck
        - ko
        - no
        - nl
        - pt
        - sv
        - zh
        - zh.gbk
        - zh_tw
        - zh_tw.big5
        - c.utf_8
        - ar
        - ar.utf_8
        - cs
        - cs.utf_8
        - da.utf_8
        - de.utf_8
        - en.utf_8
        - en_us.utf_8
        - es.utf_8
        - fi.utf_8
        - fr.utf_8
        - he.utf_8
        - hr
        - hr.utf_8
        - hu
        - hu.utf_8
        - it.utf_8
        - ja.utf_8
        - ja_v1
        - ja_v1.utf_8
        - ja_jp.pck.utf_8
        - ja_jp.932
        - ja_jp.932.utf_8
        - ja_jp.pck_v2
        - ja_jp.pck_v2.utf_8
        - ko.utf_8
        - no.utf_8
        - nl.utf_8
        - pl
        - pl.utf_8
        - pt.utf_8
        - ro
        - ro.utf_8
        - ru
        - ru.utf_8
        - sk
        - sk.utf_8
        - sl
        - sl.utf_8
        - sv.utf_8
        - tr
        - tr.utf_8
        - zh.utf_8
        - zh.gbk.utf_8
        - zh_tw.utf_8
        - zh_tw.big5.utf_8
        - utf8mb4
        example: c.utf_8
        type: string
      ldap:
        properties:
          ad_domain:
            description: |
              This parameter specifies the name of the Active Directory domain
              used to discover LDAP servers for use by this client.
              This is mutually exclusive with `servers` during POST.
            type: string
          base_dn:
            description: Specifies the default base DN for all searches.
            type: string
          bind_dn:
            description: Specifies the user that binds to the LDAP servers. SVM API
              supports anonymous binding. For Simple and SASL LDAP binding, use the
              LDAP API endpoint.
            type: string
          enabled:
            description: Enable LDAP? Setting to true creates a configuration if not
              already created.
            type: boolean
          servers:
            items:
              description: |
                List of LDAP Servers used for this client configuration. This
                parameter takes both FQDNs and IP addresses.
                This is mutually exclusive with `ad_domain` during POST.
              type: string
            type: array
        type: object
        x-ntap-readCreate: true
      name:
        description: "The name of the SVM.\n"
        example: svm1
        type: string
      nfs:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          enabled:
            description: Enable NFS? Setting to true creates a service if not already
              created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      nis:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          domain:
            $ref: '#/definitions/nis_domain'
          enabled:
            description: Enable NIS? Setting to true creates a configuration if not
              already created.
            type: boolean
          servers:
            $ref: '#/definitions/nis_servers'
        type: object
        x-ntap-readCreate: true
      nsswitch:
        description: Name service switch configuration
        properties:
          group:
            default:
            - files
            description: Group sources
            items:
              $ref: '#/definitions/nsswitch_source'
            type: array
          hosts:
            default:
            - files
            - dns
            description: Host sources
            items:
              $ref: '#/definitions/nsswitch_source'
            type: array
          namemap:
            default:
            - files
            description: NameMap sources
            items:
              $ref: '#/definitions/nsswitch_source'
            type: array
          netgroup:
            default:
            - files
            description: NetGroup sources
            items:
              $ref: '#/definitions/nsswitch_source'
            type: array
          passwd:
            default:
            - files
            description: Password sources
            items:
              $ref: '#/definitions/nsswitch_source'
            type: array
        type: object
      nvme:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          enabled:
            description: Enable NVMe? Setting to true creates a service if not already
              created.
            type: boolean
        type: object
        x-ntap-readCreate: true
      routes:
        description: Optional array of routes for the SVM
        items:
          $ref: '#/definitions/network_route_for_svm'
        type: array
        x-ntap-createOnly: true
      s3:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          enabled:
            description: Specifies whether or not to enable S3. Setting this value
              to true creates a service if one is not yet created.
            type: boolean
          name:
            description: Specifies the name of the S3 server. A server name length
              can range from 1 to 15 characters and can only contain the following
              combination of characters 0-9, A-Z, a-z, ".", and "-".
            example: s3-server-1
            maxLength: 15
            minLength: 1
            type: string
        type: object
        x-ntap-readCreate: true
      snapmirror:
        description: Specifies attributes for SVM DR protection.
        properties:
          is_protected:
            description: Specifies whether the SVM is a SnapMirror source SVM, using
              SnapMirror to protect its data.
            readOnly: true
            type: boolean
          protected_volumes_count:
            description: Specifies the number of SVM DR protected volumes in the SVM.
            readOnly: true
            type: integer
        type: object
      snapshot_policy:
        description: This is a reference to the Snapshot copy policy.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: default
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      state:
        description: SVM State
        enum:
        - starting
        - running
        - stopping
        - stopped
        - deleting
        example: running
        type: string
        x-ntap-readModify: true
      subtype:
        description: SVM subtype. The SVM subtype sync_destination is created automatically
          when an SVM of subtype sync_source is created on the source MetroCluster
          cluster. A POST request with sync_destination as SVM subtype is invalid.
        enum:
        - default
        - dp_destination
        - sync_source
        - sync_destination
        type: string
        x-ntap-readCreate: true
      uuid:
        description: |
          The unique identifier of the SVM.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        readOnly: true
        type: string
    type: object
  svm_cifs_service_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      ad_domain:
        properties:
          fqdn:
            description: |
              The fully qualified domain name of the Windows Active Directory to which this CIFS server belongs. A CIFS server appears as a member of Windows server object in the Active Directory store.
            example: example.com
            type: string
            x-ntap-readCreate: true
          organizational_unit:
            default: CN=Computers
            description: |
              Specifies the organizational unit within the Active Directory domain to associate with the CIFS server.
            type: string
            x-ntap-readCreate: true
          password:
            description: |
              The account password used to add this CIFS server to the Active Directory. This is not audited. Valid in POST only.
            type: string
            x-ntap-createOnly: true
          user:
            description: |
              The user account used to add this CIFS server to the Active Directory. Valid in POST only.
            type: string
            x-ntap-createOnly: true
        type: object
      enabled:
        description: |
          Specifies whether or not the CIFS service is administratively enabled.
        type: boolean
      name:
        description: The NetBIOS name of the CIFS server.
        example: CIFS1
        maxLength: 15
        minLength: 1
        type: string
    type: object
  svm_ldap_reference:
    properties:
      ad_domain:
        description: |
          This parameter specifies the name of the Active Directory domain
          used to discover LDAP servers for use by this client.
          This is mutually exclusive with `servers` during POST.
        type: string
      base_dn:
        description: Specifies the default base DN for all searches.
        type: string
      bind_dn:
        description: Specifies the user that binds to the LDAP servers. SVM API supports
          anonymous binding. For Simple and SASL LDAP binding, use the LDAP API endpoint.
        type: string
      enabled:
        description: Enable LDAP? Setting to true creates a configuration if not already
          created.
        type: boolean
      servers:
        items:
          description: |
            List of LDAP Servers used for this client configuration. This
            parameter takes both FQDNs and IP addresses.
            This is mutually exclusive with `ad_domain` during POST.
          type: string
        type: array
    type: object
  svm_peer:
    description: An SVM peer relation object.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      applications:
        description: A list of applications for an SVM peer relation.
        example:
        - snapmirror
        - lun_copy
        items:
          $ref: '#/definitions/svm_peer_applications'
        type: array
      name:
        description: A peer SVM alias name to avoid a name conflict on the local cluster.
        type: string
        x-ntap-readCreate: true
      peer:
        description: Details for a peer SVM object.
        properties:
          cluster:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: cluster2
                type: string
              uuid:
                example: ebe27c49-1adf-4496-8335-ab862aebebf2
                type: string
            type: object
          svm:
            description: SVM, applies only to SVM-scoped objects.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name of the SVM.\n"
                example: svm1
                type: string
              uuid:
                description: |
                  The unique identifier of the SVM.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                type: string
            type: object
        type: object
        x-ntap-readCreate: true
      state:
        description: SVM peering state. To accept a pending SVM peer request, PATCH
          the state to "peered". To reject a pending SVM peer request, PATCH the state
          to "rejected". To suspend a peered SVM peer relation, PATCH the state to
          "suspended". To resume a suspended SVM peer relation, PATCH the state to
          "peered". The states "initiated", "pending", and "initializing" are system-generated
          and cannot be used for PATCH.
        enum:
        - peered
        - rejected
        - suspended
        - initiated
        - pending
        - initializing
        example: peered
        type: string
        x-ntap-readModify: true
      svm:
        description: Local SVM details
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
      uuid:
        description: SVM peer relation UUID
        readOnly: true
        type: string
    type: object
  svm_peer_applications:
    description: Applications for an SVM peer relation.
    enum:
    - snapmirror
    - file_copy
    - lun_copy
    - flexcache
    type: string
  svm_peer_permission:
    description: Manage SVM peer permissions.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      applications:
        description: A list of applications for an SVM peer relation.
        example:
        - snapmirror
        - flexcache
        items:
          $ref: '#/definitions/svm_peer_permission_applications'
        type: array
      cluster_peer:
        description: Peer cluster details
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: cluster2
            type: string
          uuid:
            example: ebe27c49-1adf-4496-8335-ab862aebebf2
            type: string
        type: object
        x-ntap-readCreate: true
      svm:
        description: Local SVM permitted for peer relation. To create peer permissions
          for all SVMs, specify the SVM name as "*".
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  svm_peer_permission_applications:
    description: Applications for an SVM peer permission.
    enum:
    - snapmirror
    - flexcache
    type: string
  svm_peer_permission_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/svm_peer_permission'
        type: array
    type: object
  svm_peer_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/svm_peer'
        type: array
    type: object
  svm_reference:
    description: SVM, applies only to SVM-scoped objects.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: "The name of the SVM.\n"
        example: svm1
        type: string
      uuid:
        description: |
          The unique identifier of the SVM.
        example: 02c9e252-41be-11e9-81d5-00a0986138f7
        type: string
    type: object
  svm_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/svm'
        type: array
    type: object
  svm_s3_service_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      enabled:
        description: Specifies whether or not to enable S3. Setting this value to
          true creates a service if one is not yet created.
        type: boolean
      name:
        description: Specifies the name of the S3 server. A server name length can
          range from 1 to 15 characters and can only contain the following combination
          of characters 0-9, A-Z, a-z, ".", and "-".
        example: s3-server-1
        maxLength: 15
        minLength: 1
        type: string
    type: object
  timezone_cluster:
    description: |
      Provides the cluster-wide time zone information that localizes time found on messages displayed on each node's:
      * console messages;
      * logging to internal ONTAP log files; and
      * localized REST API full ISO-8601 date, time, and time zone format information.
      Machine-to-machine interfaces, such as file access protocols (NFS, CIFS), block access protocols (SAN), and other protocols
      such as Manage ONTAP (ONTAPI), use second or subsecond time values that are based on world time or UTC.
    properties:
      name:
        description: |
          The ONTAP time zone name or identification in either IANA time zone format "Area/Location", or an ONTAP traditional time zone.
          </br>
          The initial first node in cluster setting for time zone is "Etc/UTC".
          "Etc/UTC" is the IANA timezone "Area/Location" specifier for
          Coordinated Universal Time (UTC), which is an offset of 0.
          ### IANA time zone format
          The IANA time zone, formatted as "Area/Location", is based on geographic areas that have had the same time zone offset for many years.
          </br>
          "Location" represents a compound name using additional forward slashes.
          </br>
          An example of the "Area/Location" time zone is "America/New_York" and represents most of the United States Eastern Time Zone.
          Examples of "Area/Location" with "Location" as a compound name are "America/Argentina/Buenos_Aires" and "America/Indiana/Indianapolis".
          ### ONTAP traditional time zone
          Examples of the traditional time zones are "EST5EDT" for the United States Eastern Time Zone and "CET" for Central European Time Zone.
        example: America/New_York
        type: string
    type: object
  usm:
    description: User-based Security Model (USM) object defines SNMPv3-specific parameters
      required to configure an SNMPv3 user.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      authentication_password:
        description: Authentication protocol password.
        example: humTdumt*@t0nAwa11
        minLength: 8
        type: string
        x-ntap-createOnly: true
      authentication_protocol:
        default: none
        description: Authentication protocol.
        enum:
        - none
        - md5
        - sha
        - sha2_256
        example: sha2_256
        type: string
      privacy_password:
        description: Privacy protocol password.
        example: p@**GOandCLCt*200
        minLength: 8
        type: string
        x-ntap-createOnly: true
      privacy_protocol:
        default: none
        description: Privacy protocol.
        enum:
        - none
        - des
        - aes128
        example: aes128
        type: string
    type: object
    x-ntap-readCreate: true
  vdi_on_nas:
    description: A VDI application using NAS.
    properties:
      desktops:
        properties:
          count:
            default: 1000
            description: The number of desktops to support.
            maximum: 8000
            minimum: 1
            type: integer
          size:
            description: 'The size of the desktops. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the desktops.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      hyper_v_access:
        properties:
          service_account:
            description: Hyper-V service account.
            maxLength: 256
            minLength: 1
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      nfs_access:
        description: The list of NFS access controls.
        items:
          $ref: '#/definitions/app_nfs_access'
        type: array
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - desktops
    type: object
  vdi_on_san:
    description: A VDI application using SAN.
    properties:
      desktops:
        properties:
          count:
            default: 1000
            description: The number of desktops to support.
            maximum: 8000
            minimum: 1
            type: integer
          size:
            description: 'The size of the desktops. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the desktops.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      hypervisor:
        description: The name of the hypervisor hosting the application.
        enum:
        - hyper_v
        - vmware
        - xen
        type: string
        x-ntap-readCreate: true
      igroup_name:
        description: The name of the initiator group through which the contents of
          this application will be accessed. Modification of this parameter is a disruptive
          operation. All LUNs in the application component will be unmapped from the
          current igroup and re-mapped to the new igroup.
        maxLength: 96
        minLength: 1
        type: string
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/vdi_on_san_new_igroups'
        maxItems: 1
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - desktops
    - hypervisor
    - igroup_name
    type: object
  vdi_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  version:
    description: This returns the cluster version information.  When the cluster has
      more than one node, the cluster version is equivalent to the lowest of generation,
      major, and minor versions on all nodes.
    properties:
      full:
        description: The full cluster version string.
        example: 'NetApp Release 9.4.0: Sun Nov 05 18:20:57 UTC 2017'
        readOnly: true
        type: string
      generation:
        description: The generation portion of the version.
        example: 9
        readOnly: true
        type: integer
      major:
        description: The major portion of the version.
        example: 4
        readOnly: true
        type: integer
      minor:
        description: The minor portion of the version.
        example: 0
        readOnly: true
        type: integer
    readOnly: true
    type: object
  volume:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      aggregates:
        description: Aggregate hosting the volume. Required on POST.
        items:
          description: Aggregate
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            name:
              example: aggr1
              type: string
            uuid:
              example: 1cd8a442-86d1-11e0-ae1c-123478563412
              type: string
          type: object
        type: array
      application:
        properties:
          name:
            description: Name of the application to which the volume belongs. Available
              only when the volume is part of an application.
            readOnly: true
            type: string
          uuid:
            description: UUID of the application to which the volume belongs. Available
              only when the volume is part of an application.
            example: 1cd8a442-86d1-11e0-ae1d-123478563412
            readOnly: true
            type: string
        type: object
      autosize:
        properties:
          grow_threshold:
            description: Used space threshold size, in percentage, for the automatic
              growth of the volume. When the amount of used space in the volume becomes
              greater than this threhold, the volume automatically grows unless it
              has reached the maximum size. The volume grows when 'space.used' is
              greater than this percent of 'space.size'. The 'grow_threshold' size
              cannot be less than or equal to the 'shrink_threshold' size..
            type: integer
          maximum:
            description: Maximum size in bytes up to which a volume grows automatically.
              This size cannot be less than the current volume size, or less than
              or equal to the minimum size of volume.
            type: integer
          minimum:
            description: Minimum size in bytes up to which the volume shrinks automatically.
              This size cannot be greater than or equal to the maximum size of volume.
            type: integer
          mode:
            description: Autosize mode for the volume.<br>grow &dash; Volume automatically
              grows when the amount of used space is above the 'grow_threshold' value.<br>grow_shrink
              &dash; Volume grows or shrinks in response to the amount of space used.<br>off
              &dash; Autosizing of the volume is disabled.
            enum:
            - grow
            - grow_shrink
            - "off"
            type: string
          shrink_threshold:
            description: Used space threshold size, in percentage, for the automatic
              shrinkage of the volume.  When the amount of used space in the volume
              drops below this threshold, the volume automatically shrinks unless
              it has reached the minimum size. The volume shrinks when the 'space.used'
              is less than the 'shrink_threshold' percent of 'space.size'. The 'shrink_threshold'
              size cannot be greater than or equal to the 'grow_threshold' size.
            type: integer
        type: object
      clone:
        properties:
          is_flexclone:
            description: Specifies if this volume is a normal FlexVol or FlexClone.
              This field needs to be set when creating a FlexClone. Valid in POST.
            type: boolean
          parent_snapshot:
            $ref: '#/definitions/snapshot_reference'
          parent_svm:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: "The name of the SVM.\n"
                example: svm1
                type: string
              uuid:
                description: |
                  The unique identifier of the SVM.
                example: 02c9e252-41be-11e9-81d5-00a0986138f7
                type: string
            type: object
          parent_volume:
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                description: The name of the volume.
                example: volume1
                type: string
              uuid:
                description: Unique identifier for the volume. This corresponds to
                  the instance-uuid that is exposed in the CLI and ONTAPI. It does
                  not change due to a volume move.
                example: 028baa66-41bd-11e9-81d5-00a0986138f7
                type: string
            type: object
          split_complete_percent:
            description: Percentage of FlexClone blocks split from its parent volume.
            readOnly: true
            type: integer
          split_estimate:
            description: Space required by the containing-aggregate to split the FlexClone
              volume.
            readOnly: true
            type: integer
          split_initiated:
            description: This field is set when split is executed on any FlexClone,
              that is when the FlexClone volume is split from its parent FlexVol.
              This field needs to be set for splitting a FlexClone form FlexVol. Valid
              in PATCH.
            type: boolean
        type: object
      comment:
        description: A comment for the volume. Valid in POST or PATCH.
        maxLength: 1023
        minLength: 0
        type: string
      consistency_group:
        description: Consistency group the volume is part of.
        properties:
          name:
            description: Name of the consistency group.
            example: consistency_group_1
            type: string
        type: object
      constituents_per_aggregate:
        default: 1
        description: Specifies the number of times to iterate over the aggregates
          listed with the "aggregates.name" or "aggregates.uuid" when creating or
          expanding a FlexGroup. If a volume is being created on a single aggregate,
          the system will create a flexible volume if the "constituents_per_aggregate"
          field is not specified, and a FlexGroup if it is specified.  If a volume
          is being created on multiple aggregates, the system will always create a
          FlexGroup.
        maximum: 1000
        minimum: 1
        type: integer
        x-ntap-writeOnly: true
      create_time:
        description: Creation time of the volume. This field is generated when the
          volume is created.
        example: 2018-06-04T19:00:00Z
        format: date-time
        readOnly: true
        type: string
      efficiency:
        properties:
          compaction:
            description: The system can be enabled/disabled compaction.<br>inline
              &dash; Data will be compacted first and written to the volume.<br>none
              &dash; None<br>mixed &dash; Read only field for FlexGroups, where some
              of the constituent volumes are compaction enabled and some are disabled.
            enum:
            - inline
            - none
            - mixed
            type: string
          compression:
            description: The system can be enabled/disabled compression.<br>inline
              &dash; Data will be compressed first and written to the volume.<br>background
              &dash; Data will be written to the volume and compressed later.<br>both
              &dash; Inline compression compresses the data and write to the volume,
              background compression compresses only the blocks on which inline compression
              is not run.<br>none &dash; None<br>mixed &dash; Read only field for
              FlexGroups, where some of the constituent volumes are compression enabled
              and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          cross_volume_dedupe:
            description: The system can be enabled/disabled cross volume dedupe. it
              can be enabled only when dedupe is enabled.<br>inline &dash; Data will
              be cross volume deduped first and written to the volume.<br>background
              &dash; Data will be written to the volume and cross volume deduped later.<br>both
              &dash; Inline cross volume dedupe dedupes the data and write to the
              volume, background cross volume dedupe dedupes only the blocks on which
              inline dedupe is not run.<br>none &dash; None<br>mixed &dash; Read only
              field for FlexGroups, where some of the constituent volumes are cross
              volume dedupe enabled and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          dedupe:
            description: The system can be enabled/disabled dedupe.<br>inline &dash;
              Data will be deduped first and written to the volume.<br>background
              &dash; Data will be written to the volume and deduped later.<br>both
              &dash; Inline dedupe dedupes the data and write to the volume, background
              dedupe dedupes only the blocks on which inline dedupe is not run.<br>none
              &dash; None<br>mixed &dash; Read only field for FlexGroups, where some
              of the constituent volumes are dedupe enabled and some are disabled.
            enum:
            - inline
            - background
            - both
            - none
            - mixed
            type: string
          policy:
            properties:
              name:
                description: Specifies the name of the efficiency policy.
                type: string
            type: object
        type: object
      encryption:
        properties:
          enabled:
            description: Encrypts an unencrypted volume. When set to 'true', a new
              key is generated and used to encrypt the given volume. The underlying
              SVM must be configured with the key manager.
            type: boolean
          key_id:
            description: The key ID used for creating encrypted volume. A new key-id
              is generated for creating an encrypted volume. This key-id is associated
              with the generated key.
            readOnly: true
            type: string
          rekey:
            description: If set to 'true', re-encrypts the volume with a new key.
              Valid in PATCH.
            type: boolean
            x-ntap-readModify: true
          state:
            description: Volume encryption state.<br>encrypted &dash; The volume is
              completely encrypted.<br>encrypting &dash; Encryption operation is in
              progress.<br>partial &dash; Some constituents are encrypted and some
              are not. Applicable only for FlexGroup volume.<br>rekeying. Encryption
              of volume with a new key is in progress.<br>unencrypted &dash; The volume
              is a plain-text one.
            enum:
            - encrypted
            - encrypting
            - partial
            - rekeying
            - unencrypted
            readOnly: true
            type: string
          status:
            properties:
              code:
                description: Encryption progress message code.
                readOnly: true
                type: string
              message:
                description: Encryption progress message.
                readOnly: true
                type: string
            type: object
          type:
            description: Volume encryption type.<br>none &dash; The volume is a plain-text
              one.<br>volume &dash; The volume is encrypted with NVE (NetApp Volume
              Encryption).<br>aggregate &dash; The volume is encrypted with NAE (NetApp
              Aggregate Encryption).
            enum:
            - none
            - volume
            - aggregate
            readOnly: true
            type: string
        type: object
      error_state:
        properties:
          has_bad_blocks:
            description: Indicates whether the volume has any corrupt data blocks.
              If the damaged data block is accessed, an IO error, such as EIO for
              NFS or STATUS_FILE_CORRUPT for CIFS, is returned.
            readOnly: true
            type: boolean
          is_inconsistent:
            description: Indicates whether the file system has any inconsistencies.<br>true
              &dash; File system is inconsistent.<br>false &dash; File system in not
              inconsistent.
            readOnly: true
            type: boolean
        type: object
      files:
        properties:
          maximum:
            description: The maximum number of files (inodes) for user-visible data
              allowed on the volume. This value can be increased or decreased. Increasing
              the maximum number of files does not immediately cause additional disk
              space to be used to track files. Instead, as more files are created
              on the volume, the system dynamically increases the number of disk blocks
              that are used to track files. The space assigned to track files is never
              freed, and this value cannot be decreased below the current number of
              files that can be tracked within the assigned space for the volume.
              Valid in PATCH.
            type: integer
          used:
            description: Number of files (inodes) used for user-visible data permitted
              on the volume. This field is valid only when the volume is online.
            readOnly: true
            type: integer
        type: object
      flexcache_endpoint_type:
        description: FlexCache endpoint type. <br>none &dash; The volume is neither
          a FlexCache nor origin of any FlexCache. <br>cache &dash; The volume is
          a FlexCache volume. <br>origin &dash; The volume is origin of a FlexCache
          volume.
        enum:
        - none
        - cache
        - origin
        readOnly: true
        type: string
      guarantee:
        properties:
          honored:
            description: Is the space guarantee of this volume honored in the aggregate?
            readOnly: true
            type: boolean
          type:
            description: The type of space guarantee of this volume in the aggregate.
            enum:
            - volume
            - none
            type: string
        type: object
      is_svm_root:
        description: Specifies whether the volume is a root volume of the SVM it belongs
          to.
        readOnly: true
        type: boolean
      language:
        description: Language encoding setting for volume. If no language is specified,
          the volume inherits its SVM language encoding setting.
        enum:
        - ar
        - ar.utf_8
        - c
        - c.utf_8
        - cs
        - cs.utf_8
        - da
        - da.utf_8
        - de
        - de.utf_8
        - en
        - en.utf_8
        - en_us
        - en_us.utf_8
        - es
        - es.utf_8
        - fi
        - fi.utf_8
        - fr
        - fr.utf_8
        - he
        - he.utf_8
        - hr
        - hr.utf_8
        - hu
        - hu.utf_8
        - it
        - it.utf_8
        - ja
        - ja.utf_8
        - ja_jp.932
        - ja_jp.932.utf_8
        - ja_jp.pck
        - ja_jp.pck.utf_8
        - ja_jp.pck_v2
        - ja_jp.pck_v2.utf_8
        - ja_v1
        - ja_v1.utf_8
        - ko
        - ko.utf_8
        - nl
        - nl.utf_8
        - no
        - no.utf_8
        - pl
        - pl.utf_8
        - pt
        - pt.utf_8
        - ro
        - ro.utf_8
        - ru
        - ru.utf_8
        - sk
        - sk.utf_8
        - sl
        - sl.utf_8
        - sv
        - sv.utf_8
        - tr
        - tr.utf_8
        - utf8mb4
        - zh
        - zh.gbk
        - zh.gbk.utf_8
        - zh.utf_8
        - zh_tw
        - zh_tw.big5
        - zh_tw.big5.utf_8
        - zh_tw.utf_8
        type: string
        x-ntap-readCreate: true
      metric:
        description: Performance numbers, such as IOPS, latency and throughput.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          cloud:
            description: Performance numbers (IOPS and latency) for cloud store. These
              numbers are relevant only for volumes hosted on FabricPools.
            properties:
              duration:
                description: |
                  The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
                enum:
                - PT15S
                - PT4M
                - PT30M
                - PT2H
                - P1D
                - PT5M
                example: PT15S
                readOnly: true
                type: string
              iops:
                description: The rate of I/O operations observed at the storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency:
                description: The round trip latency in microseconds observed at the
                  storage object.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Errors associated with the sample. For example, if the
                  aggregation of data over multiple nodes fails, then any partial
                  errors might return "ok" on success or "error" on an internal uncategorized
                  failure. Whenever a sample collection is missed but done at a later
                  time, it is back filled to the previous 15 second timestamp and
                  tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
                  when the time between two collections is not the same for all nodes.
                  Therefore, the aggregated value might be over or under inflated.
                  "Negative_delta" is returned when an expected monotonically increasing
                  value has decreased in value. "Inconsistent_old_data" is returned
                  when one or more nodes do not have the latest data.
                enum:
                - ok
                - error
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput:
            description: The rate of throughput bytes per second observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      movement:
        description: Volume movement. All attributes are modify, that is, not writable
          through POST. Set PATCH state to destination_aggregate to initiate a volume
          move operation. Volume movement on FlexGroup constituents are not supported.
        properties:
          cutover_window:
            default: 30
            description: Time window in seconds for cutover. The allowed range is
              between 30 to 300 seconds.
            example: 30
            type: integer
          destination_aggregate:
            description: Aggregate
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              name:
                example: aggr1
                type: string
              uuid:
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
          percent_complete:
            description: Completion percentage
            readOnly: true
            type: integer
          state:
            description: State of volume move operation. PATCH the state to "aborted"
              to abort the move operation. PATCH the state to "cutover" to trigger
              cutover. PATCH the state to "paused" to pause the volume move operation
              in progress. PATCH the state to "replicating" to resume the paused volume
              move operation. PATCH the state to "cutover_wait" to go into cutover
              manually. When volume move operation is waiting to go into "cutover"
              state, this is indicated by the "cutover_pending" state. A change of
              state is only supported if volume movement is in progress.
            enum:
            - aborted
            - cutover
            - cutover_wait
            - cutover_pending
            - failed
            - paused
            - queued
            - replicating
            - success
            example: replicating
            type: string
          tiering_policy:
            description: Tiering policy for FabricPool
            enum:
            - all
            - auto
            - backup
            - none
            - snapshot_only
            type: string
            x-ntap-modifyOnly: true
        type: object
      name:
        description: Volume name. The name of volume must start with an alphabetic
          character (a to z or A to Z) or an underscore (_). The name must be 197
          or fewer characters in length for FlexGroups, and 203 or fewer characters
          in length for all other types of volumes. Volume names must be unique within
          an SVM. Required on POST.
        example: vol_cs_dept
        maxLength: 203
        minLength: 1
        type: string
      nas:
        properties:
          export_policy:
            description: Export Policy
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              id:
                example: 100
                type: integer
              name:
                example: default
                type: string
            type: object
          gid:
            default: 0
            description: The UNIX group ID of the volume. Valid in POST or PATCH.
            type: integer
          path:
            description: The fully-qualified path in the owning SVM's namespace at
              which the volume is mounted. The path is case insensitive and must be
              unique within a SVM's namespace. Path must begin with '/' and must not
              end with '/'. Only one volume can be mounted at any given junction path.
              An empty path in POST creates an unmounted volume. An empty path in
              PATCH deactivates and unmounts the volume. Taking a volume offline removes
              its junction path. This attribute is reported in GET only when the volume
              is mounted.
            example: /user/my_volume
            type: string
          security_style:
            default: unix
            description: Security style associated with the volume. Valid in POST
              or PATCH.<br>mixed &dash; Mixed-style security<br>ntfs &dash; NTFS/WIndows-style
              security<br>unified &dash; Unified-style security, unified UNIX, NFS
              and CIFS permissions<br>unix &dash; Unix-style security.
            enum:
            - mixed
            - ntfs
            - unified
            - unix
            type: string
          uid:
            default: 0
            description: The UNIX user ID of the volume. Valid in POST or PATCH.
            type: integer
          unix_permissions:
            description: UNIX permissions to be viewed as an octal number. It consists
              of 4 digits derived by adding up bits 4 (read), 2 (write) and 1 (execute).
              First digit selects the set user ID(4), set group ID (2) and sticky
              (1) attributes. The second digit selects permission for the owner of
              the file; the third selects permissions for other users in the same
              group; the fourth for other users not in the group. Valid in POST or
              PATCH. For security style "mixed" or "unix", the default setting is
              0755 in octal (493 in decimal) and for security style "ntfs", the default
              setting is 0000. In cases where only owner, group and other permissions
              are given (as in 755, representing the second, third and fourth dight),
              first digit is assumed to be zero.
            example: 0755
            type: integer
        type: object
      qos:
        description: QoS information
        properties:
          policy:
            description: When "min_throughput_iops", "max_throughput_iops" or "max_throughput_mbps"
              attributes are specified, the storage object is assigned to an auto-generated
              QoS policy group. If the attributes are later modified, the auto-generated
              QoS policy-group attributes are modified. Attributes can be removed
              by specifying "0" and policy group by specifying "none". Upon deletion
              of the storage object or if the attributes are removed, then the QoS
              policy-group is also removed.
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              max_throughput_iops:
                description: Specifies the maximum throughput in IOPS, 0 means none.
                  This is mutually exclusive with name and UUID during POST and PATCH.
                example: 10000
                type: integer
              max_throughput_mbps:
                default: 0
                description: Specifies the maximum throughput in Megabytes per sec,
                  0 means none. This is mutually exclusive with name, UUID and "min_throughput_iops"
                  during POST and PATCH.
                example: 500
                type: integer
              min_throughput_iops:
                default: 0
                description: Specifies the minimum throughput in IOPS, 0 means none.
                  Setting "min_throughput" is supported on AFF platforms only, unless
                  FabricPool tiering policies are set. This is mutually exclusive
                  with name, UUID and" max_throughput_mbps" during POST and PATCH.
                example: 2000
                type: integer
              name:
                description: The QoS policy group name. This is mutually exclusive
                  with UUID and other QoS attributes during POST and PATCH.
                example: performance
                type: string
              uuid:
                description: The QoS policy group UUID. This is mutually exclusive
                  with name and other QoS attributes during POST and PATCH.
                example: 1cd8a442-86d1-11e0-ae1c-123478563412
                type: string
            type: object
        type: object
      quota:
        description: Quotas track the space or file usage of a user, group, or qtree
          in a FlexVol or a FlexGroup volume.
        properties:
          enabled:
            description: This option is used to enable or disable the quota for the
              volume. This option is valid only in PATCH. Quotas are enabled for FlexVols
              or FlexGroup volumes when the quota state is "on". Quotas are disabled
              for FlexVols or FlexGroup volumes when the quota state is "off".
            type: boolean
            x-ntap-modifyOnly: true
          state:
            description: Quota state of the volume
            enum:
            - corrupt
            - initializing
            - mixed
            - "off"
            - "on"
            - resizing
            readOnly: true
            type: string
        type: object
      size:
        description: Physical size of the volume, in bytes. The minimum size for a
          FlexVol volume is 20MB and the minimum size for a FlexGroup volume is 200MB
          per constituent. The recommended size for a FlexGroup volume is a minimum
          of 100GB per constituent. For all volumes, the default size is equal to
          the minimum size.
        type: integer
      snaplock:
        properties:
          append_mode_enabled:
            default: false
            description: Specifies if the volume append mode is enabled or disabled.
              When it is enabled, all the files created with write permissions on
              the volume are, by default, WORM appendable files. The user can append
              the data to a WORM appendable file but cannot modify the existing contents
              of the file nor delete the file until it expires.
            example: false
            type: boolean
          autocommit_period:
            default: none
            description: Specifies the autocommit period for SnapLock volume. All
              files which are not modified for a period greater than the autocommit
              period of the volume are committed to the WORM state. The autocommit
              period value represents a duration and must be specified in the ISO-8601
              duration format. The autocommit period can be in years, months, days,
              hours, and minutes. A period specified for years, months, and days is
              represented in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D"
              respectively, for example "P10Y" represents a duration of 10 years.
              A duration in hours and minutes is represented by "PT<num>H" and "PT<num>M"
              respectively. The period string must contain only a single time element
              that is, either years, months, days, hours, or minutes. A duration which
              combines different periods is not supported, for example "P1Y10M" is
              not supported. Apart from the duration specified in the ISO-8601 format,
              the autocommit field also accepts the string "none".
            example: P30M
            type: string
          compliance_clock_time:
            description: This is the volume compliance clock time which is used to
              manage the SnapLock objects in the volume.
            example: 2018-06-04T19:00:00Z
            format: date-time
            readOnly: true
            type: string
          expiry_time:
            description: Expiry time of the volume.
            example: Wed Sep  5 11:02:42 GMT 2018
            format: date-time
            readOnly: true
            type: string
          is_audit_log:
            description: Indicates if this volume has been configured as SnapLock
              audit log volume for the SVM .
            example: true
            readOnly: true
            type: boolean
          litigation_count:
            description: Litigation count indicates the number of active legal-holds
              on the volume.
            example: 10
            readOnly: true
            type: integer
          privileged_delete:
            description: Specifies the privileged-delete attribute of a SnapLock volume.
              On a SnapLock Enterprise (SLE) volume, a designated privileged user
              can selectively delete files irrespective of the retention time of the
              file. SLE volumes can have privileged delete as disabled, enabled or
              permanently_disabled and for SnapLock Compliance (SLC) volumes it is
              always permanently_disabled.
            enum:
            - disabled
            - enabled
            - permanently_disabled
            example: enabled
            type: string
          retention:
            properties:
              default:
                description: Specifies the default retention period that is applied
                  to files while committing them to the WORM state without an associated
                  retention period. The retention value represents a duration and
                  must be specified in the ISO-8601 duration format. The retention
                  period can be in years, months, days, hours, and minutes. A duration
                  specified for years, months, and days is represented in the ISO-8601
                  format as "P<num>Y", "P<num>M", "P<num>D" respectively, for example
                  "P10Y" represents a duration of 10 years. A duration in hours and
                  minutes is represented by "PT<num>H" and "PT<num>M" respectively.
                  The retention string must contain only a single time element that
                  is, either years, months, days, hours, or minutes. A duration which
                  combines different periods is not supported, for example "P1Y10M"
                  is not supported. Apart from the duration specified in the ISO-8601
                  format, the duration field also accepts the string "infinite" to
                  set an infinite retention period.
                example: P30Y
                type: string
              maximum:
                default: P30Y
                description: Specifies the maximum allowed retention period for files
                  committed to the WORM state on the volume. The retention value represents
                  a duration and must be specified in the ISO-8601 duration format.
                  The retention period can be in years, months, days, hours, and minutes.
                  A duration specified for years, months, and days is represented
                  in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively,
                  for example "P10Y" represents a duration of 10 years. A duration
                  in hours and minutes is represented by "PT<num>H" and "PT<num>M"
                  respectively. The retention string must contain only a single time
                  element that is, either years, months, days, hours, or minutes.
                  A duration which combines different periods is not supported, for
                  example "P1Y10M" is not supported. Apart from the duration specified
                  in the ISO-8601 format, the duration field also accepts the string
                  "infinite" to set an infinite retention period.
                example: P30Y
                type: string
              minimum:
                default: P0Y
                description: Specifies the minimum allowed retention period for files
                  committed to the WORM state on the volume. The retention value represents
                  a duration and must be specified in the ISO-8601 duration format.
                  The retention period can be in years, months, days, hours, and minutes.
                  A duration specified for years, month,s and days is represented
                  in the ISO-8601 format as "P<num>Y", "P<num>M", "P<num>D" respectively,
                  for example "P10Y" represents a duration of 10 years. A duration
                  in hours and minutes is represented by "PT<num>H" and "PT<num>M"
                  respectively. The retention string must contain only a single time
                  element that is, either years, months, days, hours, or minutes.
                  A duration which combines different periods is not supported, for
                  example "P1Y10M" is not supported. Apart from the duration specified
                  in the ISO-8601 format, the duration field also accepts the string
                  "infinite" to set an infinite retention period.
                example: P30Y
                type: string
            type: object
          type:
            default: non_snaplock
            description: The SnapLock type of the volume. <br>compliance &dash; A
              SnapLock Compliance(SLC) volume provides the highest level of WORM protection
              and an administrator cannot destroy a SLC volume if it contains unexpired
              WORM files. <br> enterprise &dash; An administrator can delete a SnapLock
              Enterprise(SLE) volume.<br> non_snaplock &dash; Indicates the volume
              is non-snaplock.
            enum:
            - compliance
            - enterprise
            - non_snaplock
            example: enterprise
            readOnly: true
            type: string
        type: object
      snapmirror:
        description: Specifies attributes for SnapMirror protection.
        properties:
          is_protected:
            description: Specifies whether a volume is a SnapMirror source volume,
              using SnapMirror to protect its data.
            readOnly: true
            type: boolean
        type: object
      snapshot_policy:
        description: This is a reference to the Snapshot copy policy.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: default
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      space:
        properties:
          available:
            description: The available space, in bytes.
            readOnly: true
            type: integer
          block_storage_inactive_user_data:
            description: The size that is physically used in the block storage of
              the volume and has a cold temperature. In bytes. This parameter is only
              supported if the volume is in an aggregate that is either attached to
              a cloud store or could be attached to a cloud store.
            readOnly: true
            type: integer
          capacity_tier_footprint:
            description: The space used by capacity tier for this volume in the aggregate,
              in bytes.
            readOnly: true
            type: integer
          footprint:
            description: Data and metadata used for this volume in the aggregate,
              in bytes.
            readOnly: true
            type: integer
          logical_space:
            properties:
              available:
                description: The amount of space available in this volume with storage
                  efficiency space considered used, in bytes.
                readOnly: true
                type: integer
              enforcement:
                default: false
                description: Specifies whether space accounting for operations on
                  the volume is done along with storage efficiency.
                type: boolean
              reporting:
                default: false
                description: Specifies whether space reporting on the volume is done
                  along with storage efficiency.
                type: boolean
              used_by_afs:
                description: The virtual space used by AFS alone (includes volume
                  reserves) and along with storage efficiency, in bytes.
                readOnly: true
                type: integer
            type: object
          metadata:
            description: The space used by the total metadata in the volume, in bytes.
            readOnly: true
            type: integer
          over_provisioned:
            description: The amount of space not available for this volume in the
              aggregate, in bytes.
            readOnly: true
            type: integer
          size:
            description: Total provisioned size. The default size is equal to the
              minimum size of 20MB, in bytes.
            type: integer
          snapshot:
            properties:
              autodelete_enabled:
                default: false
                description: Specifies whether Snapshot copy autodelete is currently
                  enabled on this volume.
                type: boolean
                x-ntap-modifyOnly: true
              reserve_percent:
                default: 5
                description: The space that has been set aside as a reserve for Snapshot
                  copy usage, in percent.
                type: integer
              used:
                description: The total space used by Snapshot copies in the volume,
                  in bytes.
                readOnly: true
                type: integer
            type: object
          used:
            description: The virtual space used (includes volume reserves) before
              storage efficiency, in bytes.
            readOnly: true
            type: integer
        type: object
      state:
        description: Volume state. A volume can only be brought online if it is offline.
          Taking a volume offline removes its junction path. The 'mixed' state applies
          to FlexGroup volumes only and cannot be specified as a target state. An
          'error' state implies that the volume is not in a state to serve data.
        enum:
        - error
        - mixed
        - offline
        - online
        type: string
      statistics:
        description: These are raw performance numbers, such as IOPS latency and throughput.
          These numbers are aggregated across all nodes in the cluster and increase
          with the uptime of the cluster.
        properties:
          cloud:
            description: These are raw performance numbers (IOPS and latency) for
              the cloud store. These numbers are aggregated across all nodes in the
              cluster and increase with the uptime of the cluster. These numbers are
              relevant only for volumes hosted on FabricPools.
            properties:
              iops_raw:
                description: The number of I/O operations observed at the storage
                  object. This can be used along with delta time to calculate the
                  rate of I/O operations per unit of time.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              latency_raw:
                description: The raw latency in microseconds observed at the storage
                  object. This can be divided by the raw IOPS value to calculate the
                  average latency per I/O operation.
                properties:
                  other:
                    description: Performance metric for other I/O operations. Other
                      I/O operations can be metadata operations, such as directory
                      lookups and so on.
                    type: integer
                  read:
                    description: Performance metric for read I/O operations.
                    example: 200
                    type: integer
                  total:
                    description: Performance metric aggregated over all types of I/O
                      operations.
                    example: 1000
                    type: integer
                  write:
                    description: Peformance metric for write I/O operations.
                    example: 100
                    type: integer
                readOnly: true
                type: object
              status:
                description: Errors associated with the sample. For example, if the
                  aggregation of data over multiple nodes fails, then any partial
                  errors might return "ok" on success or "error" on an internal uncategorized
                  failure. Whenever a sample collection is missed but done at a later
                  time, it is back filled to the previous 15 second timestamp and
                  tagged with "backfilled_data". "Inconsistent_ delta_time" is encountered
                  when the time between two collections is not the same for all nodes.
                  Therefore, the aggregated value might be over or under inflated.
                  "Negative_delta" is returned when an expected monotonically increasing
                  value has decreased in value. "Inconsistent_old_data" is returned
                  when one or more nodes do not have the latest data.
                enum:
                - ok
                - error
                - partial_no_data
                - partial_no_uuid
                - partial_no_response
                - partial_other_error
                - negative_delta
                - backfilled_data
                - inconsistent_delta_time
                - inconsistent_old_data
                example: ok
                readOnly: true
                type: string
              timestamp:
                description: The timestamp of the performance data.
                example: 2017-01-25T11:20:13Z
                format: date-time
                readOnly: true
                type: string
            readOnly: true
            type: object
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          throughput_raw:
            description: Throughput bytes observed at the storage object. This can
              be used along with delta time to calculate the rate of throughput bytes
              per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      style:
        description: The style of the volume. If "style" is not specified, the volume
          type is determined based on the specified aggregates. Specifying a single
          aggregate, without "constituents_per_aggregate", creates a flexible volume.
          Specifying multiple aggregates, or a single aggregate with "constituents_per_aggregate",
          creates a FlexGroup. Specifying a volume "style" creates a volume of that
          type. For example, if the style is "flexvol" you must specify a single aggregate.
          If the style is "flexgroup", the system either uses the specified aggregates
          or automatically provisions aggregates if there are no specified aggregates.<br>flexvol
          &dash; flexible volumes and FlexClone volumes<br>flexgroup &dash; FlexGroups.
        enum:
        - flexvol
        - flexgroup
        type: string
        x-ntap-readCreate: true
      svm:
        description: SVM containing the volume. Required on POST.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      tiering:
        properties:
          policy:
            description: Policy that determines whether the user data blocks of a
              volume in a FabricPool will be tiered to the cloud store when they become
              cold. FabricPool combines flash (performance tier) with a cloud store
              into a single aggregate. Temperature of a volume block increases if
              it is accessed frequently and decreases when it is not. Valid in POST
              or PATCH.<br>all &dash; This policy allows tiering of both Snapshot
              copies and active file system user data to the cloud store as soon as
              possible by ignoring the temperature on the volume blocks.<br>auto &dash;
              This policy allows tiering of both snapshot and active file system user
              data to the cloud store<br>none &dash; Volume blocks will not be tiered
              to the cloud store.<br>snapshot_only &dash; This policy allows tiering
              of only the volume Snapshot copies not associated with the active file
              system. The default tiering policy is "snapshot-only" for a FlexVol
              and "none" for a FlexGroup.
            enum:
            - all
            - auto
            - backup
            - none
            - snapshot_only
            type: string
          supported:
            default: false
            description: This parameter specifies whether or not FabricPools are selected
              when provisioning a FlexGroup without specifying "aggregates.name" or
              "aggregates.uuid". Only FabricPool aggregates are used if this parameter
              is set to true and only non FabricPool aggregates are used if this parameter
              is set to false. Tiering support for a FlexGroup can be changed by moving
              all of the constituents to the required aggregates. Note that in order
              to tier data, not only does the volume need to support tiering by using
              FabricPools, the tiering "policy" must not be 'none'. A volume that
              uses FabricPools but has a tiering "policy" of 'none' supports tiering,
              but will not tier any data.
            type: boolean
            x-ntap-createOnly: true
        type: object
      type:
        default: rw
        description: Type of the volume.<br>rw &dash; read-write volume.<br>dp &dash;
          data-protection volume.<br>ls &dash; load-sharing `dp` volume. Valid in
          GET.
        enum:
        - rw
        - dp
        - ls
        type: string
        x-ntap-readCreate: true
      use_mirrored_aggregates:
        default: ~
        description: Specifies whether mirrored aggregates are selected when provisioning
          a FlexGroup without specifying "aggregates.name" or "aggregates.uuid". Only
          mirrored aggregates are used if this parameter is set to 'true' and only
          unmirrored aggregates are used if this parameter is set to 'false'. Aggregate
          level mirroring for a FlexGroup can be changed by moving all of the constituents
          to the required aggregates. The default value is 'true' for a MetroCluster
          configuration and is 'false' for a non-MetroCluster configuration.
        type: boolean
        x-ntap-createOnly: true
      uuid:
        description: Unique identifier for the volume. This corresponds to the instance-uuid
          that is exposed in the CLI and ONTAPI. It does not change due to a volume
          move.
        example: 028baa66-41bd-11e9-81d5-00a0986138f7
        readOnly: true
        type: string
    type: object
  volume_encryption_support:
    description: |
      Indicates whether volume encryption is supported in the cluster.
    properties:
      code:
        description: Code corresponding to the status message. Returns a 0 if volume
          encryption is supported in all nodes of the cluster.
        example: 346758
        type: integer
      message:
        description: Reason for not supporting volume encryption.
        example: No platform support for volume encryption in following nodes - node1,
          node2.
        type: string
      supported:
        description: Set to true when volume encryption support is available on all
          nodes of the cluster.
        type: boolean
    readOnly: true
    type: object
  volume_metrics:
    description: Performance numbers, such as IOPS, latency and throughput.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cloud:
        description: Performance numbers (IOPS and latency) for cloud store. These
          numbers are relevant only for volumes hosted on FabricPools.
        properties:
          duration:
            description: |
              The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
            enum:
            - PT15S
            - PT4M
            - PT30M
            - PT2H
            - P1D
            - PT5M
            example: PT15S
            readOnly: true
            type: string
          iops:
            description: The rate of I/O operations observed at the storage object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency:
            description: The round trip latency in microseconds observed at the storage
              object.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      duration:
        description: |
          The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
        enum:
        - PT15S
        - PT4M
        - PT30M
        - PT2H
        - P1D
        - PT5M
        example: PT15S
        readOnly: true
        type: string
      iops:
        description: The rate of I/O operations observed at the storage object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency:
        description: The round trip latency in microseconds observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput:
        description: The rate of throughput bytes per second observed at the storage
          object.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  volume_metrics_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          description: Performance numbers, such as IOPS latency and throughput.
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            duration:
              description: |
                The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
              enum:
              - PT15S
              - PT4M
              - PT30M
              - PT2H
              - P1D
              - PT5M
              example: PT15S
              readOnly: true
              type: string
            iops:
              description: The rate of I/O operations observed at the storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            latency:
              description: The round trip latency in microseconds observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            status:
              description: Errors associated with the sample. For example, if the
                aggregation of data over multiple nodes fails, then any partial errors
                might return "ok" on success or "error" on an internal uncategorized
                failure. Whenever a sample collection is missed but done at a later
                time, it is back filled to the previous 15 second timestamp and tagged
                with "backfilled_data". "Inconsistent_ delta_time" is encountered
                when the time between two collections is not the same for all nodes.
                Therefore, the aggregated value might be over or under inflated. "Negative_delta"
                is returned when an expected monotonically increasing value has decreased
                in value. "Inconsistent_old_data" is returned when one or more nodes
                do not have the latest data.
              enum:
              - ok
              - error
              - partial_no_data
              - partial_no_uuid
              - partial_no_response
              - partial_other_error
              - negative_delta
              - backfilled_data
              - inconsistent_delta_time
              - inconsistent_old_data
              example: ok
              readOnly: true
              type: string
            throughput:
              description: The rate of throughput bytes per second observed at the
                storage object.
              properties:
                other:
                  description: Performance metric for other I/O operations. Other
                    I/O operations can be metadata operations, such as directory lookups
                    and so on.
                  type: integer
                read:
                  description: Performance metric for read I/O operations.
                  example: 200
                  type: integer
                total:
                  description: Performance metric aggregated over all types of I/O
                    operations.
                  example: 1000
                  type: integer
                write:
                  description: Peformance metric for write I/O operations.
                  example: 100
                  type: integer
              readOnly: true
              type: object
            timestamp:
              description: The timestamp of the performance data.
              example: 2017-01-25T11:20:13Z
              format: date-time
              readOnly: true
              type: string
          readOnly: true
          type: object
        type: array
    type: object
  volume_reference:
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      name:
        description: The name of the volume.
        example: volume1
        type: string
      uuid:
        description: Unique identifier for the volume. This corresponds to the instance-uuid
          that is exposed in the CLI and ONTAPI. It does not change due to a volume
          move.
        example: 028baa66-41bd-11e9-81d5-00a0986138f7
        type: string
    type: object
  volume_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/volume'
        type: array
    type: object
  volume_statistics_reference:
    description: These are raw performance numbers, such as IOPS latency and throughput.
      These numbers are aggregated across all nodes in the cluster and increase with
      the uptime of the cluster.
    properties:
      cloud:
        description: These are raw performance numbers (IOPS and latency) for the
          cloud store. These numbers are aggregated across all nodes in the cluster
          and increase with the uptime of the cluster. These numbers are relevant
          only for volumes hosted on FabricPools.
        properties:
          iops_raw:
            description: The number of I/O operations observed at the storage object.
              This can be used along with delta time to calculate the rate of I/O
              operations per unit of time.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          latency_raw:
            description: The raw latency in microseconds observed at the storage object.
              This can be divided by the raw IOPS value to calculate the average latency
              per I/O operation.
            properties:
              other:
                description: Performance metric for other I/O operations. Other I/O
                  operations can be metadata operations, such as directory lookups
                  and so on.
                type: integer
              read:
                description: Performance metric for read I/O operations.
                example: 200
                type: integer
              total:
                description: Performance metric aggregated over all types of I/O operations.
                example: 1000
                type: integer
              write:
                description: Peformance metric for write I/O operations.
                example: 100
                type: integer
            readOnly: true
            type: object
          status:
            description: Errors associated with the sample. For example, if the aggregation
              of data over multiple nodes fails, then any partial errors might return
              "ok" on success or "error" on an internal uncategorized failure. Whenever
              a sample collection is missed but done at a later time, it is back filled
              to the previous 15 second timestamp and tagged with "backfilled_data".
              "Inconsistent_ delta_time" is encountered when the time between two
              collections is not the same for all nodes. Therefore, the aggregated
              value might be over or under inflated. "Negative_delta" is returned
              when an expected monotonically increasing value has decreased in value.
              "Inconsistent_old_data" is returned when one or more nodes do not have
              the latest data.
            enum:
            - ok
            - error
            - partial_no_data
            - partial_no_uuid
            - partial_no_response
            - partial_other_error
            - negative_delta
            - backfilled_data
            - inconsistent_delta_time
            - inconsistent_old_data
            example: ok
            readOnly: true
            type: string
          timestamp:
            description: The timestamp of the performance data.
            example: 2017-01-25T11:20:13Z
            format: date-time
            readOnly: true
            type: string
        readOnly: true
        type: object
      iops_raw:
        description: The number of I/O operations observed at the storage object.
          This can be used along with delta time to calculate the rate of I/O operations
          per unit of time.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      latency_raw:
        description: The raw latency in microseconds observed at the storage object.
          This can be divided by the raw IOPS value to calculate the average latency
          per I/O operation.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      status:
        description: Errors associated with the sample. For example, if the aggregation
          of data over multiple nodes fails, then any partial errors might return
          "ok" on success or "error" on an internal uncategorized failure. Whenever
          a sample collection is missed but done at a later time, it is back filled
          to the previous 15 second timestamp and tagged with "backfilled_data". "Inconsistent_
          delta_time" is encountered when the time between two collections is not
          the same for all nodes. Therefore, the aggregated value might be over or
          under inflated. "Negative_delta" is returned when an expected monotonically
          increasing value has decreased in value. "Inconsistent_old_data" is returned
          when one or more nodes do not have the latest data.
        enum:
        - ok
        - error
        - partial_no_data
        - partial_no_uuid
        - partial_no_response
        - partial_other_error
        - negative_delta
        - backfilled_data
        - inconsistent_delta_time
        - inconsistent_old_data
        example: ok
        readOnly: true
        type: string
      throughput_raw:
        description: Throughput bytes observed at the storage object. This can be
          used along with delta time to calculate the rate of throughput bytes per
          unit of time.
        properties:
          other:
            description: Performance metric for other I/O operations. Other I/O operations
              can be metadata operations, such as directory lookups and so on.
            type: integer
          read:
            description: Performance metric for read I/O operations.
            example: 200
            type: integer
          total:
            description: Performance metric aggregated over all types of I/O operations.
            example: 1000
            type: integer
          write:
            description: Peformance metric for write I/O operations.
            example: 100
            type: integer
        readOnly: true
        type: object
      timestamp:
        description: The timestamp of the performance data.
        example: 2017-01-25T11:20:13Z
        format: date-time
        readOnly: true
        type: string
    readOnly: true
    type: object
  vscan:
    description: Vscan can be used to protect data from being compromised by viruses
      or other malicious code. This combines best-in-class third-party antivirus software
      with ONTAP features that give you the flexibility you need to control which
      files get scanned and when. Storage systems offload scanning operations to external
      servers hosting antivirus software from thirdparty vendors. An Antivirus Connector
      on the external server handles communications between the storage system and
      the antivirus software.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      cache_clear:
        default: false
        description: Discards the cached information of the files that have been successfully
          scanned. Once the cache is cleared, files are scanned again when they are
          accessed. PATCH only
        type: boolean
        x-ntap-modifyOnly: true
      enabled:
        default: true
        description: Specifies whether or not Vscan is enabled on the SVM.
        type: boolean
      on_access_policies:
        items:
          $ref: '#/definitions/vscan_on_access'
        type: array
        x-ntap-readCreate: true
      on_demand_policies:
        items:
          $ref: '#/definitions/vscan_on_demand'
        type: array
        x-ntap-readCreate: true
      scanner_pools:
        items:
          $ref: '#/definitions/vscan_scanner_pool'
        type: array
        x-ntap-readCreate: true
      svm:
        description: SVM, applies only to SVM-scoped objects.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
        x-ntap-readCreate: true
    type: object
  vscan_on_access:
    description: An On-Access policy that defines the scope of an On-Access scan.
      Use On-Access scanning to check for viruses when clients open, read, rename,
      or close files over CIFS. By default, ONTAP creates an On-Access policy named
      "default_CIFS" and enables it for all the SVMs in a cluster.
    properties:
      enabled:
        default: enabled
        description: Status of the On-Access Vscan policy
        type: boolean
      mandatory:
        default: enabled
        description: Specifies if scanning is mandatory. File access is denied if
          there are no external virus-scanning servers available for virus scanning.
        type: boolean
      name:
        description: On-Access policy ame
        example: on-access-test
        maxLength: 256
        minLength: 1
        type: string
        x-ntap-readCreate: true
      scope:
        properties:
          exclude_extensions:
            description: List of file extensions for which scanning is not performed.
            example:
            - mp*
            - txt
            items:
              type: string
            maxLength: 16
            minLength: 1
            type: array
          exclude_paths:
            description: List of file paths for which scanning must not be performed.
            example:
            - \dir1\dir2\name
            - \vol\a b
            - \vol\a,b\
            items:
              type: string
            maxLength: 255
            minLength: 1
            type: array
          include_extensions:
            default: '*'
            description: List of file extensions to be scanned.
            example:
            - mp*
            - txt
            items:
              type: string
            maxLength: 16
            minLength: 1
            type: array
          max_file_size:
            default: 2147483648
            description: Maximum file size, in bytes, allowed for scanning.
            example: 2147483648
            maximum: 1099511627776
            minimum: 1024
            type: integer
          only_execute_access:
            default: false
            description: Scan only files opened with execute-access.
            type: boolean
          scan_readonly_volumes:
            default: false
            description: Specifies whether or not read-only volume can be scanned.
            type: boolean
          scan_without_extension:
            default: true
            description: Specifies whether or not files without any extension can
              be scanned.
            type: boolean
        type: object
    type: object
  vscan_on_access_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/vscan_on_access'
        type: array
    type: object
  vscan_on_demand:
    description: Use On-Demand scanning to check files for viruses on a schedule.
      An On-Demand policy defines the scope of an On-Demand scan.
    properties:
      log_path:
        description: The path from the Vserver root where the task report is created.
        example: /vol0/report_dir
        type: string
      name:
        description: On-Demand task name
        example: task-1
        maxLength: 256
        minLength: 1
        type: string
        x-ntap-readCreate: true
      scan_paths:
        description: List of paths that need to be scanned.
        example:
        - /vol1/
        - /vol2/cifs/
        items:
          type: string
        type: array
      schedule:
        description: Schedule of the task.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: Job schedule name
            example: weekly
            type: string
          uuid:
            description: Job schedule UUID
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        type: object
      scope:
        properties:
          exclude_extensions:
            description: List of file extensions for which scanning is not performed.
            example:
            - mp3
            - mp4
            items:
              type: string
            type: array
          exclude_paths:
            description: List of file paths for which scanning must not be performed.
            example:
            - /vol1/cold-files/
            - /vol1/cifs/names
            items:
              type: string
            type: array
          include_extensions:
            default: '*'
            description: List of file extensions to be scanned.
            example:
            - vmdk
            - mp*
            items:
              type: string
            maxLength: 16
            minLength: 1
            type: array
          max_file_size:
            default: 10737418240
            description: Maximum file size, in bytes, allowed for scanning.
            example: 10737418240
            maximum: 1099511627776
            minimum: 1024
            type: integer
          scan_without_extension:
            default: true
            description: Specifies whether or not files without any extension can
              be scanned.
            type: boolean
        type: object
    type: object
  vscan_on_demand_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/vscan_on_demand'
        type: array
    type: object
  vscan_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/vscan'
        type: array
    type: object
  vscan_scanner_pool:
    description: Scanner pool is a set of attributes which are used to validate and
      manage connections between clustered ONTAP and external virus-scanning server,
      or "Vscan server".
    properties:
      cluster:
        $ref: '#/definitions/cluster_reference'
      name:
        description: Specifies the name of the scanner pool. Scanner pool name can
          be up to 256 characters long and is a string that can only contain any combination
          of ASCII-range alphanumeric characters a-z, A-Z, 0-9), "_", "-" and ".".
        example: scanner-1
        maxLength: 256
        minLength: 1
        type: string
        x-ntap-readCreate: true
      privileged_users:
        description: Specifies a list of privileged users. A valid form of privileged
          user-name is "domain-name\user-name". Privileged user-names are stored and
          treated as case-insensitive strings. Virus scanners must use one of the
          registered privileged users for connecting to clustered Data ONTAP for exchanging
          virus-scanning protocol messages and to access file for scanning, remedying
          and quarantining operations.
        example:
        - cifs\u1
        - cifs\u2
        items:
          type: string
        type: array
      role:
        default: primary
        description: |
          Specifies the role of the scanner pool. The possible values are:
            * primary   - Always active.
            * secondary - Active only when none of the primary external virus-scanning servers are connected.
            * idle      - Always inactive.
        enum:
        - primary
        - secondary
        - idle
        type: string
      servers:
        description: Specifies a list of IP addresses or FQDN for each Vscan server
          host names which are allowed to connect to clustered ONTAP.
        example:
        - 1.1.1.1
        - 10.72.204.27
        - vmwin204-27.fsct.nb
        items:
          type: string
        type: array
    type: object
  vscan_scanner_pool_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/vscan_scanner_pool'
        type: array
    type: object
  vscan_server_status:
    description: Displays the connection status information of the external virus-scanning
      servers.
    properties:
      disconnected_reason:
        description: |
          Specifies the server disconnected reason.
          The following is a list of the possible reasons:
          * unknown                   - Disconnected, unknown reason.
          * vscan_disabled            - Disconnected, Vscan is disabled on the SVM.
          * no_data_lif               - Disconnected, SVM does not have data LIF.
          * session_uninitialized     - Disconnected, session is not initialized.
          * remote_closed             - Disconnected, server has closed the connection.
          * invalid_protocol_msg      - Disconnected, invalid protocol message received.
          * invalid_session_id        - Disconnected, invalid session ID received.
          * inactive_connection       - Disconnected, no activity on connection.
          * invalid_user              - Connection request by an invalid user.
          * server_removed            - Disconnected, server has been removed from the active Scanners List.
          enum:
            - unknown
            - vscan_disabled
            - no_data_lif
            - session_uninitialized
            - remote_closed
            - invalid_protocol_msg
            - invalid_session_id
            - inactive_connection
            - invalid_user
            - server_removed
        type: string
      ip:
        description: IP address of the Vscan server.
        type: string
      node:
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            example: node1
            type: string
          uuid:
            example: 1cd8a442-86d1-11e0-ae1c-123478563412
            type: string
        readOnly: true
        type: object
      state:
        description: |
          Specifies the server connection state indicating if it is in the connected or disconnected state.
          The following is a list of the possible states:
          * connected                 - Connected
          * disconnected              - Disconnected
          enum:
            - connected
            - disconnected
        type: string
      svm:
        description: SVM, applies only to SVM-scoped objects.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      type:
        description: |
          Server type. The possible values are:
            * primary - Primary server
            * backup  - Backup server
        enum:
        - primary
        - backup
        type: string
      update_time:
        description: Specifies the time the server is in the connected or disconnected
          state.
        format: date-time
        type: string
      vendor:
        description: Name of the connected virus-scanner vendor.
        type: string
      version:
        description: Version of the connected virus-scanner.
        type: string
    type: object
  vscan_server_status_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records
        type: integer
      records:
        items:
          $ref: '#/definitions/vscan_server_status'
        type: array
    type: object
  vsi_on_nas:
    description: A VSI application using NAS.
    properties:
      datastore:
        properties:
          count:
            default: 8
            description: The number of datastores to support.
            maximum: 16
            minimum: 1
            type: integer
          size:
            description: 'The size of the datastore. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the datastore.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      hyper_v_access:
        properties:
          service_account:
            description: Hyper-V service account.
            maxLength: 256
            minLength: 1
            type: string
            x-ntap-readCreate: true
        type: object
        x-ntap-readCreate: true
      nfs_access:
        description: The list of NFS access controls.
        items:
          $ref: '#/definitions/app_nfs_access'
        type: array
        x-ntap-readCreate: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - datastore
    type: object
  vsi_on_san:
    description: A VSI application using SAN.
    properties:
      datastore:
        properties:
          count:
            default: 8
            description: The number of datastores to support.
            maximum: 16
            minimum: 1
            type: integer
          size:
            description: 'The size of the datastore. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
            type: integer
            x-ntap-readCreate: true
          storage_service:
            properties:
              name:
                default: value
                description: The storage service of the datastore.
                enum:
                - extreme
                - performance
                - value
                type: string
            type: object
        required:
        - size
        type: object
      hypervisor:
        description: The name of the hypervisor hosting the application.
        enum:
        - hyper_v
        - vmware
        - xen
        type: string
        x-ntap-readCreate: true
      igroup_name:
        description: The name of the initiator group through which the contents of
          this application will be accessed. Modification of this parameter is a disruptive
          operation. All LUNs in the application component will be unmapped from the
          current igroup and re-mapped to the new igroup.
        maxLength: 96
        minLength: 1
        type: string
      new_igroups:
        description: The list of initiator groups to create.
        items:
          $ref: '#/definitions/vsi_on_san_new_igroups'
        maxItems: 1
        minItems: 0
        type: array
        x-ntap-writeOnly: true
      protection_type:
        properties:
          local_rpo:
            description: The local rpo of the application.
            enum:
            - hourly
            - none
            type: string
          remote_rpo:
            description: The remote rpo of the application.
            enum:
            - none
            - zero
            type: string
            x-ntap-readCreate: true
        type: object
    required:
    - datastore
    - hypervisor
    - igroup_name
    type: object
  vsi_on_san_new_igroups:
    description: The list of initiator groups to create.
    properties:
      initiators:
        items:
          description: The WWPN, IQN, or Alias of the initiator.
          type: string
          x-ntap-writeOnly: true
        type: array
      name:
        description: The name of the new initiator group.
        maxLength: 96
        minLength: 1
        type: string
        x-ntap-writeOnly: true
      protocol:
        default: mixed
        description: The protocol of the new initiator group.
        enum:
        - fcp
        - iscsi
        - mixed
        type: string
        x-ntap-writeOnly: true
    required:
    - name
    type: object
  wwpn_alias:
    description: A Fibre Channel (FC) world wide port name (WWPN) alias. A WWPN is
      a unique 64-bit identifier for an FC initiator. It is displayed as a 16-character
      hexadecimal value. SAN administrators may find it easier to identify FC initiators
      using an alias, especially in larger SANs.
    properties:
      _links:
        properties:
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      alias:
        description: |
          The FC WWPN alias. Required in POST.
        example: host1
        type: string
        x-ntap-readCreate: true
      svm:
        description: SVM, applies only to SVM-scoped objects.
        properties:
          _links:
            properties:
              self:
                $ref: '#/definitions/href'
            readOnly: true
            type: object
          name:
            description: "The name of the SVM.\n"
            example: svm1
            type: string
          uuid:
            description: |
              The unique identifier of the SVM.
            example: 02c9e252-41be-11e9-81d5-00a0986138f7
            type: string
        type: object
      wwpn:
        description: |
          The FC initiator WWPN. Required in POST.
        example: 2f:a0:00:a0:98:0b:56:13
        type: string
        x-ntap-readCreate: true
    type: object
  wwpn_alias_response:
    properties:
      _links:
        properties:
          next:
            $ref: '#/definitions/href'
          self:
            $ref: '#/definitions/href'
        readOnly: true
        type: object
      num_records:
        description: Number of records.
        type: integer
      records:
        items:
          $ref: '#/definitions/wwpn_alias'
        type: array
    type: object
  zapp_nvme:
    description: An NVME application.
    properties:
      components:
        items:
          properties:
            name:
              description: The name of the application component.
              maxLength: 512
              minLength: 1
              type: string
            namespace_count:
              default: 1
              description: The number of namespaces in the component
              maximum: 32
              minimum: 1
              type: integer
              x-ntap-readCreate: true
            performance:
              properties:
                storage_service:
                  properties:
                    name:
                      default: value
                      description: The storage service of the application component.
                      enum:
                      - extreme
                      - performance
                      - value
                      type: string
                  type: object
              type: object
            subsystem:
              $ref: '#/definitions/zapp_nvme_components_subsystem'
            tiering:
              $ref: '#/definitions/zapp_nvme_components_tiering'
            total_size:
              description: 'The total size of the component, spread across member
                namespaces. Usage: {&lt;integer&gt;[KB|MB|GB|TB|PB]}'
              type: integer
          required:
          - name
          - total_size
          type: object
        maxItems: 10
        minItems: 1
        type: array
      os_type:
        description: The name of the host OS running the application.
        enum:
        - linux
        - vmware
        - windows
        type: string
        x-ntap-readCreate: true
      rpo:
        properties:
          local:
            properties:
              name:
                description: The local rpo of the application.
                enum:
                - hourly
                - none
                type: string
              policy:
                description: 'The snapshot policy to apply to each volume in the smart
                  container. This property is only supported for smart containers.
                  Usage: &lt;snapshot policy&gt;'
                type: string
                x-ntap-readCreate: true
            type: object
        type: object
    required:
    - components
    - os_type
    type: object
  zapp_nvme_components_subsystem:
    description: components.subsystem
    properties:
      hosts:
        items:
          properties:
            nqn:
              description: The host NQN.
              type: string
              x-ntap-readCreate: true
          type: object
        type: array
        x-ntap-readCreate: true
      name:
        description: The name of the subsystem accessing the component. If neither
          the name nor the UUID is provided, the name defaults to &lt;application-name&gt;_&lt;component-name&gt;,
          whether that subsystem already exists or not.
        type: string
        x-ntap-readCreate: true
      os_type:
        description: The name of the host OS accessing the component. The default
          value is the host OS that is running the application.
        enum:
        - linux
        - vmware
        - windows
        type: string
        x-ntap-readCreate: true
      uuid:
        description: 'The UUID of an existing subsystem to be granted access to the
          component. Usage: &lt;UUID&gt;'
        type: string
        x-ntap-readCreate: true
    type: object
  zapp_nvme_components_tiering:
    description: application-components.tiering
    properties:
      control:
        default: best_effort
        description: Storage tiering placement rules for the container(s)
        enum:
        - required
        - best_effort
        - disallowed
        type: string
        x-ntap-createOnly: true
      object_stores:
        items:
          properties:
            name:
              description: 'The name of the object-store to use. Usage: &lt;(size
                1..512)&gt;'
              maxLength: 512
              minLength: 1
              type: string
              x-ntap-createOnly: true
          type: object
        type: array
        x-ntap-createOnly: true
      policy:
        default: none
        description: The storage tiering type of the application component.
        enum:
        - all
        - auto
        - none
        - snapshot_only
        type: string
        x-ntap-readCreate: true
    type: object
info:
  contact:
    name: NetApp Support
    url: https://mysupport.netapp.com
  description: "ONTAP adds support for an expansive RESTful API. The documentation\
    \ below provides information about the types of API calls available with ONTAP,\
    \ as well as details about using each API endpoint. You can learn more about the\
    \ ONTAP REST API <span id=\"doc_desc\">in the ONTAP automation doc site</span>:\
    \  <span id=\"intro_desc\">https://docs.netapp.com/us-en/ontap-automation/index.html</span>.\n\
    ## Using the ONTAP REST API online documentation\nEach API method includes usage\
    \ examples, as well as a model that displays all the required and optional properties\
    \ supported by the method. Click the _Model_ link, available with each API method,\
    \ to see all the required and optional properties supported by each method.\n\
    ## Features for all ONTAP APIs\n<details id=\"Getting_started_with_the_ONTAP_REST_API\"\
    >\n  <summary>Getting started with the ONTAP REST API</summary>\n  ### Overview\n\
    \  Let's review some key things about RESTful APIs and how they're implemented\
    \ in ONTAP:\n  * REST API URLs identify the resources that you'll be working with,\
    \ including clusters, SVMs, and storage.\n  * REST APIs use HTTP methods GET,\
    \ POST, PATCH, DELETE, and OPTIONS to indicate their actions.\n  * REST APIs return\
    \ common HTTP status codes to indicate the results of each call. Additional error\
    \ details can be included in the results body.\n  * REST APIs request and response\
    \ bodies are encoded using JSON.\n  * REST APIs support hyperlinking among resources\
    \ using the Content-Type \"application/hal+json\".\n  * REST API requests will\
    \ be rejected when the wait queue is full. This is an uncommon occurrence and\
    \ is designed to prevent a DOS attack.\n  * GET calls on collections usually return\
    \ only name and UUID by default. If you want to retrieve additional properties,\
    \ you need to specify them using the \u201Cfields\u201D query parameter.\n  *\
    \ ONTAP supports query-based DELETE or PATCH for all collection endpoints.\n \
    \ If you're already familiar with the ONTAPI API (also known as ZAPI), there are\
    \ some similarities between ONTAP REST APIs and ONTAPI. For example:\n  * Both\
    \ support the same transport and security mechanisms.\n  * Both paginate results\
    \ based on either number of seconds or number of records.\n  * Both support filtering\
    \ the returned records based on property values.\n  * Both support limiting the\
    \ returned properties.\n  * Both support concurrent requests. If ONTAP temporarily\
    \ can't handle additional calls, it will respond with an HTTP error status code\
    \ of 429 or 503 (depending on the kind of limit hit) and an error message in the\
    \ body explaining the limit encountered.\n  However, there are important differences\
    \ between REST APIs and the ONTAP CLI and ONTAPI that you should understand as\
    \ well:\n  * In many cases, ONTAP REST APIs use different names for fields and\
    \ features.\n  * REST APIs do not expose infrequently used CLI parameters.\n \
    \ * REST APIs do not treat the cluster or nodes as an SVM (aka Vserver).\n  *\
    \ REST GET APIs support specifying a maximum time before paginating results. However,\
    \ the default time is 15 seconds for REST (instead of 90 seconds for ONTAPI).\n\
    \  * REST APIs are generally ordered by UUID or ID, so a rename operation using\
    \ the PATCH method doesn't change the path keys.\n  * REST APIs use one or more\
    \ of the following properties to identify a resource: \"name\", \"uuid\", \"id\"\
    .\n  * REST APIs often execute the equivalent of multiple CLI commands in a single\
    \ request.\n  * REST API properties use underscores instead of hyphens between\
    \ words.\n  * REST API dates are always in ISO-8601 format.\n  * REST API comparisons\
    \ between enum values (for <, >, ranges, and `order_by`) are done alphabetically.\
    \ (In CLI and ONTAPI, enum comparisions are done based on an internal value for\
    \ the enum.)\n  * REST API field '<' queries exclude records where the specified\
    \ field is not set. You can add \"|null\" (eg: limit=<10|null) to also return\
    \ records where the specified field is not set.\n</details>\n<details id=\"HAL_linking\"\
    >\n  <summary>HAL linking</summary>\n  ### Hypertext Application Language (HAL)\n\
    \  ONTAP REST APIs use HAL as the mechanism to support Hypermedia as the Engine\
    \ of Application State (HATEOAS). When an object or attribute is returned that\
    \ identifies a specific resource, a HAL-encoded link is also returned so that\
    \ you can easily discover resources and be able to obtain more details about the\
    \ resource.\n  #### Example\n  ```\n  \"aggregate\": {\n      \"uuid\": \"19425837-f2fa-4a9f-8f01-712f626c983c\"\
    ,\n      \"name\": \"aggr0\",\n      \"_links\": {\n          \"self\": {\n  \
    \            \"href\": \"/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c\"\
    \n          }\n      }\n  }\n  ```\n</details>\n<details id=\"Query_parameters\"\
    >\n  <summary>Query parameters</summary>\n  ### Overview\n  The following is a\
    \ list of all the globally supported query parameters. This list is intended as\
    \ a quick reference for syntax purposes. The query parameters are described in\
    \ more detail in other sections of this documentation. Note that multiple queries\
    \ can be combined using an \"&\".\n  <br/>\n  ```\n  # Request specific fields\n\
    \  fields=<field>[,...]\n  # Don't error due to an unknown field in \"fields=\"\
    \ (default is false)\n  ignore_unknown_fields=<true|false>\n  # Query fields by\
    \ value. If the value contains query characters (*|,!<>..), it must be quoted\
    \ to avoid their special query meaning\n  <field>=<query value>\n  # Return the\
    \ records array\n  return_records=<true|false>\n  # Timeout and return after the\
    \ specified number of seconds\n  return_timeout=<0..120 seconds>\n  # The number\
    \ of records to collect (or act on for query-based PATCH/DELETE) before returning\n\
    \  max_records=<number of records>\n  # Request a customized sort ordering\n \
    \ order_by=<field [asc|desc]>[,...]\n  $orderBy=<field [asc|desc]>[,...]\n  #\
    \ Pretty print JSON response bodies\n  pretty=<true|false>\n  # Continue after\
    \ encountering a failure. Only applicable to query-based PATCH and DELETE.\n \
    \ continue_on_failure=<true|false>\n  # Begin returning records starting at an\
    \ offset from the first record\n  offset=<offset from first record>\n  ```\n</details>\n\
    <details id=\"Multi_Record_Operations\">\n  <summary>Operations on multiple records</summary>\n\
    \  ### Overview\n  Although they are not documented as individual methods in the\
    \ list of REST APIs, every API supporting POST, PATCH, or DELETE, also supports\
    \ operations on multiple records in the collection. These collection based operations\
    \ can be specified as either a list of records, allowing each record to be mutated\
    \ individually, or as a query that applies the same change to multiple records\
    \ in the collection.\n  ### Option 1: Record-based POST, PATCH, and DELETE\n \
    \ APIs supporting POST, PATCH, or DELETE support these operations on the collection\
    \ itself by specifying a `records` array in the JSON body. Each entry in this\
    \ array must match the schema of an individual record of the API. Parsing failures\
    \ are returned synchronously. All other validations are performed asynchronously,\
    \ including those that are usually returned synchronously for asynchronous APIs.\n\
    \  #### Rolling back changes on failure\n  POST and PATCH make a best-effort attempt\
    \ to perform the operation atomically by rolling back any changes made to prior\
    \ records if an operation on a later record fails. This behavior can be overridden\
    \ via the `continue_on_failure` query parameter. When this parameter is _true_\
    \ (default: _false_), the job performs the operation on every input record regardless\
    \ of prior failures. If any failures are encountered in `continue_on_failure`\
    \ mode, they are reported as the result of the job, but the successfully mutated\
    \ records are not rolled back. DELETE operations do not attempt to roll back failures\
    \ and always operate in `continue_on_failure` mode.\n  #### Serial and parallel\
    \ operations\n  Most APIs support performing operations in parallel, and record-based\
    \ operations take advantage of this, operating on multiple of the provided records\
    \ at once. If there is some interdependence between the provided records, such\
    \ as a hierarchical set of objects, the `serial_records=true` query parameter\
    \ can be used to force the operation to be performed in order. APIs that do not\
    \ support parallel operations run serially, by default. From a job tracking perspective,\
    \ there is no difference between these two modes other than the speed at which\
    \ the operation completes.\n  #### Asynchronous job and results\n  Unless the\
    \ records array is directly documented in the API as synchronous, every record-based\
    \ operation is performed as a job and follows the usual rules for [asynchronous\
    \ jobs](#Synchronous_and_asynchronous_operations). In addition to the usual `/api/cluster/jobs`\
    \ record of the job, these operations return a job results href link. The link\
    \ refers back to the API on which the operation was performed and can be followed\
    \ after the job is complete. Job results include the current state of the records\
    \ and fields operated on by the job. If a POST operation was successful on a record,\
    \ that record is included in job results. If a DELETE operation was successful,\
    \ that record is not included in the job results because it is no longer part\
    \ of the collection. The same concept applies to failures. If the POST of a record\
    \ fails, the record is not included in the job results because it is not part\
    \ of the collection. The results also include any errors or rollback errors encountered\
    \ by the job. The job results link is also returned as the Location header from\
    \ a record-based POST job, supporting the same pattern for determining any generated\
    \ identifiers as a single record POST. Note that the job results link does not\
    \ support all of the usual GET features. Requesting specific fields and querying\
    \ a subset of the records is supported, but _max_records_ and _return_timeout_\
    \ as well as other such query parameters for controlling the iteration of the\
    \ collection is are not supported.\n  #### Unique identifiers go in the body\n\
    \  For PATCH and DELETE, any unique identifiers not included in the URI must be\
    \ included in the JSON body of each record. For example, to DELETE a single volume,\
    \ the API is usually `/api/storage/volumes/{uuid}`. To delete multiple volumes\
    \ via a `records` array, the API is `/api/storage/volumes`, and the UUID of each\
    \ volume is included in the JSON body of each record. For sub-endpoints with unique\
    \ identifiers embedded in the path, such as `/api/storage/volumes/{volume.uuid}/files/{path}`,\
    \ the `volume.uuid` is included once in the URI and is not included in each record.\
    \ The `path` is included with each record.\n  #### Examples\n  ##### Creating\
    \ two volumes\n  ```\n  # The API:\n  POST /api/storage/volumes\n  ```\n  ```\n\
    \  # The call:\n  curl -X POST 'https://<mgmt-ip>/api/storage/volumes' -H 'accept:\
    \ application/hal+json' -d '{ \"records\": [\n      { \"svm\": { \"name\": \"\
    svm1\" }, \"name\" : \"vol1\", \"size\": \"1GB\", \"aggregates\": [ { \"name\"\
    : \"aggr1\" } ] },\n      { \"svm\": { \"name\": \"svm1\" }, \"name\" : \"vol2\"\
    , \"size\": \"1GB\", \"aggregates\": [ { \"name\": \"aggr1\" } ] } ] }'\n  ```\n\
    \  ```\n  # The response:\n  {\n    \"job\": {\n      \"uuid\": \"cc979874-a441-11eb-a707-005056bbbc41\"\
    ,\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/cluster/jobs/cc979874-a441-11eb-a707-005056bbbc41\"\
    \n        },\n        \"results\": {\n          \"href\": \"/api/storage/volumes?job_results_uuid=cc979874-a441-11eb-a707-005056bbbc41\"\
    \n        }\n      }\n    }\n  }\n  ```\n  ```\n  # GET the job results:\n  curl\
    \ -X GET 'https://<mgmt-ip>/api/storage/volumes?job_results_uuid=cc979874-a441-11eb-a707-005056bbbc41'\
    \ -H 'accept: application/hal+json'\n  ```\n  ```\n  # The response:\n  {\n  \
    \  \"records\": [\n      {\n        \"uuid\": \"cc9915c8-a441-11eb-a707-005056bbbc41\"\
    ,\n        \"name\": \"vol1\",\n        \"size\": 1073741824,\n        \"aggregates\"\
    : [\n          {\n            \"name\": \"aggr1\",\n            \"uuid\": \"a589e251-a096-44be-b5d3-67ccf92d27e7\"\
    \n          }\n        ],\n        \"svm\": {\n          \"name\": \"svm1\"\n\
    \        },\n        \"_links\": {\n          \"self\": {\n            \"href\"\
    : \"/api/storage/volumes/cc9915c8-a441-11eb-a707-005056bbbc41\"\n          }\n\
    \        }\n      },\n      {\n        \"uuid\": \"cc9c1eea-a441-11eb-a707-005056bbbc41\"\
    ,\n        \"name\": \"vol2\",\n        \"size\": 1073741824,\n        \"aggregates\"\
    : [\n          {\n            \"name\": \"aggr1\",\n            \"uuid\": \"a589e251-a096-44be-b5d3-67ccf92d27e7\"\
    \n          }\n        ],\n        \"svm\": {\n          \"name\": \"svm1\"\n\
    \        },\n        \"_links\": {\n          \"self\": {\n            \"href\"\
    : \"/api/storage/volumes/cc9c1eea-a441-11eb-a707-005056bbbc41\"\n          }\n\
    \        }\n      }\n    ],\n    \"num_records\": 2,\n    \"_links\": {\n    \
    \  \"self\": {\n        \"href\": \"/api/storage/volumes?job_results_uuid=cc979874-a441-11eb-a707-005056bbbc41\"\
    \n      }\n    }\n  }\n  ```\n  ##### Creating two LUNs with a failure and an\
    \ additional failure during rollback\n  Note that the LUN that was not rolled\
    \ back is reported as being present in the results because it now exists in the\
    \ collection.<br/>\n  ```\n  # The API:\n  POST /api/storage/luns\n  ```\n  ```\n\
    \  # The call:\n  curl -X POST 'https://<mgmt-ip>/api/storage/luns' -H 'accept:\
    \ application/hal+json' -d '{ \"records\": [\n      { \"svm\": { \"name\": \"\
    svm1\" }, \"name\" : \"/vol/vol1/lun1\", \"space\": { \"size\": \"1GB\" }, \"\
    os_type\": \"linux\" },\n      { \"svm\": { \"name\": \"svm1\" }, \"name\" : \"\
    /vol/vol1/lun2\", \"space\": { \"size\": \"5GB\" }, \"os_type\": \"linux\" } ]\
    \ }'\n  ```\n  ```\n  # The response\n  {\n    \"job\": {\n      \"uuid\": \"\
    09d0c372-a445-11eb-a707-005056bbbc41\",\n      \"_links\": {\n        \"self\"\
    : {\n          \"href\": \"/api/cluster/jobs/09d0c372-a445-11eb-a707-005056bbbc41\"\
    \n        },\n        \"results\": {\n          \"href\": \"/api/storage/luns?job_results_uuid=09d0c372-a445-11eb-a707-005056bbbc41\"\
    \n        }\n      }\n    }\n  }\n  ```\n  ```\n  # GET the job results:\n  curl\
    \ -X GET 'https://<mgmt-ip>/api/storage/luns?job_results_uuid=09d0c372-a445-11eb-a707-005056bbbc41'\
    \ -H 'accept: application/hal+json'\n  ```\n  ```\n  # The response:\n  {\n  \
    \  \"records\": [\n      {\n        \"uuid\": \"2287871f-fbcf-4d64-ae89-59328dd755b3\"\
    ,\n        \"svm\": {\n          \"name\": \"svm1\"\n        },\n        \"name\"\
    : \"/vol/vol1/lun1\",\n        \"os_type\": \"linux\",\n        \"space\": {\n\
    \          \"size\": 1073741824\n        },\n        \"_links\": {\n         \
    \ \"self\": {\n            \"href\": \"/api/storage/luns/2287871f-fbcf-4d64-ae89-59328dd755b3\"\
    \n          }\n        }\n      }\n    ],\n    \"num_records\": 1,\n    \"errors\"\
    : [\n      {\n        \"message\": \"POST of record \\\"svm.name: svm1, name:\
    \ /vol/vol1/lun2\\\" failed. Reason: Volume offline.\",\n        \"code\": \"\
    262287\"\n      }\n    ],\n    \"rollback_errors\": [\n      {\n        \"message\"\
    : \"DELETE of record \\\"uuid: 2287871f-fbcf-4d64-ae89-59328dd755b3\\\" failed.\
    \ Reason: Volume offline.\",\n        \"code\": \"262287\"\n      }\n    ],\n\
    \    \"_links\": {\n      \"self\": {\n        \"href\": \"/api/storage/luns?job_results_uuid=09d0c372-a445-11eb-a707-005056bbbc41\"\
    \n      }\n    }\n  }\n  ```\n  ---\n  #### Record-based Errors\n  ONTAP Error\
    \ Response Codes\n  | Error Code | Description | HTTP Code |\n  | ---------- |\
    \ ----------- | --------- |\n  | 262287 | A single record in a bulk records request\
    \ failed for the given reason. | 400 |\n  | 262288 | A record-based operation\
    \ failed and was left in a partially completed state. | 400 |\n  | 262289 | A\
    \ record-based job progress message. N of M records complete. | 200 |\n  | 262290\
    \ | A record-based job progress message during rollback. N of M records remaining.\
    \ | 200 |\n  | 262291 | The operation did not complete within the system timeout\
    \ period. Wait a few minutes, and then try the operation again. | 400 |\n  | 262292\
    \ | The records operation was partially completed. The following failures were\
    \ encountered. | 400 |\n  | 262293 | Job is still running. Wait for the job to\
    \ complete and then try the operation again. | 400 |\n  | 262294 | Job is not\
    \ associated with this API. | 400 |\n  ### Option 2: Query-based PATCH and DELETE\n\
    \  APIs supporting PATCH or DELETE requests on a resource instance also support\
    \ PATCH or DELETE on the collection, as long as at least one field is specified\
    \ in the query portion of the URL. A PATCH or DELETE request issued on a collection\
    \ is equivalent to internally doing a query-based GET, followed by a serial PATCH\
    \ or DELETE operation on each matching record. However, it only does the operation\
    \ for `return_timeout` seconds, which is 15 seconds, by default. If a query-based\
    \ operation is not completed before `return_timeout` seconds, the API returns\
    \ a next link. The client must use the next link with the same HTTP method to\
    \ continue the operation. Query-based operations will not continue to the next\
    \ record until the operation on the prior record is completed, even for operations\
    \ that are normally asynchronous.\n  #### Example\n  ```\n  # Modify the state\
    \ of all volumes named \"simpson\" to be offline\n  PATCH /api/storage/volumes?name=simpson\n\
    \  { \"state\": \"offline\" }\n  ```\n</details>\n<details id=\"Record_filtering\"\
    >\n  <summary>Record filtering</summary>\n  ### Overview\n  Records may either\
    \ be filtered by performing queries that only apply to a single field at a time\
    \ (though multiple of such queries may be done simultaneously for different fields),\
    \ or by applying queries that search across a set of fields for a value fulfilling\
    \ a single specified query.\n  ### Filtering records with single field queries\n\
    \  You can filter the results of a GET call using any attribute. The supplied\
    \ query can either be for an exact value or can leverage special query operators.\n\
    \  <br/>\n  ```\n  <field>=<query value>\n  ```\n  <br/>Filtering allows you to\
    \ select objects where the specified field matches the supplied query, or which\
    \ can contain wildcards, ranges, negations, or an OR-defined list of the above.\
    \ The special query operators include the following:\n  #### Wildcard: `*`\n \
    \ ```\n  abc*\n  abc*xyz\n  *xyz\n  ```\n  #### Comparison: `<   >   <=   >=`\n\
    \  ```\n  <10\n  >=joe\n  ```\n  #### Range: `..`\n  ```\n  3..10\n  jim..joe\n\
    \  ```\n  #### Negation: `!`\n  ```\n  !3\n  !joe\n  !abc*\n  !jim..joe\n  ```\n\
    \  #### Any of a list: `|`\n  ```\n  3|5\n  3|5..9|>100\n  ```\n  #### Escaping:\
    \ `{} and \"\"`\n  The special query characters above can be treated literally,\
    \ with no special meaning, by enclosing the value in either double quotes or curly\
    \ braces.\n  <br/>\n  ```\n  \"joe*\"\n  {a|b}\n  ```\n  ### Filtering records\
    \ with cross-field queries\n  Cross-field queries are useful when multiple fields\
    \ should be searched for a value or some combination of values. Whereas traditional\
    \ queries only allow a single field to be searched for a value, cross-field queries\
    \ will return rows where any field in a specified set of fields matches the query.\
    \ Cross-field queries may only be used for GET requests.\n  <br>\n  The fields\
    \ to be queried across are specified in the \"query_fields=\" parameter. This\
    \ should be a comma-delimited list of fields, or simply '\\*' to search across\
    \ all fields.\n  To specify the query to use in the search, pass in the \"query=\"\
    \ parameter to a GET request with the string to use as the query. Fields may also\
    \ be excluded from searching prefixing with '!'. This is useful if all fields\
    \ are specified with '*', and then certain fields wish to be excluded, or if an\
    \ an entire object was queried, to exclude certain sub-fields.\n  ### Structure\
    \ of the query\n  The query string represents a pattern to search for in all fields\
    \ specified.\n  <br>\n  The '\\*' character is used to indicate wildcard character\
    \ matching. '\\*'  matches 0 or more of any character. For a query of \"foo*bar\"\
    , matches will include \"foo123abcbar\", \"foobar\", and \"foo___123abcbar\".\n\
    \  To search for any match among several possible patterns, the values may be\
    \ ORed together with the '|' character. For example, to seach for \"foo\" OR \"\
    bar\", pass in \"query=foo|bar\". This may be extended to an arbitrary number\
    \ of values, such as \"query=foo|bar|baz\".\n  <br>\n  Similarly, the query can\
    \ be used to specify that multiple patterns must be found across all fields specified\
    \ in \"query_fields\" for a row to be returned. To specify that multiple patterns\
    \ must be found, include a space between each one. For example, to search across\
    \ fields where the fields must contain both \"foo\" AND \"bar\", provide \"query=foo\
    \ bar\". Again, this may be used on an arbitrary number of patterns. To search\
    \ for rows that contain all of \"foo\" AND \"bar\" AND \"baz\" within the fields\
    \ specified, provide \"query=foo bar baz\".\n  <br>\n  It should be noted that\
    \ it is possible for all of the matches to a query to appear in a single field.\
    \ For example, if \"query=foo bar\", and a field queried contains \"foo bar blah\"\
    , it will be considered a match. Obviously the queries matches can also be spread\
    \ across different fields.\n  ### Examples\n  The following data is used for the\
    \ examples below:\n  | id | name | color | flavor | number | tree |\n  | ---|------|-------|--------|--------|-----\
    \ |\n  | 1 | widget1 | blue | chocolate | 1 2 3 | black cherry |\n  | 2 | widget2\
    \ | red | spinach | three fifty | maple |\n  | 3 | widget3 | rainbow | strawberry\
    \ |  thirty | spruce |\n  | 4 | widget4 | brown | strawberry chocolate | thirteen\
    \ | willow |\n  <br>\n  <br>\n  <b>Request:</b> 'query_fields=color', 'query=red'\n\
    \  <b>Response:</b>\n  | id | name | color | flavor | number | tree |\n  | ---|------|-------|--------|--------|-----\
    \ |\n  | 2 | widget3 | red | spinach | three fifty | maple |\n  <b>Explanation:</b>\
    \ The only row with a \"color\" column matching \"red\" is row 2.\n  <br>\n  <br>\n\
    \  <b>Request:</b> 'query_fields=id,number', 'query=3'\n  <b>Response:</b>\n \
    \ | id | name | color | flavor | number | tree |\n  | ---|------|-------|--------|--------|-----\
    \ |\n  | 1 | widget1 | blue | chocolate | 1 2 3 | black cherry |\n  | 3 | widget3\
    \ | rainbow | strawberry | fourty two | spruce |\n  <b>Explanation:</b> Column\
    \ \"id\" for row 3 matches the query, and column \"number\" for number for row\
    \ 1 matches as well.\n  <br>\n  <br>\n  <b>Request:</b> 'query_fields=flavor',\
    \ 'query=chocolate|strawberry'\n  <b>Response:</b>\n  | id | name | color | flavor\
    \ | number | tree |\n  | ---|------|-------|--------|--------|----- |\n  | 1 |\
    \ widget1 | blue | chocolate | 1 2 3 | black cherry |\n  | 3 | widget3 | rainbow\
    \ | strawberry | fourty two | spruce |\n  | 4 | widget4 | brown | strawberry chocolate\
    \ | thirteen | willow |\n  <b>Explanation:</b> This query returns rows containing\
    \ chocolate and/or strawberry in the flavor column. Rows 1, 2, and 4 all contain\
    \ matches. Row 4 actually matches both queries.\n  <br>\n  <br>\n  <b>Request:</b>\
    \ 'query_fields=flavor', 'query=chocolate strawberry'\n  <b>Response:</b>\n  |\
    \ id | name | color | flavor | number | tree |\n  | ---|------|-------|--------|--------|-----\
    \ |\n  | 4 | widget4 | brown | strawberry chocolate | thirteen | willow |\n  <b>Explanation:</b>\
    \ This query returns rows containing chocolate AND strawberry in the flavor column.\
    \ Only row 4 contains matches for both queries.\n  <br>\n  <br>\n  <b>Request:</b>\
    \ 'query_fields=name,number', 'query=*3|three'\n  <b>Response:</b>\n  | id | name\
    \ | color | flavor | number | tree |\n  | ---|------|-------|--------|--------|-----\
    \ |\n  | 1 | widget1 | blue | chocolate | 1 2 3 | black cherry |\n  | 2 | widget2\
    \ | red | spinach | three fifty | maple |\n  | 3 | widget3 | rainbow | strawberry\
    \ | fourty two | spruce |\n  <b>Explanation:</b> Searches across the name and\
    \ number columns for a value either ending in '3', or containing \"three\". Row\
    \ 1 contains 3 in the number field matching the first query, row 3 has a name\
    \ of \"widget3\", matching the first query, and row 2 has a number containing\
    \ three, matching the second query.\n  <br>\n  <br>\n  <b>Request:</b> 'query_fields=*',\
    \ 'query=1|2|3 th*'\n  <b>Response:</b>\n  | id | name | color | flavor | number\
    \ | tree |\n  | ---|------|-------|--------|--------|----- |\n  | 2 | widget2\
    \ | red | spinach | three fifty | maple |\n  | 3 | widget3 | rainbow | strawberry\
    \ |  thirty | spruce |\n  <b>Explanation:</b> Searches across all columns, looking\
    \ for rows where a row both contains either 1 and/or 2 and/or 3, and contains\
    \ a value starting with \"th\". Row 1 contains a value matching 1 or 2 or 3, but\
    \ has no column that begins with th. Similarly, row 4 has a value beginning with\
    \ \"th\", but does not contain 1 or 2 or 3. Therefore only rows 2 and 3 are returned,\
    \ which match both queries.\n  <br>\n  <br>\n  <br>\n  ### Cross-Field Query Errors\n\
    \  ONTAP Error Response Codes\n  | Error Code | Description | HTTP Code |\n  |\
    \ ---------- | ----------- | --------- |\n  | 262272 | The specified query contains\
    \ an unmatched quote. | 400 |\n  | 262273 | Both 'query_fields' and 'query' must\
    \ be specified if either one is specified. | 400 |\n  | 262274 | The specified\
    \ query is either empty or is equivalent to an empty query. | 400 |\n  | 262274\
    \ | The parameters 'query_fields' and 'query' may only be specified for GET requests.\
    \ | 400 |\n  | 262275 | At least one field must be specified for the cross-field\
    \ query. | 400 |\n  | 262276 | A field was specified twice for the 'query_fields'\
    \ parameter. | 400 |\n</details>\n<details id=\"Requesting_specific_fields\">\n\
    \  <summary>Requesting specific fields</summary>\n  ### Overview\n  By default,\
    \ calling GET on a collection generally returns only the properties that uniquely\
    \ identify the record, along with a HAL 'self' link to the resource instance.\
    \ However, you can choose the specific fields you want using the `fields` parameter.\
    \ The `fields` parameter can also be used with GET when retrieving a single resource\
    \ instance.\n  <br/>For discovery purposes, except for the CLI passthrough, the\
    \ client can retrieve all standard properties using `fields=\\*`. These are the\
    \ same properties returned when a GET is called on the specific instance using\
    \ the path keys. However, using `fields=\\*` is more expensive than selecting\
    \ only the specific fields that are needed. In addition, because future releases\
    \ may include additional properties in this list, or remove properties that were\
    \ included by default, we strongly discourage using this in client-side software\
    \ that is depending on specific fields being returned. To use the same list of\
    \ fields when dealing with multiple versions of ONTAP, specify `ignore_unknown_fields=true`.\n\
    \  <br/>Some fields are more expensive to retrieve and are not included when using\
    \ `fields=\\*` (or the instance-level GET). These fields are noted in the documentation.\
    \ They can be returned either by specifying the fields directly, or by using `fields=\\\
    *\\*`. However, we again strongly discourage this from being encoded into any\
    \ client-side software. The performance of client software will suffer if a future\
    \ version of ONTAP adds support for additional expensive properties.\n  <br/>\n\
    \  ```\n  fields=<field>[,...]\n  ```\n  <br/>The `fields` input parameter allows\
    \ you to specify exactly which fields you want to be returned.\n  ### Objects\
    \ with fields\n  When an API contains fields that are objects, an entire object\
    \ can be specified to return every field within the object. Individual fields\
    \ within the object can be specified using dotted notation, as demonstrated below.\
    \ Braces can be used to specify multiple fields within an object without repeating\
    \ the object name. Braces can be nested within each other to select individual\
    \ attributes within an object hierarchy. Note: Dotted notation for arrays does\
    \ not include array indices.\n  ### Examples\n  ```\n  {\n    \"a\": \"<string>\"\
    ,\n    \"b\": {\n      \"c\": \"<string>\",\n      \"d\": \"<string>\"\n    },\n\
    \    \"e\": [\n      {\n        \"f\": \"<string1>\",\n        \"g\": \"<string1>\"\
    \n      },\n      {\n        \"f\": \"<string2>\",\n        \"g\": \"<string2>\"\
    \n      }\n    ]\n  }\n  ```\n  Example `fields` query:\n  ```\n  fields=a,b \
    \    // Fetch a, b.c, and b.d\n  fields=a,b.c,e // Fetch a, b.c, e.f, and e.g\n\
    \  fields=b.d     // Fetch b.d\n  fields=e.f     // Fetch e.f\n  fields=b,!b.c\
    \  // Fetch b.*, but not b.c\n  fields=b.{c,d} // Fetch b.c and b.d\n  ```\n</details>\n\
    <details id=\"Records_and_pagination\">\n  <summary>Records and pagination</summary>\n\
    \  ### Records\n  Several query parameters control the return of records.\n  <br/>\n\
    \  ```\n  return_records=<true|false>\n  ```\n  <br/>The default setting for `return_records`\
    \ is `true` for GET calls and `false` for all other methods. When `false`, the\
    \ array of records is not returned.\n  <br/>\n  ```\n  return_timeout=<0..120\
    \ seconds>\n  ```\n  <br/>The `return_timeout` parameter specifies the number\
    \ of seconds the cluster spends performing an operation before returning. The\
    \ allowed range is `0` to `120` seconds. If the timeout is reached, GET calls\
    \ return the records collected along with a pagination link. Other methods return\
    \ and complete asynchronously. See Non-blocking-operations for more details.\n\
    \  <br/>The default setting for `return_timeout` is `15` seconds for GET calls.\
    \ For all other methods it is `0` seconds. This means that these calls might execute\
    \ asynchronously in order to return as fast as possible.\n  <br/>Note: If the\
    \ `order_by` parameter is specified, the operation might take longer because the\
    \ collection is sorted before it is returned.\n  <br/>\n  ```\n  max_records=<number\
    \ of records>\n  ```\n  <br/>The `max_records` parameter limits the number of\
    \ records that are returned (or acted on) before providing the \"next\" pagination\
    \ link.\n  <br/>\n  ```\n  offset=<offset from the first record>\n  ```\n  <br/>The\
    \ `offset` parameter determines how many records to skip over prior to returning\
    \ the first record.\n  <br/>For example, if you have a total of 15 records, and\
    \ specify an offset of 10, only records 11-15 inclusive will be returned. When\
    \ combined with a query or sorting specification, the offset will apply after\
    \ the query or sorting, meaning that you will get records beginning at the Nth\
    \ record, taking into account the query and sort order. Note that the computational\
    \ cost of skipping over N records is likely as great as actually returning those\
    \ N records.\n  ### Pagination\n  All calls to GET on a resource collection allow\
    \ you to page through the results. If the `max_records` parameter is not specified,\
    \ the cluster returns as many records as possible within the `return_timeout`\
    \ time threshold. The number of records returned can be further limited by specifying\
    \ a value for the `max_records` parameter. When the operation reaches either the\
    \ `return_timeout` or the `max_records` threshold, it stops and returns the records\
    \ as well as a HAL link that can be used to get the next page of records. It is\
    \ possible for a pagination link to be returned even if there are no additional\
    \ records. This occurs because the cluster does not check if there is an additional\
    \ record before returning when it reaches a threshold. When there are potentially\
    \ additional records, the response header will also contain a `Link` header containing\
    \ the link followed by `rel=\"next\"`.\n  <br/>The following is an example of\
    \ the \"next\" link, which returns with a collection of records:\n  <br/>\n  ```\n\
    \  \"_links\": {\n      \"next\": {\n          \"href\": \"/api/storage/aggregates?start.aggregate=aggr25&max_records=25\"\
    \n      }\n  }\n  ```\n  ### Count only\n  The response to collection operations\
    \ includes a `num_records` field. By passing `return_records=false` with a GET\
    \ call, you can retrieve the number of records without returning the records themselves.\
    \ However, if either the `return_timeout` or `max_records` threshold is reached,\
    \ an incomplete or partial number of records is returned and the \"next\" link\
    \ must be called to retrieve additional record counts. All the partial counts\
    \ must be added together to calculate the total count.\n</details>\n<details id=\"\
    Record_sorting\">\n  <summary>Record sorting</summary>\n  ### Overview\n  By default,\
    \ records in a collection are returned in the order defined by the object. You\
    \ can change the order by specifying the `order_by` query parameter. Most uses\
    \ of the `order_by` parameter collect and reorder _all records_ in the collection.\
    \ This can be expensive when the collection is large. Therefore, clients are discouraged\
    \ from paginating through the results with `max_records` when using `order_by`.\n\
    \  <br/>\n  ```\n  order_by=<field [asc|desc]>[,...]\n  ```\n  <br/>If you want\
    \ to sort on multiple fields (where the prior key value is the same), separate\
    \ any fields (and optional direction) with a comma.\n  <br/>By default, sorting\
    \ is done in ascending order based on the field type's ordering. If `desc` is\
    \ specified after a field name, that field is sorted in descending order. Combining\
    \ this with `max_records` allows you to see the `top` or `bottom` records based\
    \ on the value of the specified field(s). When using this `top` or `bottom` functionality,\
    \ queries on certain fields might require more time to search the entire collection\
    \ regardless of the number of records actually returned.\n  <br/>Important Notes:\n\
    \  * When you use the `order_by` parameter, the `return_timeout` might be exceeded\
    \ because the collection is sorted before it is returned.\n  * Using `order_by`\
    \ on either a property of type array, or a nested property within an array (not\
    \ including the records array), returns the records in an unspecified order.\n\
    \  * If the order_by value includes the direction (asc or desc), then you must\
    \ make sure that the space between the field name and the direction is properly\
    \ URL encoded when it is sent to the server. You may use either a `%20` or a `+`\
    \ to encode the space, but if you send a space character, the server will respond\
    \ with an error (400 Bad Request). Most programming language libraries will automatically\
    \ do this encoding for you. Check the documentation of your language and/or library.\n\
    \  ### Examples\n  ```\n  # Sort the volume collection from largest to smallest\
    \ by size:\n  GET /api/storage/volumes?order_by=size+desc\n  # Find the top 5\
    \ applications using the most IOPS:\n  GET /api/application/applications?order_by=statistics.iops.total+desc,name+asc&max_records=5\n\
    \  # Find the top 10 applications using the most space and then\n  # if multiple\
    \ applications are using the same space, sort them by IOPS:\n  GET /api/application/applications?order_by=statistics.space.used+desc,statistics.iops.total+desc&max_records=10\n\
    \  ```\n</details>\n<details id=\"Response_body\">\n  <summary>Response body</summary>\n\
    \  ### Overview\n  Every API call returns a top-level JSON object. These JSON\
    \ objects includes GET calls that contain an array of records. This nesting technique\
    \ allows metadata about the resource or resource collection to be returned as\
    \ well as each resource instance.\n  <br/>GET calls that return an array of records\
    \ can contain the following top-level elements:\n  <br/>\n  ```\n  {\n    \"records\"\
    : [ {}, ... ]\n    \"num_records\": <N>\n    \"_links\": {\n      \"self\": {\n\
    \        \"href\": ...\n      },\n      \"next\": {\n        \"href\": ...\n \
    \     }\n    }\n  }\n  ```\n  * `records` - The array of records.\n  * `num_records`\
    \ - The number of records in the array.\n  * `_links` - Links to relevant APIs,\
    \ possibly including:\n    * `self` - A link to retrieve the same data again.\n\
    \    * `next` - If there are potentially more records, a link to retrieve the\
    \ next page of records.\n  ### Custom response bodies\n  Some APIs might include\
    \ additional top-level elements. For example, some APIs may include a top-level\
    \ `errors` array which can include errors if the array of records is incomplete\
    \ (for reasons other than pagination). See the documentation for each API to check\
    \ for custom top-level elements.\n  ### Error objects\n  When an error occurs,\
    \ an error object is returned in the response body. The error code is an integer\
    \ returned in a JSON string. The optional `target` element is returned when ONTAP\
    \ determines the error is due to a specific input field that you've supplied.\n\
    \  <br/>\n  ```\n  \"error\": {\n    \"message\": \"<string>\",\n    \"code\"\
    : \"<integer>\",\n    \"target\": \"<string>\"\n  }\n  ```\n  <br/>\n  ONTAP Error\
    \ Response Codes\n  | Error Code | Description | HTTP Code |\n  | ---------- |\
    \ ----------- | --------- |\n  | 1 | An entry with the same identifiers already\
    \ exists. | 409 |\n  | 2 | A field has an invalid value, is missing, or an extra\
    \ field was provided. | 400 |\n  | 3 | The operation is not supported. | 405 |\n\
    \  | 4 | An entry with the specified identifiers was not found. | 404 |\n  | 6\
    \ | Permission denied. | 403 |\n  | 7 | Resource limit exceeded. | 429 or 503\
    \ |\n  | 8 | Resource in use. | 409 or 503 |\n  | 65541 | RPC timed out. | 500\
    \ |\n  | 65552 | Generic RPC failure. | 500 |\n  | 65562 | Internal RPC error\
    \ | 500 |\n  | 262145 | Application code returned an unexpected exception. | 500\
    \ |\n  | 262160 | There are too many requets already being processed. Retry after\
    \ a short delay. | 429 |\n  | 262177 | Missing value. | 400 |\n  | 262179 | Unexpected\
    \ argument. Argument shown in error message body. | 400 |\n  | 262185 | Invalid\
    \ value with value in the body of the error. | 400 |\n  | 262186 | A field is\
    \ used in an invalid context with another field, as shown in error message body.\
    \ | 400 |\n  | 262188 | A field was specified twice. Location of assignments shown\
    \ in error message body. | 400 |\n  | 262190 | You must provide one or more values\
    \ to apply your changes. | 400 |\n  | 262196 | Field cannot be set in this operation.\
    \ | 400 |\n  | 262197 | Invalid value provided for field. Value and field shown\
    \ in error message body. | 400 |\n  | 262198 | A request body is not allowed on\
    \ GET, HEAD, and DELETE. | 400 |\n  | 262199 | Invalid JSON with error location\
    \ provided in body of the error. | 400 |\n  | 262200 | Invalid JSON range, with\
    \ range provided in the body of the error. | 400 |\n  | 262201 | Invalid JSON\
    \ due to unknown formatting issue. | 400 |\n  | 262202 | Field is considered secret\
    \ and should not be provided in the URL. | 400 |\n  | 262210 | Unable to retrieve\
    \ all required records within the timeout. This \"order_by\" query is not supported\
    \ under the current system load with the current number of records in the collection.\
    \ | 500 |\n  | 262211 | POST request on a REST API does not support filtering\
    \ on an attribute. Attributes must be in the request body. | 400 |\n  | 262212\
    \ | Request is missing required value. | 400 |\n  | 262220 | Wildcard fields=*\
    \ is not allowed for CLI-based REST APIs. | 400 |\n  | 262245 | Invalid value\
    \ with reason provided in body of the error. | 400 |\n  | 262247 | Invalid value\
    \ for a field, with value and field in body of the error. | 400 |\n  | 262248\
    \ | A value is missing assignment operator. | 400 |\n  | 262249 | Field name is\
    \ not supported for GET requests because it is not a readable attribute. | 400\
    \ |\n  | 262250 | Field name cannot be queried in a GET request because it is\
    \ not a readable attribute. | 400 |\n  | 262254 | Invalid JSON input, an array\
    \ was expected. | 400 |\n  | 262255 | An array was found in the JSON when it was\
    \ not expected. | 400 |\n  | 262268 | The field is not supported as an order_by=\
    \ field. | 400 |\n  | 262277 | The query_fields and query parameters may only\
    \ be specified for GET requests. | 400 |\n  | 262282 | Property was specified\
    \ twice. | 400 |\n  | 262286 | Mismatching braces found in the fields= query.\
    \ | 400 |\n  | 393271 | A node is out of quorum. Body of error message identifies\
    \ node. | 500 |\n  | 39387137 | A provided URL is invalid. | 400 |\n</details>\n\
    <details id=\"Synchronous_and_asynchronous_operations\">\n  <summary>Synchronous\
    \ and asynchronous operations</summary>\n  ### Overview\n  POST, PATCH, or DELETE\
    \ operations that can take more than `2` seconds are considered _asynchronous_\
    \ operations. They are implemented as non-blocking operations. Any API call that\
    \ is expected to return in less than `2` seconds is considered _synchronous_.\
    \ Synchronous operations ignore the `return_timeout` parameter.\n  ### API response\n\
    \  If the `return_timeout` is less than the time it takes for an operation to\
    \ complete, the server returns the code `202 Accepted` after waiting for the specified\
    \ `return_timeout` seconds. The default `return_timeout` for non-blocking operations\
    \ is `0` seconds, meaning the operation returns as fast as possible. However,\
    \ the operation never returns the success code `200 OK`, but instead returns either\
    \ an error or the code `202 Accepted`.\n  ### The Location header\n  When a POST\
    \ operation that is creating a resource returns `201 Created` (synchronous) or\
    \ `202 Accepted` (asynchronous), the response header includes the `Location` of\
    \ the resource. For asynchronous operations, a GET call on this resource link\
    \ may return code `404 Not Found` until the operation successfully completes.\
    \ Use the returned job link instead of the Location link to determine when the\
    \ asynchronous operation is complete. POST operations that return code `200 OK`\
    \ do not populate the Location header.\n  #### Example\n  The following example\
    \ shows how to send a POST request and retrieve the Location header in return.\
    \ Here \"readonly\" privileges are added to \"/api/cluster\" for the \"test\"\
    \ security role:\n  ```\n  # The API\n  POST \"/api/security/roles/{owner.uuid}/{name}/privileges\"\
    \n  ```\n  * \"/api/security/roles/\" is the whole collection of roles in the\
    \ cluster.\n  * {owner.uuid} and {name} are the identifiers for a particular role\
    \ and combined with the path to the collection form the URI for that role.\n \
    \ * The /privileges part of this API specifies that we want to operate on the\
    \ sub-collection of privileges for a particular role.\n  * The POST request to\
    \ this path will return a Location header that contains the URI for the newly\
    \ created privilege. That URI can be accessed with GET in future calls to view\
    \ the state of the privilege entry.\n  ```\n  # The call:\n  curl -i -X POST -d\
    \ '{\"access\":\"readonly\", \"path\":\"/api/cluster\"}' \"https://<mgmt-ip>/api/security/roles/001c3044-d15c-11ec-8091-005056bb49e4/test/privileges\"\
    \n  # The response:\n  HTTP/1.1 201 Created\n  Date: Mon, 06 Jun 2022 15:11:42\
    \ GMT\n  Server: libzapid-httpd\n  X-Content-Type-Options: nosniff\n  Cache-Control:\
    \ no-cache,no-store,must-revalidate\n  Content-Security-Policy: default-src 'self';\
    \ script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src\
    \ 'self' data:; frame-ancestors: 'self'\n  Location: /api/security/roles/001c3044-d15c-11ec-8091-005056bb49e4/test/privileges/%2Fapi%2Fcluster\n\
    \  Content-Length: 3\n  Content-Type: application/hal+json\n  ```\n  The Location\
    \ Header provides the location of the resource that is newly created as a part\
    \ of the POST request. %2Fapi%2Fcluster is the identifier for the new privilege\
    \ in the example above.\n  ```\n  Doing a GET on the Location URL provided:\n\
    \  #The call:\n  curl -i -X GET \"https://<mgmt-ip>/api/security/roles/001c3044-d15c-11ec-8091-005056bb49e4/test/privileges/%2Fapi%2Fcluster\"\
    \n  # The response:\n  HTTP/1.1 200 OK\n  Date: Tue, 07 Jun 2022 17:04:50 GMT\n\
    \  Server: libzapid-httpd\n  X-Content-Type-Options: nosniff\n  Cache-Control:\
    \ no-cache,no-store,must-revalidate\n  Content-Security-Policy: default-src 'self';\
    \ script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src\
    \ 'self' data:; frame-ancestors: 'self'\n  Content-Length: 284\n  Content-Type:\
    \ application/hal+json\n  Vary: Accept-Encoding\n  {\n    \"owner\": {\n    \"\
    uuid\": \"001c3044-d15c-11ec-8091-005056bb49e4\"\n    },\n    \"name\": \"test\"\
    ,\n    \"path\": \"/api/cluster\",\n    \"access\": \"readonly\",\n    \"_links\"\
    : {\n      \"self\": {\n        \"href\": \"/api/security/roles/001c3044-d15c-11ec-8091-005056bb49e4/test/privileges/%2Fapi%2Fcluster\"\
    \n      }\n    }\n  }\n  ```\n  ### Tracking non-blocking operations\n  Non-blocking\
    \ or asynchronous operations are executed using _jobs_. The response to a non-blocking\
    \ operation includes information about the job performing the operation, including\
    \ a HAL link to the job resource. The job record also includes `state` and `message`\
    \ fields. The `message` field indicates the progress of the operation while the\
    \ `state` field indicates `running`. When a job is successful, the `state` and\
    \ `message` fields indicate `success`. If an operation fails for any reason, the\
    \ job's `state` reports `error`, and the `message` describes the problem that\
    \ the operation encountered.\n  <br/>For POST operations, when a job is successfully\
    \ completed, you can use the link from the `Location` header of the original response\
    \ to retrieve the resource.\n  <br/>See [`GET /cluster/jobs`](#/cluster/job_get)<br/>\n\
    </details>\n<details id=\"HTTP_status_codes\">\n  <summary>HTTP status codes</summary>\n\
    \  ### Overview\n  The following supported HTTP status codes are returned by ONTAP:\n\
    \  * 200 OK: Returned for success when not creating a new object\n  * 201 Created:\
    \ Returned for success after the creation of an object\n  * 202 Accepted: Returned\
    \ when a job has been successfully started, but the operation is not complete\n\
    \  * 400 Bad Request: Returned if the input could not be parsed\n  * 401 Unauthorized:\
    \ Returned if user authentication failed\n  * 403 Forbidden: Returned for authorization\
    \ (RBAC) errors\n  * 404 Not Found: Returned when the specified resource does\
    \ not exist\n  * 405 Method Not Allowed: Returned when the specified resource\
    \ does not support the method (for example, POST or DELETE calls)\n  * 409 Conflict:\
    \ Returned when there is a conflict with a different object that must be created,\
    \ modified, or deleted before this operation can succeed\n  * 429 Too Many Requests:\
    \ Returned when the client has sent more requests than the server can handle.\
    \ The client should try again later (defined by the Retry-After header)\n  * 500\
    \ Internal Error: Returned for most other internal error codes\n  * 502 Bad Gateway:\
    \ Returned if the application is temporarily unreachable. Try again later\n  *\
    \ 503 Service Unavailable: Returned if the server is temporarily overloaded. Try\
    \ again later.\n</details>\n<details id=\"HTTP_methods\">\n  <summary>HTTP methods</summary>\n\
    \  ### Overview\n  The ONTAP REST API supports the following HTTP methods:\n \
    \ * GET: Supported on all collections to retrieve the records\n  * POST: When\
    \ supported, calls on a collection to create the supplied resource\n  * PATCH:\
    \ When supported, calls on a specific resource to update the supplied properties\n\
    \  * DELETE: When supported, calls on a specific resource to delete the resource\n\
    \  * HEAD: Supported wherever GET is supported. It makes a GET call, but only\
    \ returns the HTTP headers\n  * OPTIONS: Supported on every endpoint so that you\
    \ can determine which HTTP methods are supported\n</details>\n<details id=\"Size_properties\"\
    >\n  <summary>Size properties</summary>\n  ### Overview\n  Many objects contain\
    \ properties related to various sizes. Examples can be found in the `aggregate`\
    \ object, `volume` object, `lun` object and `nvme_namespace` object. These properties\
    \ are documented as type `integer`.<br/>\n  Unless otherwise documented, all sizes\
    \ are reported in GET in bytes.<br/>\n  Depending on the development language-specific\
    \ code generation, the API typically also requires an integer value in bytes for\
    \ POST and PATCH input as well.<br/>\n  Where a string value is accepted, such\
    \ as query parameters and ad-hoc curl requests, any of the following suffixes\
    \ can be used to specify different units:<br/>\n  | Suffix | Definition |\n  |\
    \ ------ | ------- |\n  | KB | kilobytes (1024 bytes, aka kibibytes) |\n  | MB\
    \ | megabytes (KB x 1024, aka mebibytes) |\n  | GB | gigabytes (MB x 1024, aka\
    \ gibibytes) |\n  | TB | terabytes (GB x 1024, aka tebibytes) |\n  | PB | petabytes\
    \ (TB x 1024, aka pebibytes) |\n</details>\n<details id=\"SVM_tunneling\">\n \
    \ <summary>SVM tunneling</summary>\n  ### Overview\n  SVM tunneling allows for\
    \ the scoping of REST APIs to any SVM from the cluster admin SVM interface. The\
    \ HTTP headers \"X-Dot-SVM-Name\" and/or \"X-Dot-SVM-UUID\" are an alternative\
    \ to supplying svm.name and/or svm.uuid in the request query or body. This allows\
    \ for setting a context for an HTTP connection and reusing it for multiple calls.\
    \ The cluster management interface or node management interface can be used instead\
    \ of the desired SVM's interface. <br/>\n  ### Examples\n  <br/>Creates a new\
    \ volume on SVM \"vs0\":\n  ```\n  curl  -H \"X-Dot-SVM-Name:vs0\" -X POST \"\
    https://<mgmt-ip>/api/storage/volumes\" -d '{\"name\":\"vol1\",\"aggregates\"\
    :[{\"name\":\"aggr1\"}]}'\n  {\n    \"job\": {\n      \"uuid\": \"b271e19d-c5cb-11e9-b97d-005056ac2211\"\
    ,\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/cluster/jobs/b271e19d-c5cb-11e9-b97d-005056ac2211\"\
    \n        }\n      }\n    }\n  }\n  ```\n  <br/>Retrieves all volumes on SVM \"\
    vs0\":\n  ```\n  curl -H \"X-Dot-SVM-Name:vs0\" -X GET \"https://<mgmt-ip>/api/storage/volumes\"\
    \n  {\n    \"records\":[\n    {\n      \"uuid\":\"a61e474-929a-4c78-882a-b72986ccf276\"\
    ,\n      \"name\":\"root_vs0\",\n      \"_links\":{\n        \"self\":{\n    \
    \      \"href\":\"/api/storage/volumes/aa61e474-929a-4c78-882a-b72986ccf276\"\n\
    \        }\n      }\n    },\n    {\n      \"uuid\":\"b26c64f5-c5cb-11e9-b97d-005056ac2211\"\
    ,\n      \"name\":\"vol1\",\n      \"_links\":{\n        \"self\":{\n        \
    \  \"href\":\"/api/storage/volumes/b26c64f5-c5cb-11e9-b97d-005056ac2211\"\n  \
    \      }\n      }\n    }\n  ],\n  \"num_records\": 2,\n  \"_links\": {\n    \"\
    self\":{\n      \"href\":\"/api/storage/volumes\"\n      }\n    }\n  }\n  ```\n\
    \  <br/>Deletes a volume on SVM \"vs0\" using the X-Dot-SVM-UUID header:\n  ```\n\
    \  curl -H \"X-Dot-SVM-UUID:85ebedff-c43e-11e9-bc27-005056ac2211\" -X DELETE \"\
    https://<mgmt-ip>/api/storage/volumes?name=vol1\"\n  {\n    \"jobs\":[\n     \
    \ {\n        \"uuid\":\"4acf3f58-c5d2-11e9-b97d-005056ac2211\",\n        \"_links\"\
    :{\n          \"self\":{\n            \"href\":\"/api/cluster/jobs/4acf3f58-c5d2-11e9-b97d-005056ac2211\"\
    \n          }\n        }\n      }\n    ],\n    \"num_records\": 1,\n    \"_links\"\
    :{\n      \"self\":{\n        \"href\":\"/api/storage/volumes?name=vol1\"\n  \
    \    }\n    }\n  }\n  ```\n  <br/>Retrieves all IP interfaces on SVM \"vs3\":\n\
    \  ```\n  curl -H \"accept: application/json\" -H \"X-Dot-SVM-Name:vs3\" -X GET\
    \ \"https://<mgmt-ip>/api/network/ip/interfaces\"\n  {\n    \"records\":[\n  \
    \    {\n        \"uuid\":\"83aeeac9-c5d8-11e9-b97d-005056ac2211\",\n        \"\
    name\": \"vs3_data_1\"\n      },\n      {\n        \"uuid\":\"9c612bc0-c5a5-11e9-b97d-005056ac2211\"\
    ,\n        \"name\":\"vs3_data\"\n      }\n    ],\n    \"num_records\": 2\n  }\n\
    \  ```\n</details>\n<details id=\"Using_the_private_CLI_passthrough_with_the_ONTAP_REST_API\"\
    >\n  <summary>Using the private CLI passthrough with the ONTAP REST API</summary>\n\
    \  ### REST API access to CLI commands\n  To help CLI and ONTAP users transition\
    \ to the ONTAP REST API, ONTAP provides a private REST API endpoint that can be\
    \ used to access any CLI command. Usage of this API call is recorded and returned\
    \ in the AutoSupport data collection so that NetApp can identify usablity and\
    \ functionality improvements in the REST API for future releases. There is no\
    \ per-API documentation for the REST API access for each CLI command. Unlike the\
    \ documented REST APIs, the API paths and properties for the CLI passthrough correspond\
    \ very closely to the CLI. There are several rules that govern all the differences\
    \ between a CLI command and the REST API mirroring the CLI command.\n  #### Rules\
    \ for path differences when accessing a CLI command through the REST API\n  The\
    \ API paths mirror the CLI paths, except for the use of the \"show\", \"create\"\
    , \"modify\", and \"delete\" verbs. Instead of using these four CLI verbs in the\
    \ REST API, the corresponding HTTP methods must be used (GET, POST, PATCH, and\
    \ DELETE). The four CLI verbs are removed from the API path supporting a command.\
    \ For any commands where the last verb is hyphenated and begins with one of these\
    \ verbs (for example, \"show-space\" or \"delete-all\"), you must remove the verb\
    \ and following hyphen from the path. Any space in a full command path becomes\
    \ a forward slash in the REST API (for example, \"system node\" becomes \"/api/private/cli/system/node\"\
    ). For non-show CLI commands that use non-standard verbs, the POST method should\
    \ be used on the full path with the final verb in the API path. For example, \"\
    volume rehost\" becomes \"POST /api/private/cli/volume/rehost\" and \"cluster\
    \ add-node\" becomes \"POST /api/private/cli/cluster/add-node\".\n  <br/>To know\
    \ which HTTP methods are supported for an API call, both documented and CLI-based,\
    \ clients can use the \"OPTIONS\" HTTP method. For example, using OPTIONS on \"\
    /api/private/cli/volume\" returns 'OK' with the HTTP \"Allow\" header containing\
    \ a list of the supported HTTP methods (for example, \"Allow: GET, HEAD, OPTIONS,\
    \ POST, DELETE, PATCH\"). For feature-specific CLI verbs, you can use OPTIONS\
    \ on the API path. For example, using OPTIONS on \"/api/private/cli/volume/restrict\"\
    \ returns with the HTTP header \"Allow: OPTIONS, POST\". Some of the CLI \"show\"\
    \ commands do not contain the standard verb. For example, calling OPTIONS on \"\
    /api/private/cli/cluster/add-node-status\" returns \"Allow: GET, HEAD, OPTIONS\"\
    .\n  <br/>There are some commands in the CLI that will not work using REST APIs.\
    \ This includes most show commands that do not support \"show -fields\" in the\
    \ CLI. The REST API also does not support CLI commands that create a new shell\
    \ (like \"run\" and \"vserver context\").\n  <br/>Here are several examples of\
    \ mappings from the ONTAP CLI to the ONTAP REST API for the /api/private/cli path:\n\
    \  * volume show       &rarr; GET /api/private/cli/volume\n  * volume create \
    \    &rarr; POST /api/private/cli/volume\n  * volume modify     &rarr; PATCH /api/private/cli/volume\n\
    \  * volume delete     &rarr; DELETE /api/private/cli/volume\n  * volume restrict\
    \   &rarr; POST /api/private/cli/volume/restrict\n  * volume show-space      \
    \  &rarr; GET /api/private/cli/volume/space\n  * volume show-footprint    &rarr;\
    \ GET /api/private/cli/volume/footprint\n  * cluster add-node         &rarr; POST\
    \ /api/private/cli/cluster/add-node\n  * cluster add-node-status  &rarr; GET /api/private/cli/system/node/add-node-status\n\
    \  * system node coredump show       &rarr; GET /api/private/cli/system/node/coredump\n\
    \  * system node coredump delete     &rarr; DELETE /api/private/cli/system/node/coredump\n\
    \  * system node coredump delete-all &rarr; DELETE /api/private/cli/system/node/coredump/all\n\
    \  #### Rules for field differences when accessing a CLI command through the REST\
    \ API\n  All CLI parameters are supported in the CLI-based REST APIs. However,\
    \ REST converts hyphens (-) in CLI parameter names to underscores (_) in the REST\
    \ API JSON response body. In general, REST API responses use the same formatting\
    \ for property values as ONTAPI. For example, enumerated values are formatted\
    \ in lowercase instead of uppercase and with underscores instead of hyphens in\
    \ the REST API response body. Both CLI and ONTAPI formats are allowed on input.\
    \ Also similar to ONTAPI, sizes and percentages in REST are encoded as integers\
    \ in bytes. Unlike ONTAPI or the CLI, date and time values in REST are encoded\
    \ with the ISO-8601 format. All fields that you want returned from the GET call\
    \ must be specified using the `fields` parameter. Note that the /api/private/cli/...\
    \ APIs do not support \"fields=*\".\n  ### Examples\n  Retrieve OPTIONS for volumes\
    \ endpoint (with results contained in header):\n  ```\n  curl -X OPTIONS \"https://<mgmt-ip>/api/private/cli/volume\"\
    \ --include\n  Allow: GET, HEAD, OPTIONS, POST, DELETE, PATCH\n  {\n  }\n  ```\n\
    \  <br>GET size and percent-used for all volumes:\n  ```\n  curl -X GET \"https://<mgmt-ip>/api/private/cli/volume?fields=size,percent-used&pretty=false\"\
    \n  {\n    \"records\": [\n      { \"vserver\": \"vs1\", \"volume\": \"vol1\"\
    , \"size\": 20971520, \"percent_used\": 73 },\n      { \"vserver\": \"vs1\", \"\
    volume\": \"vol2\", \"size\": 20971520, \"percent_used\": 87 },\n      ...\n \
    \   ]\n  }\n  ```\n  <br>GET size and percent-used for a specific volume:\n  ```\n\
    \  curl -X GET \"https://<mgmt-ip>/api/private/cli/volume?volume=vol2&pretty=false\"\
    \n  {\n    \"records\": [\n      { \"vserver\": \"vs1\", \"volume\": \"vol2\"\
    , \"size\": 209715203864, \"percent_used\": 89 },\n      ...\n    ]\n  }\n  ```\n\
    \  <br>POST a new volume with all required attributes:\n  ```\n  curl -X POST\
    \ \"https://<mgmt-ip>/api/private/cli/volume\" -d '{\"volume\":\"vol3\",\"vserver\"\
    :\"vs0\",\"aggregate\":\"aggr1\"}'\n  {\n    \"job\": {\n      \"uuid\": \"f7b5f5cb-54a2-11e9-930a-005056ac6a3f\"\
    ,\n      \"_links\": {\n        \"self\": {\n          \"href\": \"/api/cluster/jobs/f7b5f5cb-54a2-11e9-930a-005056ac6a3f\"\
    \n        }\n      }\n    },\n    \"cli_output\": \"[Job 36] Job is queued: Create\
    \ vol2.\"\n  }\n  ```\n  <br>Attempt to DELETE an online volume:\n  ```\n  curl\
    \ -X DELETE \"https://<mgmt-ip>/api/private/cli/volume?vserver=vs1&volume=vol1\"\
    \n  {\n    \"num_records\": 0,\n    \"error: {\n      \"message\": \"Volume vol1\
    \ in Vserver vs1 must be offline to be deleted.\",\n      \"code\": \"917658\"\
    \n    }\n  }\n  ```\n  <br>PATCH a volume to become offline:\n  ```\n  curl -X\
    \ PATCH \"https://<mgmt-ip>/api/private/cli/volume?vserver=vs1&volume=vol1\" -d\
    \ '{ \"state\": \"offline\" }'\n  {\n    \"num_records\": 1,\n    \"cli_output:\
    \ \"Volume modify successful on volume vol1 of Vserver vs1.\\n\"\n  }\n  ```\n\
    \  <br>DELETE the offline volume:\n  ```\n  curl -X DELETE \"https://<mgmt-ip>/api/private/cli/volume?vserver=vs1&volume=vol1\"\
    \n  {\n    \"jobs\": [\n      {\n        \"uuid\": \"3f35a934-4b40-11e9-9f4d-005056bbf4eb\"\
    ,\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/api/cluster/jobs/3f35a934-4b40-11e9-9f4d-005056bbf4eb\"\
    \n          }\n        }\n      }\n    ],\n    \"num_records\": 1,\n    \"cli_output\"\
    : \"[Job 1243] Job succeeded: Successful\\n\"\n  }\n  ```\n  Note: When POST is\
    \ called for a command that uses a job, the REST API does not wait for the job\
    \ to complete, unless `return_timeout` is specified. However, PATCH and DELETE\
    \ calls on the command path (using queries on key fields in the query portion\
    \ of the URI) wait up to 15 seconds for the operation to complete if the `return_timeout`\
    \ parameter is not specified.\n  <br>DELETE an offline volume without waiting:\n\
    \  ```\n  curl -X DELETE \"https://<mgmt-ip>/api/private/cli/volume?vserver=vs1&volume=vol2&return_timeout=0\"\
    \n  {\n    \"jobs\": [\n      {\n        \"uuid\": \"a7138c5e-4b69-11e9-9f4d-005056bbf4eb\"\
    ,\n        \"_links\": {\n          \"self\": {\n            \"href\": \"/api/cluster/jobs/a7138c5e-4b69-11e9-9f4d-005056bbf4eb\"\
    ,\n          }\n        }\n      }\n    ],\n    \"num_records\": 1,\n    \"cli_output\"\
    : \"[Job 1247] Job is queued: Delete vol1.\\n\"\n  }\n  ```\n  ### CLI message\
    \ output\n  As shown in the previous example, any non-field and non-error based\
    \ output that would have appeared in the CLI is returned in a top-level `cli_output`\
    \ attribute in the response body. This does not contain normal CLI headers or\
    \ field values. It only displays messages that were printed to the CLI.\n  ###\
    \ HTTP status codes\n  Error codes in the response body are mapped to the most\
    \ appropriate HTTP status codes. In cases where this is not done, the HTTP status\
    \ code defaults to 500. This does not necessarily indicate that the error is internal\
    \ to ONTAP.\n  ### Security\n  All CLI-based REST APIs are RBAC-controlled, based\
    \ on the role of the authenticated user and have the same protections they have\
    \ in the CLI.\n  ### Location of CLI fields for CLI-based REST APIs:\n  * POST\
    \ APIs: All CLI fields must be provided in the request body.\n  * GET APIs: All\
    \ desired CLI fields (except keys) must be specified in the `fields` parameter.\
    \ The non-key fields returned via the CLI will not be returned if not requested.\
    \ The client can also provide a query for any field.\n  * PATCH APIs: The client\
    \ can provide a query for any field, but at least one field must have a query.\
    \ To modify only a single record, all CLI keys must contain an exact query. All\
    \ new values for the object must be provided in the request body.\n  * DELETE\
    \ APIs: The client can provide a query for any field, but at least one field must\
    \ have a query. To delete only a single record, all CLI keys must contain an exact\
    \ query. Non-attribute inputs (such as `force`) must be provided in the query\
    \ portion of the URI.\n</details>\n"
  title: ONTAP REST API
  version: v1
parameters:
  fields_param:
    collectionFormat: csv
    description: Specify the fields to return.
    in: query
    items:
      type: string
    name: fields
    type: array
  host_connectivity_param:
    default: false
    description: Test the connection to a specific host.
    in: query
    name: host_connectivity
    type: boolean
  max_records_param:
    description: Limit the number of records returned.
    in: query
    name: max_records
    type: integer
  order_by_param:
    collectionFormat: csv
    description: Order results by specified fields and optional [asc|desc] direction.
      Default direction is 'asc' for ascending.
    in: query
    items:
      type: string
    name: order_by
    type: array
  return_records_get_param:
    default: true
    description: The default is true for GET calls.  When set to false, only the number
      of records is returned.
    in: query
    name: return_records
    type: boolean
  return_records_update_param:
    default: false
    description: The default is false.  If set to true, the records are returned.
    in: query
    name: return_records
    type: boolean
  return_timeout_get_param:
    default: 15
    description: The number of seconds to allow the call to execute before returning.  When
      iterating over a collection, the default is 15 seconds.  ONTAP returns earlier
      if either max records or the end of the collection is reached.
    in: query
    maximum: 120
    minimum: 0
    name: return_timeout
    type: integer
  return_timeout_update_param:
    default: 0
    description: The number of seconds to allow the call to execute before returning.
      When doing a POST, PATCH, or DELETE operation on a single record, the default
      is 0 seconds.  This means that if an asynchronous operation is started, the
      server immediately returns HTTP code 202 (Accepted) along with a link to the
      job.  If a non-zero value is specified for POST, PATCH, or DELETE operations,
      ONTAP waits that length of time to see if the job completes so it can return
      something other than 202.
    in: query
    maximum: 120
    minimum: 0
    name: return_timeout
    type: integer
  svm_path_param:
    description: UUID of the SVM to which this object belongs.
    in: path
    name: svm.uuid
    required: true
    type: string
  svm_query_param:
    description: Filter by UUID of the SVM to which this object belongs.
    in: query
    name: svm.uuid
    type: string
  validate_only_param:
    description: Validate the operation and its parameters, without actually performing
      the operation.
    in: query
    name: validate_only
    type: boolean
paths:
  /application/applications:
    get:
      description: |
        Retrieves applications.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `<template>` the property corresponding to the `template.name` of the application
        ### Query examples
        Numerous queries are available for classifying and sorting applications:
        1. Return a list of applications sorted by name.
            ```
            GET /application/applications?order_by=name
            ```
            <br/>
        2. Return a list of applications for a specific SVM.
            ```
            GET /application/applications?svm.name=<name>
            ```
            <br/>
        3. Return a list of all SQL applications.
            ```
            GET /application/applications?template.name=sql*
            ```
            <br/>
        4. Return a list of all applications that can be accessed via SAN.
            ```
            GET /application/applications?template.protocol=san
            ```
            <br/>
        5. Return the top five applications consuming the most IOPS.
            ```
            GET /application/applications?order_by=statistics.iops.total desc&max_records=5
            ```
        <br/>The above examples are not comprehensive. There are many more properties available for queries. Also, multiple queries can be mixed and matched with other query parameters for a large variety of requests. See the per-property documentation below for the full list of supported query parameters.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_collection_get
      parameters:
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by template.name
        in: query
        name: template.name
        type: string
      - description: Filter by template.version
        in: query
        name: template.version
        type: string
      - description: Filter by template.protocol
        in: query
        name: template.protocol
        type: string
      - description: Filter by generation
        in: query
        name: generation
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by protection granularity
        in: query
        name: protection_granularity
        type: string
      - description: Filter by rpo.is_supported
        in: query
        name: rpo.is_supported
        type: string
      - description: Filter by rpo.local.name
        in: query
        name: rpo.local.name
        type: string
      - description: Filter by rpo.local.description
        in: query
        name: rpo.local.description
        type: string
      - description: Filter by rpo.remote.name
        in: query
        name: rpo.remote.name
        type: string
      - description: Filter by rpo.remote.description
        in: query
        name: rpo.remote.description
        type: string
      - description: Filter by rpo.components.name
        in: query
        name: rpo.components.name
        type: string
      - description: Filter by rpo.components.uuid
        in: query
        name: rpo.components.uuid
        type: string
      - description: Filter by rpo.components.rpo.local.name
        in: query
        name: rpo.components.rpo.local.name
        type: string
      - description: Filter by rpo.components.rpo.local.description
        in: query
        name: rpo.components.rpo.local.description
        type: string
      - description: Filter by rpo.components.rpo.remote.name
        in: query
        name: rpo.components.rpo.remote.name
        type: string
      - description: Filter by rpo.components.rpo.remote.description
        in: query
        name: rpo.components.rpo.remote.description
        type: string
      - description: Filter by statistics.space.provisioned
        in: query
        name: statistics.space.provisioned
        type: string
      - description: Filter by statistics.space.used
        in: query
        name: statistics.space.used
        type: string
      - description: Filter by statistics.space.used_percent
        in: query
        name: statistics.space.used_percent
        type: string
      - description: Filter by statistics.space.used_excluding_reserves
        in: query
        name: statistics.space.used_excluding_reserves
        type: string
      - description: Filter by statistics.space.logical_used
        in: query
        name: statistics.space.logical_used
        type: string
      - description: Filter by statistics.space.reserved_unused
        in: query
        name: statistics.space.reserved_unused
        type: string
      - description: Filter by statistics.space.available
        in: query
        name: statistics.space.available
        type: string
      - description: Filter by statistics.space.savings
        in: query
        name: statistics.space.savings
        type: string
      - description: Filter by statistics.iops.total
        in: query
        name: statistics.iops.total
        type: string
      - description: Filter by statistics.iops.per_tb
        in: query
        name: statistics.iops.per_tb
        type: string
      - description: Filter by statistics.snapshot.reserve
        in: query
        name: statistics.snapshot.reserve
        type: string
      - description: Filter by statistics.snapshot.used
        in: query
        name: statistics.snapshot.used
        type: string
      - description: Filter by statistics.latency.raw
        in: query
        name: statistics.latency.raw
        type: string
      - description: Filter by statistics.latency.average
        in: query
        name: statistics.latency.average
        type: string
      - description: Filter by statistics.statistics_incomplete
        in: query
        name: statistics.statistics_incomplete
        type: string
      - description: Filter by statistics.shared_storage_pool
        in: query
        name: statistics.shared_storage_pool
        type: string
      - description: Filter by statistics.components.name
        in: query
        name: statistics.components.name
        type: string
      - description: Filter by statistics.components.uuid
        in: query
        name: statistics.components.uuid
        type: string
      - description: Filter by statistics.components.storage_service.name
        in: query
        name: statistics.components.storage_service.name
        type: string
      - description: Filter by statistics.components.space.provisioned
        in: query
        name: statistics.components.space.provisioned
        type: string
      - description: Filter by statistics.components.space.used
        in: query
        name: statistics.components.space.used
        type: string
      - description: Filter by statistics.components.space.used_percent
        in: query
        name: statistics.components.space.used_percent
        type: string
      - description: Filter by statistics.components.space.used_excluding_reserves
        in: query
        name: statistics.components.space.used_excluding_reserves
        type: string
      - description: Filter by statistics.components.space.logical_used
        in: query
        name: statistics.components.space.logical_used
        type: string
      - description: Filter by statistics.components.space.reserved_unused
        in: query
        name: statistics.components.space.reserved_unused
        type: string
      - description: Filter by statistics.components.space.available
        in: query
        name: statistics.components.space.available
        type: string
      - description: Filter by statistics.components.space.savings
        in: query
        name: statistics.components.space.savings
        type: string
      - description: Filter by statistics.components.iops.total
        in: query
        name: statistics.components.iops.total
        type: string
      - description: Filter by statistics.components.iops.per_tb
        in: query
        name: statistics.components.iops.per_tb
        type: string
      - description: Filter by statistics.components.snapshot.reserve
        in: query
        name: statistics.components.snapshot.reserve
        type: string
      - description: Filter by statistics.components.snapshot.used
        in: query
        name: statistics.components.snapshot.used
        type: string
      - description: Filter by statistics.components.latency.raw
        in: query
        name: statistics.components.latency.raw
        type: string
      - description: Filter by statistics.components.latency.average
        in: query
        name: statistics.components.latency.average
        type: string
      - description: Filter by statistics.components.statistics_incomplete
        in: query
        name: statistics.components.statistics_incomplete
        type: string
      - description: Filter by statistics.components.shared_storage_pool
        in: query
        name: statistics.components.shared_storage_pool
        type: string
      - description: Filter by smart_container
        in: query
        name: smart_container
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    post:
      description: |
        Creates an application.
        ### Template properties
        The application APIs appear to be complex and long in this documentation because we document every possible template, of which there are currently 14. When creating an application, only a single template is used, so it is best to focus only on the template of interest. Other than the properties for the chosen template, only the `name` and `svm` of the application must be provided. The following three sections provided guidelines on using the properties of the templates, but the whole idea behind the templates is to automatically follow the best practices of the given application, so the only way to determine the exact list of required properties and default values is to dig in to the model section of the template. The templates are all top level properties of the application object with names matching the values returned by [`GET /application/templates`](#operations-application-application_template_collection_get).
        ### Required properties
        * `svm.uuid` or `svm.name` - The existing SVM in which to create the application.
        * `name` - The name for the application.
        * `<template>` - Properties for one template must be provided. In general, the following properties are required, however the naming of these may vary slightly from template to template.
          * `name` - The generic templates require names for the components of the application. Other templates name the components automatically.
          * `size` - This generally refers to the size of an application component, which may be spread across multiple underlying storage objects (volumes, LUNs, etc...).
          * Either `nfs_access`, `cifs_access`, or `igroup_name` must be specified
          * `os_type` - All SAN applications require an os_type to be specified in some way. Some templates refer to this as the `hypervisor`.
        ### Recommended optional properties
        * `<template>` - The following properties are available in some templates.
          * `new_igroups.*` - SAN applications can use existing initiator groups or create new ones. When creating new initiator groups, `new_igroups.name` is required and the other properties may be used to fully specify the new initiator group.
        ### Default property values
        If not specified in POST, the follow default property values are assigned. It is recommended that most of these properties be provided explicitly rather than relying upon the defaults. The defaults are intended to make it as easy as possible to provision and connect to an application.
        * `template.name` - Defaults to match the `<template>` provided. If specified, the value of this property must match the provided template properties.
        * `<template>` - The majority of template properties have default values. The defaults may vary from template to template. See the model of each template for complete details. In general the following patterns are common across all template properties. The location of these properties varies from template to template.
          * `storage_service.name` - _value_
          * `protection_type.local_rpo` - _hourly_ (Hourly Snapshot copies)
          * `protection_type.remote_rpo` - _none_ (Not MetroCluster)
          * `new_igroups.os_type` - Defaults to match the `os_type` provided for the application, but may need to be provided explicitly when using virtualization.
        ### Optional components
        A common pattern across many templates are objects that are optional, but once any property in the object is specified, other properties within the object become required. Many applications have optional components. For example, provisioning a database without a component to store the logs is supported. If the properties related to the logs are omitted, no storage will be provisioned for logs. But when the additional component is desired, the size is required. Specifying any other property of a component without specifying the size is not supported. In the model of each template, the required components are indicated with a red '*'. When a `size` property is listed as optional, that means the component itself is optional, and the size should be specified to include that component in the application.
        ### POST body examples
        1. Create a generic SAN application that exposes four LUNs to an existing initiator group, _igroup_1_.<br/>
            ```
            {
              "name": "app1",
              "svm": { "name": "svm1" },
              "san": {
                "os_type": "linux",
                "application_components": [
                  { "name": "component1", "total_size": "10GB", "lun_count": 4, "igroup_name": "igroup_1" }
                ]
              }
            }
            ```
            <br/>
        2. Create an SQL application that can be accessed via initiator _iqn.2017-01.com.example:foo_ from a new initiator group, _igroup_2_.<br/>
            ```
            {
              "name": "app2",
              "svm": { "name": "svm1" },
              "sql_on_san": {
                "db": { "size": "5GB" },
                "log": { "size": "1GB" },
                "temp_db": { "size": "2GB" },
                "igroup_name": "igroup_2",
                "new_igroups": [
                  { "name": "igroup_2", "initiators": [ "iqn.2017-01.com.example:foo" ] }
                ]
              }
            }
            ```
            <br/>
        3. The following body creates the exact same SQL application, but manually provides all the defaults that were excluded from the previous call. Note: The model of a _sql_on_san_ application documents all these default values.<br/>
            ```
            {
              "name": "app3",
              "svm": { "name": "svm1" },
              "template": { "name": "sql_on_san" },
              "sql_on_san": {
                "os_type": "windows_2008",
                "server_cores_count": 8,
                "db": { "size": "5GB", "storage_service": { "name": "value" } },
                "log": { "size": "1GB", "storage_service": { "name": "value" } },
                "temp_db": { "size": "2GB", "storage_service": { "name": "value" } },
                "igroup_name": "igroup_2",
                "new_igroups": [
                  {
                    "name": "igroup_2",
                    "protocol": "mixed",
                    "os_type": "windows",
                    "initiators": [ "iqn.a.new.initiator" ]
                  }
                ],
                "protection_type": { "local_rpo": "none" }
              }
            }
            ```
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
        * [`DOC Asynchronous operations`](#docs-docs-Synchronous-and-asynchronous-operations)
      operationId: application_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/application'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/components:
    get:
      description: |
        Retrieves application components.
        ### Overview
        The application component object exposes how to access an application. Most application interfaces abstract away the underlying ONTAP storage elements, but this interface exposes what is necessary to connect to and uses the storage that is provisioned for an application. See the application component model for a detailed description of each property.
        ### Query examples
        Queries are limited on this API. Most of the details are nested under the `nfs_access`, `cifs_access`, or `san_access` properties, but those properties do not support queries, and properties nested under those properties cannot be requested individually in the current release.<br/>
        The following query returns all application components with names beginning in _secondary_.<br/><br/>
        ```
        GET /application/applications/{application.uuid}/components?name=secondary*
        ```
        <br/>The following query returns all application components at the _extreme_ storage service.<br/><br/>
        ```
        GET /application/applications/{application.uuid}/components?storage_service.name=extreme
        ```
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_collection_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by storage_service.name
        in: query
        name: storage_service.name
        type: string
      - description: Filter by storage_service.uuid
        in: query
        name: storage_service.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_component_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/components/{component.uuid}/snapshots:
    get:
      description: |
        Retrieves Snapshot copies of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`GET /application/applications/{uuid}/snapshots`](#operations-application-application_snapshot_collection_get)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_snapshot_collection_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application Component UUID
        in: path
        name: component.uuid
        required: true
        type: string
      - description: Filter by Application Component Name
        in: query
        name: component.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by consistency_type
        in: query
        name: consistency_type
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by is_partial
        in: query
        name: is_partial
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_component_snapshot_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    post:
      description: |
        Creates a Snapshot copy of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        ### Required properties
        * `name`
        ### Recommended optional properties
        * `consistency_type` - Track whether this snapshot is _application_ or _crash_ consistent.
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`GET /application/applications/{uuid}/snapshots`](#operations-application-application_snapshot_create)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_snapshot_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application Component UUID
        in: path
        name: component.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/application_component_snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/components/{component.uuid}/snapshots/{uuid}:
    delete:
      description: |
        Delete a Snapshot copy of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`DELETE /application/applications/{application.uuid}/snapshots/{uuid}`](#operations-application-application_snapshot_delete)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_snapshot_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application Component UUID
        in: path
        name: component.uuid
        required: true
        type: string
      - description: Snapshot UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    get:
      description: |
        Retrieve a Snapshot copy of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`GET /application/applications/{uuid}/snapshots`](#operations-application-application_snapshot_get)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_snapshot_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application Component UUID
        in: path
        name: component.uuid
        required: true
        type: string
      - description: Snapshot UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_component_snapshot'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/components/{component.uuid}/snapshots/{uuid}/restore:
    post:
      description: |
        Restore a Snapshot copy of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`POST /application/applications/{application.uuid}/snapshots/{uuid}/restore`](#operations-application-application_snapshot_restore)
        * [`DOC /application`](#docs-application-overview)
        * [`DOC Asynchronous operations`](#docs-docs-Synchronous-and-asynchronous-operations)
      operationId: application_component_snapshot_restore
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application Component UUID
        in: path
        name: component.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/components/{uuid}:
    get:
      description: |
        Retrieves an application component.
        ### Overview
        The application component object exposes how to access an application. Most application interfaces abstract away the underlying ONTAP storage elements, but this interface exposes what is necessary to connect to and uses the storage that is provisioned for an application. See the application component model for a detailed description of each property.
        ### Access
        Each application component can be accessed via NFS, CIFS, or SAN. NFS and CIFS access can be enabled simultaneously. Each access section includes a `backing_storage` property. This property is used to correlate the storage elements with the access elements of the application. The `backing_storage` portion of the access section provides the `type` and `uuid` of the backing storage. There is another `backing_storage` property at the same level as the access properties which contains lists of backing storage elements corresponding to the types listed in the access section.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_component_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Application component UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_component'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/snapshots:
    get:
      description: |
        Retrieves Snapshot copies of an application.
        ### Query examples
        The following query returns all Snapshot copies from May 4, 2017 EST. For readability, the colon (`:`) is left in this example. For an actual call, they should be escaped as `%3A`.<br/><br/>
        ```
        GET /application/applications/{application.uuid}/snapshots?create_time=2017-05-04T00:00:00-05:00..2017-05-04T23:59:59-05:00
        ```
        <br/>The following query returns all Snapshot copies that have been flagged as _application consistent_.<br/><br/>
        ```
        GET /application/applications/{application.uuid}/snapshots?consistency_type=application
        ```
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_snapshot_collection_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Filter by UUID
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by consistency_type
        in: query
        name: consistency_type
        type: string
      - description: Filter by components.name
        in: query
        name: components.name
        type: string
      - description: Filter by components.uuid
        in: query
        name: components.uuid
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by is_partial
        in: query
        name: is_partial
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_snapshot_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    post:
      description: |
        Creates a Snapshot copy of the application.
        ### Required properties
        * `name`
        ### Recommended optional properties
        * `consistency_type` - Track whether this snapshot is _application_ or _crash_ consistent.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_snapshot_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/application_snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    x-ntap-long-description:
      description: |
        ## Overview
        Applications support Snapshot copies across all member storage elements. These Snapshot copies can be created and restored at any time or as scheduled. Most applications have hourly Snapshot copies enabled by default, unless the RPO setting is overridden during the creation of the application. An application Snapshot copy can be flagged as either _application consistent_, or _crash consistent_. From an ONTAP perspective, there is no difference between these two consistency types. These types are available for record keeping so that Snapshot copies taken after the application is quiesced (application consistent) can be tracked separately from those Snapshot copies taken without first quiescing the application (crash consistent). By default, all application Snapshot copies are flagged to be _crash consistent_, and Snapshot copies taken at a scheduled time are also considered _crash consistent_.<br/>
        The functionality provided by these APIs is not integrated with the host application. Snapshot copies have limited value without host coordination, so the use of the SnapCenter Backup Management suite is recommended to ensure correct interaction between host applications and ONTAP.
      tags:
      - application
  /application/applications/{application.uuid}/snapshots/{uuid}:
    delete:
      description: |-
        Delete a Snapshot copy of an application
        ### Query examples
        Individual Snapshot copies can be destroyed with no query parameters, or a range of Snapshot copies can be destroyed at one time using a query.<br/>
        The following query deletes all application Snapshot copies created before May 4, 2017<br/><br/>
        ```
        DELETE /application/applications/{application.uuid}/snapshots?create_time=<2017-05-04T00:00:00-05:00
        ```

        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
      operationId: application_snapshot_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    get:
      description: |
        Retrieve a Snapshot copy of an application component.<br/>
        This endpoint is only supported for Maxdata template applications.<br/>
        Component Snapshot copies are essentially more granular application Snapshot copies. There is no difference beyond the scope of the operation.
        ### Learn more
        * [`DOC /application/applications/{application.uuid}/snapshots`](#docs-application-application_applications_{application.uuid}_snapshots)
        * [`GET /application/applications/{uuid}/snapshots`](#operations-application-application_snapshot_create)
        * [`DOC /application`](#docs-application-overview)
      operationId: application_snapshot_get
      parameters:
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_snapshot'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{application.uuid}/snapshots/{uuid}/restore:
    post:
      description: |
        Restore an application snapshot<br/>
        Restoring an application Snapshot copy reverts all storage elements in the Snapshot copy to the state in which the Snapshot copy was in when the Snapshot copy was taken. This restoration does not apply to access settings that might have changed since the Snapshot copy was created.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
        * [`DOC Asynchronous operations`](#docs-docs-Synchronous-and-asynchronous-operations)
      operationId: application_snapshot_restore
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Application UUID
        in: path
        name: application.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/applications/{uuid}:
    delete:
      description: |
        Deletes an application and all associated data.
        ### Warning - this deletes it all, including your data
        This deletes everything created with the application, including any volumes, LUNs, NFS export policies, CIFS shares, and initiator groups. Initiator groups are only destroyed if they were created as part of an application and are no longer in use by other applications.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
        * [`DOC Asynchronous operations`](#docs-docs-Synchronous-and-asynchronous-operations)
      operationId: application_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Application UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    get:
      description: |
        Retrieves an application
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `<template>` the property corresponding to the `template.name` of the application
        ### Property overview
        An application includes three main groups or properties.
        * Generic properties - such as the `name`, `template.name`, and `state` of the application. These properties are all inexpensive to retrieve and their meaning is consistent for every type of application.
        * `statistics.*` - application statistics report live usage data about the application and its components. Various space and IOPS details are included at both the application level and at a per component level. The application model includes a detailed description of each property. These properties are slightly more expensive than the generic properties because live data must be collected from every storage element in the application.
        * `<template>` - the property corresponding to the value of the `template.name` returns the contents of the application in the same layout that was used to provision the application. This information is very expensive to retrieve because it requires collecting information about all the storage and access settings for every element of the application. There are a few notable limitations to what can be returned in the `<template>` section:
          * The `new_igroups` array of many SAN templates is not returned by GET. This property allows igroup creation in the same call that creates an application, but is not a property of the application itself. The `new_igroups` array is allowed during PATCH operations, but that does not modify the `new_igroups` of the application. It is another way to allow igroup creation while updating the application to use a different igroup.
          * The `vdi_on_san` and `vdi_on_nas` `desktops.count` property is rounded to the nearest 1000 during creation, and is reported with that rounding applied.
          * The `mongo_db_on_san` `dataset.element_count` property is rounded up to an even number, and is reported with that rounding applied.
          * The `sql_on_san` and `sql_on_smb` `server_cores_count` property is limited to 8 for GET operations. Higher values are accepted by POST, but the impact of the `server_cores_count` property on the application layout currently reaches its limit at 8.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_get
      parameters:
      - description: Application UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
    patch:
      description: |
        Updates the properties of an application.
        ### Overview
        Similar to creating an application, modification is done using the template properties of an application. The `storage_service`, `size`, and `igroup_name` of an application may be modified.
        ### `storage_service`
        Storage service modifications are processed in place, meaning that the storage can not be moved to a location with more performance headroom to accommodate the request. If the current backing storage of the application is in a location that can support increased performance, the QoS policies associated with the application will be modified to allow it. If not, an error will be returned. A storage service modification to a lower tier of performance is always allowed, but the reverse modification may not be supported if the cluster is over provisioned and the cluster is unlikely to be able to fulfil the original storage service.
        ### `size`
        Size modifications are processed in a variety of ways depending on the type of application. For NAS applications, volumes are grown or new volumes are added. For SAN applications, LUNs are grown, new LUNs are added to existing volumes, or new LUNs are added to new volumes. If new storage elements are created, they can be found using the [`GET /application/applications/{application.uuid}/components`](#operations-application-application_component_collection_get) interface. The creation time of each storage object is included, and the newly created objects will use the same naming scheme as the previous objects. Resize follows the best practices associated with the type of application being expanded. Reducing the size of an application is not supported.
        ### `igroup_name`
        Modification of the igroup name allows an entire application to be mapped from one initiator group to another. Data access will be interrupted as the LUNs are unmapped from the original igroup and remapped to the new one.
        ### Application state
        During a modification, the `state` property of the application updates to indicate `modifying`. In `modifying` state, statistics are not available and Snapshot copy operations are not allowed. If the modification fails, it is possible for the application to be left in an inconsistent state, with the underlying ONTAP storage elements not matching across a component. When this occurs, the application is left in the `modifying` state until the command is either retried and succeeds or a call to restore the original state is successful.
        ### Examples
        1. Change the storage service of the database of the Oracle application to _extreme_ and resize the redo logs to _100GB_.
            ```
            {
              "oracle_on_nfs": {
                "db": {
                  "storage_service": {
                    "name": "extreme"
                  }
                },
                "redo_log": {
                  "size": "100GB"
                }
              }
            }
            ```
            <br/>
        2. Change the storage service, size, and igroup of a generic application by component name.
            ```
            {
              "san": {
                "application_components": [
                  {
                    "name": "component1",
                    "storage_service": {
                      "name": "value"
                    }
                  },
                  {
                    "name": "component2",
                    "size": "200GB"
                  },
                  {
                    "name": "component3",
                    "igroup_name": "igroup5"
                  }
                ]
              }
            }
            ```
            <br/>
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
        * [`DOC Asynchronous operations`](#docs-docs-Synchronous-and-asynchronous-operations)
      operationId: application_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Application UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/application'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/templates:
    get:
      description: |
        Retrieves application templates.
        ### Query examples
        The most useful queries on this API allows searches by name or protocol access. The following query returns all templates that are used to provision an Oracle application.<br/><br/>
        ```
        GET /application/templates?name=ora*
        ```
        <br/>Similarly, the following query returns all templates that support SAN access.<br/><br/>
        ```
        GET /application/templates?protocol=san
        ```
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_template_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by missing_prerequisites
        in: query
        name: missing_prerequisites
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_template_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /application/templates/{name}:
    get:
      description: |
        Retrieves an application template.
        ### Template properties
        Each application template has a set of properties. These properties are always nested under a property with the same name as the template. For example, when using the `mongo_db_on_san` template, the properties are found nested inside the `mongo_db_on_san` property. The properties nested under the template property are all specific to the template. The model for the application template object includes all the available templates, but only the object that corresponds to the template's name is returned, and only one is provided in any application API.<br/>
        The model of each template includes a description of each property and its allowed values or usage. Default values are also indicated when available. The template properties returned by this API include an example value for each property.
        ### Template prerequisites
        Each template has a set of prerequisites required for its use. If any of these prerequisites are not met, the `missing_prerequisites` property indicates which prerequisite is missing.
        ### Learn more
        * [`DOC /application`](#docs-application-overview)
      operationId: application_template_get
      parameters:
      - description: Template Name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/application_template'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - application
  /cloud/targets:
    get:
      description: |-
        Retrieves the collection of cloud targets in the cluster.
        ### Related ONTAP commands
        * `storage aggregate object-store config show`

        ### Learn more
        * [`DOC /cloud/targets`](#docs-cloud-cloud_targets)
      operationId: cloud_target_collection_get
      parameters:
      - description: Filter by use_http_proxy
        in: query
        name: use_http_proxy
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by ssl_enabled
        in: query
        name: ssl_enabled
        type: boolean
      - description: Filter by port
        in: query
        name: port
        type: integer
      - description: Filter by used
        in: query
        name: used
        type: integer
      - description: Filter by url_style
        in: query
        name: url_style
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by azure_account
        in: query
        name: azure_account
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by server
        in: query
        name: server
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by provider_type
        in: query
        name: provider_type
        type: string
      - description: Filter by cap_url
        in: query
        name: cap_url
        type: string
      - description: Filter by server_side_encryption
        in: query
        name: server_side_encryption
        type: string
      - description: Filter by snapmirror_use
        in: query
        name: snapmirror_use
        type: string
      - description: Filter by owner
        in: query
        name: owner
        type: string
      - description: Filter by authentication_type
        in: query
        name: authentication_type
        type: string
      - description: Filter by access_key
        in: query
        name: access_key
        type: string
      - description: Filter by container
        in: query
        name: container
        type: string
      - description: Filter by certificate_validation_enabled
        in: query
        name: certificate_validation_enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cloud_target_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cloud
    post:
      description: |-
        Creates a cloud target.
        ### Required properties
        * `name` - Name for the cloud target.
        * `owner` - Owner of the target: _fabricpool_, _snapmirror_.
        * `provider_type` - Type of cloud provider: _AWS_S3_, _Azure_Cloud_, _SGWS_, _IBM_COS_, _AliCloud_, _GoogleCloud_, _ONTAP_S3_.
        * `server` - Fully qualified domain name of the object store server. Required when `provider_type` is one of the following: _SGWS_, _IBM_COS_, _AliCloud_.
        * `container` - Data bucket/container name.
        * `access_key` - Access key ID if `provider_type` is not _Azure_Cloud_ and `authentication_type` is _key_.
        * `secret_password` - Secret access key if `provider_type` is not _Azure_Cloud_ and `authentication_type` is _key_.
        * `azure_account` - Azure account if `provider_type` is _Azure_Cloud_.
        * `azure_private_key` - Azure access key if `provider_type` is _Azure_Cloud_.
        * `cap_url` - Full URL of the request to a CAP server for retrieving temporary credentials if `authentication_type` is _cap_.
        * `svm.name` or `svm.uuid` - Name or UUID of SVM if `owner` is _snapmirror_.
        * `snapmirror_use` - Use of the cloud target if `owner` is _snapmirror_: data, metadata.
        ### Recommended optional properties
        * `authentication_type` - Authentication used to access the target: _key_, _cap_, _ec2_iam_, _gcp_sa_, _azure_msi_.
        * `ssl_enabled` - SSL/HTTPS enabled or disabled.
        * `port` - Port number of the object store that ONTAP uses when establishing a connection.
        * `ipspace` - IPspace to use in order to reach the cloud target.
        * `use_http_proxy` - Use the HTTP proxy when connecting to the object store server.
        ### Default property values
        * `authentication_type`
          - _ec2_iam_ - if running in Cloud Volumes ONTAP in AWS
          - _gcp_sa_ - if running in Cloud Volumes ONTAP in GCP
          - _azure_msi_ - if running in Cloud Volumes ONTAP in Azure
          - _key_  - in all other cases.
        * `server`
          - _s3.amazonaws.com_ - if `provider_type` is _AWS_S3_
          - _blob.core.windows.net_ - if `provider_type` is _Azure_Cloud_
          - _storage.googleapis.com_ - if `provider_type` is _GoogleCloud_
        * `ssl_enabled` - _true_
        * `port`
          - _443_ if `ssl_enabled` is _true_ and `provider_type` is not _SGWS_
          - _8082_ if `ssl_enabled` is _true_ and `provider_type` is _SGWS_
          - _80_ if `ssl_enabled` is _false_ and `provider_type` is not _SGWS_
          - _8084_ if `ssl_enabled` is _false_ and `provider_type` is _SGWS_
        * `ipspace` - _Default_
        * `certificate_validation_enabled` - _true_
        * `ignore_warnings` - _false_
        * `check_only` - _false_
        * `use_http_proxy` - _false_
        * `server_side_encryption`
          - _none_ - if `provider_type` is _ONTAP_S3_
          - _sse_s3_ - if `provider_type` is not _ONTAP_S3_
        * `url_style`
          - _path_style_ - if `provider_type` is neither _AWS_S3_ nor _AliCloud_
          - _virtual_hosted_style_ - if `provider_type` is either _AWS_S3 or _AliCloud__
        ### Related ONTAP commands
        * `storage aggregate object-store config create`

        ### Learn more
        * [`DOC /cloud/targets`](#docs-cloud-cloud_targets)
      operationId: cloud_target_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Specifies whether or not warning codes should be ignored.
        in: query
        name: ignore_warnings
        type: boolean
      - description: Do not create the target configuration, only check that the POST
          request succeeds.
        in: query
        name: check_only
        type: boolean
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cloud_target'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cloud
    x-ntap-long-description:
      description: |
        ## Retrieving a collection of cloud targets
        The cloud targets GET API retrieves all cloud targets defined in the cluster.
        ## Creating cloud targets
        The cluster administrator tells ONTAP how to connect to a cloud target. The following pre-requisites must be met before creating an object store configuration in ONTAP.
        A valid data bucket or container must be created with the object store provider. This assumes that the user has valid account credentials with the object store provider to access the data bucket.
        The ONTAP node must be able to connect to the object store. </br>
        This includes:
          - Fast, reliable connectivity to the object store.
          - An inter-cluster LIF (logical interface) must be configured on the cluster. ONTAP verifies connectivity prior to saving this configuration information.
          - If SSL/TLS authentication is required, then valid certificates must be installed.
          - FabricPool license (required for all object stores except SGWS).
        ## Deleting cloud targets
        If a cloud target is used by an aggregate, then the aggregate must be deleted before the cloud target can be deleted.
      tags:
      - cloud
  /cloud/targets/{uuid}:
    delete:
      description: |-
        Deletes the cloud target specified by the UUID. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate object-store config delete`

        ### Learn more
        * [`DOC /cloud/targets`](#docs-cloud-cloud_targets)
      operationId: cloud_target_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Cloud target UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cloud
    get:
      description: |-
        Retrieves the cloud target specified by the UUID.
        ### Related ONTAP commands
        * `storage aggregate object-store config show`

        ### Learn more
        * [`DOC /cloud/targets`](#docs-cloud-cloud_targets)
      operationId: cloud_target_get
      parameters:
      - description: Cloud target UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cloud_target'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cloud
    patch:
      description: |-
        Updates the cloud target specified by the UUID with the fields in the body. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate object-store config modify`

        ### Learn more
        * [`DOC /cloud/targets`](#docs-cloud-cloud_targets)
      operationId: cloud_target_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Cloud target UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Specifies whether or not warnings should be ignored.
        in: query
        items:
          type: string
        name: ignore_warnings
        type: boolean
      - description: Do not modify the configuration, only check that the PATCH request
          succeeds.
        in: query
        name: check_only
        type: boolean
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cloud_target'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cloud
  /cluster:
    get:
      description: |-
        Retrieves the cluster configuration.
        ### Learn more
        * [`DOC /cluster`](#docs-cluster-cluster)
      operationId: cluster_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |-
        Updates the cluster configuration after the cluster is created.
        ### Related ONTAP commands 
        * `cluster identity modify` 
        * `system node modify` 
        * `vserver services dns modify` 
        * `vserver services name-service dns modify` 
        * `timezone` 
        * `security ssl modify`
        ### Learn more
        * [`DOC /cluster`](#docs-cluster-cluster)
      operationId: cluster_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Cluster information
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3604491 | Updating timezone failed. |
            | 3604520 | Internal error. System state is not correct to read or change timezone. |
            | 8847361 | Too many DNS domains provided. |
            | 8847362 | Too many name servers provided. |
            | 9240587 | A name must be provided. |
            | 12451843 | Certificate does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |
        Creates a cluster.
        ### Required properties
        * `name`
        * `password`
        ### Recommended optional properties
        * `location`
        * `contact`
        * `dns_domains`
        * `name_servers`
        * `ntp_servers`
        * `license`
        * `configuration_backup`
        * `management_interface`
        * `nodes`
        * `timezone`
        ### Learn more
        * [`DOC /cluster`](#docs-cluster-cluster)
      operationId: cluster_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Configures a single node cluster.  All cluster ports are reassigned
          to the default network. The storage failover settings are configured to
          non-HA. The node reboots during this operation.
        in: query
        name: single_node_cluster
        type: boolean
      - default: false
        description: Create aggregates based on an optimal layout recommended by the
          system.
        in: query
        name: create_recommended_aggregates
        type: boolean
      - description: Cluster information
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262245 | The value provided is invalid. |
            | 1179813 | Fields set for one node must be set for all nodes. |
            | 1179817 | The IP address, subnet mask, and gateway must all be provided for cluster manangement interface. |
            | 1179818 | The IP address and gateway must be of the same family. |
            | 1179821 | An IP address and subnet mask conflicts with an existing entry. |
            | 1179824 | An invalid gateway was provided. |
            | 1179825 | All management and cluster config IP addresses must belong to the same address family. |
            | 2097165 | An NTP server could not be reached. |
            | 8847361 | Too many DNS domains provided. |
            | 8847362 | Too many name servers provided. |
            | 8847394 | An invalid DNS domain was provided. |
            | 8978433 | An invalid license key was provided. |
            | 9240587 | A name must be provided. |
            | 9240594 | An invalid name was provided. |
            | 39387137 | The URL provided is invalid. |
            | 131727360 | A node could not be added to the cluster. This is a generic code, see response message for details. |
            | 131727388 | Hostnames for NTP servers cannot be used without DNS configured. |
            | 131727389 | URL and username are required for configuration backup. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        # Overview
        You can use this API to create a cluster, update cluster-wide configurations, and retrieve the current configuration details.
        ## Creating a cluster
        You can create a new cluster by issuing a POST request to /cluster. Parameters are provided in the body of the POST request to configure cluster-wide settings and add nodes during the cluster setup.
        ### Fields used for creating a cluster
        The fields used for the cluster APIs fall into the following categories:
        * Required cluster-wide configuration
        * Optional cluster-wide configuration
        ### Required cluster-wide configuration
        The following fields are always required for any POST /cluster request:
        * name
        * password
        ### Optional cluster-wide configuration
        The following fields are used to set up additional cluster-wide configurations:
        * location
        * contact
        * dns_domains
        * name_servers
        * ntp_servers
        * timezone
        * license
        * configuration_backup
        * management_interface
        * nodes
        ### Nodes field
        The nodes field specifies the nodes to join to the cluster. To use this API, all nodes must run the same version of ONTAP. If you do not specify a node, the cluster is configured with one node added. The REST request is issued to the node that is added to the cluster. If you specify one node, do not use the "node.cluster_interface.ip.address" field. If you specify multiple nodes, specify the node to which the REST request is issued in addition to the remote nodes. Use the "node.cluster_interface.ip.address" field to identify each node. All other node fields are optional in all cases. If you provide a field for one node, you need to provide the same field for all nodes.
        ### Node networking fields
        The cluster management interface and each node management interface use the cluster management interface subnet mask and gateway. For advanced configurations in which the cluster and node management interfaces are on different subnets, use the /network/ip/interface APIs to configure network interfaces after setup is complete.
        The management interfaces are used to communicate with the name servers and NTP servers. The address family of the name servers and NTP servers must match the management interfaces address family.
        ### Single node cluster field
        When the "single_node_cluster" field is set to "true", the cluster is created in single node cluster mode. You can provide a node field for this node for node-specific configuration but do not use the "node.cluster_interface.ip.address" field. Storage failover is configured to non-HA mode, and ports used for cluster ports are moved to the default IPspace. This might cause the node to reboot during setup. While a node reboots, the RESTful interface might not be available. See "Connection failures during cluster create" for more information.
        ### Create recommended aggregates parameter
        When the "create_recommended_aggregates" parameter is set to "true", aggregates based on an optimal layout recommended by the system are created on each of the nodes in the cluster. The default setting is "false".
        <br/>
        ---
        ## Performance monitoring
        Performance of the cluster can be monitored by the `metric.*` and `statistics.*` fields. These fields show the performance of the cluster in terms of IOPS, latency and throughput. The `metric.*` fields denote an average, whereas the `statistics.*` fields denote a real-time monotonically increasing value aggregated across all nodes.
        <br/>
        ---
        ## Monitoring cluster create status
        ### Errors before the job starts
        Configuration in the POST /cluster request is validated before the cluster create job starts. If an invalid configuration is found, an HTTP error code in the 4xx range is returned. No cluster create job is started.
        ### Polling on the job
        After a successful POST /cluster request is issued, an HTTP error code of 202 is returned along with a job UUID and link in the body of the response. The cluster create job continues asynchronously and is monitored with the job UUID using the /cluster/jobs API. The "message" field in the response of the GET /cluster/jobs/{uuid} request shows the current step in the job, and the "state" field shows the overall state of the job.
        ### Errors during the job
        If a failure occurs during the cluster create job, the job body provides details of the error along with error code fields. See the error table under "Responses" in the POST /cluster documentation for common error codes and descriptions.
        ### Rerunning POST /cluster
        The POST /cluster request can be rerun if errors occur. When rerunning the request, use the same body and query parameters. You can change the value of any field in the original body or query, but you cannot change the provided fields. For example, an initial request might have a body section as follows:
        <br />
        ```
        body =
        {
          "name": "clusCreateRerun",
          "password": "openSesame",
          "nodes": [
            {
              "cluster_interface": {
                "ip": {
                  "address": "1.1.1.1"
                }
              }
            },
            {
              "cluster_interface": {
                "ip": {
                  "address": "2.2.2.2"
                }
              }
            }
          ]
        }
        ```
        A rerun request updates the body details to:
        <br />
        ```
        body =
        {
          "name": "clusCreateRerun",
          "password": "openSesame",
          "nodes": [
            {
              "cluster_interface": {
                "ip": {
                  "address": "3.3.3.3"
                }
              }
            },
            {
              "cluster_interface": {
                "ip": {
                  "address": "4.4.4.4"
                }
              }
            }
          ]
        }
        ```
        A rerun request with the following body details is invalid:
        <br />
        ```
        body =
        {
          "name": "clusCreateRerun",
          "password": "openSesame",
          "nodes": [
            {
              "cluster_interface": {
                "ip": {
                  "address": "3.3.3.3"
                }
              }
            }
          ]
        }
        ```
        Note that the password might already be configured. If a password is already configured and then a new password is provided, the new request overwrites the existing password. If a password is already configured either by another interface or by a previous POST request to /cluster, authenticate any future REST requests with that password. If a POST request to /cluster with the default return_timeout of 0 returns an error, then the password was not changed.
        ### Connection failures during cluster create
        A request to poll the job status might fail during a cluster create job in the following two cases. In these cases, programmatic use of the RESTful interface might be resilient to these connection failures.
        1. When the "single_node_cluster" flag is set to "true", the node might reboot. During this time, the RESTful interface might refuse connections and return errors on a GET request, or connection timeouts might occur. Programmatic use of the RESTful interface during reboots must consider these effects while polling a cluster create job.
        2. The "mgmt_auto" LIF is removed during the cluster create job. A POST /cluster request might be issued on the "mgmt_auto" LIF. However, requests to poll the job status might fail during cluster create when the "mgmt_auto" LIF is removed. The "mgmt_auto" LIF is only removed if a cluster management interface is provided as an argument to POST /cluster, and only after the cluster management interface is created. Programmatic use of the POST /cluster API on the "mgmt_auto" LIF should be configured to dynamically switch to polling the job on the cluster management LIF.
        <br/>
        ---
        ## Modifying cluster configurations
        The following fields can be used to modify a cluster-wide configuration:
        * name
        * location
        * contact
        * dns_domains
        * name_servers
        * timezone
        * certificate
        <br/>
        ---
        # Examples
        ### Minimally configuring a 2-node setup
        <br/>
        ```
        # Body
        body =
        {
          "name": "clusCreateExample1",
          "password": "openSesame",
          "nodes": [
            {
              "cluster_interface": {
                "ip": {
                  "address": "1.1.1.1"
                }
              }
            },
            {
              "cluster_interface": {
                "ip": {
                  "address": "2.2.2.2"
                }
              }
            }
          ]
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster" -d body
        ```
        ---
        ### Setting up a single node with additional node configuration and auto aggregate creation
        <br/>
        ```
        # Body
        body =
        {
          "name": "clusCreateExample2",
          "password": "openSesame",
          "nodes": [
            {
              "name": "singleNode",
              "location": "Sunnyvale"
            }
          ]
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster?single_node_cluster=true&create_recommended_aggregates=true" -d body
        ```
        ---
        ### Modifying a cluster-wide configuration
        <br/>
        ```
        # Body
        body =
        {
          "contact": "it@company.com"
        }
        # Request
        curl -X PATCH "https://<mgmt-ip>/api/cluster" -d body
        ```
        ---
        ## Creating a cluster using the cluster "create" operation
        This example shows how to create a cluster using the cluster APIs. Specifically, this example shows the creation of a two-node cluster and uses information from the nodes themselves combined with user supplied information to configure the cluster.
        ### Preparing for setup
        Before the REST APIs can be issued to create the cluster, the cluster must be wired up and powered on. The network connections between the nodes for the cluster interconnect and the connections to the management network must be completed.  After the nodes are powered on, the nodes automatically configure interfaces on the platform's default cluster ports to allow the nodes to discover each other during setup and expansion workflows. You must configure a management interface on one node or use the mgmt_auto LIF, which is assigned an IP address using DHCP, to start using the REST APIs.  By making a console connection to a node, the cluster setup wizard guides you through the configuration of the initial node managment interface to which the REST calls can be sent.  Once this step is completed, exit the wizard by typing "exit". You can then issue REST API requests.
        1.  Wire and power on the nodes.
        2.  Make a console connection to one node to access the cluster setup wizard.
        3.  Enter node management interface information to enable REST API requests to be sent to the node.
        ```
        Welcome to the cluster setup wizard.
        You can enter the following commands at any time:
          "help" or "?" - if you want to have a question clarified,
          "back" - if you want to change previously answered questions, and
          "exit" or "quit" - if you want to quit the cluster setup wizard.
          Any changes you made before quitting will be saved.
          You can return to cluster setup at any time by typing "cluster setup".
          To accept a default or omit a question, do not enter a value.
          This system will send event messages and periodic reports to NetApp Technical
          Support. To disable this feature, enter
          autosupport modify -support disable
          within 24 hours.
          Enabling AutoSupport can significantly speed problem determination and
          resolution should a problem occur on your system.
          For further information on AutoSupport, see:
            http://support.netapp.com/autosupport/
            Type yes to confirm and continue {yes}: yes
            Enter the node management interface port [e0c]:
              Enter the node management interface IP address: 10.224.82.249
              Enter the node management interface netmask: 255.255.192.0
              Enter the node management interface default gateway: 10.224.64.1
              A node management interface on port e0c with IP address 10.224.82.249 has been created.
              Use your web browser to complete cluster setup by accessing
              https://10.224.82.249
              Otherwise, press Enter to complete cluster setup using the command line
              interface: exit
              Exiting the cluster setup wizard. Any changes you made have been saved.
              The cluster administrator's account (username "admin") password is set to the system default.
              Warning: You have exited the cluster setup wizard before completing all
              of the tasks. The cluster is not configured. You can complete cluster setup by typing
              "cluster setup" in the command line interface.
        ```
        ---
        ### Discovering the nodes
        If you issue a GET /api/cluster/nodes request when the nodes are not in a cluster, the API returns a list of nodes that were discovered on the cluster interconnect.  Information returned includes the node's serial number, model, software version, UUID, and cluster interface address.  The number of nodes returned should be the same as the number of nodes expected to be in the cluster.  If too many nodes are discovered, remove the nodes that should not be part of the cluster.  If not enough nodes are discovered, verify all the nodes are powered on, that the connections to the cluster interconnect are complete, and retry the command.
        <br />
        ```
        # The API:
        /api/cluster/nodes
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/nodes?fields=state,uptime" -H "accept: application/hal+json"
        # The response:
        "records": [
          {
            "uuid": "6dce4710-c860-11e9-b5bc-005056bb6135",
            "name": "cluster1",
            "uptime": 134555,
            "state": "up",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/6dce4710-c860-11e9-b5bc-005056bb6135"
              }
            }
          }
        ],
        "num_records": 1,
        "_links": {
          "self": {
            "href": "/api/cluster/nodes?fields=state,uptime"
          }
        }
        ```
        ---
        ### Creating the cluster
        When the node information is available, including each node's cluster interface address, you can assemble the information for creating the cluster.  Provide the cluster name and the password for the admin account.  The rest of the information is optional and can be configured later using other APIs.  Provide the cluster interface address for each node to be included in the cluster so that you can connect to it while adding it to the cluster. In addition to the cluster interface address, you can provide the optional node name, location, and management interface information. If you do not provide node names, nodes are named based on the cluster name. The nodes' managment interface subnet mask and gateway values are omitted and must be the same as the cluster management interface's subnet mask and gateway.
        <br />
        ```
        # The API:
        /api/cluster
        # The call:
        curl -X POST "https://<mgmt-ip>/api/cluster" -H "accept: application/hal+json" -H "accept: application/hal+json" -d '{"name":"cluster1","location":"datacenter1","contact":"me","dns_domains":["example.com"],"name_servers":["10.224.223.130","10.224.223.131","10.224.223.132"],"ntp_servers":["time.nist.gov"],"management_interface":{"ip":{"address":"10.224.82.25","netmask":"255.255.192.0","gateway":"10.224.64.1"}},"password":"mypassword","license":{"keys":["AMEPOSOIKLKGEEEEDGNDEKSJDE"]},"nodes":[{"cluster_interface":{"ip":{"address":"169.254.245.113"}},"name":"node1","management_interface":{"ip":{"address":"10.224.82.29"}}},{"cluster_interface":{"ip":{"address":"169.254.217.95"}},"name":"node2","management_interface":{"ip":{"address":"10.224.82.31"}}}]}'
        # The response:
        {
          "job": {
            "uuid": "b5bc07e2-19e9-11e9-a751-005056bbd95f",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/b5bc07e2-19e9-11e9-a751-005056bbd95f"
              }
            }
          }
        }
        ```
        ---
        ### Monitoring the progress of cluster creation
        To monitor the progress of the cluster create operation, poll the returned job link until the state value is no longer "runnning" or "queued".
        <br />
        ```
        # The API:
        /api/cluster/jobs/b5bc07e2-19e9-11e9-a751-005056bbd95f
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/b5bc07e2-1e9-11e9-a751-005056bbd95f" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "b5bc07e2-19e9-11e9-a751-005056bbd95f",
          "description": "POST /api/cluster",
          "state": "success",
          "message": "success",
          "code": 0,
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/b5bc07e2-19e9-11e9-a751-005056bbd95f"
            }
          }
        }
        ```
        ---
        ### Verifying the cluster information
        After the cluster is created, you can verify the information applied using a number of APIs. You can retrieve most of the information provided using the /api/cluster and /api/cluster/nodes APIs. In addition, you can view the network interface and route information using the /api/network APIs. The following example shows how to retrieve the cluster information:
        <br />
        ```
        # The API:
        /api/cluster
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster?fields=management_interfaces" -H "accept: application/hal+json"
        # The response:
        {
          "management_interfaces": [
            {
              "uuid": "c661725a-19e9-11e9-a751-005056bbd95f",
              "name": "cluster_mgmt",
              "ip": {
                "address": "10.224.82.25"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/c661725a-19e9-11e9-a751-005056bbd95f"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/cluster"
            }
          }
        }
        ```
      tags:
      - cluster
  /cluster/chassis:
    get:
      description: |
        Retrieves a collection of chassis.
        ### Related ONTAP commands
        * `system chassis show`
        * `system chassis fru show`
        ### Learn more
        * [`DOC /cluster/chassis`](#docs-cluster-cluster_chassis)
      operationId: chassis_collection_get
      parameters:
      - description: Filter by id
        in: query
        name: id
        type: string
      - description: Filter by shelves.uid
        in: query
        name: shelves.uid
        type: string
      - description: Filter by frus.state
        in: query
        name: frus.state
        type: string
      - description: Filter by frus.id
        in: query
        name: frus.id
        type: string
      - description: Filter by frus.type
        in: query
        name: frus.type
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by nodes.uuid
        in: query
        name: nodes.uuid
        type: string
      - description: Filter by nodes.name
        in: query
        name: nodes.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chassis_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can use the chassis GET API to retrieve all of the chassis information in the cluster.
        <br/>
        ## Examples
        ### Retrieving a list of chassis from the cluster
        The following example shows the response with a list of chassis in the cluster:
        ```
        # The API:
        /api/cluster/chassis
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/chassis" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "id": "021352005981",
              "_links": {
                "self": {
                  "href": "/api/cluster/chassis/021352005981"
                }
              }
            },
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/cluster/chassis"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific chassis from the cluster
        The following example shows the response of the requested chassis. If there is no chassis with the requested ID, an error is returned.
        ```
        # The API:
        /api/cluster/chassis/{id}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/chassis/021352005981" -H "accept: application/hal+json"
        # The response:
        {
          "id": "021352005981",
          "state": "ok",
          "nodes": [
            {
              "name": "node-1",
              "uuid": "6ede364b-c3d0-11e8-a86a-00a098567f31",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/6ede364b-c3d0-11e8-a86a-00a098567f31"
                }
              }
            }
          ],
          "frus": [
            {
              "id": "PSU2",
              "type": "psu",
              "state": "ok"
            },
            {
              "id": "PSU1",
              "type": "psu",
              "state": "ok"
            },
            {
              "id": "Fan2",
              "type": "fan",
              "state": "ok"
            },
            {
              "id": "Fan3",
              "type": "fan",
              "state": "ok"
            },
            {
              "id": "Fan1",
              "type": "fan",
              "state": "ok"
            }
          ],
          "_links": {
            "self": {
              "href": "/api/cluster/chassis/021352005981"
            }
          }
        }
        ```
      tags:
      - cluster
  /cluster/chassis/{id}:
    get:
      description: |
        Retrieves a specific chassis.
        ### Related ONTAP commands
        * `system chassis show`
        * `system chassis fru show`
        ### Learn more
        * [`DOC /cluster/chassis`](#docs-cluster-cluster_chassis)
      operationId: chassis_get
      parameters:
      - description: Chassis ID
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/chassis'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/jobs:
    get:
      description: |-
        Retrieves a list of recently running asynchronous jobs. After a job transitions to a failure or success state, it is deleted after a default time of 300 seconds.
        ### Learn more
        * [`DOC /cluster/jobs`](#docs-cluster-cluster_jobs)
      operationId: job_collection_get
      parameters:
      - description: Filter by start_time
        in: query
        name: start_time
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by message
        in: query
        name: message
        type: string
      - description: Filter by end_time
        in: query
        name: end_time
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by code
        in: query
        name: code
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/job_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can use this API to view and manipulate jobs. Jobs provide information about asynchronous operations. Some long-running jobs are paused or cancelled by calling a PATCH request. Individual operations indicate if they support PATCH requests on the job. After a job transitions to a terminal state, it is deleted after a default time of 300 seconds. Attempts to call a GET or PATCH request on the job returns a 404 error code After the job has been deleted.
        ## Example
        The following examples show how to retrieve and update a job state:
        ### Retrieving job information
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/b5145e1d-b53b-11e8-8252-005056bbd8f5" -H "accept: application/json"
        # The response:
        {
            "uuid": "b5145e1d-b53b-11e8-8252-005056bbd8f5",
            "code": 0,
            "description": "Cluster Backup Job",
            "state": "running",
            "message": "creating_node_backups",
            "_links": {
                "self": {
                    "href": "/api/cluster/jobs/b5145e1d-b53b-11e8-8252-005056bbd8f5"
                }
            }
        }
        ```
        ---
        ### Updating a job that supports the new state
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/cluster/jobs/b5145e1d-b53b-11e8-8252-005056bbd8f5?action=cancel" -H "accept: application/json"
        ```
        ---
      tags:
      - cluster
  /cluster/jobs/{uuid}:
    get:
      description: |-
        Retrieves the details of a specific asynchronous job. After a job transitions to a failure or success state, it is deleted after a default time of 300 seconds.
        ### Learn more
        * [`DOC /cluster/jobs`](#docs-cluster-cluster_jobs)
      operationId: job_get
      parameters:
      - description: Job UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/job'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |-
        Updates the state of a specific asynchronous job.
        ### Learn more
        * [`DOC /cluster/jobs`](#docs-cluster-cluster_jobs)
      operationId: job_modify
      parameters:
      - description: Job UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          Requests a job to pause, resume, or cancel. Note that not all jobs support these actions. A job can only be resumed if it is in a paused state. After you successfully request a job to be cancelled, the job state changes to either success or failure.
        enum:
        - pause
        - resume
        - cancel
        in: query
        name: action
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description                                                  |
            | ---------- | -----------                                                  |
            |     459753 | Command execution failed with custom error from the program. |
            |     458762 | Job is already in a terminal state.                          |
            |     458773 | The Job Manager is not initialized.                          |
            |     458771 | The specified job is running.                                |
            |     458776 | The specified job is not currently running.                  |
            |     458783 | This job does not support pause.                             |
            |     458784 | This job does not support cancel.                            |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/licensing/licenses:
    get:
      description: |-
        Retrieves a collection of license packages.
        ### Related ONTAP commands
        * `system license show-status`
        * `system license show`

        ### Learn more
        * [`DOC /cluster/licensing/licenses`](#docs-cluster-cluster_licensing_licenses)
      operationId: licenses_get
      parameters:
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by licenses.expiry_time
        in: query
        name: licenses.expiry_time
        type: string
      - description: Filter by licenses.evaluation
        in: query
        name: licenses.evaluation
        type: boolean
      - description: Filter by licenses.start_time
        in: query
        name: licenses.start_time
        type: string
      - description: Filter by licenses.active
        in: query
        name: licenses.active
        type: boolean
      - description: Filter by licenses.compliance.state
        in: query
        name: licenses.compliance.state
        type: string
      - description: Filter by licenses.serial_number
        in: query
        name: licenses.serial_number
        type: string
      - description: Filter by licenses.owner
        in: query
        name: licenses.owner
        type: string
      - description: Filter by licenses.capacity.maximum_size
        in: query
        name: licenses.capacity.maximum_size
        type: integer
      - description: Filter by licenses.capacity.used_size
        in: query
        name: licenses.capacity.used_size
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/license_package_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |-
        Installs one or more feature licenses.
        ### Required properties
        * `keys` - Array containing a list of NLF or 26-character license keys.
        ### Related ONTAP commands
        * `system license add`

        ### Learn more
        * [`DOC /cluster/licensing/licenses`](#docs-cluster-cluster_licensing_licenses)
      operationId: license_create
      parameters:
      - description: List of NLF or 26-character keys.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/license_package'
      - $ref: '#/parameters/return_records_update_param'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/license_package_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1115117    | Generic licensing error |
            | 1115122    | No cluster serial number found |
            | 1115124    | No node serial number found |
            | 1115130    | No license code was provided |
            | 1115131    | Installation of the license failed |
            | 1115132    | License already exists on system |
            | 1115134    | Serial number does not belong to node |
            | 1115141    | License data is invalid |
            | 1115142    | License signature is invalid |
            | 1115143    | Internal error applying the requested license |
            | 1115152    | License does not apply to the platform |
            | 1115154    | Unable to retrieve cluster ID |
            | 1115155    | Invalid cluster ID found |
            | 1115159    | License is not in an acceptable format |
            | 1115160    | License has already expired |
            | 1115164    | Minimum ONTAP version requirements not met |
            | 1115179    | FlexCache is not supported on this system |
            | 1115180    | FlexCache is not supported on cloud systems |
            | 1115407    | Capacity pool licenses cannot be installed directly |
            | 1115427    | License is incompatible with capacity pools licensing mode |
            | 66846818   | Failed to interpret FlexCache license information |
            | 66846821   | FlexCache is not supported on cloud systems |
            | 66846822   | Invalid FlexCache capacity information provided |
            | 655294464  | Failed to extract license contents |
            | 655294465  | License key is invalid |
            | 655294466  | Serial number is invalid |
            | 655294467  | Version number is invalid |
            | 655294468  | Expired license |
            | 655294469  | License does not apply to the platform |
            | 655294470  | License does not apply to the product  |
          schema:
            $ref: '#/definitions/error_responses'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        Licensing allows you to tailor a system to meet an organization's specific needs. You can enable new features by purchasing a license from a NetApp sales associate. After installation of the license, the new feature is available immediately.
        ####
        This interface manages licenses according to their supported feature. By default, the interface displays packages with installed licenses, but you can also return unlicensed packages.
        ####
        Each feature has a compliance state that is indicated at the package level. Individual licenses also contain a compliance state indicated in the "licenses" array. The state of the package is determined by analyzing the underlying licenses according to the following criteria:
          * Licensing terms
          * Cluster state
        ### Licensing terms
        The licensing terms define the conditions under which a package is considered "compliant". Individual licenses are evaluated based on the following:
          * Scope
          * Time period
          * Usage
          <br/>
        **Scope**
        A package can be licensed under the following scopes:
          * Site - Permits the feature to be used by any node that is a member of the cluster.
          * Cluster - Permits the feature to be used by any node that is a member of the cluster.
          * Node - Permits the authorized node to use the feature. Within a cluster, if you don't supply every node with a valid license, the package state indicates "noncompliant". You must purchase a license for each node in a cluster for the package to be considered "compliant".
          <br/>
        **Time period**
        Some package licenses are only valid for a limited period of time. After a license has expired, the package state changes to "noncompliant". You need to purchase a new license for the package to return to a "compliant" state.
        <br/>
        **Usage**
        Some package licenses have additional terms that need to be maintained to keep a license in compliance. These conditions are defined by the individual license. For example, a license might define the maximum amount of storage that a node can allocate for the license to be "compliant".
        ### Cluster state
        A cluster's state consists of the following:
          * Node online status
          * Node cluster membership
        ####
        Some features require that a node be online to display a valid compliance state. If a node cannot be reached or is not known to the cluster, the individual license might indicate an "unknown" state.
        <br/>
        ---
        ## Licensing keys
        A license is issued in one of the following two formats:
          * 26-character key
          * NetApp License File (NLF)
        ####
        The following is an example of a 26-character key:
        ####
          ```
            AMEPOSOIKLKGEEEEDGNDEKSJDE
          ```
        ####
        The following is an example of an NLF key:
        ####
        ```JSON
        {
          "statusResp": {
          "version": "1",
          "serialNumber": "123456789",
          "message": "Success",
          "licenses": {
            "capacity": "1",
            "type": "capacity",
            "licenseProtocol": "FABRICPOOL-TB",
            "package": "FabricPool",
            "licenseScope": "cluster"
          },
          "snStatus": "Active",
          "product": "fabricpool",
          "statusCode": "S007"
          },
          "Signature": "signatureABC"
        }
        ```
        ####
        You can use this API to submit either format to enable features.
        ####
        ---
        ## Examples
        ### Retrieving a collection of licenses organized by package
        This example retrieves a collection that contains one entry for each package (filtered to only the 'fabricpool' package).
        ####
        ```JSON
        # API
        GET /cluster/licensing/licenses/?fields=*&name=fabricpool"
        # Response
        200 OK
        # JSON Body
        {
          "records": [
          {
            "name": "fabricpool",
            "scope": "cluster",
            "state": "compliant",
            "licenses": [
            {
              "owner": "testcluster-1",
              "serial_number": "4149027342",
              "state": "compliant",
              "capacity": {
              "maximum_size": 1099511627776,
              "used_size": 0
              }
            }
            ],
            "_links": {
            "self": {
              "href": "/api/cluster/licensing/licenses/fabricpool"
            }
            }
          }
          ],
          "num_records": 1,
          "_links": {
          "self": {
            "href": "/api/cluster/licensing/licenses/?fields=*&name=fabricpool"
          }
          }
        }
        ```
        ### Retrieving a collection of installed licenses
        This example retrieves a collection containing all packages (except base) that have installed licenses.
        ####
        ```JSON
        # API
        GET /cluster/licensing/licenses/?fields=*&name=!base
        # Response
        200 OK
        # JSON Body
        {
          "records": [
          {
            "name": "nfs",
            "scope": "node",
            "state": "compliant",
            "licenses": [
            {
              "owner": "testcluster-1",
              "serial_number": "1-81-0000000000000004149027492",
              "state": "compliant"
            }
            ],
            "_links": {
            "self": {
              "href": "/api/cluster/licensing/licenses/nfs"
            }
            }
          },
          {
            "name": "cifs",
            "scope": "node",
            "state": "compliant",
            "licenses": [
            {
              "owner": "testcluster-1",
              "serial_number": "1-81-0000000000000004149027492",
              "state": "compliant"
            }
            ],
            "_links": {
            "self": {
              "href": "/api/cluster/licensing/licenses/cifs"
            }
            }
          }
          ],
          "num_records": 2,
          "_links": {
          "self": {
            "href": "/api/cluster/licensing/licenses/?fields=*&name=!base"
          }
          }
        }
        ```
        ### Installing an NLF license
        This example installs a single license in the NLF format.
        ####
        **Note**: You must escape all the double quotes and backslash characters of the JSON license before it can be placed in the POST request.
        ####
        ```JSON
        # API
        POST /cluster/licensing/licenses/
        # JSON Body
        {
          "keys" : [ "{\"statusResp\":{\"snStatus\": \"Active\", \"licenses\": {\"package\": \"FabricPool\", \"capacity\": \"1\", \"licenseProtocol\": \"FABRICPOOL-TB\", \"type\": \"capacity\", \"licenseScope\": \"cluster\"}, \"message\": \"Success\", \"statusCode\": \"S007\", \"version\": \"1\", \"product\": \"fabricpool\", \"serialNumber\": \"4149027342\"}, \"Signature\":\"SignatureABC\"}" ]
        }
        # Response
        201 Created
        ```
        ### Installing a 26-character key
        This example installs a single 26-character key formatted license.
        ####
        ```JSON
        # API
        POST /cluster/licensing/licenses/
        # JSON Body
        {
          "keys" : [ "AAAAAAAAAAAAAAAAAAAAAAAAAAAA" ]
        }
        # Response
        201 Created
        ```
        ### Installing multiple licenses with one API call
        This example shows how multiple keys can be provided to install multiple features in a single API call.
        ####
        ```JSON
        # API
        POST /cluster/licensing/licenses/
        # JSON Body
        {
          "keys" : [ "AAAAAAAAAAAAAAAAAAAAAAAAAAAA",
                     "BBBBBBBBBBBBBBBBBBBBBBBBBBBB" ]
        }
        # Response
        201 Created
        ```
      tags:
      - cluster
  /cluster/licensing/licenses/{name}:
    delete:
      description: |-
        Deletes a license.
        ### Related ONTAP commands
        * `system license delete`

        ### Learn more
        * [`DOC /cluster/licensing/licenses/{name}`](#docs-cluster-cluster_licensing_licenses_{name})
      operationId: license_delete
      parameters:
      - description: Name of the license package to delete.
        in: path
        name: name
        required: true
        type: string
      - description: Serial number of the license to delete.
        in: query
        name: serial_number
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 525028 | Error during volume limit check, cannot remove license |
            | 525029 | Current volume use will exceed limits if license is removed |
            | 1115137 | Cluster license requires a base license to be installed |
            | 1115144 | Cloud licenses cannot be deleted |
            | 1115178 | A tier license that is still in use cannot be deleted |
            | 1115213 | License is still in use and cannot be removed |
            | 1115406 | Capacity pool licenses cannot be deleted |
            | 66846823 | A FlexCache license that is still in use cannot be deleted |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |-
        Retrieves a specific license package.
        ### Related ONTAP commands
        * `system license show`
        * `system license show-status`

        ### Learn more
        * [`DOC /cluster/licensing/licenses/{name}`](#docs-cluster-cluster_licensing_licenses_{name})
      operationId: license_get
      parameters:
      - description: Name of the license package.
        in: path
        name: name
        required: true
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by licenses.expiry_time
        in: query
        name: licenses.expiry_time
        type: string
      - description: Filter by licenses.evaluation
        in: query
        name: licenses.evaluation
        type: boolean
      - description: Filter by licenses.start_time
        in: query
        name: licenses.start_time
        type: string
      - description: Filter by licenses.active
        in: query
        name: licenses.active
        type: boolean
      - description: Filter by licenses.compliance.state
        in: query
        name: licenses.compliance.state
        type: string
      - description: Filter by licenses.serial_number
        in: query
        name: licenses.serial_number
        type: string
      - description: Filter by licenses.owner
        in: query
        name: licenses.owner
        type: string
      - description: Filter by licenses.capacity.maximum_size
        in: query
        name: licenses.capacity.maximum_size
        type: integer
      - description: Filter by licenses.capacity.used_size
        in: query
        name: licenses.capacity.used_size
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/license_package'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        Manages a specific instance of a license package.
        ####
        ## Examples
        ### Retrieving information for a specific license package
        This example shows how to retrieve information about the specific feature package `fabricpool`.
        ####
        ```JSON
        # API
        GET /cluster/licensing/licenses/fabricpool/
        # Response
        200 OK
        # JSON Body
        {
          "name": "fabricpool",
          "scope": "cluster",
          "state": "compliant",
          "licenses": [
          {
            "owner": "testcluster-1",
            "serial_number": "123456789",
            "state": "compliant",
            "capacity": {
            "maximum_size": 109951162777600,
            "used_size": 0
            }
          }
          ],
          "_links": {
          "self": {
            "href": "/api/cluster/licensing/licenses/fabricpool/"
          }
          }
        }
        ```
        ### Deleting a specific license
        This example show how to delete a CIFS site license.
        ####
        ```JSON
        # API
        DELETE /cluster/licensing/licenses/cifs/?serial_number=1-80-000011"
        # JSON Body
        {}
        # Response
        200 OK
        ```
        ### Deleting with a query
        ####
        The following example shows how to delete all NFS licenses specified with the '*' query.
        ####
        ```JSON
        # API
        DELETE /cluster/licensing/licenses/nfs/?serial_number=*"
        # JSON Body
        {}
        # Response
        200 OK
        ```
      tags:
      - cluster
  /cluster/metrics:
    get:
      description: Retrieves historical performance metrics for the cluster.
      operationId: cluster_collection_performance_metrics_get
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, or 1y.
          The period for each time range is specified as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_metrics_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/nodes:
    get:
      description: |-
        Retrieves the nodes in the cluster.
        ### Related ONTAP commands
        * `system node show`

        ### Learn more
        * [`DOC /cluster/nodes`](#docs-cluster-cluster_nodes)
      operationId: nodes_get
      parameters:
      - description: Filter by model
        in: query
        name: model
        type: string
      - description: Filter by service_processor.link_status
        in: query
        name: service_processor.link_status
        type: string
      - description: Filter by service_processor.dhcp_enabled
        in: query
        name: service_processor.dhcp_enabled
        type: boolean
      - description: Filter by service_processor.firmware_version
        in: query
        name: service_processor.firmware_version
        type: string
      - description: Filter by service_processor.ipv6_interface.address
        in: query
        name: service_processor.ipv6_interface.address
        type: string
      - description: Filter by service_processor.ipv6_interface.netmask
        in: query
        name: service_processor.ipv6_interface.netmask
        type: integer
      - description: Filter by service_processor.ipv6_interface.gateway
        in: query
        name: service_processor.ipv6_interface.gateway
        type: string
      - description: Filter by service_processor.ipv4_interface.gateway
        in: query
        name: service_processor.ipv4_interface.gateway
        type: string
      - description: Filter by service_processor.ipv4_interface.address
        in: query
        name: service_processor.ipv4_interface.address
        type: string
      - description: Filter by service_processor.ipv4_interface.netmask
        in: query
        name: service_processor.ipv4_interface.netmask
        type: string
      - description: Filter by service_processor.state
        in: query
        name: service_processor.state
        type: string
      - description: Filter by service_processor.mac_address
        in: query
        name: service_processor.mac_address
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by cluster_interfaces.name
        in: query
        name: cluster_interfaces.name
        type: string
      - description: Filter by cluster_interfaces.ip.address
        in: query
        name: cluster_interfaces.ip.address
        type: string
      - description: Filter by cluster_interfaces.uuid
        in: query
        name: cluster_interfaces.uuid
        type: string
      - description: Filter by date
        in: query
        name: date
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by membership
        in: query
        name: membership
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by system_machine_type
        in: query
        name: system_machine_type
        type: string
      - description: Filter by vm.provider_type
        in: query
        name: vm.provider_type
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      - description: Filter by ha.giveback.failure.message
        in: query
        name: ha.giveback.failure.message
        type: string
      - description: Filter by ha.giveback.failure.code
        in: query
        name: ha.giveback.failure.code
        type: integer
      - description: Filter by ha.giveback.state
        in: query
        name: ha.giveback.state
        type: string
      - description: Filter by ha.takeover.failure.code
        in: query
        name: ha.takeover.failure.code
        type: integer
      - description: Filter by ha.takeover.failure.message
        in: query
        name: ha.takeover.failure.message
        type: string
      - description: Filter by ha.takeover.state
        in: query
        name: ha.takeover.state
        type: string
      - description: Filter by ha.auto_giveback
        in: query
        name: ha.auto_giveback
        type: boolean
      - description: Filter by ha.partners.uuid
        in: query
        name: ha.partners.uuid
        type: string
      - description: Filter by ha.partners.name
        in: query
        name: ha.partners.name
        type: string
      - description: Filter by ha.ports.number
        in: query
        name: ha.ports.number
        type: unsigned
      - description: Filter by ha.ports.state
        in: query
        name: ha.ports.state
        type: string
      - description: Filter by ha.enabled
        in: query
        name: ha.enabled
        type: boolean
      - description: Filter by version.generation
        in: query
        name: version.generation
        type: integer
      - description: Filter by version.major
        in: query
        name: version.major
        type: integer
      - description: Filter by version.minor
        in: query
        name: version.minor
        type: integer
      - description: Filter by version.full
        in: query
        name: version.full
        type: string
      - description: Filter by system_id
        in: query
        name: system_id
        type: string
      - description: Filter by controller.frus.type
        in: query
        name: controller.frus.type
        type: string
      - description: Filter by controller.frus.id
        in: query
        name: controller.frus.id
        type: integer
      - description: Filter by controller.frus.state
        in: query
        name: controller.frus.state
        type: string
      - description: Filter by controller.flash_cache.firmware_version
        in: query
        name: controller.flash_cache.firmware_version
        type: string
      - description: Filter by controller.flash_cache.slot
        in: query
        name: controller.flash_cache.slot
        type: string
      - description: Filter by controller.flash_cache.part_number
        in: query
        name: controller.flash_cache.part_number
        type: string
      - description: Filter by controller.flash_cache.state
        in: query
        name: controller.flash_cache.state
        type: string
      - description: Filter by controller.flash_cache.hardware_revision
        in: query
        name: controller.flash_cache.hardware_revision
        type: string
      - description: Filter by controller.flash_cache.serial_number
        in: query
        name: controller.flash_cache.serial_number
        type: string
      - description: Filter by controller.flash_cache.model
        in: query
        name: controller.flash_cache.model
        type: string
      - description: Filter by controller.flash_cache.capacity
        in: query
        name: controller.flash_cache.capacity
        type: integer
      - description: Filter by controller.over_temperature
        in: query
        name: controller.over_temperature
        type: string
      - description: Filter by uptime
        in: query
        name: uptime
        type: integer
      - description: Filter by management_interfaces.name
        in: query
        name: management_interfaces.name
        type: string
      - description: Filter by management_interfaces.ip.address
        in: query
        name: management_interfaces.ip.address
        type: string
      - description: Filter by management_interfaces.uuid
        in: query
        name: management_interfaces.uuid
        type: string
      - description: Filter by vendor_serial_number
        in: query
        name: vendor_serial_number
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/node_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |-
        Adds a node or nodes to the cluster.
        ### Required properties
        * `cluster_interface.ip.address`
        ### Related ONTAP commands
        * `cluster add-node`
        * `network interface create`
        * `storage aggregate auto-provision`
        * `system node modify`
        * `system service-processor network modify`

        ### Learn more
        * [`DOC /cluster/nodes`](#docs-cluster-cluster_nodes)
      operationId: nodes_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - default: false
        description: Creates aggregates based on an optimal layout recommended by
          the system.
        in: query
        name: create_recommended_aggregates
        type: boolean
      - description: An object containing an array of nodes.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/node'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262245 | The value provided was invalid. |
            | 1179795 | A node being added is already in the cluster. |
            | 1179813 | Fields set for one node must be set for all nodes. |
            | 1179817 | The IP address, subnet mask, and gateway must all be provided for cluster manangement interface. |
            | 1179818 | The IP address and gateway must be of the same family. |
            | 1179821 | An IP address and subnet mask conflicts with an existing entry. |
            | 131727360 | A node cannot be added to the cluster. This is a generic code, see response message for details. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        # Overview
        You can use this API to add nodes to a cluster, update node-specific configurations, and retrieve the current node configuration details.
        ## Adding a node to a cluster
        You can add a node to a cluster by issuing a POST /cluster/nodes request to a node currently in the cluster. All nodes must be running the same version of ONTAP to use this API. Mixed version joins are not supported in this release. You can provide properties as fields in the body of the POST request to configure node-specific settings. On a successful request, POST /cluster/nodes returns a status code of 202 and job information in the body of the request. You can use the /cluster/jobs APIs to track the status of the node add job.
        ### Fields used for adding a node
        Fields used for the /cluster/nodes APIs fall into the following categories:
        * Required node fields
        * Optional fields
        * Network interface fields
        * Records field
        ### Required node fields
        The following field is required for any POST /cluster/nodes request:
        * cluster_interface.ip.address
        ### Optional fields
        All of the following fields are used to set up additional cluster-wide configurations:
        * name
        * location
        * records
        ### Network interface fields
        You can set a node-specific configuration for each node by using the POST /cluster/nodes API. If you provide a field in the body of a node, provide it for all nodes in the POST body.
        You can provide the node management interface for each node if all node management interfaces in the cluster use the same subnet mask. If the node management interfaces use different subnet masks, use the /network/ip/interfaces API to configure the node management interfaces.
        ### The records field
        To add multiple nodes to the cluster in one request, provide an array named "records" with multiple node entries. Each node entry in "records" must follow the required and optional fields listed previously. When only adding a single node, you do not need a "records" field. See "Examples" for an example of how to use the "records" field.
        ### Create recommended aggregates parameter
        When you set the "create_recommended_aggregates" parameter to "true", aggregates based on an optimal layout recommended by the system are created on each of the nodes being added to the cluster. The default setting is "false".
        <br/>
        ---
        ## Modifying node configurations
        The following fields can be used to modify a node configuration:
        * name
        * location
        <br/>
        ---
        ## Modifying service processor configurations
        When modifying the "service_processor" properties, the job returns success immediately if valid network information is passed in. The values remain in their old state until the network information changes have taken effect on the service processor. You can poll the modified properties until the values are updated.
        <br/>
        ---
        ## Deleting a node from a cluster
        You can delete a node from the cluster. Before deleting a node from the cluster, shut down all of the node's shared resources, such as virtual interfaces to clients. If any of the node's shared resources are still active, the command fails.
        You can use the "force" flag to forcibly remove a node that is down and cannot be brought online to remove its shared resources. This flag is set to "false" by default.
        <br/>
        ---
        ## Node state
        The node "state" field in the /cluster/nodes API represents the current operational state of individual nodes.
        Note that the state of a node is a transient value and can change depending on the current condition of the node, especially during reboot, takeover, and giveback.
        Possible values for the node state are:
        * <i>up</i> - Node is fully operational and is able to accept and handle management requests. It is connected to a majority of healthy (up) nodes in the cluster through the cluster interconnect and all critical services are online.
        * <i>booting</i> - Node is starting up and is not yet fully functional. It might not yet be accessible through the management interface or cluster interconnect. One or more critical services are offline on the node and the node is not taken over. The HA partner reports the node's firmware state as "SF_BOOTING", "SF_BOOTED", or "SF_CLUSTERWAIT".
        * <i>down</i> - Node is known to be down.  It cannot be reached through the management interface or cluster interconnect. The HA partner can be reached and reports that the node is halted/rebooted without takeover. Or, the HA partner cannot be reached (or no SFO configured) but the node shutdown request has been recorded by the quorum change coordinator. The state is reported by the node's HA partner.
        * <i>taken_over</i> - Node is taken over by its HA partner. The state is reported by the node's HA partner.
        * <i>waiting_for_giveback</i> - Node is taken over by its HA partner and is now ready and waiting for giveback. To bring the node up, either issue the "giveback" command to the HA partner node or wait for auto-giveback, if enabled. The state is reported by the node's HA partner.
        * <i>degraded</i> - Node is known to be up but is not yet fully functional. The node can be reached through the cluster interconnect but one or more critical services are offline. Or, the node is not reachable but the node's HA partner can be reached and reports that the node is up with firmware state "SF_UP".
        * <i>unknown</i> - Node state cannot be determined.
        <br/>
        ---
        ## HA
        The "ha" field in the /cluster/nodes API shows the takeover and giveback states of the node along with the current values of the HA fields "enabled"and "auto_giveback".
        You can modify the HA fields "enabled" and "auto_giveback", which will change the HA states of the node.
        ### Takeover
        The takeover "state" field shows the different takeover states of the node. When the state is "failed", the "code" and "message" fields display.
        Possible values for takeover states are:
        * <i>not_attempted</i> - Takeover operation is not started and takeover is possible.
        * <i>not_possible</i> - Takeover operation is not possible. Check the failure message.
        * <i>in_progress</i> - Takeover operation is in progress. The node is taking over its partner.
        * <i>in_takeover</i> - Takeover operation is complete.
        * <i>failed</i> - Takeover operation failed. Check the failure message.
        ###
        Possible values for takeover failure code and messages are:
        * <i>code</i>: 852130
          <i>message</i>: Failed to initiate takeover. Run the \"storage failover show-takeover\" command for more information.
        * <i>code</i>: 852131
          <i>message</i>: Takeover cannot be completed. Reason: disabled.
        ### Giveback
        The giveback "state" field shows the different giveback states of the node. When the state is "failed", the "code" and "message" fields display.
        Possible values for giveback states are:
        * <i>nothing_to_giveback</i> - Node does not have partner aggregates to giveback.
        * <i>not_attempted</i> - Giveback operation is not started.
        * <i>in_progress</i> - Giveback operation is in progress.
        * <i>failed</i> - Giveback operation failed. Check the failure message.
        ###
        Possible values for giveback failure codes and messages are:
        * <i>code</i>: 852126
          <i>message</i>: Failed to initiate giveback. Run the \"storage failover show-giveback\" command for more information.
        <br/>
        ---
        ## Examples
        The following examples show how to add nodes to a cluster, update node properties, shutdown and reboot a node, and remove a node from the cluster.
        ### Adding a single node with a minimal configuration
        ```
        # Body
        body =
        {
          "cluster_interface": {
            "ip": {
              "address": "1.1.1.1"
            }
          }
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster/nodes" -d body
        ```
        ---
        ### Adding multiple nodes in the same request and creating recommended aggregates
        ```
        # Body
        body =
        {
          "records": [
              {
                  "name": "node1",
                  "cluster_interface": {
                    "ip": {
                      "address": "1.1.1.1"
                    }
                  }
              },
              {
                  "name": "node2",
                  "cluster_interface": {
                    "ip": {
                      "address": "2.2.2.2"
                    }
                  }
              },
          ]
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster/nodes?create_recommended_aggregates=true" -d body
        ```
        ---
        ### Modifying a cluster-wide configuration
        ```
        # Body
        body =
        {
          "name": "renamedNode",
          "location": "newLocation"
        }
        # Request
        curl -X PATCH "https://<mgmt-ip>/api/cluster/nodes" -d body
        ```
        ---
        ### Shutting down a node
        ```
        curl -X PATCH "https://<mgmt-ip>/api/cluster/nodes/{uuid}?action=shutdown"
        ```
        ---
        ### Deleting a node from a cluster
        ```
        curl -X DELETE "https://<mgmt-ip>/api/cluster/nodes/{uuid}"
        curl -X DELETE "https://<mgmt-ip>/api/cluster/nodes/{uuid}?force=true"
        ```
        ---
        ### Retrieving the state of all nodes in a cluster
        ```
        #Request
        curl -siku admin -X GET "https://<mgmt-ip>/api/cluster/nodes?fields=state"
        #Response
        {
          "records": [
            {
              "uuid": "54440ec3-6127-11e9-a959-005056bb76f9",
              "name": "node2",
              "state": "up",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/54440ec3-6127-11e9-a959-005056bb76f9"
                }
              }
            },
            {
              "uuid": "e02dbef1-6126-11e9-b8fb-005056bb9ce4",
              "name": "node1",
              "state": "up",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/e02dbef1-6126-11e9-b8fb-005056bb9ce4"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/cluster/nodes?fields=state"
            }
          }
        }
        ```
        ---
        ### Retrieving takeover and giveback failure codes and messages
        ```
        #Request
        curl -siku admin -X GET "https://<mgmt-ip>/api/cluster/nodes?fields=ha"
        #Response
        {
          "records": [
            {
              "uuid": "54440ec3-6127-11e9-a959-005056bb76f9",
              "name": "node2",
              "ha": {
                "enabled": false,
                "auto_giveback": false,
                "partners": [
                  {
                    "uuid": "e02dbef1-6126-11e9-b8fb-005056bb9ce4",
                    "name": "node1"
                  }
                ],
                "giveback": {
                      "state": "nothing_to_giveback"
                },
                "takeover": {
                  "state": "not_possible",
                  "failure": {
                    "message": "Takeover cannot be completed. Reason: disabled.",
                    "code": 852131
                  }
                },
                "ports": [
                  {
                    "name": "e0h"
                  },
                  {
                    "name": "N/A"
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/54440ec3-6127-11e9-a959-005056bb76f9"
                }
              }
            },
            {
              "uuid": "e02dbef1-6126-11e9-b8fb-005056bb9ce4",
              "name": "node1",
              "ha": {
                "enabled": false,
                "auto_giveback": false,
                "partners": [
                  {
                    "uuid": "54440ec3-6127-11e9-a959-005056bb76f9",
                    "name": "node2"
                  }
                ],
                "giveback": {
                      "state": "nothing_to_giveback"
                },
                "takeover": {
                  "state": "not_possible",
                  "failure": {
                    "message": "Takeover cannot be completed. Reason: disabled.",
                    "code": 852131
                  }
                },
                "ports": [
                  {
                    "name": "e0h"
                  },
                  {
                    "name": "N/A"
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/e02dbef1-6126-11e9-b8fb-005056bb9ce4"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/cluster/nodes?fields=state"
            }
          }
        }
      tags:
      - cluster
  /cluster/nodes/{uuid}:
    delete:
      description: |
        Deletes a node from the cluster.
        Note that before deleting a node from the cluster, you must shut down all of the node's shared resources, such as virtual interfaces to clients. If any of the node's shared resources are still active, the command fails.
        ### Optional parameters:
        * `force` - Forcibly removes a node that is down and cannot be brought online to remove its shared resources. This flag is set to "false" by default.
        ### Related ONTAP commands
        * `cluster remove-node`
        ### Learn more
        * [`DOC /cluster/nodes`](#docs-cluster-cluster_nodes)
      operationId: node_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - in: path
        name: uuid
        required: true
        type: string
      - default: false
        description: |
          Set the force flag to "true" to forcibly remove a node that is down and cannot be brought online to remove its shared resources.
        in: query
        name: force
        type: boolean
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 458755 | Replication service is offline. |
            | 458758 | Failed to load job for cluster remove node operation as the job exists. |
            | 1179732 | Cannot remove a node in a single-node cluster. |
            | 1179735 | Node is not part of a cluster. |
            | 1182805 | Cannot remove a node from the node network address of the node to be removed. |
            | 2293765 | Removing a node only works for nodes not in failover configuration. |
            | 2293767 | Node has volumes. Either move or delete them from the node before removing the node. |
            | 2293768 | Node is the home node for one or more logical interfaces. |
            | 2293769 | Node is the current node for one or more logical interfaces. |
            | 2293770 | Node has data logical interfaces configured as target node. |
            | 2293789 | Removing a node only works for nodes not in HA configuration. |
            | 2293796 | Cluster ring is offline on the node |
            | 2293798 | Cannot forcibly remove a node that is online. |
            | 2293800 | Node is configured with MetroCluster. |
            | 2293801 | Cannot remove node because it has foreign LUN Imports. |
            | 2293812 | Node is a member of MetroCluster DR group. |
            | 2293813 | Cannot remove a node from the cluster because a controller replacement is in progress. |
            | 2293814 | The DELETE operation is not supported until the cluster is upgraded. |
            | 2293816 | Cannot remove node because its Storage Encryption devices use authentication keys (AKs) that will not be available to the node after it leaves the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |-
        Retrieves information for the node.
        ### Related ONTAP commands
        * `cluster add-node-status`
        * `cluster date show`
        * `cluster ha show`
        * `network interface show`
        * `network port show`
        * `storage failover show`
        * `system controller show`
        * `system node show`
        * `system node show-discovered`
        * `system service-processor network show`
        * `system service-processor show`
        * `version`

        ### Learn more
        * [`DOC /cluster/nodes`](#docs-cluster-cluster_nodes)
      operationId: node_get
      parameters:
      - format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/node'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |-
        Updates the node information or performs shutdown/reboot actions on a node.
        ### Related ONTAP commands
        * `cluster ha modify`
        * `storage failover modify`
        * `system node modify`
        * `system node reboot`
        * `system service-processor network modify`

        ### Learn more
        * [`DOC /cluster/nodes`](#docs-cluster-cluster_nodes)
      operationId: node_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - format: uuid
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The shutdown action shuts the node down and transfers storage control to its HA group if storage failover is enabled.
          The reboot action reboots the node and transfers storage control to its HA group if storage failover is enabled.
          The giveback action transfers storage control back to the owner from its HA group.
        enum:
        - shutdown
        - reboot
        - giveback
        in: query
        name: action
        type: string
      - description: |
          Indicates the reason for the reboot or shutdown. This only applies when an action of reboot or shutdown is provided.
        in: query
        name: shutdown_reboot_reason
        type: string
      - default: false
        description: |
          This only applies when an action of reboot or shutdown is provided. It allows storage failover to be bypassed along with any failures related to mainintaing quorum in the cluster.
        in: query
        name: allow_data_outage
        type: boolean
      - in: body
        name: info
        schema:
          $ref: '#/definitions/node'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 852046     | HA partner node |
            | 852115     | The reboot/shutdown is prevented because LIFs cannot be moved away from the node |
            | 3604514    | A reboot or shutdown request is already in progress. |
            | 3604515    | Reboot or shutdown of all nodes results in data service failure and client disruption for the entire cluster. Use "allow-data-outage=true" to bypass this check. |
            | 9240606    | The reboot/shutdown is prevented due to quorum warnings. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/ntp:
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP uses the Network Time Protocol (NTP) for world clock time synchronization of the cluster. Some functional services
        require the time to be correct to within one second for all the nodes in the cluster.</br>
        The success and speed of this synchronization depends on the number, alignment, and consistent network latency of external
        time servers. It is a best practice to configure ONTAP with four independent external time servers.</br>
        To aid set up, the Pre-Cluster API of POST /cluster supports a list of NTP time servers
        using either the host name, IPv4 address, or IPv6 address.</br>
        You can enhance time security by acquiring private keys from external time servers, recording those keys and
        configuring the entries that match the external time servers to use those keys.</br>
        To use NTP symmetric authentication keys (keys), the shared private key must be recorded
        first using the /cluster/ntp/keys API associated with the server and enabled to be used.
        ## APIs
        There are three sets of APIs. The most basic set is part of the /api/cluster APIs, in which a set of NTP servers are provided.
        The next two sets are used to manage the NTP servers in more detail and optionally record keys to enable NTP
        symmetric authentication.
        ### [`/api/cluster`](#docs-cluster-cluster)
        More details can be found under the documentation for [`/api/cluster`](#docs-cluster-cluster). This API supports a list of NTP servers to
        start with. It does not take any individual configuration values for the NTP servers themselves.
        ### [`/api/cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
        You can use this API for a more detailed configuration of NTP servers. You must use this API to set and enable
        NTP symmetric authentication keys.
        ### [`/api/cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
        You can use this API to manage shared NTP symmetric keys that are provided by the remote NTP time server
        by using the key identifier (ID), type of key, and the private shared key.
      tags:
      - cluster
  /cluster/ntp/keys:
    get:
      description: |
        Retrieves the collection of NTP symmetric authentication keys known by ONTAP that
        are uniquely indexed by an identifier.
        ### Related ONTAP commands
        * `cluster time-service ntp key show`
        ### Learn more
        * [`DOC /cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
      operationId: cluster_ntp_keys_collection_get
      parameters:
      - description: Filter by id
        in: query
        name: id
        type: integer
      - description: Filter by value
        in: query
        name: value
        type: string
      - description: Filter by digest_type
        in: query
        name: digest_type
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ntp_key_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |
        Creates an NTP symmetric authentication key entry including the type of key
        using an unused identifier or index number (ID).
        ### Required properties
        * `id` - Shared symmetric key number (ID).
        * `digest_type` - Shared private key cryptographic hash type.
        * `value` - Value of shared private key.
        ### Related ONTAP commands
        * `cluster time-service ntp key create`
        ### Learn more
        * [`DOC /cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
      operationId: cluster_ntp_keys_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ntp_key'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2097187 | Invalid value for an NTP symmetric authentication key. A SHA1 key must be exactly 40 hexadecimal digits. |
            | 2097189 | Too many NTP keys have been configured. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can configure NTP to use shared private keys between ONTAP and trusted external NTP time servers.</br>
        You acquire the keys from the external NTP time servers and individual entries created for each
        unique key. You can use the /cluster/ntp/servers API to associate a key with an external NTP time server
        used by ONTAP and enable authentication.
        ### Fields used for adding an NTP shared key
        The required fields are:
        * `id`
        * `digest_type`
        * `secret_key`
        ## Example
        ```
        # Body
        body =
        {
          "id": 10,
          "digest_type": "sha1",
          "value": "da39a3ee5e6b4b0d3255bfef95601890afd80709"
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster/ntp/keys" -d body
        ```
      tags:
      - cluster
  /cluster/ntp/keys/{id}:
    delete:
      description: |
        Deletes an NTP key.
        ### Related ONTAP commands
        * `cluster time-service ntp key delete`
        ### Learn more
        * [`DOC /cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
      operationId: cluster_ntp_keys_delete
      parameters:
      - description: Key identifier
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2097186 | The key cannot be deleted because it is being used by an NTP server. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |
        Retrieves the details of a specific NTP symmetric authentication key by numeric identifier or index (ID).
        ### Related ONTAP commands
        * `cluster time-service ntp key show`
        ### Learn more
        * [`DOC /cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
      operationId: cluster_ntp_keys_get
      parameters:
      - description: Key identifier
        in: path
        name: id
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ntp_key'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |
        Updates the details of a specific NTP symmetric authentication key by numeric
        identifier or index (ID).
        ### Required properties
        * `digest_type` - Shared private key cryptographic hash type.
        * `value` - Value of shared private key.
        ### Related ONTAP commands
        * `cluster time-service ntp key modify`
        ### Learn more
        * [`DOC /cluster/ntp/keys`](#docs-cluster-cluster_ntp_keys)
      operationId: cluster_ntp_keys_modify
      parameters:
      - description: Key identifier
        in: path
        name: id
        required: true
        type: integer
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ntp_key'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2097187 | An invalid SHA1 key was provided. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/ntp/servers:
    get:
      description: |
        Retrieves the collection of external NTP time servers ONTAP uses for time adjustment and correction.
        ### Related ONTAP commands
        * `cluster time-service ntp server show`
        ### Learn more
        * [`DOC /cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
      operationId: cluster_ntp_servers_collection_get
      parameters:
      - description: Filter by version
        in: query
        name: version
        type: string
      - description: Filter by key.id
        in: query
        name: key.id
        type: integer
      - description: Filter by server
        in: query
        name: server
        type: string
      - description: Filter by authentication_enabled
        in: query
        name: authentication_enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ntp_server_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |
        Validates the provided external NTP time server for usage and configures ONTAP so that all nodes in the cluster use it.
        The required fields are:
        * `server`
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `version` - auto
        * `key` - not set
        ###
        If the key is provided in POST, `authentication_enabled` is set to `true` by default.
        ### Related ONTAP commands
        * `cluster time-service ntp server create`
        ### Learn more
        * [`DOC /cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
      operationId: cluster_ntp_servers_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ntp_server'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2097163 | NTP server IPv4 address was invalid. |
            | 2097164 | NTP server IPv6 address was invalid. |
            | 2097165 | Cannot resolve NTP server name. |
            | 2097166 | NTP server address query returned no valid IP addresses. |
            | 2097167 | Failed to connect to NTP server. |
            | 2097169 | NTP server provided was not synchronized with a clock or another NTP server. |
            | 2097174 | NTP server provided had too high of root distance. |
            | 2097177 | NTP server provided an invalid stratum. |
            | 2097179 | Too many NTP servers have been configured. |
            | 2097181 | NTP server address was invalid. It is a special purpose address such as loopback, multicast, or broadcast address. |
            | 2097182 | NTP server address was invalid. The address is neither an IPv4 or IPv6. |
            | 2097183 | NTP symmetric key authentication cannot be used for a node not in a cluster. |
            | 2097185 | NTP key authentication failed for the provided key. |
            | 2097193 | An unknown NTP key was provided. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can use this API to add external NTP servers to a cluster, update the configuration, use NTP keys, and retrieve the
        current NTP server configuration.
        ## Adding an NTP server to a cluster
        To add an NTP server to a cluster, issue a POST /cluster/ntp/servers request.
        ### Fields used for adding an NTP server
        Except for the name of the NTP server (host name or IP address), which is specified by the server, all fields are optional:
        * `version`
        * `key`
        ###
        If the key is provided in POST, `authentication_enabled` is set to `true` by default.
        ## Examples
        ### Adding an NTP server
        ```
        # Body
        body =
        {
          "server": "time.nist.gov"
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster/ntp/servers" -d body
        ```
        ---
        ### Adding an NTP server with an authentication key
        ```
        # Body
        body =
        {
          "server": "time.nist.gov",
          "key": { "id": 10 }
        }
        # Request
        curl -X POST "https://<mgmt-ip>/api/cluster/ntp/servers" -d body
        ```
        ---
        ### Enabling a previously configured shared key (ID, type, and value) for an NTP server
        A combination of key number or identifier (ID), type of key, and shared key value is created with /api/cluster/ntp/keys.
        This operation will validate the NTP authentication works.
        ```
        # Body
        body =
        {
          "key": { "id": 10 },
          "authentication_enabled": true
        }
        # Request
        curl -X PATCH "https://<mgmt-ip>/api/cluster/ntp/servers/time.nist.gov" -d body
        ```
        ---
      tags:
      - cluster
  /cluster/ntp/servers/{server}:
    delete:
      description: |
        Deletes an external NTP server used by ONTAP.
        ### Related ONTAP commands
        * `cluster time-service ntp server delete`
        ### Learn more
        * [`DOC /cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
      operationId: cluster_ntp_servers_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Server address or host name
        in: path
        name: server
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |
        Retrieves the configuration of an external NTP server used by ONTAP.
        ### Related ONTAP commands
        * `cluster time-service ntp server show`
        ### Learn more
        * [`DOC /cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
      operationId: cluster_ntp_servers_get
      parameters:
      - description: NTP server host name, IPv4, or IPv6 address.
        in: path
        name: server
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ntp_server'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |
        Updates the configuration of an NTP server used by the ONTAP cluster after validation.
        Patchable fields are:
        * `version`
        * `key.id`
        * `authentication_enabled`
        </br>
        If `authentication_enabled` is modified to `false`, the associated NTP key is removed from the server instance.
        If `authentication_enabled` is modified to `true`, you must provide an NTP key ID in the PATCH body.
        ### Related ONTAP commands
        * `cluster time-service ntp server modify`
        ### Learn more
        * [`DOC /cluster/ntp/servers`](#docs-cluster-cluster_ntp_servers)
      operationId: cluster_ntp_servers_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Server address or host name
        in: path
        name: server
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ntp_server'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2097163 | NTP server address was invalid. |
            | 2097164 | NTP server address was invalid. |
            | 2097165 | Could not resolve NTP server hostname. |
            | 2097166 | NTP server address query returned no valid IP addresses. |
            | 2097167 | Failed to connect to NTP server. |
            | 2097169 | NTP server provided was not synchronized. |
            | 2097174 | NTP server provided had too high of root distance. |
            | 2097177 | NTP server provided had an invalid stratum. |
            | 2097181 | NTP server address was invalid. |
            | 2097182 | NTP server address was invalid. |
            | 2097183 | NTP symmetric key authentication cannot be used for a node not in a cluster. |
            | 2097185 | NTP key authentication failed for the provided key. |
            | 2097188 | An invalid key identifier was provided. Identifiers must be in the range from 1 to 65535. |
            | 2097193 | An unknown key was provided. |
            | 2097194 | The field \"authentication_enabled\" cannot be false when the field NTP key is given. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/peers:
    get:
      description: |-
        Retrieves the collection of cluster peers.
        ### Learn more
        * [`DOC /cluster/peers`](#docs-cluster-cluster_peers)
      operationId: cluster_peer_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_peer_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |-
        Creates a peering relationship and, optionally, the IP interfaces it will use. There are two methods used to create a peering relationship:
        * Provide a remote IP address - Used when creating a new cluster peer relationship with a specific remote cluster. This requires at least one remote intercluster IP address from the remote cluster.
        * Do not provide a remote IP address - Used when the remote IP address is not provided and when the storage system is ready to accept peering requests from foreign clusters.
        ### Required properties
        * `remote.ip_addresses` - Addresses of the remote peers. The local peer must be able to reach and connect to these addresses for the request to succeed in creating a peer. Only required when creating a peering relationship by providing a remote IP address.
        * Either set `generate_passphrase` to "true" or provide a passphrase in the body of the request. Only one of these options is required.
        ### Recommended optional properties
        * `name` - Name of the peering relationship or name of the remote peer.
        * `passphrase` - User generated passphrase for use in authentication.
        * `generate_passphrase` (true/false) - When "true", ONTAP automatically generates a passphrase to authenticate cluster peers.
        * `ipspace` - IPspace of the local intercluster LIFs. Assumes Default IPspace if not provided.
        * `initial_allowed_svms` - Local SVMs allowed to peer with the peer cluster's SVMs. Can be modified until the remote cluster accepts this cluster peering relationship.
        * `local_network` - Fields to create a local intercluster LIF.
        * `expiry_time` - Duration in ISO 8601 format for which the user-supplied or auto-generated passphrase is valid. Expiration time must not be greater than seven days into the future. ISO 8601 duration format is "PnDTnHnMnS" or "PnW" where n is a positive integer. The "nD", "nH", "nM" and "nS" fields can be dropped if zero. "P" must always be present and "T" must be present if there are any hours, minutes, or seconds fields.
        * `encryption_proposed` (none/tls-psk) - Encryption mechanism of the communication channel between the two peers.
        * `peer_applications` - SVM peering applications (SnapMirror, FlexCache or both) for which the SVM peering relationship is set up.
        ### Additional information
        As with creating a cluster peer through the CLI, the combinations of options must be valid in order for the create operation to succeed. The following list shows the combinations that will succeed and those that will fail:
        * A passphrase only (fail)
        * A peer IP address (fail)
        * A passphrase with an expiration time > 7 days into the future (fail)
        * A peer IP address and a passphrase (OK)
        * generate_passphrase=true (OK)
        * Any proposed encryption protocol (OK)
        * An IPspace name or UUID (OK)
        * A passphrase, peer IP address, and any proposed encryption protocol (OK)
        * A non empty list of initial allowed SVM peer names or UUIDs. (OK)

        ### Learn more
        * [`DOC /cluster/peers`](#docs-cluster-cluster_peers)
      operationId: cluster_peer_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_peer'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/cluster_peer_setup_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966366 | The system SVM of the cluster IPspace hosts cluster LIFs only. |
            | 4653365 | IPspaces are unavailable with cluster peering: {ipspace}. |
            | 4656069 | Specifying a passphrase without remote IP addresses is not supported. |
            | 4656070 | The encryption protocol is meaningful only with authenticated cluster peer relationships. |
            | 4656071 | Cannot peer with a cluster bearing the same name as the local cluster. |
            | 4656072 | The name must conform to the same rules as a cluster name. |
            | 4656074 | Cannot check whether all nodes of this cluster support encryption. |
            | 4656075 | Cannot specify encryption: this operation requires an ECV of 9.6.0 or later. |
            | 4656077 | Specify either remote IP addresses or generate_passphrase. |
            | 4656079 | No cluster nodes were found. Check your cluster configuration. |
            | 4656081 | Creating an intercluster LIF requires a list of local IP addresses. |
            | 4656085 | Cannot create an intercluster LIF with an empty list of local IP addresses. |
            | 4656086 | Creating an intercluster LIF requires a broadcast domain that is in use within the IPspace. |
            | 4656087 | The number of local intercluster IP addresses must be less than or equal to the number of available nodes. |
            | 4656088 | Found no ports matching the IPspace and the broadcast domain. |
            | 4656089 | Found no matching entry for IPspace. |
            | 4656090 | The given IPspace differs from the IPspace entry found. |
            | 4656091 | Creating an intercluster LIF requires a subnet mask or a subnet mask length. |
            | 4656096 | Creating an intercluster LIF requires an IPv4 or IPv6 address of the default router. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ##  Overview
        Cluster peering allows administrators of ONTAP systems to establish relationships between two or more independent clusters. When a relationship exists between two clusters, the clusters can exchange user data and configuration information, and coordinate operations. The /cluster/peers endpoint supports create, get, modify, and delete operations using GET, PATCH, POST and DELETE HTTP requests.
        ## Create a cluster peer
        You can set up a new cluster peer relationship by issuing a POST request to /cluster/peers. Parameters in the POST body define the settings of the peering relationship. A successful POST request that succeeds in creating a peer returns HTTP status code "201", along with the details of the created peer, such as peer UUID, name, and authentication information. A failed POST request returns an HTTP error code along with a message indicating the reason for the error. This can include malformed requests and invalid operations.
        ### Sample request
        ```
        curl -X POST 'https://<mgmt-ip>/api/cluster/peers/' -d '{"authentication":{"expiry_time":"12/25/2018 12:34:56","generate_passphrase":true}}'
        ```
        ### Examples
        ```
        # Create - no params
        body = {}
        # Creating with a peer address and a passphrase
        body =
        {
            "remote":
              {
                  "ip_addresses":["1.2.3.4"]
              }
        }
        # Creating with a peer name and a generated passphrase that is true
        body =
        {
            "name":"cp_xyz123",
            "authentication":
              {
                  "generate_passphrase":true
              }
        }
        # Creating with a name, a peer address, and a passphrase
        body =
        {
            "name":"cp_xyz123",
            "remote":
              {
                  "ip_addresses": ["1.2.3.4"]
              },
            "authentication":
              {
                  "passphrase":"xyz12345"
              }
         }
        # Creating with a proposed encryption protocol
        body =
        {
            "encryption":
              {
                  "proposed":"tls-psk"
              }
        }
        ```
        ---
        ## Create local intercluster LIFs
        The local cluster must have an intercluster LIF on each node for the correct operation of cluster peering.
        If no local intercluster LIFs exist, you can optionally specify LIFs to be created for each node in the local cluster.
        These local interfaces, if specified, are created on each node before proceeding with the creation of the cluster peering relationship. Cluster peering relationships are not established if there is an error preventing the LIFs from being created.
        After local interfaces have been created, do not specify them for subsequent cluster peering relationships.
        ### Local LIF creation fields
        * local_network.ip_addresses - List of IP addresses to assign, one per node in the local cluster.
        * local_network.netmask - IPv4 mask or subnet mask length.
        * local_network.broadcast_domain - Broadcast domain that is in use within the IPspace.
        * local_network.gateway - The IPv4 or IPv6 address of the default router.
        ### Additional information on network routes
        When creating LIFs, the network route discovery mechanism might take additional time (1-5 seconds) to become visible in the network outside of the cluster. This delay in publishing the routes might cause an initial cluster peer "create" request to fail. This error disappears with a retry of the same request.
        ### Example
        ```
        curl -X POST "https://<mgmt-ip>/api/cluster/peers" -d body
        ```
        Note that "<mgmt-ip>" is replaced by the IP address of the cluster management LIF, and "body" is replaced by the JSON body of the POST request containing the fields for the new peering relationship and local LIFs.
        ### Example POST body
        This example shows the POST body when creating four intercluster LIFs on a 4-node cluster before creating a cluster peer relationship.
        ```
        {
            "local_network":
            {
                "interfaces": [
                    {"ip_address":"1.2.3.4"},
                    {"ip_address":"1.2.3.5"},
                    {"ip_address":"1.2.3.6"}
                    ],
                "netmask": "255.255.0.0",
                "broadcast_domain": "Default",
                "gateway": "1.2.0.1"
            }
            "remote.ip_addresses": ["1.2.9.9"],
            "authentication.passphrase": "xyz12345"
        }
        ```
        ---
        ## Retrieve a cluster peer
        You can retrieve peers in a cluster by issuing a GET request to /cluster/peers. It is also possible to retrieve a specific peer when qualified by its UUID to /cluster/peers/{uuid}.
        A GET request might have no query parameters or a valid cluster UUID. The former retrieves all records while the latter retrieves the record for the cluster peer with that UUID.
        The following fields are used for retrieving a cluster peer.
        ### Required fields
        There are no required fields for GET requests.
        ### Optional fields
        The following fields are optional for GET requests
        * UUID - UUID of the cluster peer.
        ### Examples
        ```
        curl -X GET "https://<mgmt-ip>/api/cluster/peers/"
        curl -X GET "https://<mgmt-ip>/api/cluster/peers/{uuid}"
        curl -X GET "https://<mgmt-ip>/api/cluster/peers/{uuid}?fields=*"
        ```
        ---
        ## Update a cluster peer
        You can update a cluster peer relationship by issuing a PATCH request to /cluster/peers/{uuid}. As in the CLI mode, you can toggle the proposed encryption protocol, update the passphrase, or specify a new set of stable addresses.  All PATCH requests take the parameters that are to be updated in the request body. If the generate_passphrase is "true", the passphrase is returned in the PATCH response.
        This following fields highlight the parameters that control the modification of an existing cluster peering relationship.
        ### Required fields
        A PATCH request with an empty body has no effect on the cluster peer instance. All other fields and the combinations in which they are valid are indicated below:
        * `encryption_proposed` - Toggle the proposed encryption protocol (from "none" to "tls-psk" or otherwise). Authentication must be "true" and a passphrase must be present in body.
        * `passphrase`
        * `passphrase` or `generate passphrase`
        * `remote.ip_addresses`
        ### Optional fields
        * `expiration time` - Set the expiration time of the passphrase.
        ### Examples
        ```
        # Updating with an empty body
        body = {}
        # Updating the proposed encryption protocol from tls-psk to none
        body =
        {
            "authentication":
              {
                  "passphrase":"xyz12345",
                  "in_use":"ok"
              },
            "encryption":
              {
                  "proposed":"none"
              }
        }
        # Updating the passphrase
        body =
        {
            "authentication":
             {
                 "passphrase":"xyz12345",
                 "in_use":"ok"
             }
        }
        # Setting an auto-generated passphrase
        body =
        {
            "authentication":
             {
                 "generate_passphrase": true,
                 "in_use":"ok"
             }
        }
        # Updating remote IP addresses
        body =
        {
            "remote":
              {
                  "ip_addresses":["10.224.65.30"]
              }
        }
        ```
        ### Sample requests
        ```
        # Setting a passphrase
        curl -X PATCH 'https://<mgmt-ip>/api/cluster/peers/73123071-d0b9-11e8-a686-005056a7179a' -d '{"authentication":{"passphrase":"xyz12345","in_use":"ok"}}'
        # Updating a peer address
        curl -X PATCH 'https://<mgmt-ip>/api/cluster/peers/73123071-d0b9-11e8-a686-005056a7179a' -d '{"remote":{"ip_addresses":["1.2.3.4"]}}'
        ```
        ---
        ## Delete a cluster peer
        You can delete a cluster peer using the HTTP DELETE request.
        ### Required fields
        Perform all delete operations on a valid peer UUID. Deleting an invalid peer returns "HTTP 404", which indicates an error.
        ### Optional fields
        The DELETE operation has no optional fields.
        ### Request format
        DELETE "https://<mgmt-ip>/api/cluster/peers/{uuid}"
        ### Example
        The following request deletes a peer with peer UUID "8becc0d4-c12c-11e8-9ceb-005056bbd143".
        ```
        curl -X DELETE "https://<mgmt-ip>/api/cluster/peers/8becc0d4-c12c-11e8-9ceb-005056bbd143"
        ```
      tags:
      - cluster
  /cluster/peers/{uuid}:
    delete:
      description: |-
        Deletes a cluster peer.
        ### Learn more
        * [`DOC /cluster/peers`](#docs-cluster-cluster_peers)
      operationId: cluster_peer_delete
      parameters:
      - description: Cluster peer relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4663070 | Unable to delete cluster peer relationship due to an ongoing Vserver migration. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |-
        Retrieves a specific cluster peer instance.
        ### Learn more
        * [`DOC /cluster/peers`](#docs-cluster-cluster_peers)
      operationId: cluster_peer_get
      parameters:
      - description: Cluster peer relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_peer'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |-
        Updates a cluster peer instance.
        ### Learn more
        * [`DOC /cluster/peers`](#docs-cluster-cluster_peers)
      operationId: cluster_peer_modify
      parameters:
      - description: Cluster peer relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_peer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_peer_setup_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4653261 | Error finding IPspace. |
            | 4655058 | Expiration time cannot be more than 7 days in the future. |
            | 4656070 | The encryption protocol is meaningful only with authenticated cluster peer relationships. |
            | 4656072 | The name must conform to the same rules as a cluster name. |
            | 4656073 | Changing the encryption state requires the refreshing of the authentication passphrase. |
            | 4656075 | Cannot specify encryption: this operation requires an ECV of ONTAP 9.6.0 or later. |
            | 4656076 | Cluster peer modify was attempted with mismatched IPv4 and IPv6 addresses. |
            | 4656081 | The remote IP address list is empty. |
            | 4656082 | Specify either a passphrase or \"-generate-passphrase\". |
            | 4656083 | Cannot auto-generate a passphrase when \"generate-passphrase\" is false. Modifying a passphrase using an auto-generated passphrase requires \"generate-passphrase\" be true. |
            | 4656084 | Passphrase can only be modified with an authenticated cluster peer relationship. |
            | 4656092 | Cluster peer modify was attempted with a host name that did not resolve to an IPv4 or IPv6 address. |
            | 4656095 | The address family of the specified peer addresses is not valid in this IPspace. Use /api/network/interfaces/ to verify that required LIFs are present and operational on each cluster node. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/schedules:
    get:
      description: |-
        Retrieves a schedule.
        ### Learn more
        * [`DOC /cluster/schedules`](#docs-cluster-cluster_schedules)
      operationId: schedule_collection_get
      parameters:
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by cron.hours
        in: query
        name: cron.hours
        type: integer
      - description: Filter by cron.days
        in: query
        name: cron.days
        type: integer
      - description: Filter by cron.weekdays
        in: query
        name: cron.weekdays
        type: integer
      - description: Filter by cron.minutes
        in: query
        name: cron.minutes
        type: integer
      - description: Filter by cron.months
        in: query
        name: cron.months
        type: integer
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by interval
        in: query
        name: interval
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/schedule_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 459760 | The schedule specified is not a valid schedule. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |-
        Creates a schedule.
        ### Required Fields
        * name - Name of the job schedule.
        You must provide a minutes field for a cron schedule and an interval field for an interval schedule. Do not provide both a cron field and an interval field.

        ### Learn more
        * [`DOC /cluster/schedules`](#docs-cluster-cluster_schedules)
      operationId: schedule_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/schedule'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 458788 | The schedule specified is not a valid schedule. |
            | 459760 | The schedule specified is not a valid schedule. |
            | 459763 | Schedule cannot be created locally using the remote cluster name as the owner. |
            | 459764 | Cannot create a schedule with the same name as an existing schedule from the MetroCluster partner cluster but of a different schedule type. |
            | 460783 | As this is a MetroCluster configuration and the local cluster is waiting for switchback, changes to non-system schedules are not allowed. |
            | 460784 | An error occurred creating the remote cluster version of this schedule. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can  use the /cluster/schedules API to view, create, and modify job schedules in a cluster.
        ## Retrieving a job schedule
        You can retrieve job schedules by issuing a GET request to /cluster/schedules. It is also possible to retrieve a specific schedule when qualified by its UUID to /cluster/schedules/{uuid}. You can apply queries on fields to retrieve all schedules that match the combined query.
        ### Example
        ```
        # The API:
        /api/cluster/schedules/
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/cluster/schedules?type=interval'
        # The response:
        {
          "records": [
            {
              "uuid": "08ceae53-0158-11e9-a82c-005056bb4301",
              "name": "RepositoryBalanceMonitorJobSchedule",
              "type": "interval",
              "interval": "PT10M",
              "_links": {
                "self": {
                  "href": "/api/cluster/schedules/08ceae53-0158-11e9-a82c-005056bb4301"
                }
              }
            },
            {
              "uuid": "0941e980-0158-11e9-a82c-005056bb4301",
              "name": "Balanced Placement Model Cache Update",
              "type": "interval",
              "interval": "PT7M30S",
              "_links": {
                "self": {
                  "href": "/api/cluster/schedules/0941e980-0158-11e9-a82c-005056bb4301"
                }
              }
            },
            {
              "uuid": "0944b975-0158-11e9-a82c-005056bb4301",
              "name": "Auto Balance Aggregate Scheduler",
              "type": "interval",
              "interval": "PT1H",
              "_links": {
                "self": {
                  "href": "/api/cluster/schedules/0944b975-0158-11e9-a82c-005056bb4301"
                }
              }
            },
            {
              "uuid": "0c65f1fb-0158-11e9-a82c-005056bb4301",
              "name": "Application Templates ASUP Dump",
              "type": "interval",
              "interval": "P1D",
              "_links": {
                "self": {
                  "href": "/api/cluster/schedules/0c65f1fb-0158-11e9-a82c-005056bb4301"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/cluster/schedules?type=interval"
            }
          }
        }
        ```
        ```
        # The API:
        /api/cluster/schedules/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/cluster/schedules/25312bd8-0158-11e9-a82c-005056bb4301'
        # The response:
        {
          "uuid": "25312bd8-0158-11e9-a82c-005056bb4301",
          "name": "monthly",
          "cluster": {
            "name": "rodan-tsundere",
            "uuid": "f3f9bbfa-0157-11e9-a82c-005056bb4301"
          },
          "type": "cron",
          "cron": {
            "minutes": [
              20
            ],
            "hours": [
              0
            ],
            "days": [
              1
            ]
          },
          "_links": {
            "self": {
              "href": "/api/cluster/schedules/25312bd8-0158-11e9-a82c-005056bb4301"
            }
          }
        }
        ```
        ---
        ## Creating a job schedule
        You can create a job schedule by issuing a POST request to /cluster/schedules to a node in the cluster. For a successful request, the POST request returns a status code of 201.
        Job schedules can be of either type "cron" or type "interval". A cron schedule is run at specific minutes within the hour, or hours of the day, days of the week, days of the month, or months of the year. An interval schedule runs repeatedly at fixed intervals.
        ### Required fields
        * name - Name of the job schedule
        You are required to provide a "minutes" field for a cron schedule. An "interval" field is required for an interval schedule. Do not provide both a "cron" field and an "interval" field.
        The schedule UUID is created by the system.
        ### Cron schedule fields
        * cron.minutes - Minutes within the hour (0 through 59)
        * cron.hours -  Hours of the day (0 through 23)
        * cron.weekdays - Weekdays (0 through 6, where 0 is Sunday and 6 is Saturday.)
        * cron.days - Days of the month (1 through 31)
        * cron.months - Months of the year (1 through 12)
        ### Interval schedule field
        * interval - Length of time in ISO 8601 duration format.
        ### Example
        ```
        # The API:
        /api/cluster/schedules
        # The call:
        curl -X POST "https://<mgmt-ip>/api/cluster/schedules" -d body
        # The response of a successful POST is empty.
        Example body to create an interval schedule with a 1-week interval:
        {
            "name": "test_interval_1",
            "interval": "P1W"
        }
        Example body to create a cron schedule that runs daily at 12:05 :
        {
            "name": "test_cron_1",
            "cron":
            {
                "minutes": [ 5 ],
                "hours": [ 12 ]
            }
        }
        ```
        ### Optional fields
        By default, the schedule is owned by the local cluster. In a MetroCluster configuration, you can specify the partner cluster if the local cluster is in the switchover state.
        * cluster.name - Name of the cluster owning the schedule.
        * cluster.uuid - UUID of the cluster owning the schedule.
        ### Records field
        You can create multiple schedules in one request by providing an array of named records with schedule entries. Each entry must follow the required and optional fields listed above.
        <br/>
        ---
        ## Updating a job schedule
        The following fields of an existing schedule can be modified:
        * cron.minutes
        * cron.hours
        * cron.weekdays
        * cron.days
        * cron.months
        * interval
        Note that you cannot modify the name, cluster, and type of schedule. Also, you cannot modify a cron field of an interval schedule, or the interval field of a cron schedule. You can apply queries on fields to modify all schedules that match the combined query.
        ### Example
        ```
        # The API:
        /api/cluster/schedules/{uuid}
        # The call:
        curl  -X PATCH "https://<mgmt-ip>/api/cluster/schedules/{uuid}" -d body
        # The response of a sucessful PATCH is empty.
        Example body to modify an interval schedule with a 2-day and 5-minute interval:
        {
            "interval": "P2DT5M"
        }
        Example body to modify a cron schedule to run Mondays at 2:
        {
            "cron":
            {
                "hours": [ 2 ],
                "weekdays": [ 1 ]
            }
        }
        ```
        ---
        ## Deleting a job schedule
        You can delete job schedules based on their UUID. You can apply queries on fields to delete all schedules that match the combined query.
        ### Example
        ```
        # The API:
        /api/cluster/schedules/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/cluster/schedules/{uuid}"
        # The response of a successful DELETE of one schedule is empty.
        ```
        ```
        # The API:
        /api/cluster/schedules/
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/cluster/schedules/?name=test*"
        # The response of a successful DELETE indicates the number of schedules affected:
        {
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/cluster/schedules?name=test*"
            }
          }
        }
        ```
        ---
        ## MetroCluster configurations
        In a MetroCluster configuration, user-created schedules owned by the local cluster are replicated to the partner cluster. Likewise, user-created schedules owned by the partner cluster are replicated to the local cluster. The owning cluster for a particular schedule is shown in the "cluster.name" and "cluster.uuid" fields.
        Normally, only schedules owned by the local cluster can be created, modified, and deleted on the local cluster. However, when a MetroCluster configuration is in switchover, the cluster in switchover state can create, modify, and delete schedules owned by the partner cluster.
      tags:
      - cluster
  /cluster/schedules/{uuid}:
    delete:
      description: |-
        Deletes a schedule.
        ### Learn more
        * [`DOC /cluster/schedules`](#docs-cluster-cluster_schedules)
      operationId: schedule_delete
      parameters:
      - description: Schedule UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 459758 | Cannot delete a job schedule that is in use. Remove all references to the schedule, and then try to delete again. |
            | 459761 | Schedule cannot be deleted on this cluster because it is replicated from the remote cluster. |
            | 459762 | The schedule cannot be deleted because it is a system-level schedule. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |-
        Retrieves a schedule.
        ### Learn more
        * [`DOC /cluster/schedules`](#docs-cluster-cluster_schedules)
      operationId: schedule_get
      parameters:
      - description: Schedule UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/schedule'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |-
        Updates a schedule. Note that you cannot modify a cron field of an interval schedule, or the interval field of a cron schedule.
        ### Learn more
        * [`DOC /cluster/schedules`](#docs-cluster-cluster_schedules)
      operationId: schedule_modify
      parameters:
      - description: Schedule UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/schedule'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 458788 | The schedule specified is not a valid schedule. |
            | 459760 | The schedule specified is not a valid schedule. |
            | 459761 | Schedule cannot be modified on this cluster because it is replicated from the remote cluster. |
            | 460783 | As this is a MetroCluster configuration and the local cluster is waiting for switchback, changes to non-system schedules are not allowed. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/software:
    get:
      description: |
        Retrieves the software profile of a cluster.
        ### Related ONTAP commands
        * `cluster image show`
        * `cluster image show-update-progress`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_reference'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    patch:
      description: |
        Updates the cluster software version.
        Important note:
          * Setting 'version' triggers the package installation.
          * To validate the package for installation but not perform the installation, use the `validate_only` field on the request.
        ### Required properties
        * `version` - Software version to be installed on the cluster.
        ### Recommended optional parameters
        * `validate_only` - Required to validate a software package before an upgrade.
        * `skip_warnings` - Used to skip validation warnings when starting a software upgrade.
        * `action` - Used to pause, resume, or cancel an ongoing software upgrade.
        ### Related ONTAP commands
        * `cluster image validate`
        * `cluster image update`
        * `cluster image pause-update`
        * `cluster image resume-update`
        * `cluster image cancel-update`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/validate_only_param'
      - description: Ignore warnings and proceed with the install.
        in: query
        name: skip_warnings
        type: boolean
      - description: |
          Requests an upgrade to pause, resume, or cancel.
          Note that not all upgrades support these actions. An upgrade can only be resumed if it is in the paused state. When a request to cancel an upgrade is successful, the upgrade state changes to either `success` or `failure`.
        enum:
        - pause
        - resume
        - cancel
        in: query
        name: action
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/software_reference'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    x-ntap-long-description:
      description: |
        ## Overview
        You can use the ONTAP cluster software API to retrieve and display relevant information about a software profile, software packages collection, and software history collection. This API retrieves the information about all software packages present in the cluster, or a specific software package.
        <br/>You can use the POST request to download a software package from an HTTP or FTP server. The PATCH request provides the option to upgrade the cluster software version. Select the `validate_only` field to validate the package before triggering the update. Set the `version` field to trigger the installation of the package in the cluster. You can pause, resume, or cancel any ongoing software upgrade by selecting `action`. You can use the DELETE request to remove a specific software package present in the cluster.
        ---
        ## Examples
        ### Retrieving software profile information
        The following example shows how to retrieve software profile information. You can check the validation results after selecting the `validate_only` field. Upgrade progress information is available after an upgrade has started.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software?return_timeout=15" -H "accept: application/hal+json"
        # The response:
        {
          "validation_results": [
           {
             "update_check": "NFS mounts",
             "status": "warning",
             "issue": {
                 "code": 166,
                 "message": "Use NFS hard mounts, if possible.",
               }
             ,
             "action": {
                 "code": 166,
                 "message": "Use NFS hard mounts, if possible.",
             }
           }
          ],
          "version": "9.5.0",
          "pending_version": "9.6.0",
          "nodes": [
            {
              "node": "sti70-vsim-ucs165n",
              "version": "9.5.0"
            }
          ],
          "metrocluster": {
            "progress_summary": {
                    "message": "Update paused by user"
             },
            "progress_details": {
                    "message": "Installing software image on cluster \"sti70-vsim-ucs165n_siteA\"."
             },
            "clusters": [
              {
                "name": "sti70-vsim-ucs165n_siteA",
                "uuid": "720f046c-4b13-11e9-9c34-005056ac5626",
                "estimated_duration": 3480,
                "elapsed_duration": 0,
                "state": "waiting"
              },
            ]
          },
          "state": "in_progress",
          "start_time": "2018-05-21T09:53:04+05:30",
          "end_time": "2018-05-21T11:53:04+05:30",
          "estimated_time": 5220,
          "elapsed_time": 2140,
          "update_details": [
            {
              "phase": "Data ONTAP updates",
              "state": "in_progress",
              "estimated_duration": 4620,
              "elapsed_duration": 29,
              "node": {
                "name": "sti70-vsim-ucs165n"
              }
            }
          ],
          "status_details": [
            {
              "name": "do-download-job",
              "state": "completed",
              "issue": {
                      "message": "Image update complete"
               },
              "start_time": "2018-05-21T09:53:04+05:30",
              "end_time": "2018-05-21T11:53:04+05:30",
              "node": {
                "name": "sti70-vsim-ucs165n"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/cluster/software/"
            }
          }
        }
        ```
        ---
        ### Upgrading the software version
        The following example shows how to upgrade cluster software. Set the `version` field to trigger the installation of the package. You can select the `validate_only` field to validate the package before the installation starts. Setting `skip_warning` as `true` ignores the validation warning before the installation starts. Setting the `action` field performs a `pause`, `resume`, or `cancel' operation on an ongoing upgrade. An upgrade can only be resumed if it is in the paused state.
        <br/>You can start the upgrade process at the cluster level. There are no options available to start the upgrade for a specific node or HA pair.
        #### 1. Validating the package and verifying the validation results
        The following example shows how to validate a cluster software package. You must validate the package before the software upgrade. Set the `validate_only` field to `true` to start the validation. You can check for validation results in the GET /cluster/software endpoint.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X PATCH "https://<mgmt_ip>/api/cluster/software?validate_only=true" -H "accept: application/json" -H "Content-Type: application/hal+json" -d '{ "version": "9.5.0"}'
        # The response:
        {
          "job": {
            "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
              }
            }
          }
        }
        ```
        ---
        The call to validate the software cluster version returns the job UUID, including a HAL link to retrieve details about the job. The job object includes a `state` field and a message to indicate the progress of the job. When the job is complete and the application is fully created, the message indicates success and the `state` field of the job is set to `success`.
        <br/>
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
          "description": "PATCH /api/cluster/software",
          "state": "success",
          "message": "success",
          "code": 0,
          "_links": {
            "self": {
              "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
            }
          }
        }
        ```
        ---
        You can check for validation results in the GET /cluster/software endpoint. The following example shows how to check the validation warnings and errors after setting the `validate_only` field to `true`.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software" -H "accept: application/hal+json"
        # The response:
        {
          "version": "9.7.0",
          "validation_results": [
            {
              "update_check": "High Availability status",
              "status": "error",
              "issue": {
                "message": "Cluster HA is not configured in the cluster. Storage failover is not enabled on node \"node1\", \"node2\".",
              },
              "action": {
                "message": "Check cluster HA configuration. Check storage failover status."
              }
            },
            {
              "update_check": "Manual checks",
              "status": "warning",
              "issue" : {
                "message": "Manual validation checks need to be performed. Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update. Failing to do so can result in an update failure or an I/O disruption."
              },
              "action": {
                "message": "Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update."
              }
            }
          ],
          "nodes": [
            {
              "node": "node1",
              "version": "9.7.0"
            },
            {
              "node": "node2",
              "version": "9.7.0"
            }
          ],
          "state": "failed",
          "elapsed_duration": 56,
          "estimated_duration": 600,
          "_links": {
            "self": {
              "href": "/api/cluster/software"
            }
          }
        }
        ```
        ---
        #### 2. Updating the cluster
        The following example shows how to initiate a cluster software upgrade. You must validate the package before the software upgrade starts. Set the `skip_warnings` field to `true` to skip validation warnings and start the software package upgrade.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X PATCH "https://<mgmt_ip>/api/cluster/software?skip_warnings=true" -H "accept: application/json" -H "Content-Type: application/hal+json" -d '{ "version": "9.5.0"}'
        # The response:
        {
          "job": {
            "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
              }
            }
          }
        }
        ```
        ---
        The call to update the software cluster version returns the job UUID, including a HAL link to retrieve details about the job. The job object includes a `state` field and a message to indicate the progress of the job. When the job is complete and the application is fully created, the message indicates success and the `state` field of the job is set to `success`.
        <br/>
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
          "description": "PATCH /api/cluster/software",
          "state": "success",
          "message": "success",
          "code": 0,
          "_links": {
            "self": {
              "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
            }
          }
        }
        ```
        ---
        You can check the update progress information in the GET /cluster/software endpoint. The following example shows how to check the progress of an update after setting the `skip_warnings` field to `true`.      <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software" -H "accept: application/hal+json"
        # The response:
        {
          "version": "9.7.0",
          "validation_results": [
            {
              "update_check": "Manual checks",
              "status": "warning",
              "issue" : {
                "message": "Manual validation checks need to be performed. Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update. Failing to do so can result in an update failure or an I/O disruption."
              },
              "action": {
                "message": "Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update."
              }
            }
          ],
          "nodes": [
            {
              "node": "node1",
              "version": "9.7.0"
            },
            {
              "node": "node2",
              "version": "9.7.0"
            }
          ],
          "pending_version": "9.7.0",
          "state": "in_progress",
          "elapsed_duration": 63,
          "estimated_duration": 5220,
          "status_details": [
            {
              "name": "do-download-job",
              "status": "running",
              "issue": {
                      "message": "Installing software image."
               },
              "start_time": "2019-01-14T23:12:14+05:30",
              "end_time": "2019-01-14T23:12:14+05:30",
              "node": {
                "name": "node1"
              }
            },
            {
              "name": "do-download-job",
              "status": "running",
              "issue": {
                      "message": "Installing software image."
              },
              "start_time": "2019-01-14T23:12:14+05:30",
              "end_time": "2019-01-14T23:12:14+05:30",
              "node": {
                "name": "node2"
              }
            }
          ],
          "update_details": [
            {
              "phase": "Data ONTAP updates",
              "status": "in-progress",
              "estimated_duration": 4620,
              "elapsed_duration": 10,
              "node": {
                "name": "node1"
              }
            },
            {
              "phase": "Data ONTAP updates",
              "status": "in-progress",
              "estimated_duration": 4620,
              "elapsed_duration": 10,
              "node": {
                "name": "node2"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/cluster/software"
            }
          }
        }
        ```
        ---
        #### 3. Pausing/resuming/canceling the upgrade
        The following example shows how to `pause` an ongoing cluster software package upgrade. Set the `action` field to `pause`, `resume`, or `cancel` to pause, resume or cancel the upgrade respectively. Not all update operations support these actions. An update can only be resumed if it is in the paused state.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X PATCH "https://<mgmt_ip>/api/cluster/software?action=pause" -H "accept: application/json" -H "Content-Type: application/hal+json" -d '{ "version": "9.5.0"}'
        # The response:
        {
          "job": {
            "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
              }
            }
          }
        }
        ```
        ---
        The call to update the software cluster version returns the job UUID, including a HAL link to retrieve details about the job. The job object includes a `state` field and a message to indicate the progress of the job. When the job is complete and the application is fully created, the message indicates success and the `state` field of the job is set to `success`.
        <br/>
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
          "description": "PATCH /api/cluster/software",
          "state": "success",
          "message": "success",
          "code": 0,
          "_links": {
            "self": {
              "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
            }
          }
        }
        ```
        ---
        You can check the progress of the upgrade in the GET /cluster/software endpoint. The following example shows how to check the progress of the pause upgrade state after setting the `action` field to `pause`.
        <br/>
        ```
        # The API:
        /api/cluster/software
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software" -H "accept: application/hal+json"
        # The response:
        {
          "version": "9.7.0",
          "validation_results": [
            {
              "update_check": "Manual checks",
              "status": "warning",
              "issue" : {
                "message": "Manual validation checks need to be performed. Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update. Failing to do so can result in an update failure or an I/O disruption."
              },
              "action": {
                "message": "Refer to the Upgrade Advisor Plan or \"Performing manual checks before an automated cluster upgrade\" section in the \"Clustered Data ONTAP Upgrade Express Guide\" for the remaining validation checks that need to be performed before update."
              }
            }
          ],
          "nodes": [
            {
              "node": "node1",
              "version": "9.7.0"
            },
            {
              "node": "node2",
              "version": "9.7.0"
            }
          ],
          "pending_version": "9.7.0",
          "state": "pause_pending",
          "elapsed_duration": 103,
          "estimated_duration": 5220,
          "status_details": [
            {
              "status": "in-progress",
              "issue": {
                      "message": "Installing software image."
               },
              "start_time": "2019-01-08T02:54:36+05:30",
              "node": {
                "name": "node1"
              }
            },
            {
              "status": "in-progress",
              "issue": {
                      "message": "Installing software image."
               },
              "start_time": "2019-01-08T02:54:36+05:30",
              "node": {
                "name": "node2"
              }
            }
          ],
          "update_details": [
            {
              "phase": "Pre-update checks",
              "status": "completed",
              "estimated_duration": 600,
              "elapsed_duration": 54,
              "node": {
                "name": "node1"
              }
            },
            {
              "phase": "Data ONTAP updates",
              "status": "pause-pending",
              "estimated_duration": 4620,
              "elapsed_duration": 49,
              "node": {
                "name": "node2"
              }
            },
            {
              "phase": "Data ONTAP updates",
              "status": "pause-pending",
              "estimated_duration": 4620,
              "elapsed_duration": 49
            }
          ],
          "_links": {
            "self": {
              "href": "/api/cluster/software"
            }
          }
        }
        ```
        ---
        ### Downloading the software package
        The following example shows how to download the software package from an HTTP or FTP server. Provide the `url`, `username`, and `password`, if required, to start the download of the software package to the cluster.
        <br/>
        ```
        # The API:
        /api/cluster/software/download
        # The call:
        curl -X POST "https://<mgmt-ip>/api/cluster/software/download?return_timeout=0" -H "accept: application/json" -H "Content-Type: application/hal+json" -d '{ "url": "http://nbsweb.eng.btc.netapp.in/~suvadipd/99/image1.tgz", "username": "admin", "password": "*********"}'
        # The response:
        {
          "job": {
            "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
              }
            }
          }
        }
        ```
        ---
        The call to download the software package returns the job UUID, including a HAL link to retrieve details about the job. The job object includes a `state` field and a message to indicate the progress of the job. When the job is complete and the application is fully created, the message indicates success and the job `state` field is set to `success`.
        <br/>
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
          "description": "POST /api/cluster/software/download",
          "state": "success",
          "message": "success",
          "code": 0,
          "_links": {
            "self": {
              "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
            }
          }
        }
        ```
        ---
        ### Checking the progress of the software package being downloaded from an HTTP or FTP server
        The following example shows how to retrieve the progress status of the software package being
        downloaded from a HTTP or FTP server.
        <br/>
        ```
        # The API:
        /api/cluster/software/download
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software/download" -H "accept: application/hal+json"
        # The response:
        {
          "state": "running",
          "message": "Package download in progress",
          "code": 10551760,
          "_links": {
            "self": {
              "href": "/api/cluster/software/download"
            }
          }
        }
        ```
        ---
        ### Retrieving cluster software packages information
        The following example shows how to retrieve the ONTAP software packages in a cluster.
        <br/>
        ```
        # The API:
        /api/cluster/software/packages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software/packages?return_records=true&return_timeout=15" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "version": "9.7.0",
              "_links": {
                "self": {
                  "href": "/api/cluster/software/packages/9.7.0"
                }
              }
            },
            {
              "version": "9.5.0",
              "_links": {
                "self": {
                  "href": "/api/cluster/software/packages/9.5.0"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/cluster/software/packages"
            }
          }
        }
        ```
        ---
        The following example shows how to retrieve the details of a given cluster software package.
        <br/>
        ```
        # The API:
        /api/cluster/software/packages/{version}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software/packages/9.7.0" -H "accept: application/hal+json"
        # The response:
        {
          "version": "9.7.0",
          "create_time": "2018-05-21T10:06:59+05:30",
          "_links": {
            "self": {
              "href": "/api/cluster/software/packages/9.7.0"
            }
          }
        }
        ```
        ---
        ### Deleting a cluster software package
        The following example shows how to delete a package from the cluster. You need to provide the package version that you want to delete. The software package delete creates a job to perform the delete operation.
        <br/>
        ```
        # The API:
        /api/cluster/software/packages/{version}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/cluster/software/packages/9.6.0" -H "accept: application/hal+json"
        # The response:
        {
          "job": {
            "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
              }
            }
          }
        }
        ```
        ---
        The call to delete the package returns the job UUID, including a HAL link to retrieve details about the job. The job object includes a `state` field and a message to indicate the progress of the job. When the job is complete and the application is fully created, the message indicates success and the job `state` field is set to `success`.
        <br/>
        ```
        # The API:
        /api/cluster/jobs/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "f587d316-5feb-11e8-b0e0-005056956dfc",
          "description": "DELETE /api/cluster/software/packages/9.6.0",
          "state": "success",
          "message": "success",
          "code": 0,
          "_links": {
            "self": {
              "href": "/api/cluster/jobs/f587d316-5feb-11e8-b0e0-005056956dfc"
            }
          }
        }
        ```
        ---
        #### HTTPS error codes
        The following is a list of possible error codes that can be returned during a package delete operation.
        <br/>
        # ONTAP Error Response codes
        | Error codes |                     Description                          |
        | ----------- | -------------------------------------------------------- |
        | 10551315    | Package store is empty                                   |
        | 10551322    | Error in retrieving package cleanup status               |
        | 10551323    | Error in cleaning up package information on a node       |
        | 10551324    | Error in cleaning up package information on both nodes   |
        | 10551325    | Package does not exist on the system                     |
        | 10551326    | Error in deleting older package cleanup tasks            |
        | 10551346    | Package delete failed since a validation is in progress  |
        | 10551347    | Package delete failed since an update is in progress     |
        | 10551367    | A package synchronization is in progress                 |
        | 10551388    | Package delete operation timed out                       |
        ---
        ### Retrieving software installation history information
        The following example shows how to:
           - retrieve the software package installation history information.
           - display specific node level software installation history information.
           - provide all the attributes by default in response when the self referential link is not present.
        <br/>
        ```
        # The API:
        /api/cluster/software/history
        # The call:
        curl -X GET "https://<mgmt-ip>/api/cluster/software/history" -H "accept: application/hal+json"
        # The response:
        {
          "node": {
            "uuid": "58cd3a2b-af63-11e8-8b0d-0050568e7279",
            "name": "sti70-vsim-ucs165n",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/58cd3a2b-af63-11e8-8b0d-0050568e7279"
              }
            }
          },
          "start_time": "2018-09-03T16:18:46+05:30",
          "state": "successful"
          "from_version": "9.4.0",
          "to_version": "9.5.0",
          "end_time": "2018-05-21T10:14:51+05:30"
        }
        ```
        ---
      tags:
      - cluster
  /cluster/software/download:
    get:
      description: |
        Retrieves the software download status.
        ### Related ONTAP commands
        * `cluster image package check-download-progress`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_download_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_package_download_get'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    post:
      description: |
        Downloads a software package from the server.
        ### Required properties
        * `url` - URL location of the software package
        ### Recommended optional parameters
        * `username` - Username of HTTPS/FTP server
        * `password` - Password of HTTPS/FTP server
        ### Related ONTAP commands
        * `cluster image package get`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_package_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/software_package_download'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/software/history:
    get:
      description: |
        Retrieves the history details for software installation requests.
        ### Related ONTAP commands
        * `cluster image show-update-history`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_history_collection_get
      parameters:
      - description: Filter by to_version
        in: query
        name: to_version
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by start_time
        in: query
        name: start_time
        type: string
      - description: Filter by end_time
        in: query
        name: end_time
        type: string
      - description: Filter by from_version
        in: query
        name: from_version
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_history_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/software/packages:
    get:
      description: |
        Retrieves the software packages for a cluster.
        ### Related ONTAP commands
        * `cluster image package show-repository`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_packages_collection_get
      parameters:
      - description: Filter by version
        in: query
        name: version
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_package_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /cluster/software/packages/{version}:
    delete:
      description: |
        Deletes a software package from the cluster. The delete operation fails if the package is currently installed.
        ### Related ONTAP commands
        * `cluster image package delete`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_package_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - in: path
        name: version
        required: true
        type: string
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP error response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 10551315    | Package store is empty |
            | 10551322    | Error in retrieving package cleanup status |
            | 10551323    | Error in cleaning up package information on a node |
            | 10551324    | Error in cleaning up package information on multiple nodes |
            | 10551325    | Package does not exist on the system |
            | 10551326    | Error in deleting older package cleanup tasks. Clean up images from the store and retry |
            | 10551346    | Package delete failed since a validation is in progress |
            | 10551347    | Package delete failed since an update is in progress |
            | 10551367    | A package synchronization is in progress |
            | 10551388    | Package delete operation timed out |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
    get:
      description: |
        Retrieves the software package information.
        ### Related ONTAP commands
        * `cluster image package show-repository`
        ### Learn more
        * [`DOC /cluster/software`](#docs-cluster-cluster_software)
      operationId: software_package_get
      parameters:
      - in: path
        name: version
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_package'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - cluster
  /name-services/dns:
    get:
      description: |
        Retrieves the DNS configurations of all data SVMs.
        DNS configuration for the cluster is retrieved and managed via [`/api/cluster`](#docs-cluster-cluster).
        ### Related ONTAP commands
        * `vserver services name-service dns show`
        * `vserver services name-service dns check`
        ### Learn more
        * [`DOC /name-services/dns`](#docs-name-services-name-services_dns)
      operationId: dns_collection_get
      parameters:
      - description: Filter by domains
        in: query
        name: domains
        type: string
      - description: Filter by servers
        in: query
        name: servers
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dns_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    post:
      description: |-
        Creates DNS domain and server configurations for an SVM.<br/>
        ### Important notes
        - Each SVM can have only one DNS configuration.
        - The domain name and the servers fields cannot be empty.
        - IPv6 must be enabled if IPv6 family addresses are specified in the `servers` field.
        - Configuring more than one DNS server is recommended to avoid a single point of failure.
        - The DNS server specified using the `servers` field is validated during this operation.<br/>
        </br> The validation fails in the following scenarios:<br/>
        1. The server is not a DNS server.
        2. The server does not exist.
        3. The server is unreachable.<br/>

        ### Learn more
        * [`DOC /name-services/dns`](#docs-name-services-name-services_dns)
      operationId: dns_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/dns'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/dns_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name |
            | 8847360    | Only admin or data SVMs allowed |
            | 8847361    | Exceeded the maximum number of domains allowed. Maximum of six domains only |
            | 8847362    | Exceeded the maximum number of name servers allowed. Maximum of three name servers only |
            | 8847392    | Domain name cannot be an IP address |
            | 8847393    | Top level domain name is invalid |
            | 8847399    | One or more of the specified DNS servers do not exist or cannot be reached |
            | 8847394    | FQDN name violated the limitations |
            | 9240587    | FQDN name cannot be empty |
            | 9240588    | FQDN name is too long. Maximum supported length: 255 characters  |
            | 9240590    | FQDN name is reserved. Following names are reserved: "all", "local" and "localhost" |
            | 9240607    | One of the FQDN labels is too long. Maximum supported length: 63 characters |
            | 13434916   | The SVM is in the process of being created. Wait a few minutes, and then try the command again. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    x-ntap-long-description:
      description: |
        ## Overview
        Displays DNS information and controls the DNS subsytem. DNS domain name and DNS servers are required parameters.
        ## Retrieving DNS information
        The DNS GET endpoint retrieves all of the DNS configurations for data SVMs.
        DNS configuration for the cluster is retrieved via [`/api/cluster`](#docs-cluster-cluster).
        ## Examples
        ### Retrieving all of the fields for all of the DNS configurations
        ```
        # The API:
        /api/name-services/dns
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/dns?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "domains": [
                "domainA.example.com"
              ],
              "servers": [
                "10.10.10.10"
              ]
              "_links": {
                "self": {
                  "href": "/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1"
                }
              }
            },
            {
              "svm": {
                "uuid": "19076d35-6e27-11e8-b9b8-005056b41bd1",
                "name": "vs2"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19076d35-6e27-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "domains": [
                "sample.example.com"
              ],
              "servers": [
                "11.11.11.11",
                "22.22.22.22",
                "33.33.33.33"
              ]
              "_links": {
                "self": {
                  "href": "/api/name-services/dns/19076d35-6e27-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 2
          "_links": {
            "self": {
              "href": "/api/name-services/dns?fields=*"
            }
          }
        }
        ```
        ### Retrieving all DNS configurations whose domain name starts with _dom*_.
        ```
        # The API:
        /api/name-services/dns
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/dns?domains=dom*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "domains": [
                "domainA.example.com"
              ]
              "_links": {
                "self": {
                  "href": "/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 1
          "_links": {
            "self": {
              "href": "/api/name-services/dns?domains=dom*"
            }
          }
        }
        ```
        ### Retrieving the DNS configuration for a specific SVM
        ```
        # The API:
        /api/name-services/dns/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json"
        # The response:
        {
          "svm": {
            "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
            "name": "vs1"
            "_links": {
              "self": {
                "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
              }
            }
          },
          "domains": [
            "domainA.example.com"
          ],
          "servers": [
            "10.10.10.10"
          ]
          "_links": {
            "self": {
              "href": "/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1"
            }
          }
        }
        ```
        ## Creating a DNS configuration
        The DNS POST endpoint creates a DNS configuration for the specified SVM.
        ## Example
        The following example shows a POST operation:
        ```
        # The API:
        /api/name-services/dns
        # The call:
              curl -X POST "https://<mgmt-ip>/api/name-services/dns" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"svm\": { \"uuid\": \"179d3c85-7053-11e8-b9b8-005056b41bd1\" }, \"domains\": [ \"domainA.example.com\" ], \"servers\": [ \"10.10.10.10\" ]}"
        ```
        ## Updating a DNS configuration
        The DNS PATCH endpoint updates the DNS configuration for the specified SVM.
        ## Examples
        ### Updating both the DNS domains and servers
        ```
        # The API:
        /api/name-services/dns/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"domains\": [ \"domainA.example.com\", \"domainB.example.com\" ], \"servers\": [ \"10.10.10.10\", \"10.10.10.11\" ]}"
        ```
        ### Updating the DNS servers only
        ```
        # The API:
        /api/name-services/dns/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"10.10.10.10\" ]}"
        ```
        ## Deleting a DNS configuration
        The DNS DELETE endpoint deletes the DNS configuration for the specified SVM.
        ## Example
        The following example shows a DELETE operation.
        ```
        # The API:
        /api/name-services/dns/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/name-services/dns/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json"
        ```
      tags:
      - name-services
  /name-services/dns/{svm.uuid}:
    delete:
      description: |
        Deletes DNS domain configuration of the specified SVM.
        ### Related ONTAP commands
        * `vserver services name-service dns delete`
        ### Learn more
        * [`DOC /name-services/dns`](#docs-name-services-name-services_dns)
      operationId: dns_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    get:
      description: |
        Retrieves DNS domain and server configuration of an SVM. By default, both DNS domains and servers are displayed.
        DNS configuration for the cluster is retrieved and managed via [`/api/cluster`](#docs-cluster-cluster).
        ### Related ONTAP commands
        * `vserver services name-service dns show`
        * `vserver services name-service dns check`
        ### Learn more
        * [`DOC /name-services/dns`](#docs-name-services-name-services_dns)
      operationId: dns_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dns'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    patch:
      description: |-
        Updates DNS domain and server configurations of an SVM.
        ### Important notes
        - Both DNS domains and servers can be modified.
        - The domains and servers fields cannot be empty.
        - IPv6 must be enabled if IPv6 family addresses are specified for the `servers` field.
        - The DNS server specified using the `servers` field is validated during this operation.<br/>
        The validation fails in the following scenarios:<br/>
        1. The server is not a DNS server.
        2. The server does not exist.
        3. The server is unreachable.<br/>

        ### Learn more
        * [`DOC /name-services/dns`](#docs-name-services-name-services_dns)
      operationId: dns_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/dns'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8847360    | Only admin or data SVMs allowed |
            | 8847361    | Exceeded the maximum number of domains allowed. Maximum of six domains only |
            | 8847362    | Exceeded the maximum number of name servers allowed. Maximum of three name servers only |
            | 8847392    | Domain name cannot be an IP address |
            | 8847393    | Top level domain name is invalid |
            | 8847394    | FQDN name voilated the limitations |
            | 8847399    | One or more of the specified DNS servers do not exist or cannot be reached |
            | 9240587    | FQDN name cannot be empty |
            | 9240588    | FQDN name is too long. Maximum supported length: 255 characters  |
            | 9240590    | FQDN name is reserved. Following names are reserved: "all", "local" and "localhost" |
            | 9240607    | One of the FQDN labels is too long. Maximum supported length: 63 characters |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
  /name-services/ldap:
    get:
      description: |-
        Retrieves the LDAP configurations for all SVMs.

        ### Learn more
        * [`DOC /name-services/ldap`](#docs-name-services-name-services_ldap)
      operationId: ldap_collection_get
      parameters:
      - description: Filter by use_start_tls
        in: query
        name: use_start_tls
        type: boolean
      - description: Filter by schema
        in: query
        name: schema
        type: string
      - description: Filter by port
        in: query
        name: port
        type: integer
      - description: Filter by ad_domain
        in: query
        name: ad_domain
        type: string
      - description: Filter by session_security
        in: query
        name: session_security
        type: string
      - description: Filter by min_bind_level
        in: query
        name: min_bind_level
        type: string
      - description: Filter by servers
        in: query
        name: servers
        type: string
      - description: Filter by bind_dn
        in: query
        name: bind_dn
        type: string
      - description: Filter by preferred_ad_servers
        in: query
        name: preferred_ad_servers
        type: string
      - description: Filter by base_scope
        in: query
        name: base_scope
        type: string
      - description: Filter by base_dn
        in: query
        name: base_dn
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ldap_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    post:
      description: |-
        Creates an LDAP configuration for an SVM.
        ### Important notes
        * Each SVM can have one LDAP configuration.
        * The LDAP servers and Active Directory domain are mutually exclusive fields. These fields cannot be empty. At any point in time, either the LDAP servers or Active Directory domain must be populated.
        * LDAP configuration with Active Directory domain cannot be created on an admin SVM.
        * IPv6 must be enabled if IPv6 family addresses are specified.</br>
        #### The following parameters are optional:
        - preferred AD servers
        - schema
        - port
        - min_bind_level
        - bind_password
        - base_scope
        - use_start_tls
        - session_security</br>
        Configuring more than one LDAP server is recommended to avoid a single point of failure.
        Both FQDNs and IP addresses are supported for the "servers" field.
        The Acitve Directory domain or LDAP servers are validated as part of this operation.</br>
        LDAP validation fails in the following scenarios:<br/>
        1. The server does not have LDAP installed.
        2. The server or Active Directory domain is invalid.
        3. The server or Active Directory domain is unreachable.<br/>

        ### Learn more
        * [`DOC /name-services/ldap`](#docs-name-services-name-services_ldap)
      operationId: ldap_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ldap_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ldap_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262186     | LDAP Servers cannot be used with Active Directory domain and/or preferred Acti Directory servers |
            | 2621488    | Invalid SVM context |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name |
            | 4915203    | The specified LDAP schema does not exist |
            | 4915207    | The specified LDAP servers or preferred Active Directory servers contain duplicate server entries |
            | 4915229    | DNS resolution failed due to an internal error. Contact technical support if this issue persists |
            | 4915231    | DNS resolution failed for one or more of the specified LDAP servers. Verify that a valid DNS server is configured |
            | 23724132   | DNS resolution failed for all the specified LDAP servers. Verify that a valid DNS server is configured |
            | 4915234    | The specified LDAP server or preferred Active Directory server is not supported because it is one of the following: multicast, loopback, 0.0.0.0, or broadcast |
            | 4915248    | LDAP servers cannot be empty or "-". Specified Active Directory domain is invalid because it is empty or "-" or it contains either the special characters or "-" at the start or end of the domain)  |
            | 4915251    | STARTTLS and LDAPS cannot be used together |
            | 4915257    | The LDAP configuration is invalid. Verify that bind-dn and bind password are correct |
            | 4915258    | The LDAP configuration is invalid. Verify that the Active Directory domain or servers are reachable and that the network configuration is correct |
            | 4915259    | LDAP configurations with Active Directory domains are not supported on admin SVM. |
            | 13434916   | The SVM is in the process of being created. Wait a few minutes, and then try the command again. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    x-ntap-long-description:
      description: |
        ## Overview
        LDAP servers are used to centrally maintain user information. LDAP configurations must be set up
        to lookup information stored in the LDAP directory on the external LDAP servers. This API is used to retrieve and manage
        LDAP server configurations.
        ## Retrieving LDAP information
        The LDAP GET endpoint retrieves all of the LDAP configurations in the cluster.
        ## Examples
        ### Retrieving all of the fields for all LDAP configurations
        ---
        ```
        # The API:
        /api/name-services/ldap
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/ldap?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "servers": [
                "10.10.10.10",
                "domainB.example.com"
              ],
              "schema": "ad_idmu",
              "port": 389,
              "min_bind_level": "anonymous",
              "bind_dn": "cn=Administrators,cn=users,dc=domainA,dc=example,dc=com",
              "base_dn": "dc=domainA,dc=example,dc=com",
              "base_scope": "subtree",
              "use_start_tls": true,
              "session_security": "none",
              "_links": {
                "self": {
                  "href": "/api/name-services/ldap/179d3c85-7053-11e8-b9b8-005056b41bd1"
                }
              }
            },
            {
              "svm": {
                "uuid": "6a52023b-7066-11e8-b9b8-005056b41bd1",
                "name": "vs2"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6a52023b-7066-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "servers": [
                "11.11.11.11"
              ],
              "schema": "rfc_2307",
              "port": 389,
              "min_bind_level": "simple",
              "bind_dn": "cn=Administrators,cn=users,dc=domainB,dc=example,dc=com",
              "base_dn": "dc=domainB,dc=example,dc=com",
              "base_scope": "subtree",
              "use_start_tls": true,
              "session_security": "sign",
              "_links": {
                "self": {
                  "href": "/api/name-services/ldap/6a52023b-7066-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/name-services/ldap?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving all of the LDAP configurations that have the *use_start_tls* set to *true*
        ---
        ```
        # The API:
        /api/name-services/ldap
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/ldap?use_start_tls=true" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "6a52023b-7066-11e8-b9b8-005056b41bd1",
                "name": "vs2"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6a52023b-7066-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "use_start_tls": true,
              "_links": {
                "self": {
                  "href": "/api/name-services/ldap/6a52023b-7066-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/name-services/ldap?use_start_tls=true"
            }
          }
        }
        ```
        ---
        ### Retrieving the LDAP configuration of a specific SVM
        ---
        ```
        # The API:
        /api/name-services/ldap/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/ldap/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
            "name": "vs1"
            "_links": {
              "self": {
                "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
              }
            }
          },
          "servers": [
            "10.10.10.10",
            "domainB.example.com"
          ],
          "schema": "ad_idmu",
          "port": 389,
          "min_bind_level": "anonymous",
          "bind_dn": "cn=Administrators,cn=users,dc=domainA,dc=example,dc=com",
          "base_dn": "dc=domainA,dc=example,dc=com",
          "base_scope": "subtree",
          "use_start_tls": true,
          "session_security": "none",
          "_links": {
            "self": {
              "href": "/api/name-services/ldap/179d3c85-7053-11e8-b9b8-005056b41bd1"
            }
          }
        }
        ```
        ---
        ## Creating an LDAP configuration
        The LDAP POST endpoint creates an LDAP configuration for the specified SVM.
        ## Examples
        ### Creating an LDAP configuration with all the fields specified
        ---
        ```
        # The API:
        /api/name-services/ldap
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/ldap" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"svm\": { \"uuid\": \"179d3c85-7053-11e8-b9b8-005056b41bd1\" }, \"servers\": [ \"10.10.10.10\"\, \"domainB.example.com\" ], \"schema\": \"ad_idmu\", \"port\": 389, \"min_bind_level\": \"anonymous\", \"bind_dn\": \"cn=Administrators,cn=users,dc=domainA,dc=example,dc=com\", \"bind_password\": \"abc\", \"base_dn\": \"dc=domainA,dc=example,dc=com\", \"base_scope\": \"subtree\", \"use_start_tls\": false, \"session_security\": \"none\"}"
        ```
        ---
        ### Creating an LDAP configuration with Active Directory domain and preferred Active Directory servers specified
        ---
        ```
        # The API:
        /api/name-services/ldap
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/ldap" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"svm\": { \"name\": \"vs2\" }, \"ad_domain\": \"domainA.example.com\", \"preferred_ad_servers\": [ \"11.11.11.11\" ], \"port\": 389, \"bind_dn\": \"cn=Administrators,cn=users,dc=domainA,dc=example,dc=com\", \"bind_password\": \"abc\", \"base_dn\": \"dc=domainA,dc=example,dc=com\", \"session_security\": \"none\"}"
        ```
        ---
        ### Creating an LDAP configuration with a number of optional fields not specified
        ---
        ```
        # The API:
        /api/name-services/ldap
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/ldap" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"svm\": { \"name\": \"vs2\" }, \"servers\": [ \"11.11.11.11\" ], \"port\": 389, \"bind_dn\": \"cn=Administrators,cn=users,dc=domainA,dc=example,dc=com\", \"bind_password\": \"abc\", \"base_dn\": \"dc=domainA,dc=example,dc=com\", \"session_security\": \"none\"}"
        ```
        ---
        ## Updating an LDAP configuration
        The LDAP PATCH endpoint updates the LDAP configuration for the specified SVM. The following example shows a PATCH operation:
        ```
        # The API:
        /api/name-services/ldap/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/ldap/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"55.55.55.55\" ], \"schema\": \"ad_idmu\", \"port\": 636, \"use_start_tls\": false }"
        ```
        ---
        ## Deleting an LDAP configuration
        The LDAP DELETE endpoint deletes the LDAP configuration for the specified SVM. The following example shows a DELETE operation:
        ```
        # The API:
        /api/name-services/ldap/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/name-services/ldap/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json"
        ```
        ---
      tags:
      - name-services
  /name-services/ldap/{svm.uuid}:
    delete:
      description: |-
        Deletes the LDAP configuration of the specified SVM. LDAP can be removed as a source from the ns-switch if LDAP is not used as a source for lookups.

        ### Learn more
        * [`DOC /name-services/ldap`](#docs-name-services-name-services_ldap)
      operationId: ldap_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    get:
      description: |-
        Retrieves LDAP configuration for an SVM. All parameters for the LDAP configuration are displayed by default.

        ### Learn more
        * [`DOC /name-services/ldap`](#docs-name-services-name-services_ldap)
      operationId: ldap_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ldap_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    patch:
      description: |-
        Updates an LDAP configuration of an SVM.
        ### Important notes
        * Both mandatory and optional parameters of the LDAP configuration can be updated.
        * The LDAP servers and Active Directory domain are mutually exclusive fields. These fields cannot be empty. At any point in time, either the LDAP servers or Active Directory domain must be populated.
        * IPv6 must be enabled if IPv6 family addresses are specified.<br/>
        </br>Configuring more than one LDAP server is recommended to avoid a sinlge point of failure.
        Both FQDNs and IP addresses are supported for the "servers" field.
        The Active Directory domain or LDAP servers are validated as part of this operation.<br/>
        LDAP validation fails in the following scenarios:<br/>
        1. The server does not have LDAP installed.
        2. The server or Active Directory domain is invalid.
        3. The server or Active Directory domain is unreachable<br/>

        ### Learn more
        * [`DOC /name-services/ldap`](#docs-name-services-name-services_ldap)
      operationId: ldap_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ldap_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262186     | LDAP Servers cannot be used with Active Directory domain and/or preferred Active Directory servers |
            | 2621488    | Invalid SVM context |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name |
            | 4915203    | The specified LDAP schema does not exist |
            | 4915208    | The specified LDAP servers or preferred Active Directory servers contain duplicate server entries |
            | 4915229    | DNS resolution failed due to an internal error. Contact technical support if this issue persists |
            | 4915231    | DNS resolution failed for one or more of the specified LDAP servers. Verify that a valid DNS server is configured |
            | 23724132   | DNS resolution failed for all the specified LDAP servers. Verify that a valid DNS server is configured |
            | 4915234    | The specified LDAP server or preferred Active Directory server is not supported because it is one of the following: multicast, loopback, 0.0.0.0, or broadcast |
            | 4915248    | LDAP servers cannot be empty or "-". Specified Active Directory domain is invalid because it is empty or "-" or it contains either the special characters or "-" at the start or end of the domain. |
            | 4915251    | STARTTLS and LDAPS cannot be used together |
            | 4915257    | The LDAP configuration is invalid. Verify that the distinguished names and bind password are correct |
            | 4915258    | The LDAP configuration is invalid. Verify that the Active Directory domain or servers are reachable and that the network configuration is correct |
            | 4915259    | LDAP configurations with Active Directory domains are not supported on admin SVM. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
  /name-services/name-mappings:
    get:
      description: |
        Retrieves the name mapping configuration for all SVMs.
        ### Related ONTAP commands
        * `vserver name-mapping show`
        ### Learn more
        * [`DOC /name-services/name-mappings`](#docs-name-services-name-services_name-mappings)
      operationId: name_mapping_collection_get
      parameters:
      - description: Filter by pattern
        in: query
        name: pattern
        type: string
      - description: Filter by client_match
        in: query
        name: client_match
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by replacement
        in: query
        name: replacement
        type: string
      - description: Filter by direction
        in: query
        name: direction
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/name_mapping_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    post:
      description: |
        Creates name mappings for an SVM.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the name mapping.
        * `index` - Name mapping's position in the priority list.
        * `direction` - Direction of the name mapping.
        * `pattern` - Pattern to match to. Maximum length is 256 characters.
        * `replacement` - Replacement pattern to match to. Maximum length is 256 characters.
        ### Recommended optional properties
        * `client_match` - Hostname or IP address added to match the pattern to the client's workstation IP address.
        ### Related ONTAP commands
        * `vserver name-mapping create`
        * `vserver name-mapping insert`
        ### Learn more
        * [`DOC /name-services/name-mappings`](#docs-name-services-name-services_name-mappings)
      operationId: name_mapping_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/name_mapping'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/name_mapping_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65798185   | Failed to resolve the specified hostname   |
            | 65798149   | Invalid index for the name mapping entry   |
            | 2621706    | The specified svm.uuid and svm.name refer to different SVMs   |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    x-ntap-long-description:
      description: |
        ## Overview
        Name mapping is used to map CIFS identities to UNIX identities, Kerberos identities to UNIX identities, and UNIX identities to CIFS identities. It needs this information to obtain user credentials and provide proper file access regardless of whether they are connecting from an NFS client or a CIFS client. </br>
        The system keeps a set of conversion rules for each Storage Virtual Machine (SVM). Each rule consists of two pieces: a pattern and a replacement. Conversions start at the beginning of the appropriate list and perform a substitution based on the first matching rule. The pattern is a UNIX-style regular expression. The replacement is a string containing escape sequences representing subexpressions from the pattern, as in the UNIX sed program.</br>
        Name mappings are applied in the order in which they occur in the priority list; for example, a name mapping that occurs at position 2 in the priority list is applied before a name mapping that occurs at position 3. Each mapping direction (Kerberos-to-UNIX, Windows-to-UNIX, and UNIX-to-Windows) has its own priority list. You are prevented from creating two name mappings with the same pattern.<p/>
        ## Examples
        ### Creating a name-mapping with client_match as the ip-address
        Use the following API to create a name-mapping. Note the <i>return_records=true</i> query parameter is used to obtain the newly created entry in the response.
        <br/>
        ```
        # The API:
        POST /api//name-services/name-mappings
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/name-mappings?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"client_match\": \"10.254.101.111/28\", \"direction\": \"win_unix\", \"index\": 1, \"pattern\": \"ENGCIFS_AD_USER\", \"replacement\": \"unix_user1\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"f71d3640-0226-11e9-8526-000c290a8c4b\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "f71d3640-0226-11e9-8526-000c290a8c4b",
                "name": "vs1"
              },
              "direction": "win_unix",
              "index": 1,
              "pattern": "ENGCIFS_AD_USER",
              "replacement": "unix_user1",
              "client_match": "10.254.101.111/28"
            }
          ]
        }
        ```
        ### Creating a name-mapping with client_match as the hostname
        Use the following API to create a name-mapping. Note the <i>return_records=true</i> query parameter is used to obtain the newly created entry in the response.
        <br/>
        ```
        # The API:
        POST /api//name-services/name-mappings
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/name-mappings?return_records=true" -H "accept: application/json" -H "Content-Type: applicatio/json" -d "{ \"client_match\": \"google.com\", \"direction\": \"win_unix\", \"index\": 2, \"pattern\": \"ENGCIFS_AD_USER\", \"replacement\": \"unix_user1\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"f71d3640-0226-11e9-8526-000c290a8c4b\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "f71d3640-0226-11e9-8526-000c290a8c4b",
                "name": "vs1"
              },
              "direction": "win_unix",
              "index": 2,
              "pattern": "ENGCIFS_AD_USER",
              "replacement": "unix_user1",
              "client_match": "google.com"
            }
          ]
        }
        ```
        ### Retrieving all name-mapping configurations for all SVMs in the cluster
        ```
        # The API:
        GET /api/name-services/name-mappings
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/name-mappings?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "f71d3640-0226-11e9-8526-000c290a8c4b",
                "name": "vs1"
              },
              "direction": "win_unix",
              "index": 1,
              "pattern": "ENGCIFS_AD_USER",
              "replacement": "unix_user1",
              "client_match": "10.254.101.111/28"
            },
            {
              "svm": {
                "uuid": "f71d3640-0226-11e9-8526-000c290a8c4b",
                "name": "vs1"
              },
              "direction": "win_unix",
              "index": 2,
              "pattern": "ENGCIFS_AD_USER",
              "replacement": "unix_user1",
              "client_match": "google.com"
            }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving a name-mapping configuration for a specific SVM, and for the specified direction and index
        ---
        ```
        # The API:
        GET /api/name-services/name-mappings/{svm.uuid}/{direction}/{index}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/name-mappings/f71d3640-0226-11e9-8526-000c290a8c4b/win_unix/1" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "f71d3640-0226-11e9-8526-000c290a8c4b",
            "name": "vs1"
          },
          "direction": "win_unix",
          "index": 1,
          "pattern": "ENGCIFS_AD_USER",
          "replacement": "unix_user1",
          "client_match": "10.254.101.111/28"
        }
        ```
        ---
        ### Updating a specific name-mapping configuration
        ---
        ```
        # The API:
        PATCH /api//name-services/name-mappings/{svm.uuid}/{direction}/{index}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/name-mappings/f71d3640-0226-11e9-8526-000c290a8c4b/win_unix/1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"client_match\": \"10.254.101.222/28\", \"pattern\": \"ENGCIFS_LOCAL_USER\", \"replacement\": \"pcuser\"}"
        # swapping a specified namemapping entry by index
        curl -X PATCH "https://<mgmt-ip>/api/name-services/name-mappings/f71d3640-0226-11e9-8526-000c290a8c4b/win-unix/3?new_index=1" -H "accept: application/json" -H "Content-Type: application/json" -d "{  \"pattern\": \"ENGCIFS_AD_USER\", \"replacement\": \"unix_user1\"}"
        ```
        ---
        ### Removing a specific name-mapping configuration
        ---
        ```
        # The API:
        DELETE /api/name-services/name-mappings/{svm.uuid}/{direction}/{index}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/name-services/name-mappings/f71d3640-0226-11e9-8526-000c290a8c4b/win_unix/1" -H "accept: application/json"
        ```
        ---
      tags:
      - name-services
  /name-services/name-mappings/{svm.uuid}/{direction}/{index}:
    delete:
      description: |
        Deletes the name mapping configuration.
        ### Related ONTAP commands
        * `vserver name-mapping delete`
        ### Learn more
        * [`DOC /name-services/name-mappings`](#docs-name-services-name-services_name-mappings)
      operationId: name_mapping_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Direction
        in: path
        name: direction
        required: true
        type: string
      - description: Position of the entry in the list
        in: path
        name: index
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    get:
      description: |
        Retrieves the name mapping configuration of an SVM.
        ### Related ONTAP commands
        * `vserver name-mapping show`
        ### Learn more
        * [`DOC /name-services/name-mappings`](#docs-name-services-name-services_name-mappings)
      operationId: name_mapping_position_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Direction
        in: path
        name: direction
        required: true
        type: string
      - description: Position of the entry in the list
        in: path
        name: index
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/name_mapping'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    patch:
      description: |
        Updates the name mapping configuration of an SVM. The positions can be swapped by providing the `new_index` property.
        Swapping is not allowed for entries that have `client_match` property configured.
        ### Related ONTAP commands
        * `vserver name-mapping insert`
        * `vserver name-mapping modify`
        * `vserver name-mapping swap`
        ### Learn more
        * [`DOC /name-services/name-mappings`](#docs-name-services-name-services_name-mappings)
      operationId: name_mapping_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Direction
        in: path
        name: direction
        required: true
        type: string
      - description: Position of the entry in the list
        in: path
        name: index
        required: true
        type: integer
      - description: New position of the Index after a swap is completed.
        in: query
        name: new_index
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/name_mapping'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65798185   | Failed to resolve the specified hostname |
            | 65798179   | Cannot swap entries because one or both entries have hostname or address configured.|
            |            | Delete and recreate the new entry at the specified position.|
            schema:
            $ref: "#/definitions/error_response"
      tags:
      - name-services
  /name-services/nis:
    get:
      description: |
        Retrieves NIS domain configurations of all the SVMs. The bound_servers field indicates the successfully bound NIS servers. Lookups and authentications fail if there are no bound servers.
        ### Related ONTAP commands
        * `vserver services name-service nis-domain show`
        * `vserver services name-service nis-domain show-bound`
        ### Learn more
        * [`DOC /name-services/nis`](#docs-name-services-name-services_nis)
      operationId: nis_collection_get
      parameters:
      - description: Filter by bound_servers
        in: query
        name: bound_servers
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by servers
        in: query
        name: servers
        type: string
      - description: Filter by domain
        in: query
        name: domain
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nis_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    post:
      description: |
        Creates an NIS domain and server confguration for a data SVM.
        NIS configuration for the cluster is managed via [`/api/security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis).<br/>
        ### Important notes
          - Each SVM can have one NIS domain configuration.
          - Multiple SVMs can be configured with the same NIS domain. Specify the NIS domain and NIS servers as input.Domain name and servers fields cannot be empty.
          - Both FQDNs and IP addresses are supported for the servers field.
          - IPv6 must be enabled if IPv6 family addresses are specified in the servers field.
          - A maximum of ten NIS servers are supported.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the NIS configuration.
        * `domain` - NIS domain to which the configuration belongs.
        * `servers` - List of NIS server IP addresses.
        ### Related ONTAP commands
        * `vserver services name-service nis-domain create`
        ### Learn more
        * [`DOC /name-services/nis`](#docs-name-services-name-services_nis)
      operationId: nis_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/nis_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nis_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966253    | IPv6 is not enabled in the cluster |
            | 2621488    | Invalid SVM context |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name |
            | 3276964    | NIS domain name or NIS server domain is too long. The maximum supported for domain name is 64 characters and the maximum supported for NIS server domain is 255 characters |
            | 3276933    | A maximum of 10 NIS servers can be configured per SVM |
            | 13434916   | The SVM is in the process of being created. Wait a few minutes, and then try the command again. |
            | 23724109   | DNS resolution failed for one or more specified servers  |
            | 23724112   | DNS resolution failed due to an internal error. Contact technical support if this issue persists  |
            | 23724132   | DNS resolution failed for all the specified servers  |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    x-ntap-long-description:
      description: |
        ## Overview
        NIS servers are used to authenticate user and client computers. NIS domain name and NIS server information is required to configure NIS.
        It is important to note that this API is used to retrieve and manage NIS server configurations for data SVMs only. NIS configuration for the cluster is managed via [`/api/security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis).
        ## Retrieving NIS Information
        The NIS GET endpoint retrieves all of the NIS configurations for data SVMs.
        ## Examples
        ### Retrieving all fields for all NIS configurations
        ---
        ```
        # The API:
        /api/name-services/nis
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/nis?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "domain": "domainA.example.com",
              "servers": [
                "10.10.10.10",
                "example.com"
              ]
              "bound-servers": [
                "10.10.10.10"
              ]
              "_links": {
                "self": {
                  "href": "/api/name-services/nis/179d3c85-7053-11e8-b9b8-005056b41bd1"
                }
              }
            },
            {
              "svm": {
                "uuid": "6a52023b-7066-11e8-b9b8-005056b41bd1",
                "name": "vs2"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6a52023b-7066-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "domain": "domainB.example.com",
              "servers": [
                "2.2.2.2",
                "3.3.3.3"
                "4.4.4.4"
              ]
              "bound-servers": [],
              "_links": {
                "self": {
                  "href": "/api/name-services/nis/6a52023b-7066-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/name-services/nis?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving all NIS configurations whose bound servers start with *10*
        ---
        ```
        # The API:
        /api/name-services/nis
        # The call:
        curl -X GET "https://<mgmt-ip/api/name-services/nis?bound_servers=10*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "bound-servers": [
                "10.10.10.10"
              ]
              "_links": {
                "self": {
                  "href": "/api/name-services/nis/6a52023b-7066-11e8-b9b8-005056b41bd1"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/name-services/nis?bound_servers=10*"
            }
          }
        }
        ```
        ---
        ### Retrieving the NIS configuration of a specific SVM
        ---
        ```
        # The API:
        /api/name-services/nis/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/name-services/nis/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json"
        # The response:
        {
          "svm": {
            "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
            "name": "vs1"
          },
          "domain": "domainA.example.com",
          "servers": [
            "10.10.10.10",
            "example.com"
          ]
          "bound_servers": [
            "10.10.10.10"
          ]
        }
        ```
        ---
        ## Creating a NIS configuration
        The NIS POST endpoint creates a NIS configuration for the specified SVM.
        ## Example
        The following example shows a POST operation:
        ```
        # The API:
        /api/name-services/nis
        # The call:
        curl -X POST "https://<mgmt-ip>/api/name-services/nis" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"svm\": { \"uuid\": \"179d3c85-7053-11e8-b9b8-005056b41bd1\" }, \"domain\": \"domainA.example.com\", \"servers\": [ \"10.10.10.10\",\"example.com\" ]}"
        ```
        ---
        ## Updating the NIS configuration
        The NIS PATCH endpoint updates the NIS configuration for the specified NIS server.
        ## Examples
        ### Updating the domain
        ---
        ```
        # The API:
        /api/name-services/nis/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/nis/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"domain\": \"domainC.example.com\", \"servers\": [ \"13.13.13.13\" ]}"
        ```
        ---
        ### Updating the server
        ---
        ```
        # The API:
        /api/name-services/nis/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/name-services/nis/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"14.14.14.14\" ]}"
        ```
        ---
        ## Deleting a NIS configuration
        The NIS DELETE endpoint deletes the NIS configuration for the specified SVM.
        ## Example
        The following example shows a DELETE operation:
        ---
        ```
        # The API:
        /api/name-services/nis/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/name-services/nis/179d3c85-7053-11e8-b9b8-005056b41bd1" -H "accept: application/hal+json"
        ```
        ---
      tags:
      - name-services
  /name-services/nis/{svm.uuid}:
    delete:
      description: |
        Deletes the NIS domain configuration of an SVM. NIS can be removed as a source from ns-switch if NIS is not used for lookups.
        ### Related ONTAP commands
        * `vserver services name-service nis-domain delete`
        ### Learn more
        * [`DOC /name-services/nis`](#docs-name-services-name-services_nis)
      operationId: nis_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    get:
      description: |
        Retrieves NIS domain and server configurations of an SVM. Both NIS domain and servers are displayed by default. The bound_servers field indicates the successfully bound NIS servers.
        ### Related ONTAP commands
        * `vserver services name-service nis-domain show`
        * `vserver services name-service nis-domain show-bound`
        ### Learn more
        * [`DOC /name-services/nis`](#docs-name-services-name-services_nis)
      operationId: nis_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nis_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
    patch:
      description: |
        Updates NIS domain and server configuration of an SVM.<br/>
        ### Important notes
          - Both NIS domain and servers can be modified.
          - Domains and servers cannot be empty.
          - Both FQDNs and IP addresses are supported for the servers field.
          - If the domain is modified, NIS servers must also be specified.
          - IPv6 must be enabled if IPv6 family addresses are specified for the servers field.
        ### Related ONTAP commands
        * `vserver services name-service nis-domain modify`
        ### Learn more
        * [`DOC /name-services/nis`](#docs-name-services-name-services_nis)
      operationId: nis_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/nis_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966253    | IPv6 is not enabled in the cluster |
            | 2621488    | Invalid SVM context |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name |
            | 3276964    | NIS domain name or NIS server domain is too long. The maximum supported for domain name is 64 characters and the maximum supported for NIS server domain is 255 characters |
            | 3276933    | A maximum of 10 NIS servers can be configured per SVM |
            | 23724109   | DNS resolution failed for one or more specified servers  |
            | 23724112   | DNS resolution failed due to an internal error. Contact technical support if this issue persists |
            | 23724132   | DNS resolution failed for all the specified servers  |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 LIFs |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - name-services
  /network/ethernet/broadcast-domains:
    get:
      description: |-
        Retrieves a collection of broadcast domains for the entire cluster.
        ### Related ONTAP commands
        * `network port broadcast-domain show`

        ### Learn more
        * [`DOC /network/ethernet/broadcast-domains`](#docs-networking-network_ethernet_broadcast-domains)
      operationId: network_ethernet_broadcast_domains_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by mtu
        in: query
        name: mtu
        type: integer
      - description: Filter by ports.name
        in: query
        name: ports.name
        type: string
      - description: Filter by ports.node.name
        in: query
        name: ports.node.name
        type: string
      - description: Filter by ports.uuid
        in: query
        name: ports.uuid
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/broadcast_domain_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a new broadcast domain.<br/>
        ### Required properties
        * `name` - Name of the broadcast-domain to create.
        * `mtu` - Maximum transmission unit (MTU) of the broadcast domain.
        ### Recommended optional properties
        * `ipspace.name` or `ipspace.uuid` - IPspace the broadcast domain belongs to.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `ipspace` - _Default_
        ### Related ONTAP commands
        * `network port broadcast-domain create`

        ### Learn more
        * [`DOC /network/ethernet/broadcast-domains`](#docs-networking-network_ethernet_broadcast-domains)
      operationId: network_ethernet_broadcast_domains_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Broadcast_domain parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/broadcast_domain'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1377267 | The specified IPspace does not exist. |
            | 1967082 | The specified ipspace.name does not match the IPspace name of ipspace.uuid. |
            | 1967102 | A POST operation might have left the configuration in an inconsistent state. Check the configuration. |
            | 53281982 | The specified broadcast domain name is reserved by the system. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        A broadcast domain is a collection of Ethernet ports that have layer 2 connectivity. They are used to determine which Ethernet ports can host interfaces of various types. The broadcast domain REST API allows you to retrieve, create, modify, and delete broadcast domains. The broadcast domain APIs do not manage port membership. To add a port to a broadcast domain or to move a port to a different broadcast domain, use PATCH /network/ethernet/ports/<uuid>.
        ## Retrieving network Ethernet broadcast domain information
        The broadcast domains GET API retrieves and displays relevant information pertaining to the broadcast domains configured in the cluster. The API retrieves the list of all broadcast domains configured in the cluster, or a specific broadcast domain.
        <br/>
        ---
        ## Examples
        ### Retrieving all broadcast domains in the cluster
        The following output shows the list of all broadcast domains configured in a cluster.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/broadcast-domains" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "6970c2a9-f34f-11e8-8373-005056bb6b85",
              "name": "Cluster",
              "ipspace": {
                "uuid": "6267eff8-f34f-11e8-8373-005056bb6b85",
                "name": "Cluster",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/6267eff8-f34f-11e8-8373-005056bb6b85"
                  }
                }
              },
              "ports": [
                {
                  "uuid": "626b4d19-f34f-11e8-8373-005056bb6b85",
                  "name": "e0a",
                  "node": {
                    "name": "examplecluster-node01"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/626b4d19-f34f-11e8-8373-005056bb6b85"
                    }
                  }
                },
                {
                  "uuid": "626b77b9-f34f-11e8-8373-005056bb6b85",
                  "name": "e0b",
                  "node": {
                    "name": "examplecluster-node01"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/626b77b9-f34f-11e8-8373-005056bb6b85"
                    }
                  }
                }
              ],
              "mtu": 9000,
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/broadcast-domains/6970c2a9-f34f-11e8-8373-005056bb6b85"
                }
              }
            },
            {
              "uuid": "6972416c-f34f-11e8-8373-005056bb6b85",
              "name": "Default",
              "ipspace": {
                "uuid": "5f650349-f34f-11e8-8373-005056bb6b85",
                "name": "Default",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/5f650349-f34f-11e8-8373-005056bb6b85"
                  }
                }
              },
              "ports": [
                {
                  "uuid": "626bae19-f34f-11e8-8373-005056bb6b85",
                  "name": "e0c",
                  "node": {
                    "name": "examplecluster-node01"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/626bae19-f34f-11e8-8373-005056bb6b85"
                    }
                  }
                },
                {
                  "uuid": "626bd677-f34f-11e8-8373-005056bb6b85",
                  "name": "e0d",
                  "node": {
                    "name": "examplecluster-node01"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/626bd677-f34f-11e8-8373-005056bb6b85"
                    }
                  }
                }
              ],
              "mtu": 1500,
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/broadcast-domains/6972416c-f34f-11e8-8373-005056bb6b85"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/broadcast-domains?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific broadcast domain
        The following output shows the response returned when a specific broadcast domain is requested. The system returns an error if there is no broadcast domain with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/broadcast-domains/4475a2c8-f8a0-11e8-8d33-005056bb986f/?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "4475a2c8-f8a0-11e8-8d33-005056bb986f",
          "name": "Cluster",
          "ipspace": {
            "uuid": "3e518ed5-f8a0-11e8-8d33-005056bb986f",
            "name": "Cluster",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/3e518ed5-f8a0-11e8-8d33-005056bb986f"
              }
            }
          },
          "ports": [
            {
              "uuid": "3e539a62-f8a0-11e8-8d33-005056bb986f",
              "name": "e0a",
              "node": {
                "name": "examplecluster-node01"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/3e539a62-f8a0-11e8-8d33-005056bb986f"
                }
              }
            },
            {
              "uuid": "3e53c94a-f8a0-11e8-8d33-005056bb986f",
              "name": "e0b",
              "node": {
                "name": "examplecluster-node01"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/3e53c94a-f8a0-11e8-8d33-005056bb986f"
                }
              }
            }
          ],
          "mtu": 9000,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/broadcast-domains/4475a2c8-f8a0-11e8-8d33-005056bb986f/"
            }
          }
        }
        ```
        ---
        ### Retrieving all broadcast domains with a specific name
        The following output shows the response returned when broadcast domains with a specific name in any IPspace are requested.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains
        # The call:
        curl -X GET "https://10.224.87.121/api/network/ethernet/broadcast-domains/?name=bd1" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "66b607e5-4bee-11e9-af6a-005056bb13c0",
              "name": "bd1",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/broadcast-domains/66b607e5-4bee-11e9-af6a-005056bb13c0"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/broadcast-domains/?name=bd1"
            }
          }
        }
        ```
        ---
        ### Retrieving the broadcast domains for an IPspace
        The following output shows the response returned when the broadcast domains for a specified IPspace are requested.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains
        # The call:
        curl -X GET "https://10.224.87.121/api/network/ethernet/broadcast-domains/?ipspace.name=Cluster&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "ae69070c-4bed-11e9-af6a-005056bb13c0",
              "name": "Cluster",
              "ipspace": {
                "uuid": "ac466a88-4bed-11e9-af6a-005056bb13c0",
                "name": "Cluster",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/ac466a88-4bed-11e9-af6a-005056bb13c0"
                  }
                }
              },
              "ports": [
                {
                  "uuid": "acd67884-4bed-11e9-af6a-005056bb13c0",
                  "name": "e0a",
                  "node": {
                    "name": "examplecluster-node-1"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/acd67884-4bed-11e9-af6a-005056bb13c0"
                    }
                  }
                },
                {
                  "uuid": "ace1a36f-4bed-11e9-af6a-005056bb13c0",
                  "name": "e0b",
                  "node": {
                    "name": "examplecluster-node-1"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/ace1a36f-4bed-11e9-af6a-005056bb13c0"
                    }
                  }
                }
              ],
              "mtu": 1500,
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/broadcast-domains/ae69070c-4bed-11e9-af6a-005056bb13c0"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/broadcast-domains/?ipspace.name=Cluster&fields=*"
            }
          }
        }
        ```
        ---
        ## Creating network Ethernet broadcast domains
        You can use the POST API to create broadcast domains.
        <br/>
        ---
        ## Example
        ### Creating a new broadcast domain
        The following example shows how to create a broadcast domain with a name of 'bd1' and an MTU of 1500.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ethernet/broadcast-domains?return_records=true" -H "accept: application/hal+json" -d '{ "name": "bd1", "mtu": 1500 }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "bd1",
              "mtu": 1500,
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/broadcast-domains/"
                }
              }
            }
          ]
        }
        ```
        ---
        ## Updating network Ethernet broadcast domains
        You can use the PATCH API to update the attributes of broadcast domains.
        <br/>
        ---
        ## Examples
        ### Updating the name and MTU of a specific broadcast domain
        The following example shows how the PATCH request changes the broadcast domain name to 'bd2' and the broadcast domain MTU to 9000.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ethernet/broadcast-domains/6cde03b2-f8a2-11e8-8d33-005056bb986f/" -d '{ "name": "bd2", "mtu": 9000 }'
        {
        }
        ```
        ---
        ### Updating the IPspace of a specific broadcast domain
        The following example shows how the PATCH request changes the IPspace of a broadcast domain to 'ipspace2'.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ethernet/broadcast_domains/c6fe2541-61f4-11e9-a66e-005056bbe83e" -d '{ "ipspace" : { "name" : "ipspace2" } }'
        {
        }
        ```
        ---
        ## Deleting network Ethernet broadcast domains
        You can use the DELETE API to delete a broadcast domain from the cluster configuration.
        ## Example
        ### Deleting a specific broadcast domain
        The following DELETE request deletes a broadcast domain.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/broadcast-domains/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ethernet/broadcast-domains/6cde03b2-f8a2-11e8-8d33-005056bb986f/"
        ```
        ---
      tags:
      - networking
  /network/ethernet/broadcast-domains/{uuid}:
    delete:
      description: |-
        Deletes a broadcast domain.
        ### Related ONTAP commands
        * `network port broadcast-domain delete`

        ### Learn more
        * [`DOC /network/ethernet/broadcast-domains`](#docs-networking-network_ethernet_broadcast-domains)
      operationId: network_ethernet_broadcast_domain_delete
      parameters:
      - description: Broadcast domain UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1967103 | A broadcast domain with ports cannot be deleted. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |-
        Retrieves details of a broadcast domain.
        ### Related ONTAP commands
        * `network port broadcast-domain show`

        ### Learn more
        * [`DOC /network/ethernet/broadcast-domains`](#docs-networking-network_ethernet_broadcast-domains)
      operationId: network_ethernet_broadcast_domain_get
      parameters:
      - description: Broadcast domain UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/broadcast_domain'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates the properties of a broadcast domain.
        ### Related ONTAP commands
        * `network port broadcast-domain modify`
        * `network port broadcast-domain rename`

        ### Learn more
        * [`DOC /network/ethernet/broadcast-domains`](#docs-networking-network_ethernet_broadcast-domains)
      operationId: network_ethernet_broadcast_domain_modify
      parameters:
      - description: Broadcast domain UUID
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/broadcast_domain'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1377267 | The specified IPspace does not exist. |
            | 1377269 | Failed to lookup the specified IPspace. |
            | 1377560 | Broadcast domain already exists in specified IPspace. |
            | 1377605 | Moving the system-generated broadcast domain to another IPspace is not supported. |
            | 1967082 | The specified ipspace.name does not match the IPspace name of ipspace.uuid. |
            | 1967150 | The specified ipspace.uuid is not valid. |
            | 1967151 | The specified ipspace.uuid and ipspace.name do not match. |
            | 1967152 | Patching IPspace for a broadcast domain requires an effective cluster version of 9.7 or later. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/ethernet/ports:
    get:
      description: |-
        Retrieves a collection of ports (physical, VLAN and LAG) for an entire cluster.
        ### Related ONTAP commands
        * `network port show`
        * `network port ifgrp show`
        * `network port vlan show`

        ### Learn more
        * [`DOC /network/ethernet/ports`](#docs-networking-network_ethernet_ports)
      operationId: network_ethernet_ports_get
      parameters:
      - description: Filter by mac_address
        in: query
        name: mac_address
        type: string
      - description: Filter by speed
        in: query
        name: speed
        type: integer
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by mtu
        in: query
        name: mtu
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by vlan.base_port.name
        in: query
        name: vlan.base_port.name
        type: string
      - description: Filter by vlan.base_port.node.name
        in: query
        name: vlan.base_port.node.name
        type: string
      - description: Filter by vlan.base_port.uuid
        in: query
        name: vlan.base_port.uuid
        type: string
      - description: Filter by vlan.tag
        in: query
        name: vlan.tag
        type: integer
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by broadcast_domain.ipspace.name
        in: query
        name: broadcast_domain.ipspace.name
        type: string
      - description: Filter by broadcast_domain.uuid
        in: query
        name: broadcast_domain.uuid
        type: string
      - description: Filter by broadcast_domain.name
        in: query
        name: broadcast_domain.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by lag.active_ports.name
        in: query
        name: lag.active_ports.name
        type: string
      - description: Filter by lag.active_ports.node.name
        in: query
        name: lag.active_ports.node.name
        type: string
      - description: Filter by lag.active_ports.uuid
        in: query
        name: lag.active_ports.uuid
        type: string
      - description: Filter by lag.distribution_policy
        in: query
        name: lag.distribution_policy
        type: string
      - description: Filter by lag.mode
        in: query
        name: lag.mode
        type: string
      - description: Filter by lag.member_ports.name
        in: query
        name: lag.member_ports.name
        type: string
      - description: Filter by lag.member_ports.node.name
        in: query
        name: lag.member_ports.node.name
        type: string
      - description: Filter by lag.member_ports.uuid
        in: query
        name: lag.member_ports.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/port_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a new VLAN (such as node1:e0a-100) or LAG (ifgrp, such as node2:a0a).
        ### Required properties
        * `node` - Node the port will be created on.
        * `broadcast_domain` - Broadcast domain the port is associated with.
        * `type` - Defines if a VLAN or LAG will be created:
          * VLAN
            * `vlan.base_port` - Physical port or LAG the VLAN will be created on.
            * `vlan.tag` - Tag used to identify VLAN on the base port.
          * LAG
            * `lag.mode` - Policy for the LAG that will be created.
            * `lag.distribution_policy` - Indicates how the packets are distributed between ports.
            * `lag.member_ports` - Set of ports the LAG consists of.
        ### Related ONTAP commands
        * `network port ifgrp create`
        * `network port vlan create`

        ### Learn more
        * [`DOC /network/ethernet/ports`](#docs-networking-network_ethernet_ports)
      operationId: network_ethernet_ports_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Port parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/port'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/port_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376361 | Port is already a member of a LAG. |
            | 1966189 | Port is the home port or current port of an interface. |
            | 1967083 | The specified type is not valid. |
            | 1967084 | The specified node UUID is not valid. |
            | 1967085 | The specified node name is not valid. |
            | 1967086 | Node name and UUID must match if both are provided. |
            | 1967087 | The specified broadcast domain UUID is not valid. |
            | 1967088 | The specified broadcast domain name does not exist in the specified IPspace. |
            | 1967089 | The specified broadcast domain UUID, name, and IPspace name do not match. |
            | 1967090 | The specified VLAN base port UUID is not valid. |
            | 1967091 | The specified VLAN base port name and node name are not valid. |
            | 1967092 | The specified node does not match the node specified for the VLAN base port. |
            | 1967093 | The specified VLAN base port UUID, name, and VLAN base port node name do not match. |
            | 1967094 | The specified LAG member port UUID is not valid. |
            | 1967095 | The specified LAG member port name and node name combination is not valid. |
            | 1967096 | The specified node does not match the specified LAG member port node. |
            | 1967097 | The specified LAG member ports UUID, name, and node name do not match. |
            | 1967098 | VLAN POST operation has failed because admin status could not be set for the specified port. |
            | 1967099 | Partial success of the VLAN POST operation. Verify the state of the created VLAN for more information. |
            | 1967100 | LAG POST operation failed because admin status could not be set. |
            | 1967101 | Partial success of the LAG POST operation. Verify the state of the created LAG for more information. |
            | 1967102 | POST operation might have left the configuration in an inconsistent state. Check the configuration. |
            | 1967148 | Failure to remove port from broadcast domain. |
            | 1967149 | Failure to add port to broadcast domain. |
            | 1967175 | VLANs cannot be created on ports in the Cluster IPspace. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        A port is a physical or virtual Ethernet network device. Physical ports may be combined into Link Aggregation Groups (LAGs or ifgrps), or divided into Virtual LANs (VLANs).<br/>
        GET (collection), GET (instance), and PATCH APIs are available for all port types. POST and DELETE APIs are available for "lag" (ifgrp) and "vlan" port types.<br/>
        ## Retrieving network port information
        The network ports GET API retrieves and displays relevant information pertaining to the ports configured in the cluster. The API retrieves the list of all ports configured in the cluster, or specifically requested ports. The fields returned in the response vary for different ports and configurations.
        ## Examples
        ### Retrieving all ports in the cluster
        The following output displays the UUID, name, and port type for all ports configured in a 2-node cluster. The port types are physical, vlan, and lag (ifgrp).
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/ports?fields=uuid,name,type" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2d2c90c0-f70d-11e8-b145-005056bb5b8e",
              "name": "e0a",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/2d2c90c0-f70d-11e8-b145-005056bb5b8e"
                }
              }
            },
            {
              "uuid": "2d3004da-f70d-11e8-b145-005056bb5b8e",
              "name": "e0b",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/2d3004da-f70d-11e8-b145-005056bb5b8e"
                }
              }
            },
            {
              "uuid": "2d34a2cb-f70d-11e8-b145-005056bb5b8e",
              "name": "e0c",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/2d34a2cb-f70d-11e8-b145-005056bb5b8e"
                }
              }
            },
            {
              "uuid": "2d37189f-f70d-11e8-b145-005056bb5b8e",
              "name": "e0d",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/2d37189f-f70d-11e8-b145-005056bb5b8e"
                }
              }
            },
            {
              "uuid": "35de5d8b-f70d-11e8-abdf-005056bb7fc8",
              "name": "e0a",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/35de5d8b-f70d-11e8-abdf-005056bb7fc8"
                }
              }
            },
            {
              "uuid": "35de78cc-f70d-11e8-abdf-005056bb7fc8",
              "name": "e0b",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/35de78cc-f70d-11e8-abdf-005056bb7fc8"
                }
              }
            },
            {
              "uuid": "35dead3c-f70d-11e8-abdf-005056bb7fc8",
              "name": "e0c",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/35dead3c-f70d-11e8-abdf-005056bb7fc8"
                }
              }
            },
            {
              "uuid": "35deda90-f70d-11e8-abdf-005056bb7fc8",
              "name": "e0d",
              "type": "physical",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/35deda90-f70d-11e8-abdf-005056bb7fc8"
                }
              }
            },
            {
              "uuid": "42e25145-f97d-11e8-ade9-005056bb7fc8",
              "name": "e0c-100",
              "type": "vlan",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/42e25145-f97d-11e8-ade9-005056bb7fc8"
                }
              }
            },
            {
              "uuid": "569e0abd-f97d-11e8-ade9-005056bb7fc8",
              "name": "a0a",
              "type": "lag",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/569e0abd-f97d-11e8-ade9-005056bb7fc8"
                }
              }
            }
          ],
          "num_records": 10,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/ports?fields=uuid,name,type"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific physical port
        The following output displays the response when a specific physical port is requested. The system returns an error when there is no port with the requested UUID. Also, the speed field is set only if the state of the port is up.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/ports/2d37189f-f70d-11e8-b145-005056bb5b8e?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "2d37189f-f70d-11e8-b145-005056bb5b8e",
          "name": "e0d",
          "mac_address": "00:50:56:bb:62:2d",
          "type": "physical",
          "node": {
            "uuid": "faa56898-f70c-11e8-b145-005056bb5b8e",
            "name": "user-cluster-01",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/faa56898-f70c-11e8-b145-005056bb5b8e"
              }
            }
          },
          "broadcast_domain": {
            "uuid": "36434bec-f70d-11e8-b145-005056bb5b8e",
            "name": "Default",
            "ipspace": {
              "name": "Default"
            },
            "_links": {
              "self": {
                "href": "/api/network/ethernet/broadcast-domains/36434bec-f70d-11e8-b145-005056bb5b8e"
              }
            }
          },
          "enabled": true,
          "state": "up",
          "mtu": 1500,
          "speed": "1000",
          "_links": {
            "self": {
              "href": "/api/network/ethernet/ports/2d37189f-f70d-11e8-b145-005056bb5b8e"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific VLAN port
        The following output displays the response when a specific VLAN port is requested. The system returns an error when there is no port with the requested UUID. Also, the speed field is set only if the state of the port is up.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/ports/42e25145-f97d-11e8-ade9-005056bb7fc8?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "42e25145-f97d-11e8-ade9-005056bb7fc8",
          "name": "e0e-100",
          "mac_address": "00:50:56:bb:52:2f",
          "type": "vlan",
          "node": {
            "uuid": "6042cf47-f70c-11e8-abdf-005056bb7fc8",
            "name": "user-cluster-02",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/6042cf47-f70c-11e8-abdf-005056bb7fc8"
              }
            }
          },
          "enabled": true,
          "state": "up",
          "mtu": 1500,
          "speed": "1000",
          "vlan": {
            "tag": 100,
            "base_port": {
              "uuid": "35deff03-f70d-11e8-abdf-005056bb7fc8",
              "name": "e0e",
              "node": {
                "name": "user-cluster-02"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/35deff03-f70d-11e8-abdf-005056bb7fc8"
                }
              }
            }
          },
          "_links": {
            "self": {
              "href": "/api/network/ethernet/ports/42e25145-f97d-11e8-ade9-005056bb7fc8"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific LAG port
        The following output displays the response when a specific LAG port is requested. The system returns an error when there is no port with the requested UUID. Also, the speed and lag.active_ports fields are set only if the state of the port is up.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/ports/569e0abd-f97d-11e8-ade9-005056bb7fc8?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "569e0abd-f97d-11e8-ade9-005056bb7fc8",
          "name": "a0a",
          "mac_address": "02:50:56:bb:7f:c8",
          "type": "lag",
          "node": {
            "uuid": "6042cf47-f70c-11e8-abdf-005056bb7fc8",
            "name": "user-cluster-02",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/6042cf47-f70c-11e8-abdf-005056bb7fc8"
              }
            }
          },
          "enabled": true,
          "state": "up",
          "mtu": 1500,
          "speed": "1000",
          "lag": {
            "mode": "singlemode",
            "distribution_policy": "mac",
            "member_ports": [
              {
                "uuid": "35df318d-f70d-11e8-abdf-005056bb7fc8",
                "name": "e0f",
                "node": {
                  "name": "user-cluster-02"
                },
                "_links": {
                  "self": {
                    "href": "/api/network/ethernet/ports/35df318d-f70d-11e8-abdf-005056bb7fc8"
                  }
                }
              },
              {
                "uuid": "35df5bad-f70d-11e8-abdf-005056bb7fc8",
                "name": "e0g",
                "node": {
                  "name": "user-cluster-02"
                },
                "_links": {
                  "self": {
                    "href": "/api/network/ethernet/ports/35df5bad-f70d-11e8-abdf-005056bb7fc8"
                  }
                }
              },
              {
                "uuid": "35df9926-f70d-11e8-abdf-005056bb7fc8",
                "name": "e0h",
                "node": {
                  "name": "user-cluster-02"
                },
                "_links": {
                  "self": {
                    "href": "/api/network/ethernet/ports/35df9926-f70d-11e8-abdf-005056bb7fc8"
                  }
                }
              }
            ],
            "active_ports": [
              {
                "uuid": "35df318d-f70d-11e8-abdf-005056bb7fc8",
                "name": "e0f",
                "_links": {
                  "self": {
                    "href": "/api/network/ethernet/ports/35df318d-f70d-11e8-abdf-005056bb7fc8"
                  }
                }
              }
            ]
          },
          "_links": {
            "self": {
              "href": "/api/network/ethernet/ports/569e0abd-f97d-11e8-ade9-005056bb7fc8"
            }
          }
        }
        ```
        ---
        ### Retrieving all LAG (ifgrp) ports in the cluster
        This command retrieves all LAG ports in the cluster (that is, all ports with type=LAG). The example shows how to filter a GET collection based on type.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ethernet/ports?type=lag&node.name=user-cluster-01&fields=name,enabled,speed,mtu" -H  "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "0c226db0-4b63-11e9-8113-005056bbe040",
              "name": "a0b",
              "type": "lag",
              "node": {
                "name": "user-cluster-01"
              },
              "enabled": true,
              "mtu": 1500,
              "speed": "1000",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/0c226db0-4b63-11e9-8113-005056bbe040"
                }
              }
            },
            {
              "uuid": "d3a84153-4b3f-11e9-a00d-005056bbe040",
              "name": "a0a",
              "type": "lag",
              "node": {
                "name": "user-cluster-01"
              },
              "enabled": true,
              "mtu": 1500,
              "speed": "1000",
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/d3a84153-4b3f-11e9-a00d-005056bbe040"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/ethernet/ports?fields=name,enabled,speed,mtu&type=lag&node.name=user-cluster-01"
            }
          }
        }
        ```
        ---
        ## Creating VLAN and LAG ports
        You can use the network ports POST API to create VLAN and LAG ports.
        <br/>
        ---
        ## Examples
        ### Creating a VLAN port
        The following output displays the record returned after the creation of a VLAN port on "e0e" and VLAN tag "100". Also, the VLAN port is added to the "Default" broadcast domain in the "Default" IPspace.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ethernet/ports?return_records=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{     \"type\": \"vlan\", \"node\": { \"name\": \"user-cluster-01\" }, \"broadcast_domain\": { \"name\": \"Default\", \"ipspace\": { \"name\": \"Default    \" } }, \"enabled\": true, \"vlan\": { \"tag\": 100, \"base_port\": { \"name\": \"e0e\", \"node\": { \"name\": \"user-cluster-01\" } } }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "88b2f682-fa42-11e8-a6d7-005056bb5b8e",
              "type": "vlan",
              "node": {
                "uuid": "faa56898-f70c-11e8-b145-005056bb5b8e",
                "name": "user-cluster-01",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/faa56898-f70c-11e8-b145-005056bb5b8e"
                  }
                }
              },
              "broadcast_domain": {
                "uuid": "36434bec-f70d-11e8-b145-005056bb5b8e",
                "name": "Default",
                "ipspace": {
                  "name": "Default"
                },
                "_links": {
                  "self": {
                    "href": "/api/network/ethernet/broadcast-domains/36434bec-f70d-11e8-b145-005056bb5b8e"
                  }
                }
              },
              "enabled": true,
              "vlan": {
                "tag": 100,
                "base_port": {
                  "uuid": "2d39df72-f70d-11e8-b145-005056bb5b8e",
                  "name": "e0e",
                  "node": {
                    "name": "user-cluster-01"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/2d39df72-f70d-11e8-b145-005056bb5b8e"
                    }
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/88b2f682-fa42-11e8-a6d7-005056bb5b8e"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating a LAG (ifgrp) port
        The following output displays the record returned after the creation of a LAG port with "e0f", "e0g" and "e0h" as member ports.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ethernet/ports?return_records=true" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{  \"type\": \"lag\",  \"node\": { \"name\": \"user-cluster-01\"  }, \"broadcast_domain\": { \"name\": \"Default\", \"ipspace\": { \"name\": \"Default\" } }, \"enabled\": true, \"lag\": { \"mode\": \"singlemode\", \"distribution_policy\": \"mac\", \"member_ports\": [ { \"name\": \"e0f\", \"node\": { \"name\": \"user-cluster-01\" } }, { \"name\": \"e0g\", \"node\": { \"name\": \"user-cluster-01\" }}, { \"name\": \"e0h\", \"node\": { \"name\": \"user-cluster-01\" } } ]  } }" -u admin:netapp1! -k
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "1807772a-fa4d-11e8-a6d7-005056bb5b8e",
              "type": "lag",
              "node": {
                "uuid": "faa56898-f70c-11e8-b145-005056bb5b8e",
                "name": "user-cluster-01"
              },
              "broadcast_domain": {
                "uuid": "36434bec-f70d-11e8-b145-005056bb5b8e",
                "name": "Default",
                "ipspace": {
                  "name": "Default"
                }
              },
              "enabled": true,
              "lag": {
                "mode": "singlemode",
                "distribution_policy": "mac",
                "member_ports": [
                  {
                    "uuid": "2d3c9adc-f70d-11e8-b145-005056bb5b8e",
                    "name": "e0f",
                    "node": {
                      "name": "user-cluster-01"
                    }
                  },
                  {
                    "uuid": "2d40b097-f70d-11e8-b145-005056bb5b8e",
                    "name": "e0g",
                    "node": {
                      "name": "user-cluster-01"
                    }
                  },
                  {
                    "uuid": "2d46d01e-f70d-11e8-b145-005056bb5b8e",
                    "name": "e0h",
                    "node": {
                      "name": "user-cluster-01"
                    }
                  }
                ]
              }
            }
          ]
        }
        ```
        ---
        ## Updating ports
        You can use the network ports PATCH API to update the attributes of ports.
        <br/>
        ---
        ## Examples
        ### Updating the broadcast domain of a port
        The following PATCH request removes the port from the current broadcast domain and adds it to the specified broadcast domain.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ethernet/ports/6867efaf-d702-11e8-994f-005056bbc994" -H  "accept: application/hal+json" -H  "Content-Type: application/json" -d "{ \"broadcast_domain\": { \"name\": \"Default\", \"ipspace\": { \"name\": \"Default\" }}}"
        ```
        ---
        ### Updating the admin status of a port
        The following PATCH request brings the specified port down.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ethernet/ports/51d3ab39-d86d-11e8-aca6-005056bbc994" -H  "accept: application/hal+json" -H  "Content-Type: application/json" -d "{ \"enabled\": \"false\" }"
        ```
        ---
        ## Deleting ports
        You can use the network ports DELETE API to delete VLAN and LAG ports in the cluster. Note that physical ports cannot be deleted.
        Deleting a port also removes the port from the broadcast domain.
        ---
        ## Example
        ### Deleting a VLAN port
        The network ports DELETE API is used to delete a VLAN port.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ports/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ethernet/ports/6867efaf-d702-11e8-994f-005056bbc994" -H  "accept: application/hal+json" -H  "Content-Type: application/json"
        ```
        ---
      tags:
      - networking
  /network/ethernet/ports/{uuid}:
    delete:
      description: |-
        Deletes a VLAN or LAG.
        ### Related ONTAP commands
        * `network port ifgrp delete`
        * `network port vlan delete`

        ### Learn more
        * [`DOC /network/ethernet/ports`](#docs-networking-network_ethernet_ports)
      operationId: network_ethernet_port_delete
      parameters:
      - description: Port UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376858 | Port already has an interface bound. |
            | 1966189 | Port is the home port or current port of an interface. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |-
        Retrieves the details of a physical port, VLAN, or LAG.
        ### Related ONTAP commands
        * `network port show`
        * `network port ifgrp show`
        * `network port vlan show`

        ### Learn more
        * [`DOC /network/ethernet/ports`](#docs-networking-network_ethernet_ports)
      operationId: network_ethernet_port_get
      parameters:
      - description: Port UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/port'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates a port.
        ### Related ONTAP commands
        * `network port broadcast-domain add-ports`
        * `network port broadcast-domain remove-ports`
        * `network port ifgrp modify`
        * `network port modify`
        * `network port vlan modify`

        ### Learn more
        * [`DOC /network/ethernet/ports`](#docs-networking-network_ethernet_ports)
      operationId: network_ethernet_port_modify
      parameters:
      - description: Port UUID
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/port'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376361 | Port is already a member of a LAG. |
            | 1377562 | Port cannot be used because it is currently the home port or current port of an interface. |
            | 1377563 | Port is already a member of a LAG. |
            | 1967087 | The specified broadcast domain UUID is not valid. |
            | 1967088 | The specified broadcast domain name does not exist in the specified IPspace. |
            | 1967089 | The specified broadcast domain UUID, name and IPspace name do not match. |
            | 1967094 | The specified LAG member port UUID is not valid. |
            | 1967095 | The specified LAG member port name and node name combination is not valid. |
            | 1967096 | The specified node does not match the specified LAG member port node. |
            | 1967097 | The specified LAG member ports UUID, name, and node name do not match. |
            | 1967148 | Failure to remove port from broadcast domain. |
            | 1967149 | Failure to add port to broadcast domain. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/fc/interfaces:
    get:
      description: |
        Retrieves FC interfaces.
        ### Related ONTAP commands
        * `network interface show`
        * `vserver fcp interface show`
        ### Learn more
        * [`DOC /network/fc/interfaces`](#docs-networking-network_fc_interfaces)
      operationId: fc_interface_collection_get
      parameters:
      - description: Filter by location.port.name
        in: query
        name: location.port.name
        type: string
      - description: Filter by location.port.node.name
        in: query
        name: location.port.node.name
        type: string
      - description: Filter by location.port.uuid
        in: query
        name: location.port.uuid
        type: string
      - description: Filter by location.node.uuid
        in: query
        name: location.node.uuid
        type: string
      - description: Filter by location.node.name
        in: query
        name: location.node.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by wwnn
        in: query
        name: wwnn
        type: string
      - description: Filter by port_address
        in: query
        name: port_address
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by wwpn
        in: query
        name: wwpn
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by data_protocol
        in: query
        name: data_protocol
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_interface_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |
        Creates an FC interface.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the FC interface.
        * `name` - Name of the FC interface.
        * `location.port.uuid` or both `location.port.name` and `location.port.node.name` - FC port on which to create the FC interface.
        * `data_protocol` - Data protocol for the FC interface.
        ### Default property values
        If not specified in POST, the following default property values are assigned.
        * `enabled` - _true_
        ### Related ONTAP commands
        * `network interface create`
        ### Learn more
        * [`DOC /network/fc/interfaces`](#docs-networking-network_fc_interfaces)
      operationId: fc_interface_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new FC interface.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/fc_interface'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fc_interface_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966140 | An interface with the same name already exists. |
            | 1966217 | The specified port is not valid on the node provided. |
            | 2621462 | The supplied SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5373966 | A Fibre Channel interface with the _fcp_ protocol cannot be created in an SVM that is configured for NVMe. |
            | 5374102 | The specified Fibre Channel interface cannot be created because the Fibre Channel adapter is down. Bring the adapter up and try again. |
            | 5374871 | The Fibre Channel port identified by the specified UUID does not refer to the same port as that identified by the specified node name and/or port name. |
            | 5374872 | If either `location.port.node.name` or `location.port.name` is supplied, both properties must be supplied. |
            | 5374873 | The Fibre Channel port must be specified using either `location.port.uuid` or `location.port.node.name` and `location.port.name`. |
            | 72089652 | An NVMe service must be created before creating a Fibre Channel interface using the NVMe over FC data protocol. |
            | 72089672 | The specified Fibre Channel port does not support the NVMe over FC data protocol. |
            | 72089900 | A Fibre Channel interface with the _fc\_nvme_ protocol cannot be created in an SVM that is configured for a SAN protocol. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        Fibre Channel (FC) interfaces are the logical endpoints for FC network connections to an SVM. An FC interface provides FC access to storage within the interface SVM using either Fibre Channel Protocol or NVMe over FC (NVMe/FC).<br/>
        The Fibre Channel interface REST API allows you to create, delete, update, and discover FC interfaces, and obtain status information for FC interfaces.<br/>
        An FC interface is created on an FC port which is located on a cluster node. The FC port must be specified to identify the location of the interface for a POST or PATCH request that relocates an interface. You can identify the port by supplying either the node and port names or the port UUID.
        ## Examples
        ### Creating an FC interface using the port node and name to identify the location
        This example uses the `return_records` query parameter to retrieve the newly created FC interface in the POST response.
        <br/>
        ```
        # The API:
        POST /api/network/fc/interfaces
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/network/fc/interfaces?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "name": "lif1", "location": { "port": { "name": "0a", "node": { "name": "node1" } } }, "data_protocol": "fcp" }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "cf300f5c-db83-11e8-bd46-005056bba0e0",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/cf300f5c-db83-11e8-bd46-005056bba0e0"
                  }
                }
              },
              "uuid": "f6045b92-dec7-11e8-a733-005056bba0e0",
              "name": "lif1",
              "location": {
                "node": {
                  "uuid": "bafe9b9f-db81-11e8-bd46-005056bba0e0",
                  "name": "node1",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/bafe9b9f-db81-11e8-bd46-005056bba0e0"
                    }
                  }
                },
                "port": {
                  "uuid": "300c1ae3-db82-11e8-bd46-005056bba0e0",
                  "name": "0a",
                  "node": {
                    "name": "node1"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/fc/ports/300c1ae3-db82-11e8-bd46-005056bba0e0"
                    }
                  }
                }
              },
              "enabled": true,
              "state": "down",
              "data_protocol": "fcp",
              "wwpn": "20:04:00:50:56:bb:a0:e0",
              "wwnn": "20:00:00:50:56:bb:a0:e0",
              "port_address": "9da2cb1",
              "_links": {
                "self": {
                  "href": "/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an FC interface using the port UUID to identify the location
        This example uses the `return_records` query parameter to retrieve the newly created FC interface in the POST response.
        <br/>
        ```
        # The API:
        POST /api/network/fc/interfaces
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/network/fc/interfaces?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm3" }, "name": "lif2", "location": { "port": { "uuid": "24bb636a-db83-11e8-9a49-005056bb1ec6" } }, "data_protocol": "fc_nvme" }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "a5060466-dbab-11e8-bd46-005056bba0e0",
                "name": "svm3",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/a5060466-dbab-11e8-bd46-005056bba0e0"
                  }
                }
              },
              "uuid": "cdeb5591-dec9-11e8-a733-005056bba0e0",
              "name": "lif2",
              "location": {
                "node": {
                  "uuid": "e85aa147-db83-11e8-9a48-005056bb1ec6",
                  "name": "node3",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/e85aa147-db83-11e8-9a48-005056bb1ec6"
                    }
                  }
                },
                "port": {
                  "uuid": "24bb636a-db83-11e8-9a49-005056bb1ec6",
                  "name": "1b",
                  "node": {
                    "name": "node3"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/fc/ports/24bb636a-db83-11e8-9a49-005056bb1ec6"
                    }
                  }
                }
              },
              "enabled": true,
              "state": "down",
              "data_protocol": "fc_nvme",
              "wwpn": "20:05:00:50:56:bb:a0:e0",
              "wwnn": "20:02:00:50:56:bb:a0:e0",
              "port_address": "612e202b",
              "_links": {
                "self": {
                  "href": "/api/network/fc/interfaces/cdeb5591-dec9-11e8-a733-005056bba0e0"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving all properties for all FC interfaces
        This example uses the `fields` query parameter to retrieve all properties.
        <br/>
        ```
        # The API:
        GET /api/network/fc/interfaces
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/network/fc/interfaces?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a5060466-dbab-11e8-bd46-005056bba0e0",
                "name": "svm3",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/a5060466-dbab-11e8-bd46-005056bba0e0"
                  }
                }
              },
              "uuid": "cdeb5591-dec9-11e8-a733-005056bba0e0",
              "name": "lif2",
              "location": {
                "node": {
                  "uuid": "e85aa147-db83-11e8-9a48-005056bb1ec6",
                  "name": "node3",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/e85aa147-db83-11e8-9a48-005056bb1ec6"
                    }
                  }
                },
                "port": {
                  "uuid": "24bb636a-db83-11e8-9a49-005056bb1ec6",
                  "name": "1b",
                  "node": {
                    "name": "node3"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/fc/ports/24bb636a-db83-11e8-9a49-005056bb1ec6"
                    }
                  }
                }
              },
              "enabled": true,
              "state": "down",
              "data_protocol": "fc_nvme",
              "wwpn": "20:05:00:50:56:bb:a0:e0",
              "wwnn": "20:02:00:50:56:bb:a0:e0",
              "port_address": "612e202b",
              "_links": {
                "self": {
                  "href": "/api/network/fc/interfaces/cdeb5591-dec9-11e8-a733-005056bba0e0"
                }
              }
            },
            {
              "svm": {
                "uuid": "cf300f5c-db83-11e8-bd46-005056bba0e0",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/cf300f5c-db83-11e8-bd46-005056bba0e0"
                  }
                }
              },
              "uuid": "f6045b92-dec7-11e8-a733-005056bba0e0",
              "name": "lif1",
              "location": {
                "node": {
                  "uuid": "bafe9b9f-db81-11e8-bd46-005056bba0e0",
                  "name": "node1",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/bafe9b9f-db81-11e8-bd46-005056bba0e0"
                    }
                  }
                },
                "port": {
                  "uuid": "300c1ae3-db82-11e8-bd46-005056bba0e0",
                  "name": "0a",
                  "node": {
                    "name": "node1"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/fc/ports/300c1ae3-db82-11e8-bd46-005056bba0e0"
                    }
                  }
                }
              },
              "enabled": true,
              "state": "down",
              "data_protocol": "fcp",
              "wwpn": "20:04:00:50:56:bb:a0:e0",
              "wwnn": "20:00:00:50:56:bb:a0:e0",
              "port_address": "9da2cb1",
              "_links": {
                "self": {
                  "href": "/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/fc/interfaces?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a list of selected FC interfaces
        This example uses property query parameters to retrieve FC interfaces configured for the FC Protocol that are set to _up_.
        <br/>
        ```
        # The API:
        GET /api/network/fc/interfaces
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/network/fc/interfaces?data_protocol=fcp&state=up' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "cf300f5c-db83-11e8-bd46-005056bba0e0",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/cf300f5c-db83-11e8-bd46-005056bba0e0"
                  }
                }
              },
              "uuid": "f6045b92-dec7-11e8-a733-005056bba0e0",
              "name": "lif1",
              "state": "up",
              "data_protocol": "fcp",
              "_links": {
                "self": {
                  "href": "/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/fc/interfaces?data_protocol=fcp&state=up"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific FC interface
        ```
        # The API:
        GET /api/network/fc/interfaces/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/network/fc/interfaces/cdeb5591-dec9-11e8-a733-005056bba0e0' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "a5060466-dbab-11e8-bd46-005056bba0e0",
            "name": "svm3",
            "_links": {
              "self": {
                "href": "/api/svm/svms/a5060466-dbab-11e8-bd46-005056bba0e0"
              }
            }
          },
          "uuid": "cdeb5591-dec9-11e8-a733-005056bba0e0",
          "name": "lif2",
          "location": {
            "node": {
              "uuid": "e85aa147-db83-11e8-9a48-005056bb1ec6",
              "name": "node3",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/e85aa147-db83-11e8-9a48-005056bb1ec6"
                }
              }
            },
            "port": {
              "uuid": "24bb636a-db83-11e8-9a49-005056bb1ec6",
              "name": "1b",
              "node": {
                "name": "node3"
              },
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/24bb636a-db83-11e8-9a49-005056bb1ec6"
                }
              }
            }
          },
          "enabled": true,
          "state": "down",
          "data_protocol": "fc_nvme",
          "wwpn": "20:05:00:50:56:bb:a0:e0",
          "wwnn": "20:02:00:50:56:bb:a0:e0",
          "port_address": "612e202b",
          "_links": {
            "self": {
              "href": "/api/network/fc/interfaces/cdeb5591-dec9-11e8-a733-005056bba0e0"
            }
          }
        }
        ```
        ---
        ## Disabling an FC interface
        When updating certain properties or deleting an FC interface, the interface must first be disabled using the following:
        <br/>
        ```
        # The API:
        PATCH /api/network/fc/interfaces/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0' -H 'accept: application/hal+json' -d '{ "enabled": false }'
        ```
        ---
        ### Moving an FC interface to a new node and port
        To move an FC interface to another node or port, the destination FC port must be specified in a PATCH request. Either the port UUID or node and port names can be used to identify the port.<br/>
        Note that only FC interfaces configured for the FC Protocol can be moved. FC interfaces configured for NVMe/FC cannot be moved. The interface must also be set to the disabled state before being moved.
        <br/>
        ```
        # The API:
        PATCH /api/network/fc/interfaces/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0' -H 'accept: application/hal+json' -d '{ "location": { "port": { "uuid": "a1dc7aa5-db83-11e8-9ef7-005056bbbbcc" } } }'
        ```
        ---
        ### Deleting an FC interface
        The FC interface must be disabled before being deleted.
        <br/>
        ```
        # The API:
        DELETE /api/network/fc/interfaces/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/network/fc/interfaces/f6045b92-dec7-11e8-a733-005056bba0e0' -H 'accept: application/hal+json'
        ```
      tags:
      - networking
  /network/fc/interfaces/{uuid}:
    delete:
      description: |
        Deletes an FC interface.
        ### Related ONTAP commands
        * `network interface delete`
        ### Learn more
        * [`DOC /network/fc/interfaces`](#docs-networking-network_fc_interfaces)
      operationId: fc_interface_delete
      parameters:
      - description: |
          The unique identifier for the FC interface.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 53280992 | The FC interface could not be deleted because it is enabled. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |
        Retrieves an FC interface.
        ### Related ONTAP commands
        * `network interface show`
        * `vserver fcp interface show`
        ### Learn more
        * [`DOC /network/fc/interfaces`](#docs-networking-network_fc_interfaces)
      operationId: fc_interface_get
      parameters:
      - description: |
          The unique identifier for the FC interface.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_interface'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |
        Updates an FC interface.
        ### Related ONTAP commands
        * `network interface modify`
        ### Learn more
        * [`DOC /network/fc/interfaces`](#docs-networking-network_fc_interfaces)
      operationId: fc_interface_modify
      parameters:
      - description: |
          The unique identifier for the FC interface.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the FC interface.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/fc_interface'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966140 | An interface with the same name already exists. |
            | 1966217 | The specified port is not valid on the node provided. |
            | 1966238 | The node or port of an active SAN data interface cannot be changed. |
            | 1966702 | The destination node is not healthy. |
            | 5374579 | The SAN Kernel Agent on the node is unavailable. |
            | 5374870 | A partial failure occurred; renaming the interface failed. Correct the error and resubmit the request. |
            | 5374871 | The Fibre Channel port identified by the specified UUID does not refer to the same port as that identified by the specified node name and/or port name. |
            | 5374872 | If either `location.port.node.name` or `location.port.name` is supplied, both properties must be supplied. |
            | 72089674 | You cannot move a Fibre Channel interface configured for the NVMe over FC data protocol. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/fc/logins:
    get:
      description: |
        Retrieves FC logins.
        ### Related ONTAP commands
        * `vserver fcp initiator show`
        ### Learn more
        * SAN: [`DOC /network/fc/logins`](#docs-SAN-network_fc_logins)
        * NVMe: [`DOC /network/fc/logins`](#docs-NVMe-network_fc_logins)
      operationId: fc_login_collection_get
      parameters:
      - description: Filter by interface.wwpn
        in: query
        name: interface.wwpn
        type: string
      - description: Filter by interface.name
        in: query
        name: interface.name
        type: string
      - description: Filter by interface.uuid
        in: query
        name: interface.uuid
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by igroups.uuid
        in: query
        name: igroups.uuid
        type: string
      - description: Filter by igroups.name
        in: query
        name: igroups.name
        type: string
      - description: Filter by initiator.aliases
        in: query
        name: initiator.aliases
        type: string
      - description: Filter by initiator.wwpn
        in: query
        name: initiator.wwpn
        type: string
      - description: Filter by initiator.wwnn
        in: query
        name: initiator.wwnn
        type: string
      - description: Filter by initiator.port_address
        in: query
        name: initiator.port_address
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_login_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        Fibre Channel (FC) logins represent connections formed by FC initiators that have successfully logged in to ONTAP. This represents the FC login on which higher-level protocols such as Fibre Channel Protocol and NVMe over FC (NVMe/FC) rely.<br/>
        The Fibre Channel logins REST API provides information about active FC logins.
        ## Examples
        ### Retrieving all FC logins
        ```
        # The API:
        GET /api/network/fc/logins
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/logins" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "056403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/056403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "01056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif1",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/01056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8b:21:2f:07:00:00:00:00"
              },
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/01056403-1383-bc4b-786a-93e8ea35969d/8b%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            },
            {
              "svm": {
                "uuid": "056403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/056403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "02056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif2",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/02056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8c:21:2f:07:00:00:00:00"
              },
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/02056403-1383-bc4b-786a-93e8ea35969d/8c%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            },
            {
              "svm": {
                "uuid": "156403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/156403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "03056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif3",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/00056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8a:21:2f:07:00:00:00:00"
              },
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/00056403-1383-bc4b-786a-93e8ea35969d/8a%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/network/fc/logins"
            }
          }
        }
        ```
        ---
        ### Retrieving all FC logins with data protocol _fcp_ in SVM _svm1_
        The `svm.name` and `protocol` query parameters are used to perform the query.
        <br/>
        ```
        # The API:
        GET /api/network/fc/logins
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/logins?svm.name=svm1&protocol=fcp" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "056403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/056403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "01056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif2",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/01056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8b:21:2f:07:00:00:00:00"
              },
              "protocol": "fcp",
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/01056403-1383-bc4b-786a-93e8ea35969d/8b%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            },
            {
              "svm": {
                "uuid": "056403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/056403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "02056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif3",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/02056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8c:21:2f:07:00:00:00:00"
              },
              "protocol": "fcp",
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/02056403-1383-bc4b-786a-93e8ea35969d/8c%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/fc/logins?svm.name=svm1&protocol=fcp"
            }
          }
        }
        ```
        ---
        ### Retrieving all FC logins for initiators belonging to _igroup1_ and returning all of their properties
        The `igroups.name` query parameter is used to perform the query. The `fields` query parameter is used to return all of the properties.
        <br/>
        ```
        # The API:
        GET /api/network/fc/logins
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/logins?igroups.name=igroup1&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "056403da-83a7-4b13-bc78-6a93e8ea3596",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/056403da-83a7-4b13-bc78-6a93e8ea3596"
                  }
                }
              },
              "interface": {
                "uuid": "01056403-1383-bc4b-786a-93e8ea35969d",
                "name": "lif2",
                "wwpn": "8b:21:2f:07:00:00:00:00",
                "_links": {
                  "self": {
                    "href": "/api/network/fc/interfaces/01056403-1383-bc4b-786a-93e8ea35969d"
                  }
                }
              },
              "initiator": {
                "wwpn": "8b:21:2f:07:00:00:00:00",
                "wwnn": "95:21:2f:07:00:00:00:00"
              },
              "igroups": [
                {
                  "uuid": "243bbb8a-46e9-4b2d-a508-a62dc93df9d1",
                  "name": "igroup1",
                  "_links": {
                    "self": {
                      "href": "/api/protocols/san/igroups/243bbb8a-46e9-4b2d-a508-a62dc93df9d1"
                    }
                  }
                }
              ],
              "port_address": "8aa53",
              "protocol": "fcp",
              "_links": {
                "self": {
                  "href": "/api/network/fc/logins/01056403-1383-bc4b-786a-93e8ea35969d/8b%3A21%3A2f%3A07%3A00%3A00%3A00%3A00"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/fc/logins?igroups.name=igroup1&fields=*"
            }
          }
        }
        ```
      tags:
      - SAN
      - NVMe
  /network/fc/logins/{interface.uuid}/{initiator.wwpn}:
    get:
      description: |
        Retrieves an FC login.
        ### Related ONTAP commands
        * `vserver fcp initiator show`
        ### Learn more
        * SAN: [`DOC /network/fc/logins`](#docs-SAN-network_fc_logins)
        * NVMe: [`DOC /network/fc/logins`](#docs-NVMe-network_fc_logins)
      operationId: fc_login_get
      parameters:
      - description: |
          The unique identifier of the FC interface through which the initiator logged in.
        in: path
        name: interface.uuid
        required: true
        type: string
      - description: |
          The world wide port name (WWPN) of the initiator.
        in: path
        name: initiator.wwpn
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_login'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4 | The Fibre Channel login specified does not exist. |
            | 5373983 | An invalid WWPN was supplied. |
            | 5374881 | The Fibre Channel interface specified does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
      - NVMe
  /network/fc/ports:
    get:
      description: |
        Retrieves FC ports.<br/>
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `fabric.name`
        ### Related ONTAP commands
        * `network fcp adapter show`
        ### Learn more
        * [`DOC /network/fc/ports`](#docs-networking-network_fc_ports)
      operationId: fc_port_collection_get
      parameters:
      - description: Filter by speed.maximum
        in: query
        name: speed.maximum
        type: string
      - description: Filter by speed.configured
        in: query
        name: speed.configured
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by transceiver.manufacturer
        in: query
        name: transceiver.manufacturer
        type: string
      - description: Filter by transceiver.capabilities
        in: query
        name: transceiver.capabilities
        type: integer
      - description: Filter by transceiver.form-factor
        in: query
        name: transceiver.form-factor
        type: string
      - description: Filter by transceiver.part_number
        in: query
        name: transceiver.part_number
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by physical_protocol
        in: query
        name: physical_protocol
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by fabric.port_address
        in: query
        name: fabric.port_address
        type: string
      - description: Filter by fabric.connected_speed
        in: query
        name: fabric.connected_speed
        type: integer
      - description: Filter by fabric.name
        in: query
        name: fabric.name
        type: string
      - description: Filter by fabric.switch_port
        in: query
        name: fabric.switch_port
        type: string
      - description: Filter by fabric.connected
        in: query
        name: fabric.connected
        type: boolean
      - description: Filter by wwnn
        in: query
        name: wwnn
        type: string
      - description: Filter by wwpn
        in: query
        name: wwpn
        type: string
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by supported_protocols
        in: query
        name: supported_protocols
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        Fibre Channel (FC) ports are the physical ports of FC adapters on ONTAP cluster nodes that can be connected to FC networks to provide FC network connectivity. An FC port defines the location of an FC interface within the ONTAP cluster.<br/>
        The Fibre Channel port REST API allows you to discover FC ports, obtain status information for FC ports, and configure FC port properties. POST and DELETE requests are not supported. You must physically add and remove FC adapters to ONTAP nodes to create and remove ports from the ONTAP cluster.
        ## Examples
        ### Retrieving all FC ports
        ```
        # The API:
        GET /api/network/fc/ports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/ports" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b20f8-b047-11e8-9af3-005056bb838e",
              "name": "0a",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b20f8-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b23f7-b047-11e8-9af3-005056bb838e",
              "name": "0b",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b23f7-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b25ba-b047-11e8-9af3-005056bb838e",
              "name": "0c",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b25ba-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b2748-b047-11e8-9af3-005056bb838e",
              "name": "0d",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b2748-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b28c2-b047-11e8-9af3-005056bb838e",
              "name": "0e",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b28c2-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b2a7b-b047-11e8-9af3-005056bb838e",
              "name": "0f",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b2a7b-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              },
              "uuid": "931b2e2b-b047-11e8-9af3-005056bb838e",
              "name": "1b",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b2e2b-b047-11e8-9af3-005056bb838e"
                }
              }
            }
          [,
          "num_records": 8,
          "_links": {
            "self": {
              "href": "/api/network/fc/ports"
            }
          }
        }
        ```
        ---
        ### Retrieving all FC ports with state _online_
        The `state` query parameter is used to perform the query.
        <br/>
        ```
        # The API:
        GET /api/network/fc/ports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/ports?state=online" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              }
              "uuid": "931b20f8-b047-11e8-9af3-005056bb838e",
              "name": "0a",
              "state": "online",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b20f8-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              }
              "uuid": "931b23f7-b047-11e8-9af3-005056bb838e",
              "name": "0b",
              "state": "online",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b23f7-b047-11e8-9af3-005056bb838e"
                }
              }
            },
            {
              "node": {
                "name": "node1",
                "uuid": "3c768e01-1abc-4b3b-b7c0-629ceb62a497",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/3c768e01-1abc-4b3b-b7c0-629ceb62a497"
                  }
                }
              }
              "uuid": "931b25ba-b047-11e8-9af3-005056bb838e",
              "name": "0c",
              "state": "online",
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/931b25ba-b047-11e8-9af3-005056bb838e"
                }
              }
            }
          [,
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/network/fc/ports?state=online"
            }
          }
        }
        ```
        ---
        ### Retrieving an FC port
        ```
        # The API:
        GET /api/network/fc/ports/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/ports/931b20f8-b047-11e8-9af3-005056bb838e" -H "accept: application/hal+json"
        # The response:
        {
          "node": {
            "name": "node1",
            "uuid": "5a534a72-b047-11e8-9af3-005056bb838e",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/5a534a72-b047-11e8-9af3-005056bb838e"
              }
            }
          },
          "uuid": "931b20f8-b047-11e8-9af3-005056bb838e",
          "name": "0a",
          "description": "Fibre Channel Target Adapter 0a (ACME Fibre Channel Adapter, rev. 1.0.0, 8G)",
          "enabled": true,
          "fabric": {
            "connected": true,
            "connected_speed": 8,
            "name": "55:0e:b1:a0:20:40:80:00",
            "port_address": "52100",
            "switch_port": "ssan-g620-03:1"
          },
          "physical_protocol": "fibre_channel",
          "speed": {
            "maximum": "8",
            "configured": "auto"
          },
          "state": "online",
          "supported_protocols": [
            "fcp"
          ],
          "transceiver": {
            "form_factor": "SFP",
            "manufacturer": "ACME",
            "capabilities": [
              4,
              8
            ],
            "part_number": "1000"
          },
          "wwnn": "50:0a:09:80:bb:83:8e:00",
          "wwpn": "50:0a:09:82:bb:83:8e:00",
          "_links": {
            "self": {
              "href": "/api/network/fc/ports/931b20f8-b047-11e8-9af3-005056bb838e"
            }
          }
        }
        ```
        ---
        ### Disabling an FC port
        If an active FC interface exists on an FC port, the port cannot be disabled.
        <br/>
        ```
        # The API:
        PATCH /api/network/fc/ports/{uuid}
        # The call:
        curl -X PATCH "http://<mgmt-ip>/api/network/fc/ports/931b20f8-b047-11e8-9af3-005056bb838e" -H "accept: application/hal+json" -d '{ "enabled": false }'
        ```
      tags:
      - networking
  /network/fc/ports/{uuid}:
    get:
      description: |
        Retrieves an FC port.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `fabric.name`
        ### Related ONTAP commands
        * `network fcp adapter show`
        ### Learn more
        * [`DOC /network/fc/ports`](#docs-networking-network_fc_ports)
      operationId: fc_port_get
      parameters:
      - description: |
          The unique identifier for the FC port.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fc_port'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |
        Updates an FC port.
        ### Related ONTAP commands
        * `network fcp adapter modify`
        ### Learn more
        * [`DOC /network/fc/ports`](#docs-networking-network_fc_ports)
      operationId: fc_port_modify
      parameters:
      - description: |
          The unique identifier for the FC port.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the FC port.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/fc_port'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374085    | The node where the Fibre Channel port is located is offline. |
            | 5374087    | The Fibre Channel port has active Fibre Channel interfaces and cannot be disabled. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/fc/wwpn-aliases:
    get:
      description: |
        Retrieves FC WWPN aliases.
        ### Related ONTAP commands
        * `vserver fcp wwpn-alias show`
        ### Learn more
        * [`DOC /network/fc/wwpn-aliases`](#docs-SAN-network_fc_wwpn-aliases)
      operationId: wwpn_alias_collection_get
      parameters:
      - description: Filter by wwpn
        in: query
        name: wwpn
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by alias
        in: query
        name: alias
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/wwpn_alias_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates an FC WWPN alias.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the FC alias.
        * `alias` - Name of the FC alias.
        * `wwpn` - FC WWPN for which to create the alias.
        ### Related ONTAP commands
        * `vserver fcp wwpn-alias set`
        ### Learn more
        * [`DOC /network/fc/wwpn-aliases`](#docs-SAN-network_fc_wwpn-aliases)
      operationId: wwpn_alias_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new WWPN alias.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/wwpn_alias'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/wwpn_alias_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254317    | The alias already exists. |
            | 1260882    | The supplied SVM does not exist. |
            | 2621462    | The supplied SVM does not exist. |
            | 2621706    | Both the SVM UUID and SVM name were supplied, but do not refer to the same SVM. |
            | 2621707    | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5373982    | An invalid WWPN was supplied. The valid WWN format is XX:XX:XX:XX:XX:XX:XX:XX, where X is a hexadecimal digit. Example: "01:02:03:04:0a:0b:0c:0d". |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        A worldwide port name (WWPN) is a unique 64-bit identifier for a Fibre Channel (FC) initiator. It is displayed as a 16-character hexadecimal value. SAN administrators might find it easier to identify FC initiators using an alias, especially in larger SANs.<br/>
        The WWPN alias REST API allows you to create, delete, and discover aliases for WWPNs.<br/>
        Multiple aliases can be created for a WWPN, but you cannot use the same alias for multiple WWPNs.<br/>
        An alias can consist of up to 32 characters. Valid characters are:
        * A through Z
        * a through z
        * numbers 0 through 9
        * hyphen ("-")
        * underscore ("_")
        * left and right braces ("{", "}")
        * period (".")
        ## Examples
        ### Creating a WWPN alias
        ```
        # The API:
        POST /api/network/fc/wwpn-aliases
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/fc/wwpn-aliases" -H "accept: application/json" -d '{ "svm": { "name": "svm1" }, "wwpn": "50:0a:09:82:b4:30:25:05", "alias": "alias3" }'
        ```
        ### Retrieving all properties of all WWPN aliases
        The `fields` query parameter is used to request that all properties be returned.
        <br/>
        ```
        # The API:
        GET /api/network/fc/wwpn-aliases
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/wwpn-aliases?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "68589d3d-7efa-11e8-9eed-005056b43025",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/68589d3d-7efa-11e8-9eed-005056b43025"
                  }
                }
              },
              "alias": "alias1",
              "wwpn": "20:00:00:50:56:b4:30:25",
              "_links": {
                "self": {
                  "href": "/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias1"
                }
              }
            },
            {
              "svm": {
                "uuid": "68589d3d-7efa-11e8-9eed-005056b43025",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/68589d3d-7efa-11e8-9eed-005056b43025"
                  }
                }
              },
              "alias": "alias2",
              "wwpn": "50:0a:09:82:b4:30:25:00",
              "_links": {
                "self": {
                  "href": "/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias2"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/fc/wwpn-aliases"
            }
          }
        }
        ```
        ---
        ### Retrieving all WWPN aliases named "alias1"
        The `alias` query parameter is used to specify a query for the value "alias1".
        <br/>
        ```
        # The API:
        GET /api/network/fc/wwpn-aliases
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/wwpn-aliases?alias=alias1" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "68589d3d-7efa-11e8-9eed-005056b43025",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/68589d3d-7efa-11e8-9eed-005056b43025"
                  }
                }
              },
              "alias": "alias1",
              "wwpn": "20:00:00:50:56:b4:30:25",
              "_links": {
                "self": {
                  "href": "/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias1"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/fc/wwpn-aliases?alias=alias1"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific WWPN alias
        The alias to be returned is identified by the UUID of its SVM and the alias name.
        <br/>
        ```
        # The API:
        GET /api/network/fc/wwpn-aliases/{svm.uuid}/{alias}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias2" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "68589d3d-7efa-11e8-9eed-005056b43025",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/68589d3d-7efa-11e8-9eed-005056b43025"
                  }
                }
              },
              "alias": "alias2",
              "wwpn": "50:0a:09:82:b4:30:25:00",
              "_links": {
                "self": {
                  "href": "/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias1"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/fc/wwpn-aliases?alias=alias1"
            }
          }
        }
        ```
        ---
        ### Deleting a WWPN alias
        The alias to delete is identified by the UUID of its SVM and the alias name.
        <br/>
        ```
        # The API:
        DELETE /api/network/fc/wwpn-aliases/{svm.uuid}/{alias}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/fc/wwpn-aliases/68589d3d-7efa-11e8-9eed-005056b43025/alias2" -H "accept: application/hal+json"
        ```
      tags:
      - SAN
  /network/fc/wwpn-aliases/{svm.uuid}/{alias}:
    delete:
      description: |
        Deletes an FC WWPN alias.
        ### Related ONTAP commands
        * `vserver fcp wwpn-alias remove`
        ### Learn more
        * [`DOC /network/fc/wwpn-aliases`](#docs-SAN-network_fc_wwpn-aliases)
      operationId: wwpn_alias_delete
      parameters:
      - description: |
          The unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: "The name of FC WWPN alias.\n"
        in: path
        name: alias
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1260882    | An SVM with the specified UUID does not exist. |
            | 5374046    | The alias could not be found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves an FC WWPN alias.
        ### Related ONTAP commands
        * `vserver fcp wwpn-alias show`
        ### Learn more
        * [`DOC /network/fc/wwpn-aliases`](#docs-SAN-network_fc_wwpn-aliases)
      operationId: wwpn_alias_get
      parameters:
      - description: |
          The unique identifier of the SVM in which the alias is found.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: "The name of FC WWPN alias.\n"
        in: path
        name: alias
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/wwpn_alias'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1260882    | The supplied SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /network/http-proxy:
    get:
      description: |-
        Retrieves the HTTP proxy configurations of all the SVMs and Cluster IPspaces.
        ### Related ONTAP commands
        * `vserver http-proxy show`

        ### Learn more
        * [`DOC /network/http-proxy`](#docs-networking-network_http-proxy)
      operationId: http_proxy_collection_get
      parameters:
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by port
        in: query
        name: port
        type: integer
      - description: Filter by server
        in: query
        name: server
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_http_proxy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates an HTTP proxy configuration for an SVM or a Cluster IPspace.
        Important notes:
        * IPv6 must be enabled if IPv6 family addresses are specified in the "server" field.
        * The server and the port combination specified using the "server" and "port" fields is validated during this operation. The validation will fail in the following scenarios:
          * The HTTP proxy service is not configured on the server.
          * The HTTP proxy service is not running on the specified port.
          * The server is unreachable.
        ### Required properties
        * SVM-scoped HTTP proxy
          * `svm.uuid` or `svm.name` - Existing SVM in which to create the HTTP proxy.
        * Cluster-scoped HTTP proxy
          * `ipspace.uuid` or `ipspace.name` - Exisitng Cluster IPspace in which to create the HTTP proxy.
        * `server` - HTTP proxy server FQDN or IP address.
        * `port` - HTTP proxy server port.
        ### Related ONTAP commands
        * `vserver http-proxy create`

        ### Learn more
        * [`DOC /network/http-proxy`](#docs-networking-network_http-proxy)
      operationId: http_proxy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/network_http_proxy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/network_http_proxy_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 26214473   | HTTP proxy configuration is not valid. |
            | 26214476   | The "IPspace" parameter should not be specified in the SVM context. |
            | 26214477   | The specified IPspace does not exist. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        Configuration of an HTTP proxy for an SVM or a Cluster IPspace.
        ## Retrieve HTTP proxy information
        The HTTP proxy GET operation retrieves all configurations for an SVM or a Cluster IPspace via '/api/cluster'.
        ## Examples
        ### Retrieving all fields for all HTTP proxy configurations
        ```
        # The API:
        /api/network/http-proxy
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/http-proxy?fields=*&return_records=true&return_timeout=15" -H  "accept: application/json"
        # The response:
        {
          "records": [
            {
              "uuid": "4133a1fc-7228-11e9-b40c-005056bb4f0c",
              "svm": {
                  "name": "vs1",
                  "uuid": "4133a1fc-7228-11e9-b40c-005056bb4f0c"
              },
              "server": "server1.example.com",
              "port": 3128
            },
            {
              "uuid": "96219ce3-7214-11e9-828c-005056bb4f0c",
              "svm": {
                  "name": "cluster-1",
                  "uuid": "96219ce3-7214-11e9-828c-005056bb4f0c"
              },
              "ipspace": {
                  "uuid": "7433520f-7214-11e9-828c-005056bb4f0c",
                  "name": "Default"
              },
              "server": "1.1.1.",
              "port": 3128
             }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving the HTTP proxy configuration for a specific SVM
        ```
        # The API:
        /api/network/http-proxy/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/http-proxy/96219ce3-7214-11e9-828c-005056bb4f0c" -H  "accept: application/json"
        # The response
        {
          "uuid": "96219ce3-7214-11e9-828c-005056bb4f0c",
          "svm": {
              "name": "cluster-1",
              "uuid": "96219ce3-7214-11e9-828c-005056bb4f0c"
          },
          "ipspace": {
              "uuid": "7433520f-7214-11e9-828c-005056bb4f0c",
              "name": "Default"
          },
          "server": "1.1.1.1",
          "port": 3128
        }
        ```
        ## Creating an HTTP proxy configuration
        You can use the HTTP proxy POST operation to create an HTTP proxy configuration for the specified SVM.
        ## Examples
        ### Creating an HTTP proxy configuration for a particular SVM
        ```
        # The API:
        /api/network/http-proxy
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/http-proxy" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{    \"port\": 3128,  \"server\": \"1.1.1.1\",  \"svm\": {      \"name\": \"cluster-1\"  }}"
        ```
        ### Creating an HTTP proxy configuration for a particular IPspace
        ```
        # The API:
        /api/network/http-proxy
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/http-proxy" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{  \"ipspace\": {    \"name\": \"Default\"  },  \"port\": 3128,  \"server\": \"1.1.1.1\"}"
        ```
        ## Update an HTTP proxy configuration for a specified SVM
        You can use the HTTP proxy PATCH operation to update the HTTP proxy configuration for the specified SVM.
        ## Example
        The following example shows how a PATCH operation is used to update an HTTP proxy configuration for a specific SVM:
        ```
        # The API:
        /api/network/http-proxy/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/http-proxy/96219ce3-7214-11e9-828c-005056bb4f0c" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{    \"port\": 3128,  \"server\": \"server2.example.com\"}"
        ```
        ## Delete an HTTP proxy configuration for a specified SVM
        You can use the HTTP proxy DELETE operation to delete the HTTP proxy configuration for the specified SVM.
        ## Example
        The following example shows how a DELETE operation is used to delete an HTTP proxy configuration for a specific SVM:
        ```
        # The API:
        /api/network/http-proxy/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/http-proxy/96219ce3-7214-11e9-828c-005056bb4f0c" -H  "accept: application/json"
        ```
      tags:
      - networking
  /network/http-proxy/{uuid}:
    delete:
      description: |-
        Deletes the HTTP proxy configuration of the specified SVM or Cluster IPspace.
        ### Related ONTAP commands
        * `vserver http-proxy delete`

        ### Learn more
        * [`DOC /network/http-proxy`](#docs-networking-network_http-proxy)
      operationId: http_proxy_delete
      parameters:
      - description: HTTP proxy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |-
        Displays the HTTP proxy server, port, and IPspace of the specified SVM or Cluster IPspace.
        ### Related ONTAP commands
        * `vserver http-proxy show`

        ### Learn more
        * [`DOC /network/http-proxy`](#docs-networking-network_http-proxy)
      operationId: http_proxy_get
      parameters:
      - description: HTTP proxy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_http_proxy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates the proxy server, port, username, and password parameters.
        Important notes:
        * IPv6 must be enabled if IPv6 family addresses are specified in the "server" field.
        * The server and the port combination specified using the "server" and "port" fields is validated during this operation. The validation will fail in the following scenarios:
          * The HTTP proxy service is not configured on the server.
          * The HTTP proxy service is not running on the specified port.
          * The server is unreachable.
        ### Related ONTAP commands
        * `vserver http-proxy modify`

        ### Learn more
        * [`DOC /network/http-proxy`](#docs-networking-network_http-proxy)
      operationId: http_proxy_modify
      parameters:
      - description: HTTP proxy UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/network_http_proxy'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 26214473   | The HTTP proxy configuration is not valid. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/ip/bgp/peer-groups:
    get:
      description: |-
        Retrieves the details of all BGP peer groups for VIP.
        ### Related ONTAP Commands
        * `network bgp peer-group show`

        ### Learn more
        * [`DOC /network/ip/bgp/peer-groups`](#docs-networking-network_ip_bgp_peer-groups)
      operationId: network_ip_bgp_peer_groups_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by peer.asn
        in: query
        name: peer.asn
        type: integer
      - description: Filter by peer.address
        in: query
        name: peer.address
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by local.interface.name
        in: query
        name: local.interface.name
        type: string
      - description: Filter by local.interface.ip.address
        in: query
        name: local.interface.ip.address
        type: string
      - description: Filter by local.interface.uuid
        in: query
        name: local.interface.uuid
        type: string
      - description: Filter by local.port.name
        in: query
        name: local.port.name
        type: string
      - description: Filter by local.port.node.name
        in: query
        name: local.port.node.name
        type: string
      - description: Filter by local.port.uuid
        in: query
        name: local.port.uuid
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/bgp_peer_group_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a new BGP peer group for VIP. Multipath-routing is turned on cluster-wide automatically if the peer group being created results in multiple paths being available for an existing or future VIP interface.<br/>
        ### Required properties
        * `name` - Name of the peer-group to create.
        * `ipspace.name` or `ipspace.uuid`
          * Required with local.interface.name to identify a local interface
          * Optional when local.interface.uuid is specified
        * `local.interface.uuid` or `local.interface.name`
          * Required when specifying an existing local interface.
        * `local.interface.name`, `local.ip` and `local.port`
          * Required to create a new local interface.
        * `peer.address` - IP address of the peer router
        ### Related ONTAP commands
        * `network bgp peer-group create`

        ### Learn more
        * [`DOC /network/ip/bgp/peer-groups`](#docs-networking-network_ip_bgp_peer-groups)
      operationId: network_ip_bgp_peer_groups_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Peer group parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/bgp_peer_group'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376963 | Duplicate IP address is specified. |
            | 1966133 | Netmask and address pair result in a network address. |
            | 1966267 | IPv6 addresses must have a prefix length of 64. |
            | 1966269 | IPv4 addresses must have a netmask length between 1 and 32. |
            | 1967082 | IPspace name and UUID must match if both are given. |
            | 1967155 | The specified local.port.name does not match the location.port.name for the specified local.interface. |
            | 1967156 | The specified local.port.node.name does not match the location.port.node.name for the specified local.interface. |
            | 1967157 | The specified local.port.uuid does not match the location.port.uuid for the specified local.interface. |
            | 1967158 | The specified local.interface.name does not exist in the associated IPspace. local.ip.address and local.ip.netmask are required to create a new LIF. |
            | 1967159 | local.interface does not support management-bgp service. |
            | 1967160 | The specified local.interface.name does not match the specified interface name of local.interface.uuid. |
            | 1967161 | The specified local.interface.uuid does not exist in the specified IPspace. |
            | 1967162 | Either local.interface or local.ip and local.port are required to specify a local LIF. |
            | 1967163 | The specified local.port.name does not match the specified port name of local.port.uuid. |
            | 1967164 | The specified local.port.node.name does not match the specified node name of local.port.uuid. |
            | 1967165 | The specified local.port does not exist. |
            | 1967166 | ipspace.uuid or ipspace.name must be provided with local.interface.name together to identify a LIF. |
            | 1967167 | Internal error. Failed to update BGP configuration for node. Retry the command, if necessary. |
            | 1967168 | Internal error. Failed to create a VIP port for IPspace on node. Retry the command, if necessary. |
            | 1967169 | Internal error. BGP configuration changed during the operation. Retry the command, if necessary. |
            | 1967170 | Internal error. VIP port configuration changed during the operation. Retry the command, if necessary. |
            | 1967171 | Internal error. Fail to access or update BGP peer group. Retry the command, if necessary. |
            | 1967172 | Peer group could not be updated because IPspace does not exist. Retry the command, if necessary. |
            | 1967173 | The specified local.ip.address does not match the address for the specified local.interface. |
            | 1967174 | The specified local.ip.netmask does not match the netmask for the specified local.interface. |
            | 1967176 | The specified local.interface.name does not exist in the associated IPspace. local.port.name, local.port.node.name, or local.port.uuid is required to create a new LIF. |
            | 1967177 | Internal error. Failed to access the local interface. Retry the command, if necessary. |
            | 1967178 | The IPv6 address specified with local.ip.address is not supported because it is link-local, multicast, v4-compatible, v4-mapped, loopback or "::". |
            | 1967179 | The IPv4 address specified with local.ip.address is not supported because it is multicast, loopback or 0.0.0.0. |
            | 53281985 | Internal error. Failed to update BGP peer group because BGP LIF moved during the operation. Wait a few minutes and try the command again. |
            | 53282006 | BGP peer group could not be updated to use a peer address because the value provided is not a valid peer address. If necessary, try the command again with a routable host address. |
            | 53282007 | BGP peer group could not be updated to use a peer address because the address represents a different address family to the address of the associated BGP LIF. If necessary, try the command again with a matching address family. |
            | 53282018 | Failed to create BGP peer group because an existing peer group has already established a BGP session between LIF and peer address. If necessary, try the command again with a different BGP LIF or a different peer address. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        The following operations are supported:
        * Creation: POST network/ip/bgp/peer-groups
        * Collection Get: GET network/ip/bgp/peer-groups
        * Instance Get: GET network/ip/bgp/peer-groups/{uuid}
        * Instance Patch: PATCH network/ip/bgp/peer-groups/{uuid}
        * Instance Delete: DELETE network/ip/bgp/peer-groups/{uuid}
        ## Retrieving network BGP sessions information
        The IP BGP peer-groups GET API retrieves and displays relevant information pertaining to the BGP peer-groups configured in the cluster. The response can contain a list of multiple BGP peer-groups or a specific peer-group. Each BGP peer-group represents a BGP session configured between a local interface and a peer router.
        ## Examples
        ### Retrieving all BGP peer-groups in the cluster
        The following example shows the list of all BGP peer-groups configured in a cluster.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/bgp/peer-groups" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "5f22ae9d-87b2-11e9-a3a6-005056bb81a4",
              "name": "pg1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/bgp/peer-groups/5f22ae9d-87b2-11e9-a3a6-005056bb81a4"
                }
              }
            },
            {
              "uuid": "5fd08be3-87b2-11e9-952f-005056bb2170",
              "name": "pg2",
              "_links": {
                "self": {
                  "href": "/api/network/ip/bgp/peer-groups/5fd08be3-87b2-11e9-952f-005056bb2170"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/ip/bgp/peer-groups"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific BGP peer-group
        The following example shows the response when a specific BGP peer-group is requested. The system returns an error when there is no peer-group with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/bgp/peer-groups/5fd08be3-87b2-11e9-952f-005056bb2170" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "5fd08be3-87b2-11e9-952f-005056bb2170",
          "name": "pg2",
          "ipspace": {
            "uuid": "84fd3375-879a-11e9-a3a6-005056bb81a4",
            "name": "Default",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/84fd3375-879a-11e9-a3a6-005056bb81a4"
              }
            }
          },
          "local": {
            "interface": {
              "uuid": "5e76a305-87b2-11e9-952f-005056bb2170",
              "name": "bgp2",
              "ip": {
                "address": "10.10.10.2"
              }
            },
            "port": {
              "uuid": "f8ff73de-879a-11e9-952f-005056bb2170",
              "name": "e0h",
              "node": {
                "name": "node1"
              }
            }
          },
          "peer": {
            "address": "10.10.10.1",
            "asn": 65501
          },
          "state": "up",
          "_links": {
            "self": {
              "href": "/api/network/ip/bgp/peer-groups/5fd08be3-87b2-11e9-952f-005056bb2170"
            }
          }
        }
        ```
        ---
        ### Retrieving specific fields and limiting the output using filters
        The following example shows the response when a filter is applied (location.port.node.name=node1) and only certain fields are requested. Filtered fields are in the output in addition to the default fields and requested fields.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/bgp/peer-groups?local.port.node.name=node1&fields=local.interface.ip,peer" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "5f22ae9d-87b2-11e9-a3a6-005056bb81a4",
              "name": "pg1",
              "local": {
                "interface": {
                  "ip": {
                    "address": "10.10.10.1"
                  }
                },
                "port": {
                  "node": {
                    "name": "node1"
                  }
                }
              },
              "peer": {
                "address": "10.10.10.2",
                "asn": 65501
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/bgp/peer-groups/5f22ae9d-87b2-11e9-a3a6-005056bb81a4"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/ip/bgp/peer-groups?local.port.node.name=node1&fields=local.interface.ip,peer"
            }
          }
        }
        ```
        ---
        ## Creating a BGP peer-group
        The BGP peer-group POST API is used to create a peer-group as shown in the following examples.
        <br/>
        ---
        ## Examples
        ### Creating a BGP peer-group with an existing interface
        The following example shows how to create a BGP peer-group between an existing interface "bgp1" and peer router with the address "10.10.10.10". The local interface "bgp1" needs to support the management-bgp service, otherwise the system returns an error.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/bgp/peer-groups?return_records=true" -d'{"name": "newPg", "ipspace.name":"Default", "local.interface.name": "bgp1", "peer.address":"10.10.10.10"}'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "e3faacc6-87cb-11e9-a3a6-005056bb81a4",
              "name": "newPg",
              "ipspace": {
                "name": "Default"
              },
              "local": {
                "interface": {
                  "name": "bgp1"
                }
              },
              "peer": {
                "address": "10.10.10.10"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/bgp/peer-groups/e3faacc6-87cb-11e9-a3a6-005056bb81a4"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating a BGP peer-group and provisioning a new local interface
        The following example shows how to create a BGP peer-group with any local interface. If the local interface doesn't exist, the system will create it first before creating the peer-group.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/bgp/peer-groups?return_records=true" -d'{"name": "newPg1", "ippace.name":"Default", "local": {"interface": {"name": "newlif"}, "ip": {"address": "9.9.9.9", "netmask": "24"}, "port": {"name": "e0f", "node": {"name": "node1"}}}, "peer.address":"10.10.10.10"}'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "c292f069-8872-11e9-a3a6-005056bb81a4",
              "name": "newPg1",
              "ipspace": {
                "name": "Default"
              },
              "local": {
                "interface": {
                  "name": "newlif"
                },
                "port": {
                  "name": "e0f",
                  "node": {
                    "name": "node1"
                  }
                }
              },
              "peer": {
                "address": "10.10.10.10"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/bgp/peer-groups/c292f069-8872-11e9-a3a6-005056bb81a4"
                }
              }
            }
          ]
        }
        ```
        ---
        ## Updating BGP peer-groups
        The BGP peer-groups PATCH API is used to update attributes of a peer-group.
        <br/>
        ---
        ## Examples
        ### Updating the peer router address
        The following example shows how the PATCH request changes the peer router IP address.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/bgp/peer-groups/80d271c9-1f43-11e9-803e-005056a7646a" -H "accept: application/hal+json" -d '{"peer.address": "10.10.10.20" }'
        {
        }
        ```
        ---
        ### Updating the peer-group to a new name
        The following example shows how the PATCH request renames the peer-group.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-groups/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/bgp/peer-groups/80d271c9-1f43-11e9-803e-005056a7646a" -H "accept: application/hal+json" -d '{"name": "NewName"}'
        {
        }
        ```
        ---
        ## Deleting BGP peer-groups
        The BGP peer-groups DELETE API is used to delete an BGP peer-group.
        <br/>
        ---
        ## Example
        ### Deleting a BGP peer-group
        The following DELETE request deletes a BGP peer-group.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/bgp/peer-group/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ip/bgp/peer-groups/80d271c9-1f43-11e9-803e-005056a7646a"
        {
        }
        ```
        ---
      tags:
      - networking
  /network/ip/bgp/peer-groups/{uuid}:
    delete:
      description: |-
        Deletes a BGP peer group for VIP.
        ### Related ONTAP commands
        * `network bgp peer-group delete`

        ### Learn more
        * [`DOC /network/ip/bgp/peer-groups`](#docs-networking-network_ip_bgp_peer-groups)
      operationId: network_ip_bgp_peer_group_delete
      parameters:
      - description: UUID of the peer group
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 53282019 | Internal error. Failed to remove BGP peer group on node. Wait a few minutes and try the command again. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |-
        Retrieves details of a BGP peer group for VIP.
        ### Related ONTAP commands
        * `network bgp peer-group show`

        ### Learn more
        * [`DOC /network/ip/bgp/peer-groups`](#docs-networking-network_ip_bgp_peer-groups)
      operationId: network_ip_bgp_peer_group_get
      parameters:
      - description: UUID of the peer group
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/bgp_peer_group'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates a BGP peer group for VIP.
        ### Related ONTAP commands
        * `network bgp peer-group modify`
        * `network bgp peer-group rename`

        ### Learn more
        * [`DOC /network/ip/bgp/peer-groups`](#docs-networking-network_ip_bgp_peer-groups)
      operationId: network_ip_bgp_peer_group_modify
      parameters:
      - description: UUID of the peer group
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/bgp_peer_group'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1967171 | Internal error. Fail to access or update BGP peer group. Retry the command, if necessary. |
            | 53281998 | Failed to rename the BGP peer group because that name is already assigned to a different peer group in the IPspace. |
            | 53282006 | BGP peer group could not be updated to use a peer address because the value provided is not a valid peer address. If necessary, try the command again with a routable host address. |
            | 53282007 | BGP peer group could not be updated to use a peer address because the address represents a different address family to the address of the associated BGP LIF. If necessary, try the command again with a matching address family. |
            | 53282018 | Failed to create BGP peer group because an existing peer group has already established a BGP session between LIF and peer address. If necessary, try the command again with a different BGP LIF or a different peer address. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/ip/interfaces:
    get:
      description: |-
        Retrieves the details of all IP interfaces.
        ### Related ONTAP Commands
        * `network interface show`

        ### Learn more
        * [`DOC /network/ip/interfaces`](#docs-networking-network_ip_interfaces)
      operationId: network_ip_interfaces_get
      parameters:
      - description: Filter by ip.netmask
        in: query
        name: ip.netmask
        type: string
      - description: Filter by ip.address
        in: query
        name: ip.address
        type: string
      - description: Filter by ip.family
        in: query
        name: ip.family
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by vip
        in: query
        name: vip
        type: boolean
      - description: Filter by service_policy.name
        in: query
        name: service_policy.name
        type: string
      - description: Filter by service_policy.uuid
        in: query
        name: service_policy.uuid
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by location.failover
        in: query
        name: location.failover
        type: string
      - description: Filter by location.port.name
        in: query
        name: location.port.name
        type: string
      - description: Filter by location.port.node.name
        in: query
        name: location.port.node.name
        type: string
      - description: Filter by location.port.uuid
        in: query
        name: location.port.uuid
        type: string
      - description: Filter by location.home_node.uuid
        in: query
        name: location.home_node.uuid
        type: string
      - description: Filter by location.home_node.name
        in: query
        name: location.home_node.name
        type: string
      - description: Filter by location.home_port.name
        in: query
        name: location.home_port.name
        type: string
      - description: Filter by location.home_port.node.name
        in: query
        name: location.home_port.node.name
        type: string
      - description: Filter by location.home_port.uuid
        in: query
        name: location.home_port.uuid
        type: string
      - description: Filter by location.auto_revert
        in: query
        name: location.auto_revert
        type: boolean
      - description: Filter by location.node.uuid
        in: query
        name: location.node.uuid
        type: string
      - description: Filter by location.node.name
        in: query
        name: location.node.name
        type: string
      - description: Filter by location.is_home
        in: query
        name: location.is_home
        type: boolean
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by services
        in: query
        name: services
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_interface_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a new Cluster-scoped or SVM-scoped interface.<br/>
        ### Required properties
        * `name` - Name of the interface to create.
        * `ip.address` - IP address for the interface.
        * `ip.netmask` - IP subnet of the interface.
        * `ipspace.name` or `ipspace.uuid`
          * Required for Cluster-scoped interfaces.
          * Optional for SVM-scoped interfaces.
        * `svm.name` or `svm.uuid`
          * Required for an SVM-scoped interface.
          * Invalid for a Cluster-scoped interface.
        * `location.home_port` or `location.home_node` or `location.broadcast_domain` - One of these properties must be set to a value to define where the interface will be located.
        ### Recommended property values
        * `service_policy`
          * `for SVM scoped interfaces`
            * _default-data-files_ for interfaces carrying file-oriented NAS data traffic
            * _default-data-blocks_ for interfaces carrying block-oriented SAN data traffic
            * _default-management_ for interfaces carrying SVM management requests
          * `for Cluster scoped interfaces`
            * _default-intercluster_ for interfaces carrying cluster peering traffic
            * _default-management_ for interfaces carrying system management requests
            * _default-route-announce_ for interfaces carrying BGP peer connections
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `scope`
          * _svm_ if svm parameter is specified.
          * _cluster_ if svm parameter is not specified
        * `enabled` - _true_
        * `location.auto_revert` - _true_
        * `service_policy`
          * _default-data-files_ if scope is `svm`
          * _default-management_ if scope is `cluster` and IPspace is not `Cluster`
          * _default-cluster_ if scope is `svm` and IPspace is `Cluster`
        * `failover` - Selects the least restrictive failover policy supported by all the services in the service policy.
        ### Related ONTAP commands
        * `network interface create`

        ### Learn more
        * [`DOC /network/ip/interfaces`](#docs-networking-network_ip_interfaces)
      operationId: network_ip_interfaces_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: IP interface parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ip_interface'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376656 | Cluster interfaces must be in the same subnet. Verify the address and netmask are set to the correct values. |
            | 1376963 | Duplicate IP address. |
            | 1966138 | The same IP address may not be used for both a mgmt interface and a gateway address. |
            | 1966140 | An interface with the same name already exists. |
            | 1966987 | The Vserver Broadcast-Domain Home-Node and Home-Port combination is not valid. |
            | 1967081 | The specified SVM must exist in the specified IPspace. |
            | 1967082 | The specified ipspace.name does not match the IPspace name of ipspace.uuid. |
            | 1967102 | POST operation might have left configuration in an inconsistent state. Check the configuration. |
            | 1967106 | The specified location.home_port.name does not match the specified port name of location.home_port.uuid. |
            | 1967107 | The location.home_port.uuid specified is not valid. |
            | 1967108 | The specified location.home_node.name does not match the node name of location.home_node.uuid. |
            | 1967109 | The specified location.home_port.node.name does not match the node name of location.home_node.uuid. |
            | 1967110 | The specified location.home_port.node.name does not match location.home_node.name. |
            | 1967111 | Home node must be specified by at least one location.home_node, location.home_port, or location.broadcast_domain field. |
            | 1967112 | The specified location.home_node.name does not match the node name of location.home_port.uuid. |
            | 1967120 | The specified service_policy.name does not match the specified service policy name of service_policy.uuid. |
            | 1967121 | Invalid service_policy.uuid specified. |
            | 1967122 | The specified location.broadcast_domain.name does not match the specified broadcast domain name of location.broadcast_domain.uuid. |
            | 1967123 | The specified IPspace does not match the IPspace name of location.broadcast_domain.uuid. |
            | 1967124 | The location.broadcast_domain.uuid specified is not valid. |
            | 1967127 | svm.uuid or svm.name must be provided if scope is "svm". |
            | 1967128 | ipspace.uuid or ipspace.name must be provided if scope is "cluster". |
            | 1967129 | The specified location.home_port.uuid is not valid. |
            | 1967130 | The specified location.home_port.name is not valid. |
            | 1967131 | The specified location.home_port.uuid and location.home_port.name are not valid. |
            | 1967135 | The specified location.broadcast_domain.uuid is not valid. |
            | 1967136 | The specified location.broadcast_domain.name (and ipspace name) is not valid. |
            | 1967137 | The specified location.broadcast_domain.uuid and location.broadcast_domain.name (and IPspace name) are not valid. |
            | 1967145 | The specified location.failover is not valid. |
            | 1967146 | The specified svm.name is not valid. |
            | 1967147 | The specified svm.uuid is not valid. |
            | 1967153 | No suitable port exists on location.home_node to host the interface. |
            | 1967154 | Interfaces cannot be created on ports that are down. If a broadcast domain is specified, ensure that it contains at least one port that is operationally up. |
            | 1967381 | Post VIP interfaces requires an effective cluster version of 9.7 or later. |
            | 1967382 | VIP interfaces only reside in SVM scope. |
            | 1967383 | Neither location.home_port.uuid or location.home_port.name should be set with vip=true. |
            | 1967384 | Failed to create VIP interface because the home node does not have active BGP sessions to support Virtual IP (VIP) traffic. |
            | 1967385 | VIP interfaces with an IPv4 address must use ip.netmask=32. VIP interfaces with an IPv6 address must use ip.netmask=128. |
            | 1967387 | The specified IP address is in use by a subnet in this IPspace. |
            | 5373966 | An iSCSI interface cannot be created in an SVM configured for NVMe. |
            | 53281065 | The service_policy does not exist in the SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        The following operations are supported:
        * Creation: POST network/ip/interfaces
        * Collection Get: GET network/ip/interfaces
        * Instance Get: GET network/ip/interfaces/{uuid}
        * Instance Patch: PATCH network/ip/interfaces/{uuid}
        * Instance Delete: DELETE network/ip/interfaces/{uuid}
        ## Retrieving network interface information
        The IP interfaces GET API retrieves and displays relevant information pertaining to the interfaces configured in the cluster. The response can contain a list of multiple interfaces or a specific interface. The fields returned in the response vary for different interfaces and configurations.
        ## Examples
        ### Retrieving all interfaces in the cluster
        The following example shows the list of all interfaces configured in a cluster.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/interfaces" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "14531286-59fc-11e8-ba55-005056b4340f",
              "name": "user-cluster-01_mgmt1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/14531286-59fc-11e8-ba55-005056b4340f"
                }
              }
            },
            {
              "uuid": "145318ba-59fc-11e8-ba55-005056b4340f",
              "name": "user-cluster-01_clus2",
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/145318ba-59fc-11e8-ba55-005056b4340f"
                }
              }
            },
            {
              "uuid": "14531e45-59fc-11e8-ba55-005056b4340f",
              "name": "user-cluster-01_clus1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/14531e45-59fc-11e8-ba55-005056b4340f"
                }
              }
            },
            {
              "uuid": "245979de-59fc-11e8-ba55-005056b4340f",
              "name": "cluster_mgmt",
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/245979de-59fc-11e8-ba55-005056b4340f"
                }
              }
            },
            {
              "uuid": "c670707c-5a11-11e8-8fcb-005056b4340f",
              "name": "lif1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/c670707c-5a11-11e8-8fcb-005056b4340f"
                }
              }
            }
          ],
          "num_records": 5,
          "_links": {
            "self": {
              "href": "/api/network/ip/interfaces"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific Cluster-scoped interface
        The following example shows the response when a specific Cluster-scoped interface is requested. The system returns an error when there is no interface with the requested UUID. SVM information is not returned for Cluster-scoped interfaces.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/interfaces/245979de-59fc-11e8-ba55-005056b4340f" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "245979de-59fc-11e8-ba55-005056b4340f",
          "name": "cluster_mgmt",
          "ip": {
            "address": "10.63.41.6",
            "netmask": "18",
            "family": "ipv4",
          },
          "enabled": true,
          "state": "up",
          "scope": "cluster",
          "ipspace": {
            "uuid": "114ecfb5-59fc-11e8-ba55-005056b4340f",
            "name": "Default",
            "_links": {
              "self": {
                      "href": "/api/network/ipspaces/114ecfb5-59fc-11e8-ba55-005056b4340f"
              }
            }
          },
          "services": [
            "management_core",
            "management_autosupport",
            "management_access"
          ],
          "location": {
            "is_home": true,
            "auto_revert": false,
            "failover": "broadcast_domain_only",
            "node": {
              "uuid": "c1db2904-1396-11e9-bb7d-005056acfcbb",
              "name": "user-cluster-01-a",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/c1db2904-1396-11e9-bb7d-005056acfcbb"
                }
              }
            },
            "port": {
              "uuid": "c84d5337-1397-11e9-87c2-005056acfcbb",
              "name": "e0d",
              "node": {
                "name": "user-cluster-01-a"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/c84d5337-1397-11e9-87c2-005056acfcbb"
                }
              }
            },
            "home_node": {
              "uuid": "c1db2904-1396-11e9-bb7d-005056acfcbb",
              "name": "user-cluster-01-a",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/c1db2904-1396-11e9-bb7d-005056acfcbb"
                }
              }
            },
            "home_port": {
              "uuid": "c84d5337-1397-11e9-87c2-005056acfcbb",
              "name": "e0d",
              "node": {
                "name": "user-cluster-01-a"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ethernet/ports/c84d5337-1397-11e9-87c2-005056acfcbb"
                }
              }
            }
          },
          "service_policy": {
            "uuid": "9e0f4151-141b-11e9-851e-005056ac1ce0",
            "name": "default-management"
          },
          "vip": false,
          "_links": {
            "self": {
              "href": "/api/network/ip/interfaces/245979de-59fc-11e8-ba55-005056b4340f"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific SVM-scoped interface using a filter
        The following example shows the response when a specific SVM-scoped interface is requested. The SVM object is only included for SVM-scoped interfaces.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/interfaces?name=lif1&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "c670707c-5a11-11e8-8fcb-005056b4340f",
              "name": "lif1",
              "ip": {
                "address": "10.10.10.11",
                "netmask": "24",
                "family": "ipv4",
              },
              "enabled": true,
              "state": "up",
              "scope": "svm",
              "ipspace": {
                "uuid": "114ecfb5-59fc-11e8-ba55-005056b4340f",
                "name": "Default",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/114ecfb5-59fc-11e8-ba55-005056b4340f"
                  }
                }
              },
              "svm": {
                "uuid": "c2134665-5a11-11e8-8fcb-005056b4340f",
                "name": "user_vs0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/c2134665-5a11-11e8-8fcb-005056b4340f"
                  }
                }
              },
              "services": [
                "data_core",
                "data_nfs",
                "data_cifs",
                "data_flexcache"
              ],
              "location": {
                "is_home": true,
                "auto_revert": false,
                "failover": "broadcast_domain_only",
                "node": {
                  "uuid": "c1db2904-1396-11e9-bb7d-005056acfcbb",
                  "name": "user-cluster-01-a",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/c1db2904-1396-11e9-bb7d-005056acfcbb"
                    }
                  }
                },
                "port": {
                  "uuid": "c84d5337-1397-11e9-87c2-005056acfcbb",
                  "name": "e0d",
                  "node": {
                    "name": "user-cluster-01-a"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/c84d5337-1397-11e9-87c2-005056acfcbb"
                    }
                  }
                },
                "home_node": {
                  "uuid": "c1db2904-1396-11e9-bb7d-005056acfcbb",
                  "name": "user-cluster-01-a",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/c1db2904-1396-11e9-bb7d-005056acfcbb"
                    }
                  }
                },
                "home_port": {
                  "uuid": "c84d5337-1397-11e9-87c2-005056acfcbb",
                  "name": "e0d",
                  "node": {
                    "name": "user-cluster-01-a"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/network/ethernet/ports/c84d5337-1397-11e9-87c2-005056acfcbb"
                    }
                  }
                }
              },
              "service_policy": {
                "uuid": "9e53525f-141b-11e9-851e-005056ac1ce0",
                "name": "default-data-files"
              },
              "vip": false,
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/c670707c-5a11-11e8-8fcb-005056b4340f"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/network/ip/interfaces?name=lif1&fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving specific fields and limiting the output using filters
        The following example shows the response when a filter is applied (location.home_port.name=e0a) and only certain fields are requested. Filtered fields are in the output in addition to the default fields and requested fields.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/interfaces?location.home_port.name=e0a&fields=location.home_node.name,service_policy.name,ip.address,enabled" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "1d1c9dc8-4f17-11e9-9553-005056ac918a",
              "name": "user-cluster-01-a_clus1",
              "ip": {
                "address": "192.168.170.24"
              },
              "enabled": true,
              "location": {
                "home_node": {
                  "name": "user-cluster-01-a"
                },
                "home_port": {
                  "name": "e0a"
                }
              },
              "service_policy": {
                "name": "default-cluster"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/1d1c9dc8-4f17-11e9-9553-005056ac918a"
                }
              }
            },
            {
              "uuid": "d07782c1-4f16-11e9-86e7-005056ace7ee",
              "name": "user-cluster-01-b_clus1",
              "ip": {
                "address": "192.168.170.22"
              },
              "enabled": true,
              "location": {
                "home_node": {
                  "name": "user-cluster-01-b"
                },
                "home_port": {
                  "name": "e0a"
                }
              },
              "service_policy": {
                "name": "default-cluster"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/d07782c1-4f16-11e9-86e7-005056ace7ee"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/network/ip/interfaces?location.home_port.name=e0a&fields=location.home_node.name,service_policy.name,ip.address,enabled"
            }
          }
        }
        ```
        ---
        ## Creating IP interfaces
        You can use the IP interfaces POST API to create IP interfaces as shown in the following examples.
        <br/>
        ---
        ## Examples
        ### Creating a Cluster-scoped IP interface using names
        The following example shows the record returned after the creation of an IP interface on "e0d".
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/interfaces?return_records=true" -H "accept: application/hal+json" -d '{ "name": "cluster_mgmt", "ip": { "address": "10.63.41.6", "netmask": "18" }, "enabled": true, "scope": "cluster", "ipspace": { "name": "Default" }, "location": { "auto_revert": false, "failover": "broadcast_domain_only", "home_port": { "name": "e0d", "node": { "name": "user-cluster-01-a" } } }, "service_policy": { "name": "default-management" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "245979de-59fc-11e8-ba55-005056b4340f",
              "name": "cluster_mgmt",
              "ip": {
                "address": "10.63.41.6",
                "netmask": "18"
              },
              "enabled": true,
              "scope": "cluster",
              "ipspace": {
                "name": "Default"
              },
              "location": {
                "auto_revert": false,
                "failover": "broadcast_domain_only",
                "home_port": {
                  "name": "e0d",
                  "node": {
                    "name": "user-cluster-01-a"
                  }
                },
              },
              "service_policy": {
                "name": "default-management"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/245979de-59fc-11e8-ba55-005056b4340f"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating a SVM-scoped IP interface using a mix of parameter types
        The following example shows the record returned after the creation of a IP interface by specifying a broadcast domain as the location.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/interfaces?return_records=true" -H "accept: application/hal+json" -d '{ "name": "Data1", "ip": { "address": "10.234.101.116", "netmask": "255.255.240.0" }, "enabled": true, "scope": "svm", "svm": { "uuid": "137f3618-1e89-11e9-803e-005056a7646a" }, "location": { "auto_revert": true, "broadcast_domain": { "name": "Default" } }, "service_policy": { "name": "default-data-files" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "80d271c9-1f43-11e9-803e-005056a7646a",
              "name": "Data1",
              "ip": {
                "address": "10.234.101.116",
                "netmask": "20"
              },
              "enabled": true,
              "scope": "svm",
              "svm": {
                "uuid": "137f3618-1e89-11e9-803e-005056a7646a",
                "name": "vs0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/137f3618-1e89-11e9-803e-005056a7646a"
                  }
                }
              },
              "location": {
                "auto_revert": true
              },
              "service_policy": {
                "name": "default-data-files"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/80d271c9-1f43-11e9-803e-005056a7646a"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating a Cluster-scoped IP interface without specifying the scope parameter
        The following example shows the record returned after creating an IP interface on "e0d" without specifying the scope parameter. The scope is "cluster" if an "svm" is not specified.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/interfaces?return_records=true" -H "accept: application/hal+json" -d '{ "name": "cluster_mgmt", "ip": { "address": "10.63.41.6", "netmask": "18" }, "enabled": true, "ipspace": { "name": "Default" }, "location": { "auto_revert": false, "home_port": { "name": "e0d", "node": { "name": "user-cluster-01-a" } } }, "service_policy": { "name": "default-management" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "245979de-59fc-11e8-ba55-005056b4340f",
              "name": "cluster_mgmt",
              "ip": {
                "address": "10.63.41.6",
                "netmask": "18"
              },
              "enabled": true,
              "scope": "cluster",
              "ipspace": {
                "name": "Default"
              },
              "location": {
                "auto_revert": false,
                "home_port": {
                  "name": "e0d",
                  "node": {
                    "name": "user-cluster-01-a"
                  }
                }
              },
              "service_policy": {
                "name": "default-management"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/245979de-59fc-11e8-ba55-005056b4340f"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an SVM-scoped IP interface without specifying the scope parameter
        The following example shows the record returned after creating an IP interface on "e0d" without specifying the scope parameter. The scope is "svm" if the "svm" field is specified.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/interfaces?return_records=true" -H "accept: application/hal+json" -d '{ "name": "Data1", "ip": { "address": "10.234.101.116", "netmask": "255.255.240.0" }, "enabled": true, "svm": { "uuid": "137f3618-1e89-11e9-803e-005056a7646a" }, "location": { "auto_revert": true, "broadcast_domain": { "name": "Default" } }, "service_policy": { "name": "default-data-files" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "80d271c9-1f43-11e9-803e-005056a7646a",
              "name": "Data1",
              "ip": {
                "address": "10.234.101.116",
                "netmask": "20"
              },
              "enabled": true,
              "scope": "svm",
              "svm": {
                "uuid": "137f3618-1e89-11e9-803e-005056a7646a",
                "name": "vs0",
                "_links": {
                  "self": {
                    "href": "/api/svms/137f3618-1e89-11e9-803e-005056a7646a"
                  }
                }
              },
              "location": {
                "auto_revert": true
              },
              "service_policy": {
                "name": "default-data-files"
              },
              "_links": {
                "self": {
                  "href": "/api/network/ip/interfaces/80d271c9-1f43-11e9-803e-005056a7646a"
                }
              }
            }
          ]
        }
        ```
        ---
        ## Updating IP interfaces
        You can use the IP interfaces PATCH API to update the attributes of an IP interface.
        <br/>
        ---
        ## Examples
        ### Updating the auto revert flag of an IP interface
        The following example shows how the PATCH request changes the auto revert flag to 'false'.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ip/interfaces/80d271c9-1f43-11e9-803e-005056a7646a" -H "accept: application/hal+json" -d '{ "location": { "auto_revert": "false" } }'
        {
        }
        ```
        ---
        ### Updating the service policy of an IP interface
        The following example shows how the PATCH request changes the service policy to 'default-management'.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ip/interfaces/80d271c9-1f43-11e9-803e-005056a7646a" -H "accept: application/hal+json" -d '{ "service_policy": "default-management" }'
        {
        }
        ```
        ---
        ## Deleting IP interfaces
        You can use the IP interfaces DELETE API to delete an IP interface in the cluster.
        <br/>
        ---
        ## Example
        ### Deleting an IP Interface
        The following DELETE request deletes a network IP interface.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/interfaces/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ip/interfaces/80d271c9-1f43-11e9-803e-005056a7646a"
        {
        }
        ```
        ---
      tags:
      - networking
  /network/ip/interfaces/{uuid}:
    delete:
      description: |-
        Deletes an IP interface.
        ### Related ONTAP commands
        * `network interface delete`

        ### Learn more
        * [`DOC /network/ip/interfaces`](#docs-networking-network_ip_interfaces)
      operationId: network_ip_interface_delete
      parameters:
      - description: IP interface UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
      tags:
      - networking
    get:
      description: |-
        Retrieves details for a specific IP interface.
        ### Related ONTAP commands
        * `network interface show`

        ### Learn more
        * [`DOC /network/ip/interfaces`](#docs-networking-network_ip_interfaces)
      operationId: network_ip_interface_get
      parameters:
      - description: IP interface UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_interface'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates an IP interface.
        ### Related ONTAP commands
        * `network interface migrate`
        * `network interface modify`
        * `network interface rename`
        * `network interface revert`

        ### Learn more
        * [`DOC /network/ip/interfaces`](#docs-networking-network_ip_interfaces)
      operationId: network_ip_interface_modify
      parameters:
      - description: IP interface UUID
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/ip_interface'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1376963 | Duplicate IP address. |
            | 1966138 | The same IP address may not be used for both a mgmt interface and a gateway address. |
            | 1967106 | The specified location.home_port.name does not match the specified port name of location.home_port.uuid. |
            | 1967107 | The specified location.home_port.uuid is not valid. |
            | 1967111 | A home node must be specified by at least one location.home_node, location.home_port, or location.broadcast_domain field. |
            | 1967113 | The specified location.port.name does not match the port name of location.port.uuid. |
            | 1967114 | The specified location.port.uuid is not valid. |
            | 1967115 | The specified location.node.name does not match the node name of location.node.uuid. |
            | 1967116 | The specified location.port.node.name does not match the node name of location.node.uuid. |
            | 1967117 | The specified location.port.node.name does not match location.node.name. |
            | 1967118 | A node must be specified by at least one location.node or location.port field. |
            | 1967119 | The specified location.node.name does not match the node name of location.port.uuid. |
            | 1967120 | The specified service_policy.name does not match the specified service policy name of service_policy.uuid. |
            | 1967121 | The specified service_policy.uuid is not valid. |
            | 1967125 | You cannot patch the "location.node" or "location.port" fields to migrate interfaces using the iSCSI data protocol. Instead perform the following PATCH operations on the interface: set the "enabled" field to "false"; change one or more "location.home_port" fields to migrate the interface; and then set the "enabled" field to "true". |
            | 1967129 | The specified location.home_port.uuid is not valid. |
            | 1967130 | The specified location.home_port.name is not valid. |
            | 1967131 | The specified location.home_port.uuid and location.home_port.name are not valid. |
            | 1967132 | The specified location.port.uuid is not valid. |
            | 1967133 | The specified location.port.name is not valid. |
            | 1967134 | The specified location.port.uuid and location.port.name are not valid. |
            | 1967138 | Cannot patch port for a VIP interface. The specified parameter location.port.uuid is not valid. |
            | 1967139 | Cannot patch port for a VIP interface. The specified parameter location.port.name is not valid. |
            | 1967140 | Cannot patch port for a VIP interface. The specified parameters location.port.uuid and location.port.name are not valid. |
            | 1967141 | Cannot patch home_port for a VIP interface. The specified parameter location.home_port.uuid is not valid. |
            | 1967142 | Cannot patch home_port for a VIP interface. The specified parameter location.home_port.name is not valid. |
            | 1967143 | Cannot patch home_port for a VIP interface. The specified parameters location.home_port.uuid and location.home_port.name  are not valid. |
            | 1967145 | The specified location.failover is not valid. |
            | 1967153 | No suitable port exists on location.home_node to host the interface. |
            | 1967380 | Cannot patch home_port for a VIP interface. The specified parameter location.home_port.node.name is not valid. Consider using location.home_node.name instead. |
            | 1967386 | Cannot patch port for a VIP interface. The specified parameter location.port.node.name is not valid. Consider using location.node.name instead. |
            | 1967387 | The specified IP address is in use by a subnet in this IPspace. |
            | 53281065 | The service_policy does not exist in the SVM. |
      tags:
      - networking
  /network/ip/routes:
    get:
      description: |-
        Retrieves the collection of IP routes.
        ### Related ONTAP commands
        * `network route show`

        ### Learn more
        * [`DOC /network/ip/routes`](#docs-networking-network_ip_routes)
      operationId: network_ip_routes_get
      parameters:
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by gateway
        in: query
        name: gateway
        type: string
      - description: Filter by destination.netmask
        in: query
        name: destination.netmask
        type: string
      - description: Filter by destination.address
        in: query
        name: destination.address
        type: string
      - description: Filter by destination.family
        in: query
        name: destination.family
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_route_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a Cluster-scoped or SVM-scoped static route.
        ### Required properties
        * `gateway` - IP address to route packets to.
        * SVM-scoped routes
          * `svm.name` or `svm.uuid` - SVM that route is applied to.
        * cluster-scoped routes
          * There are no additional required fields for Cluster-scoped routes.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `destination` - _0.0.0.0/0_ for IPv4 or _::/0_ for IPv6.
        * `ipspace.name`
          * _Default_ for Cluster-scoped routes.
          * Name of the SVM's IPspace for SVM-scoped routes.
        ### Related ONTAP commands
        * `network route create`

        ### Learn more
        * [`DOC /network/ip/routes`](#docs-networking-network_ip_routes)
      operationId: network_ip_routes_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Route parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/network_route'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/network_route_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966345    | Duplicate route exists. |
            | 1967080    | The destination.address is missing. |
            | 1967081    | The specified SVM must exist in the specified IPspace. |
            | 1967082    | The specified ipspace.uuid and ipspace.name refer to different IPspaces. |
            | 1967146    | The specified svm.name is not valid. |
            | 2          | The specified svm.uuid is not valid. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        This endpoint supports the following operations: GET (collection and instance), POST, and DELETE.
        <br/>
        ---
        ## Retrieving network routes
        You can use the IP routes GET API to retrieve and display relevant information pertaining to the routes configured in the cluster. The API retrieves the list of all routes configured in the cluster, or a specific route. The fields that are returned in the response will differ with the configuration.
        ## Examples
        ### Retrieving all routes in the cluster
        The following output shows the list of all routes configured in a cluster.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/routes
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/routes?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "5fdffb0b-62f8-11e8-853d-005056b4c971",
              "ipspace": {
                "uuid": "84f4beb2-616c-11e8-a4df-005056b4c971",
                "name": "Default",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/84f4beb2-616c-11e8-a4df-005056b4c971"
                  }
                }
              },
              "svm": {
                "uuid": "3243312c-62f8-11e8-853d-005056b4c971",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/3243312c-62f8-11e8-853d-005056b4c971"
                  }
                }
              },
              "scope": "svm",
              "destination": {
                "address": "10.4.3.14",
                "netmask": "18",
                "family": "ipv4"
              },
              "gateway": "10.4.3.1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/routes/5fdffb0b-62f8-11e8-853d-005056b4c971"
                }
              }
            },
            {
              "uuid": "84c128d2-62f9-11e8-853d-005056b4c971",
              "ipspace": {
                "uuid": "cc71aadc-62f7-11e8-853d-005056b4c971",
                "name": "ips1",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/cc71aadc-62f7-11e8-853d-005056b4c971"
                  }
                }
              },
              "scope": "cluster",
              "destination": {
                "address": "::",
                "netmask": "0",
                "family": "ipv6"
              },
              "gateway": "fd20:8b1e:b255:814e::1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/routes/84c128d2-62f9-11e8-853d-005056b4c971"
                }
              }
            },
            {
              "uuid": "8cc72bcd-616c-11e8-a4df-005056b4c971",
              "ipspace": {
                "uuid": "84f4beb2-616c-11e8-a4df-005056b4c971",
                "name": "Default",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/84f4beb2-616c-11e8-a4df-005056b4c971"
                  }
                }
              },
              "scope": "cluster",
              "destination": {
                "address": "0.0.0.0",
                "netmask": "0",
                "family": "ipv4"
              },
              "gateway": "10.224.64.1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/routes/8cc72bcd-616c-11e8-a4df-005056b4c971"
                }
              }
            },
            {
              "uuid": "d63b6eee-62f9-11e8-853d-005056b4c971",
              "ipspace": {
                "uuid": "84f4beb2-616c-11e8-a4df-005056b4c971",
                "name": "Default",
                "_links": {
                  "self": {
                    "href": "/api/network/ipspaces/84f4beb2-616c-11e8-a4df-005056b4c971"
                  }
                }
              },
              "svm": {
                "uuid": "3243312c-62f8-11e8-853d-005056b4c971",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/3243312c-62f8-11e8-853d-005056b4c971"
                  }
                }
              },
              "scope": "svm",
              "destination": {
                "address": "fd20:8b1e:b255:814e::",
                "netmask": "64",
                "family": "ipv6"
              },
              "gateway": "fd20:8b1e:b255:814e::1",
              "_links": {
                "self": {
                  "href": "/api/network/ip/routes/d63b6eee-62f9-11e8-853d-005056b4c971"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/network/ip/routes?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific Cluster-scoped route
        The following output shows the returned response when a specific Cluster-scoped route is requested. The system returns an error if there is no route with the requested UUID. SVM information is not returned for Cluster-scoped routes.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/routes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/routes/84c128d2-62f9-11e8-853d-005056b4c971?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "84c128d2-62f9-11e8-853d-005056b4c971",
          "ipspace": {
            "uuid": "cc71aadc-62f7-11e8-853d-005056b4c971",
            "name": "ips1",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/cc71aadc-62f7-11e8-853d-005056b4c971"
              }
            }
          },
          "scope": "cluster",
          "destination": {
            "address": "::",
            "netmask": "0",
            "family": "ipv6"
          },
          "gateway": "fd20:8b1e:b255:814e::1",
          "_links": {
            "self": {
              "href": "/api/network/ip/routes/84c128d2-62f9-11e8-853d-005056b4c971"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific SVM-scoped route
        The following output shows the returned response when a specific SVM-scoped route is requested. The system returns an error if there is no route with the requested UUID. The SVM object is only included for SVM-scoped routes.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/routes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/routes/d63b6eee-62f9-11e8-853d-005056b4c971?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "d63b6eee-62f9-11e8-853d-005056b4c971",
          "ipspace": {
            "uuid": "84f4beb2-616c-11e8-a4df-005056b4c971",
            "name": "Default",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/84f4beb2-616c-11e8-a4df-005056b4c971"
              }
            }
          },
          "svm": {
            "uuid": "3243312c-62f8-11e8-853d-005056b4c971",
            "name": "vs1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/3243312c-62f8-11e8-853d-005056b4c971"
              }
            }
          },
          "scope": "svm",
          "destination": {
            "address": "fd20:8b1e:b255:814e::",
            "netmask": "64",
            "family": "ipv6"
          },
          "gateway": "fd20:8b1e:b255:814e::1",
          "_links": {
            "self": {
              "href": "/api/network/ip/routes/d63b6eee-62f9-11e8-853d-005056b4c971"
            }
          }
        }
        ```
        ---
        ## Creating network routes
        You can use the POST API to create an SVM-scoped route by specifying the associated SVM, or a Cluster-scoped route by specifying the associated IPspace.
        ## Examples
        ### Creating a Cluster-scoped route
        IPspace is required to create a Cluster-scoped route. If the IPspace is not specified, the route will be created in the Default IPspace. The default destination will be set to "0.0.0.0/0" for IPv4 gateway addresses or "::/0" for IPv6 gateway addresses.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/routes
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/routes?return_records=true" -H "accept: application/json" -d '{ "ipspace": { "name":"ips1" }, "gateway": "10.10.10.1"}'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "ae583c9e-9ac7-11e8-8bc9-005056bbd531",
              "ipspace": {
                "name": "ips1"
              },
              "gateway": "10.10.10.1"
            }
          ]
        }
        ```
        ---
        ### Creating an SVM-scoped route
        To create an SVM-scoped route, the associated SVM can be identified by either its UUID or name.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/routes
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ip/routes?return_records=true" -H "accept: application/json" -d '{ "svm": { "name":"vs0" }, "gateway": "10.10.10.1"}'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "38805a91-9ac9-11e8-8bc9-005056bbd531",
              "svm": {
                "name": "vs0"
              },
              "gateway": "10.10.10.1"
            }
          ]
        }
        ```
        ---
        ## Deleting network routes
        You can use the DELETE API to delete a specific route identified by its UUID.
        ## Example
        ### Deleting a specific route
        ---
        ```
        # The API:
        /api/network/ip/routes/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ip/routes/38805a91-9ac9-11e8-8bc9-005056bbd531"
        ```
        ---
      tags:
      - networking
  /network/ip/routes/{uuid}:
    delete:
      description: |-
        Deletes a specific IP route.
        ### Related ONTAP commands
        * `network route delete`

        ### Learn more
        * [`DOC /network/ip/routes`](#docs-networking-network_ip_routes)
      operationId: network_ip_route_delete
      parameters:
      - description: Route UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    get:
      description: |-
        Retrieves the details of a specific IP route.
        ### Related ONTAP commands
        * `network route show`

        ### Learn more
        * [`DOC /network/ip/routes`](#docs-networking-network_ip_routes)
      operationId: network_ip_route_get
      parameters:
      - description: Route UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_route'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/ip/service-policies:
    get:
      description: |-
        Retrieves a collection of service policies.
        ### Related ONTAP commands
        * `network interface service-policy show`

        ### Learn more
        * [`DOC /network/ip/service-policies`](#docs-networking-network_ip_service-policies)
      operationId: network_ip_service_policies_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by services
        in: query
        name: services
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_service_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        Service policies are named groupings that define what services are supported by an IP interface. The network IP service-policies GET API retrieves and displays relevant information pertaining to the service policies configured in the cluster. The API retrieves the list of all service policies configured in the cluster or a specific service policy.
        ## Examples
        ### Retrieving all service policies in the cluster
        The following output shows the collection of all service policies configured in a 2-node cluster. By default (without 'field=*' parameter), only the UUID and name fields are shown for each entry.
        <br/>
        ---
        ```
        # The API:
        /api/network/ethernet/ip/service-policies
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/service-policies" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "e4e2f193-c1a3-11e8-bb9d-005056bb88c8",
              "name": "net-intercluster",
              "_links": {
                "self": {
                  "href": "/api/network/ip/service-policies/e4e2f193-c1a3-11e8-bb9d-005056bb88c8"
                }
              }
            },
            {
              "uuid": "e4e3f6da-c1a3-11e8-bb9d-005056bb88c8",
              "name": "net-route-announce",
              "_links": {
                "self": {
                  "href": "/api/network/ip/service-policies/e4e3f6da-c1a3-11e8-bb9d-005056bb88c8"
                }
              }
            },
            {
              "uuid": "e5111111-c1a3-11e8-bb9d-005056bb88c8",
              "name": "vserver-route-announce",
              "_links": {
                "self": {
                  "href": "/api/network/ip/service-policies/e5111111-c1a3-11e8-bb9d-005056bb88c8"
                }
              }
            },
            {
              "uuid": "e6111111-c1a3-11e8-bb9d-005056bb88c8",
              "name": "data-route-announce",
              "_links": {
                "self": {
                  "href": "/api/network/ip/service-policies/e6111111-c1a3-11e8-bb9d-005056bb88c8"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/network/ip/service-policies/?return_records=true&return_timeout=15"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific service policy (scope=svm)
        The following output displays the response when a specific "svm" scoped service policy is requested. Among other parameters, the response contains the svm parameters associated with the service policy. The system returns an error when there is no service policy with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/service-policies/{uuid}
        # The call:
        curl -X GET "http://<mgmt-ip>/api/network/ip/service-policies/dad323ff-4ce0-11e9-9372-005056bb91a8?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "dad323ff-4ce0-11e9-9372-005056bb91a8",
          "name": "default-data-files",
          "scope": "svm",
          "svm": {
            "uuid": "d9060680-4ce0-11e9-9372-005056bb91a8",
            "name": "vs0",
            "_links": {
              "self": {
                "href": "/api/svm/svms/d9060680-4ce0-11e9-9372-005056bb91a8"
              }
            }
          },
          "ipspace": {
            "uuid": "45ec2dee-4ce0-11e9-9372-005056bb91a8",
            "name": "Default",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/45ec2dee-4ce0-11e9-9372-005056bb91a8"
              }
            }
          },
          "services": [
            "data_core",
            "data_nfs",
            "data_cifs",
            "data_flexcache"
          ],
          "_links": {
            "self": {
              "href": "/api/network/ip/service-policies/dad323ff-4ce0-11e9-9372-005056bb91a8"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific service policy (scope=svm) when requesting commonly used fields
        The following output displays the response when commonly used fields are requested for a specific "svm" scoped service policy. Among other parameters, the response contains the svm parameters associated with the service policy. The system returns an error when there is no service policy with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/service-policies/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/service-policies/e0889ce6-1e6a-11e9-89d6-005056bbdc04?fields=name,scope,svm.name,ipspace.name" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "e0889ce6-1e6a-11e9-89d6-005056bbdc04",
          "name": "test_policy",
          "scope": "svm",
          "svm": {
            "name": "vs0",
          },
          "ipspace": {
            "name": "Default",
          },
          "_links": {
            "self": {
              "href": "/api/network/ip/service-policies/e0889ce6-1e6a-11e9-89d6-005056bbdc04"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific service policy (scope=cluster)
        The following output displays the response when a specific cluster-scoped service policy is requested. The SVM object is not included for cluster-scoped service policies. A service policy with a scope of "cluster" is associated with an IPspace. The system returns an error when there is no service policy with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/service-policies/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/service-policies/4c6b72b9-0f6c-11e9-875d-005056bb21b8?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "4c6b72b9-0f6c-11e9-875d-005056bb21b8",
          "name": "net-intercluster",
          "scope": "cluster",
          "ipspace": {
            "uuid": "4051f13e-0f6c-11e9-875d-005056bb21b8",
            "name": "Default",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/4051f13e-0f6c-11e9-875d-005056bb21b8"
              }
            }
          },
          "services": [
            "intercluster_core"
          ],
          "_links": {
            "self": {
              "href": "/api/network/ip/service-policies/4c6b72b9-0f6c-11e9-875d-005056bb21b8"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific service policy (scope=cluster) when requesting commonly used fields
        The following output displays the response when commonly used fields are requested for a specific "cluster" scoped service policy. The SVM object is not included for cluster-scoped service policies. A service policy with a scope of "cluster" is associated with an IPspace. The system returns an error when there is no service policy with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ip/service-policies/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ip/service-policies/4c6b72b9-0f6c-11e9-875d-005056bb21b8?fields=name,scope,ipspace.name" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "4c6b72b9-0f6c-11e9-875d-005056bb21b8",
          "name": "net-intercluster",
          "scope": "cluster",
          "ipspace": {
            "name": "Default",
          },
          "services": [
            "intercluster_core"
          ],
          "_links": {
            "self": {
              "href": "/api/network/ip/service-policies/4c6b72b9-0f6c-11e9-875d-005056bb21b8"
            }
          }
        }
        ```
        ---
      tags:
      - networking
  /network/ip/service-policies/{uuid}:
    get:
      description: |-
        Retrieves a specific service policy.
        ### Related ONTAP commands
        * `network interface service-policy show`

        ### Learn more
        * [`DOC /network/ip/service-policies`](#docs-networking-network_ip_service-policies)
      operationId: network_ip_service_policy_get
      parameters:
      - description: Service policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ip_service_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
  /network/ipspaces:
    get:
      description: |-
        Retrieves a collection of IPspaces for the entire cluster.
        ### Related ONTAP commands
        * `network ipspace show`

        ### Learn more
        * [`DOC /network/ipspaces`](#docs-networking-network_ipspaces)
      operationId: ipspaces_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ipspace_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    post:
      description: |-
        Creates a new domain within which IP addresses are unique. SVMs, ports, and networks are scoped to a single IPspace.
        ### Required properties
        * `name` - Name of the IPspace to create.
        ### Related ONTAP commands
        * `network ipspace create`

        ### Learn more
        * [`DOC /network/ipspaces`](#docs-networking-network_ipspaces)
      operationId: ipspaces_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: IPspace identifiers
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ipspace'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1967102 | A POST operation might have left the configuration in an inconsistent state. Check the configuration. |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9240591 | The name is not valid. The name is already in use by a cluster node, Vserver, or it is the name of the local cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    x-ntap-long-description:
      description: |
        ## Overview
        An IPspace is an addressing domain within which each IP address is unique. The same address may appear in a different IPspace, but the matching addresses are considered to be distinct. SVMs and broadcast domains, and therefore IP interfaces and Ethernet ports, are associated with a single IPspace. This endpoint supports the following operations: GET (collection and instance), POST, PATCH, and DELETE.
        ## Retrieving IPspace information
        You can use the IPspaces GET API to retrieve all IPspaces configured in the cluster, including built-in and custom IPspaces, and specifically requested IPspaces.
        ## Examples
        ### Retrieving a list of the IPspaces in the cluster
        The following example returns the requested list of IPspaces configured in the cluster.
        ```
        # The API:
        /api/network/ipspaces
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ipspaces?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "dcc7e79c-5acc-11e8-b9de-005056b42b32",
              "name": "Default",
              "_links": {
                "self": {
                  "href": "/api/network/ipspaces/dcc7e79c-5acc-11e8-b9de-005056b42b32"
                }
              }
            },
            {
              "uuid": "dfd3c1b2-5acc-11e8-b9de-005056b42b32",
              "name": "Cluster",
              "_links": {
                "self": {
                  "href": "/api/network/ipspaces/dfd3c1b2-5acc-11e8-b9de-005056b42b32"
                }
              }
            },
            {
              "uuid": "dedec1be-5aec-1eee-beee-0eee56be2b3e",
              "name": "Ipspace1",
              "_links": {
                "self": {
                  "href": "/api/network/ipspaces/dedec1be-5aec-1eee-beee-0eee56be2b3e"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/network/ipspaces?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific IPspace in the cluster
        The following example returns the specific IPspace requested. The system returns an error if there is no IPspace with the requested UUID.
        <br/>
        ---
        ```
        # The API:
        /api/network/ipspaces/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/network/ipspaces/dfd3c1b2-5acc-11e8-b9de-005056b42b32?fields=*" -H "accept: application/hal+json"
        # The response:
          {
            "uuid": "dcc7e79c-5acc-11e8-b9de-005056b42b32",
            "name": "Default",
            "_links": {
              "self": {
                "href": "/api/network/ipspaces/dcc7e79c-5acc-11e8-b9de-005056b42b32"
              }
            }
          }
        ```
        ---
        ## Creating IPspaces
        You can use the network IPspaces POST API to create IPspaces.
        <br/>
        ---
        ## Example
        ### Creating an IPspace
        The following output displays the record returned after the creation of an IPspace with the name "ipspace1".
        <br/>
        ---
        ```
        # The API:
        /api/network/ipspaces
        # The call:
        curl -X POST "https://<mgmt-ip>/api/network/ipspaces?return_records=true" -H  "accept: application/hal+json" -d "{  \"name\": \"ipspace2\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "4165655e-0528-11e9-bd68-005056bb046a",
              "name": "ipspace2",
              "_links": {
                "self": {
                  "href": "/api/network/ipspaces/4165655e-0528-11e9-bd68-005056bb046a"
                }
              }
            }
          ]
        }
        ```
        ---
        ## Updating IPspaces
        You can use the IPspaces PATCH API to update the attributes of the IPspace.
        <br/>
        ---
        ## Example
        ### Updating the name of an IPspace
        The following PATCH request is used to update the name of the IPspace from "ipspace2" to "ipspace20".
        <br/>
        ---
        ```
        # The API:
        /api/network/ipspaces/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/network/ipspaces/4165655e-0528-11e9-bd68-005056bb046a" -H  "accept: application/hal+json" -d "{  \"name\": \"ipspace20\"}"
        ```
        ---
        ## Deleting IPspaces
        You can use the IPspaces DELETE API to delete an IPspace.
        <br/>
        ---
        ## Example
        ### Deleting an IPspace
        The following DELETE request is used to delete an IPspace.
        <br/>
        ---
        ```
        # The API:
        /api/network/ipspaces/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/network/ipspaces/4165655e-0528-11e9-bd68-005056bb046a" -H  "accept: application/hal+json" -H  "Content-Type: application/json"
        ```
        ---
      tags:
      - networking
  /network/ipspaces/{uuid}:
    delete:
      description: |-
        Deletes an IPspace object.
        ### Related ONTAP commands
        * `network ipspace delete`

        ### Learn more
        * [`DOC /network/ipspaces`](#docs-networking-network_ipspaces)
      operationId: ipspace_delete
      parameters:
      - description: IPspace UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
      tags:
      - networking
    get:
      description: |-
        Retrieves information about a specific IPspace.
        ### Related ONTAP commands
        * `network ipspace show`

        ### Learn more
        * [`DOC /network/ipspaces`](#docs-networking-network_ipspaces)
      operationId: ipspace_get
      parameters:
      - description: IPspace UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ipspace'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - networking
    patch:
      description: |-
        Updates an IPspace object.
        ### Related ONTAP commands
        * `network ipspace rename`

        ### Learn more
        * [`DOC /network/ipspaces`](#docs-networking-network_ipspaces)
      operationId: ipspace_modify
      parameters:
      - description: IPspace UUID
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        schema:
          $ref: '#/definitions/ipspace'
      responses:
        '200':
          description: OK
      tags:
      - networking
  /protocols/audit:
    get:
      description: |
        Retrieves audit configurations.
        ### Related ONTAP commands
        * `vserver audit show`
        ### Learn more
        * [`DOC /protocols/audit`](#docs-NAS-protocols_audit)
      operationId: audit_collection_get
      parameters:
      - description: Filter by log.rotation.schedule.days
        in: query
        name: log.rotation.schedule.days
        type: integer
      - description: Filter by log.rotation.schedule.weekdays
        in: query
        name: log.rotation.schedule.weekdays
        type: integer
      - description: Filter by log.rotation.schedule.minutes
        in: query
        name: log.rotation.schedule.minutes
        type: integer
      - description: Filter by log.rotation.schedule.hours
        in: query
        name: log.rotation.schedule.hours
        type: integer
      - description: Filter by log.rotation.schedule.months
        in: query
        name: log.rotation.schedule.months
        type: integer
      - description: Filter by log.rotation.size
        in: query
        name: log.rotation.size
        type: integer
      - description: Filter by log.retention.count
        in: query
        name: log.retention.count
        type: integer
      - description: Filter by log.retention.duration
        in: query
        name: log.retention.duration
        type: string
      - description: Filter by log.format
        in: query
        name: log.format
        type: string
      - description: Filter by log_path
        in: query
        name: log_path
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by events.authorization_policy
        in: query
        name: events.authorization_policy
        type: boolean
      - description: Filter by events.user_account
        in: query
        name: events.user_account
        type: boolean
      - description: Filter by events.security_group
        in: query
        name: events.security_group
        type: boolean
      - description: Filter by events.file_share
        in: query
        name: events.file_share
        type: boolean
      - description: Filter by events.cap_staging
        in: query
        name: events.cap_staging
        type: boolean
      - description: Filter by events.file_operations
        in: query
        name: events.file_operations
        type: boolean
      - description: Filter by events.cifs_logon_logoff
        in: query
        name: events.cifs_logon_logoff
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/audit_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an audit configuration.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM to which audit configuration is to be created.
        * `log_path` - Path in the owning SVM namespace that is used to store audit logs.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `enabled` - _true_
        * `events.authorization_policy` - _false_
        * `events.cap_staging` - _false_
        * `events.file_share` - _false_
        * `events.security_group` - _false_
        * `events.user_account` - _false_
        * `events.cifs_logon_logoff` - _true_
        * `events.file_operations` - _true_
        * `log.format` - _evtx_
        * `log.retention.count` - _0_
        * `log.retention.duration` - _PT0S_
        * `log.rotation.size` - _100MB_
        * `log.rotation.now` - _false_
        ### Related ONTAP commands
        * `vserver audit create`
        * `vserver audit enable`
        ### Learn more
        * [`DOC /protocols/audit`](#docs-NAS-protocols_audit)
      operationId: audit_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/audit'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/audit_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262196     | Log_rotation_now is not an allowed operation                                           |
            | 2621462    | The specified SVM does not exist                                                       |
            | 9699330    | An audit configuration already exists                                                  |
            | 9699337    | Audit system internal update is in progress, audit configuration create failed         |
            | 9699340    | SVM UUID lookup failed                                                                 |
            | 9699358    | Audit configuration is absent for enabling                                             |
            | 9699359    | Audit configuration is already enabled                                                 |
            | 9699360    | Final consolidation is in progress, audit enable failed                                |
            | 9699365    | Enabling of audit configuration failed                                                 |
            | 9699370    | Auditing was successfully configured, however audit configuration could not be enabled |
            | 9699384    | The specified log_path does not exist                                                  |
            | 9699385    | The log_path must be a directory                                                       |
            | 9699386    | The log_path must be a canonical path in the SVMs namespace                            |
            | 9699387    | The log_path cannot be empty                                                           |
            | 9699388    | Rotate size must be greater than or equal to 1024 KB                                   |
            | 9699389    | The log_path must not contain a symbolic link                                          |
            | 9699398    | The log_path exceeds a maximum supported length of characters                          |
            | 9699399    | The log_path contains an unsupported read-only (DP/LS) volume                          |
            | 9699400    | The specified log_path is not a valid destination for SVM                              |
            | 9699402    | The log_path contains an unsupported snaplock volume                                   |
            | 9699403    | The log_path cannot be accessed for validation                                         |
            | 9699406    | The log_path validation failed                                                         |
            | 9699409    | Failed to enable multiproto.audit.evtxlog.support support capability                   |
            | 9699428    | All nodes need to run ONTAP 8.3.0 release to audit CIFS logon-logoff events            |
            | 9699429    | Failed to enable multiproto.audit.cifslogonlogoff.support support capability           |
            | 9699431    | All nodes need to run ONTAP 8.3.0 release to audit CAP staging events                  |
            | 9699432    | Failed to enable multiproto.audit.capstaging.support support capability                |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Auditing for NAS events is a security measure that enables you to track and log certain CIFS and NFS events on storage virtual machines (SVMs). This helps you track potential security problems and provides evidence of any security breaches.
        ## Examples
        ---
        ### Creating an audit entry with log rotation size and log retention count
        To create an audit entry with log rotation size and log retention count, use the following API. Note the <i>return_records=true</i> query parameter is used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /api/protocols/audit/
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/audit" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": true, \"events\": { \"authorization_policy\": false, \"cap_staging\": false, \"cifs_logon_logoff\": true, \"file_operations\": true, \"file_share\": false, \"security_group\": false, \"user_account\": false }, \"log\": { \"format\": \"evtx\", \"retention\": { \"count\": 10 }, \"rotation\": { \"size\": 2048000 }}, \"log_path\": \"/\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"ec650e97-156e-11e9-abcb-005056bbd0bf\" }}"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "ec650e97-156e-11e9-abcb-005056bbd0bf",
                "name": "vs1"
              },
              "enabled": true,
              "events": {
                "authorization_policy": false,
                "cap_staging": false,
                "cifs_logon_logoff": true,
                "file_operations": true,
                "file_share": false,
                "security_group": false,
                "user_account": false
              },
              "log": {
                "format": "evtx",
                "rotation": {
                  "size": 2048000
                },
                "retention": {
                  "count": 10,
                  "duration": "0s"
                }
              },
              "log_path": "/"
            }
          ],
          "num_records": 1
        }
        ```
        ---
        ### Creating an audit entry with log rotation schedule and log retention duration
        To create an audit entry with log rotation schedule and log retention duration, use the following API. Note that the <i>return_records=true</i> query parameter is used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /api/protocols/audit/
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/audit" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": false, \"events\": { \"authorization_policy\": false, \"cap_staging\": false, \"cifs_logon_logoff\": true, \"file_operations\": true, \"file_share\": false, \"security_group\": false, \"user_account\": false }, \"log\": { \"format\": \"xml\", \"retention\": { \"duration\": \"P4DT12H30M5S\" }, \"rotation\": { \"schedule\": { \"days\": [1, 5, 10, 15], \"hours\": [0, 1, 6, 12, 18, 23], \"minutes\": [10, 15, 30, 45, 59], \"months\": [0], \"weekdays\": [0, 2, 5] } } }, \"log_path\": \"/\", \"svm\": { \"name\": \"vs3\", \"uuid\": \"a8d64674-13fc-11e9-87b1-005056a7ae7e\" }}"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a8d64674-13fc-11e9-87b1-005056a7ae7e",
                "name": "vs3"
              },
              "enabled": true,
              "events": {
                "authorization_policy": false,
                "cap_staging": false,
                "cifs_logon_logoff": true,
                "file_operations": true,
                "file_share": false,
                "security_group": false,
                "user_account": false
              },
              "log": {
                "format": "xml",
                "rotation": {
                  "schedule": {
                    "minutes": [
                      10,
                      15,
                      30,
                      45,
                      59
                    ],
                    "hours": [
                      0,
                      1,
                      6,
                      12,
                      18,
                      23
                    ],
                    "weekdays": [
                      0,
                      2,
                      5
                    ],
                    "days": [
                      1,
                      5,
                      10,
                      15
                    ],
                    "months": [
                      0
                    ]
                  }
                },
                "retention": {
                  "count": 0,
                  "duration": "P4DT12H30M5S"
                }
              },
              "log_path": "/"
            }
          ],
          "num_records": 1
        }
        ```
        ---
        ### Retrieving an audit configuration for all SVMs in the cluster
        ---
        ```
        # The API:
        GET /api/protocols/audit/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/audit?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "ec650e97-156e-11e9-abcb-005056bbd0bf",
                "name": "vs1"
              },
              "enabled": true,
              "events": {
                "authorization_policy": false,
                "cap_staging": false,
                "cifs_logon_logoff": true,
                "file_operations": true,
                "file_share": false,
                "security_group": false,
                "user_account": false
              },
              "log": {
                "format": "evtx",
                "rotation": {
                  "size": 2048000
                },
                "retention": {
                  "count": 10,
                  "duration": "0s"
                }
              },
              "log_path": "/"
            },
            {
              "svm": {
                "uuid": "a8d64674-13fc-11e9-87b1-005056a7ae7e",
                "name": "vs3"
              },
              "enabled": true,
              "events": {
                "authorization_policy": false,
                "cap_staging": false,
                "cifs_logon_logoff": true,
                "file_operations": true,
                "file_share": false,
                "security_group": false,
                "user_account": false
              },
              "log": {
                "format": "xml",
                "rotation": {
                  "schedule": {
                    "minutes": [
                      10,
                      15,
                      30,
                      45,
                      59
                    ],
                    "hours": [
                      0,
                      1,
                      6,
                      12,
                      18,
                      23
                    ],
                    "weekdays": [
                      0,
                      2,
                      5
                    ],
                    "days": [
                      1,
                      5,
                      10,
                      15
                    ],
                    "months": [
                      0
                    ]
                  }
                },
                "retention": {
                  "count": 0,
                  "duration": "P4DT12H30M5S"
                }
              },
              "log_path": "/"
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving specific entries with event list as cifs-logon-logoff, file-ops = true for an SVM
        The configuration returned is identified by the events in the list of audit configurations for an SVM.
        <br/>
        ---
        ```
        # The API:
        GET /api/protocols/audit/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/audit?events.file_operations=true&events.cifs_logon_logoff=true&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "ec650e97-156e-11e9-abcb-005056bbd0bf",
                "name": "vs1"
              },
              "events": {
                "cifs_logon_logoff": true,
                "file_operations": true
              }
            },
            {
              "svm": {
                "uuid": "a8d64674-13fc-11e9-87b1-005056a7ae7e",
                "name": "vs3"
              },
              "events": {
                "cifs_logon_logoff": true,
                "file_operations": true
              }
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving a specific audit configuration for an SVM
        The configuration returned is identified by the UUID of its SVM.
        <br/>
        ---
        ```
        # The API:
        GET /api/protocols/audit/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/audit/ec650e97-156e-11e9-abcb-005056bbd0bf" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "ec650e97-156e-11e9-abcb-005056bbd0bf",
            "name": "vs1"
          },
          "enabled": true,
          "events": {
            "authorization_policy": false,
            "cap_staging": false,
            "cifs_logon_logoff": true,
            "file_operations": true,
            "file_share" : false,
            "security_group": false,
            "user_account": false
          },
          "log": {
            "format": "evtx",
            "rotation": {
              "size": 2048000
            },
            "retention": {
              "count": 10,
              "duration": "0s"
            }
          },
          "log_path": "/"
        }
        ```
        ---
        ### Updating a specific audit configuration of an SVM
        The configuration is identified by the UUID of its SVM and the provided information is updated.
        <br/>
        ---
        ```
        # The API:
        PATCH /api/protocols/audit/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/audit/ec650e97-156e-11e9-abcb-005056bbd0bf" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": false}"
        ```
        ---
        ### Deleting a specific audit configuration for an SVM
        The entry to be deleted is identified by the UUID of its SVM.
        <br/>
        ---
        ```
        # The API:
        DELETE /api/protocols/audit/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/audit/ec650e97-156e-11e9-abcb-005056bbd0bf" -H "accept: application/json"
        ```
      tags:
      - NAS
  /protocols/audit/{svm.uuid}:
    delete:
      description: |
        Deletes an audit configuration.
        ### Related ONTAP commands
        * `vserver audit disable`
        * `vserver audit delete`
        ### Learn more
        * [`DOC /protocols/audit`](#docs-NAS-protocols_audit)
      operationId: audit_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9699349    | Auditing should be disabled before deleting the audit configuration           |
            | 9699350    | Audit configuration cannot be deleted, final consolidation is in progress     |
            | 9699410    | Failed to disable multiproto.audit.evtxlog.support support capability         |
            | 9699430    | Failed to disable multiproto.audit.cifslogonlogoff.support support capability |
            | 9699433    | Failed to disable multiproto.audit.capstaging.support support capability      |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves an audit configuration for an SVM.
        ### Related ONTAP commands
        * `vserver audit show`
        ### Learn more
        * [`DOC /protocols/audit`](#docs-NAS-protocols_audit)
      operationId: audit_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/audit'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates an audit configuration for an SVM.
        ### Related ONTAP commands
        * `vserver audit modify`
        ### Learn more
        * [`DOC /protocols/audit`](#docs-NAS-protocols_audit)
      operationId: audit_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/audit'
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9699340    | SVM UUID lookup failed                                                        |
            | 9699343    | Audit configuration is absent for modification                                |
            | 9699358    | Audit configuration is absent for enabling                                    |
            | 9699359    | Audit configuration is already enabled                                        |
            | 9699360    | Final consolidation is in progress, audit enable failed                       |
            | 9699365    | Enabling of audit configuration failed                                        |
            | 9699373    | Audit configuration is absent for disabling                                   |
            | 9699374    | Audit configuration is already disabled                                       |
            | 9699375    | Disabling of audit configuration failed                                       |
            | 9699384    | The specified log_path does not exist                                         |
            | 9699385    | The log_path must be a directory                                              |
            | 9699386    | The log_path must be a canonical path in the SVMs namespace                   |
            | 9699387    | The log_path cannot be empty                                                  |
            | 9699388    | Rotate size must be greater than or equal to 1024 KB                          |
            | 9699389    | The log_path must not contain a symbolic link                                 |
            | 9699398    | The log_path exceeds a maximum supported length of characters                 |
            | 9699399    | The log_path contains an unsupported read-only (DP/LS) volume                 |
            | 9699400    | The specified log_path is not a valid destination for SVM                     |
            | 9699402    | The log_path contains an unsupported snaplock volume                          |
            | 9699403    | The log_path cannot be accessed for validation                                |
            | 9699406    | The log_path validation failed                                                |
            | 9699407    | Additional fields are provided                                                |
            | 9699409    | Failed to enable multiproto.audit.evtxlog.support support capability          |
            | 9699410    | Failed to disable multiproto.audit.evtxlog.support support capability         |
            | 9699418    | Audit configuration is absent for rotate                                      |
            | 9699419    | Failed to rotate audit log                                                    |
            | 9699420    | Cannot rotate audit log, auditing is not enabled for this SVM                 |
            | 9699428    | All nodes need to run ONTAP 8.3.0 release to audit CIFS logon-logoff events   |
            | 9699429    | Failed to enable multiproto.audit.cifslogonlogoff.support support capability  |
            | 9699430    | Failed to disable multiproto.audit.cifslogonlogoff.support support capability |
            | 9699431    | All nodes need to run ONTAP 8.3.0 release to audit CAP staging events         |
            | 9699432    | Failed to enable multiproto.audit.capstaging.support support capability       |
            | 9699433    | Failed to disable multiproto.audit.capstaging.support support capability      |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/home-directory/search-paths:
    get:
      description: |
        Retrieves CIFS home directory search paths.
        ### Related ONTAP commands
        * `cifs server home-directory search-path show`
        ### Learn more
        * [`DOC /protocols/cifs/home-directory/search-paths`](#docs-NAS-protocols_cifs_home-directory_search-paths)
      operationId: cifs_search_path_collection_get
      parameters:
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_search_path_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a home directory search path.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the home directory search path.
        * `path` - Path in the owning SVM namespace that is used to search for home directories.
        ### Related ONTAP commands
        * `cifs server home-directory search-path add`
        ### Learn more
        * [`DOC /protocols/cifs/home-directory/search-paths`](#docs-NAS-protocols_cifs_home-directory_search-paths)
      operationId: cifs_search_path_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_search_path'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/cifs_search_path_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655551     | Invalid home-directory search-path path    |
            | 655462     | The specified path is an invalid file-type |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP home directory functionality can be used to create home directories for SMB users on the CIFS server and automatically offer each user a dynamic share to their home directory without creating an individual SMB share for each user.<p/>
        The home directory search path is a set of absolute paths from the root of an SVM that directs ONTAP to search for home directories. If there are multiple search paths, ONTAP tries them in the order specified until it finds a valid path. To use the CIFS home directories feature, at least one home directory search path must be added for an SVM. <p/>
        ## Examples
        ### Creating a home directory search path
        To create a home directory search path, use the following API. Note the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ```
        # The API:
        POST /api/protocols/cifs/home-directory/search-paths
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/cifs/home-directory/search-paths?return_records=true" -H "accept: applicaion/json" -H "Content-Type: application/json" -d "{ \"path\": \"/\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"a41fd873-ecf8-11e8-899d-0050568e9333\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "a41fd873-ecf8-11e8-899d-0050568e9333",
                "name": "vs1"
              },
            "path": "/"
            }
          ]
        }
        ```
        ---
        ### Retrieving the CIFS home directory search paths configuration for all SVMs in the cluster
        ```
        # The API:
        GET /protocols/cifs/home-directory/search-paths
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/home-directory/search-paths?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "2d96f9aa-f4ce-11e8-b075-0050568e278e",
                "name": "vs1"
              },
              "index": 1,
              "path": "/"
            },
            {
              "svm": {
                "uuid": "2d96f9aa-f4ce-11e8-b075-0050568e278e",
                "name": "vs1"
              },
                "index": 2,
                "path": "/a"
            },
            {
              "svm": {
                "uuid": "4f23449b-f4ce-11e8-b075-0050568e278e",
                "name": "vs2"
              },
              "index": 1,
              "path": "/"
            },
            {
              "svm": {
                "uuid": "4f23449b-f4ce-11e8-b075-0050568e278e",
                "name": "vs2"
              },
              "index": 2,
              "path": "/1"
            }
          ],
          "num_records": 4
        }
        ```
        ### Retrieving a specific home directory searchpath configuration for an SVM
        The configuration returned is identified by the UUID of its SVM and the index (position) in the list of search paths that is searched to  find a home directory of a user. <br/>
        ```
        # The API:
        GET /api/protocols/home-directory/search-paths/{svm.uuid}/{index}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/home-directory/search-paths/2d96f9aa-f4ce-11e8-b075-0050568e278e/2" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "2d96f9aa-f4ce-11e8-b075-0050568e278e",
            "name": "vs1"
          },
          "index": 2,
          "path": "/a"
        }
        ```
        ### Reordering a specific home drectory search path in the list
        An entry in the home directory search path list can be reordered to a new positin by specifying the 'new_index' field. The reordered configuration is identified by the UUID of its SVM and the index. <br/>
        ```
        # The API:
        PATCH /api/protocols/cifs/home-directory/search-paths/{svm.uuid}/{index}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/cifs/home-directory/search-paths/2d96f9aa-f4ce-11e8-b075-0050568e278e/2?new_index=1" -H "accept: application/json"
        ```
        ### Removing a specific home directory search path for an SVM
        The entry being removed is identified by the UUID of its SVM and the index. <br/>
        ```
        # The API:
        DELETE /api/protocols/cifs/home-directory/search-paths/{svm.uuid}/{index}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/cifs/home-directory/search-paths/2d96f9aa-f4ce-11e8-b075-0050568e278e/2" -H "accept: application/json"
        ```
      tags:
      - NAS
  /protocols/cifs/home-directory/search-paths/{svm.uuid}/{index}:
    delete:
      description: |
        Deletes a CIFS home directory search path.
        ### Related ONTAP commands
        * `cifs server home-directory search-path remove`
        ### Learn more
        * [`DOC /protocols/cifs/home-directory/search-paths`](#docs-NAS-protocols_cifs_home-directory_search-paths)
      operationId: cifs_search_path_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Home directory search path index
        in: path
        name: index
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a CIFS home directory search path of an SVM.
        ### Related ONTAP commands
        * `cifs server home-directory search-path show`
        ### Learn more
        * [`DOC /protocols/cifs/home-directory/search-paths`](#docs-NAS-protocols_cifs_home-directory_search-paths)
      operationId: cifs_homedir_search_path_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Home directory search path index
        in: path
        name: index
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_search_path'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Reorders a CIFS home directory search path.
        ### Related ONTAP commands
        * `cifs server home-directory search-path reorder`
        ### Learn more
        * [`DOC /protocols/cifs/home-directory/search-paths`](#docs-NAS-protocols_cifs_home-directory_search-paths)
      operationId: cifs_search_path_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Home directory search path index
        in: path
        name: index
        required: true
        type: integer
      - description: New position for the home directory search path
        in: query
        name: new_index
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655463     | Failed to reorder the search-path because the new-index is invalid. It cannot be '0' and it cannot go beyond the current entries |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/services:
    get:
      description: |
        Retrieves CIFS servers.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `statistics.*`
        * `metric.*`
        ### Related ONTAP commands
        * `vserver cifs server show`
        * `vserver cifs server options show`
        * `vserver cifs server security show`
        ### Learn more
        * [`DOC /protocols/cifs/services`](#docs-NAS-protocols_cifs_services)
      operationId: cifs_service_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by default_unix_user
        in: query
        name: default_unix_user
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by security.kdc_encryption
        in: query
        name: security.kdc_encryption
        type: boolean
      - description: Filter by security.restrict_anonymous
        in: query
        name: security.restrict_anonymous
        type: string
      - description: Filter by security.smb_encryption
        in: query
        name: security.smb_encryption
        type: boolean
      - description: Filter by security.smb_signing
        in: query
        name: security.smb_signing
        type: boolean
      - description: Filter by netbios.wins_servers
        in: query
        name: netbios.wins_servers
        type: string
      - description: Filter by netbios.enabled
        in: query
        name: netbios.enabled
        type: boolean
      - description: Filter by netbios.aliases
        in: query
        name: netbios.aliases
        type: string
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by ad_domain.fqdn
        in: query
        name: ad_domain.fqdn
        type: string
      - description: Filter by ad_domain.organizational_unit
        in: query
        name: ad_domain.organizational_unit
        type: string
      - description: Filter by ad_domain.user
        in: query
        name: ad_domain.user
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a CIFS server. Each SVM can have one CIFS server.</br>
        ### Important notes
        - The CIFS server name might or might not be the same as the SVM name.
        - The CIFS server name can contain up to 15 characters.
        - The CIFS server name does not support the following characters: @ # * ( ) = + [ ] | ; : " , < >  / ?
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the CIFS server.
        * `name` -  Name of the CIFS server.
        * `ad_domain.fqdn` - Fully qualified domain name of the Windows Active Directory to which this CIFS server belongs.
        * `ad_domain.user` - User account with the access to add the CIFS server to the Active Directory.
        * `ad_domain.password` - Account password used to add this CIFS server to the Active Directory.
        ### Recommended optional properties
        * `comment` - Add a text comment of up to 48 characters about the CIFS server.
        * `netbios.aliases` - Add a comma-delimited list of one or more NetBIOS aliases for the CIFS server.
        * `netbios.wins_servers` - Add a list of Windows Internet Name Server (WINS) addresses that manage and map the NetBIOS name of the CIFS server to their network IP addresses. The IP addresses must be IPv4 addresses.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `ad_domain.organizational_unit` - _CN=Computers_
        * `enabled` - _true_
        * `restrict_anonymous` - _no_enumeration_
        * `smb_signing` - _false_
        * `smb_encryption` - _false_
        * `kdc_encryption` - _false_
        * `default_unix_user` - _pcuser_
        * `netbios_enabled` - _false_ However, if either "netbios.wins-server" or "netbios.aliases" is set during POST and if `netbios_enabled` is not specified then `netbios_enabled` is set to true.
        ### Related ONTAP commands
        * `vserver cifs server create`
        * `vserver cifs server options modify`
        * `vserver cifs security modify`
        * `vserver cifs server add-netbios-aliases`
        ### Learn more
        * [`DOC /protocols/cifs/services`](#docs-NAS-protocols_cifs_services)
      operationId: cifs_service_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_service'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        A CIFS server is necessary to provide SMB clients with access to the Storage Virtual Machine (SVM). Before you begin, the following prerequisites must be in place:</br>
         * At least one SVM LIF must exist on the SVM.
         * The LIFs must be able to connect to the DNS servers configured on the SVM and to an Active Directory domain controller of the domain to which you want to join the CIFS server.
         * The DNS servers must contain the service location records that are needed to locate the Active Directory domain services.
         * The cluster time must be synchronized to within five minutes of the Active Directory domain controller.
        ## Performance monitoring
        Performance of the SVM can be monitored by the `metric.*` and `statistics.*` properties. These show the performance of the SVM in terms of IOPS, latency and throughput. The `metric.*` properties denote an average whereas `statistics.*` properties denote a real-time monotonically increasing value aggregated across all nodes.
        ### Information on the CIFS server
         You must keep the following in mind when creating the CIFS server:
         * The CIFS server name might or might not be the same as the SVM name.
         * The CIFS server name can be up to 15 characters in length.
         * The following characters are not allowed: @ # * ( ) = + [ ] | ; : " , < > \ / ?
         * You must use the FQDN when specifying the domain.
         * The default is to add the CIFS server machine account to the Active Directory "CN=Computer" object.
         * You can choose to add the CIFS server to a different organizational unit (OU) by specifying the "organizational_unit" parameter. When specifying the OU, do not specify the domain portion of the distinguished name; only specify the OU or CN portion of the distinguished name. ONTAP appends the value provided for the required "-domain" parameter onto the value provided for the "-ou" parameter to create the Active Directory distinguished name, which is used when joining the Active Directory domain.
         * You can optionally choose to add a text comment of up to 48 characters about the CIFS server. If there is a space in the comment text, you must enclose the entire string in quotation marks.
         * You can optionally choose to add a comma-delimited list of one or more NetBIOS aliases for the CIFS server.
         * The initial administrative status of the CIFS server is "up".
         * The <i> large-mtu</i> and <i>multichannel</i> features are enabled for the new CIFS server.
         * If LDAP is configured with the <i>use_start_tls</i> and <i>session_security</i> features, the new CIFS server will also have this property set.
        ## Examples
        ### Creating a CIFS server
        To create a CIFS server, use the following API. Note the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /api/protocols/cifs/services
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/cifs/services?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"ad_domain\": { \"fqdn\": \"CIFS-2008R2-AD.GDL.ENGLAB.NETAPP.COM\", \"organizational_unit\": \"CN=Computers\", \"password\": \"cifs*123\", \"user\": \"administrator\" }, \"comment\": \"This CIFS Server Belongs to CS Department\", \"default_unix_user\": \"string\", \"enabled\": true, \"name\": \"CIFS-DOC\", \"netbios\": { \"aliases\": [ \"ALIAS_1\", \"ALIAS_2\", \"ALIAS_3\" ], \"enabled\": false, \"wins_servers\": [ \"10.224.65.20\", \"10.224.65.21\" ] }, \"security\": { \"kdc_encryption\": false, \"restrict_anonymous\": \"no_enumeration\", \"smb_encryption\": false, \"smb_signing\": false }, \"svm\": { \"name\": \"vs1\", \"uuid\": \"ef087155-f9e2-11e8-ac52-0050568ea248\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "9f5ab4cb-f703-11e8-91cc-0050568eca13",
                "name": "vs1"
              },
              "name": "CIFS-DOC",
              "ad_domain": {
                "fqdn": "CIFS-2008R2-AD.GDL.ENGLAB.NETAPP.COM",
                "user": "administrator",
                "password": "cifs*123",
                "organizational_unit": "CN=Computers"
              },
              "enabled": true,
              "comment": "This CIFS Server Belongs to CS Department",
              "security": {
                "restrict_anonymous": "no_enumeration",
                "smb_signing": false,
                "smb_encryption": false,
                "kdc_encryption": false
              },
              "netbios": {
                "aliases": [
                  "ALIAS_1",
                  "ALIAS_2",
                  "ALIAS_3"
                ],
                "wins_servers": [
                  "10.224.65.20",
                  "10.224.65.21"
                ],
                "enabled": false
              },
              "default_unix_user": "string"
            }
          ],
          "job": {
            "uuid": "f232b6da-00a4-11e9-a8c1-0050568eca13",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f232b6da-00a4-11e9-a8c1-0050568eca13"
              }
            }
          }
        }
        ```
        ---
        ### Retrieving the full CIFS server configuration for all SVMs in the cluster
        ---
        ```
        # The API:
        GET /api/protocols/cifs/services
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/services?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "9f5ab4cb-f703-11e8-91cc-0050568eca13",
                "name": "vs1"
              },
              "name": "CIFS-DOC",
              "ad_domain": {
                "fqdn": "CIFS-2008R2-AD.GDL.ENGLAB.NETAPP.COM",
                "organizational_unit": "CN=Computers"
              },
              "enabled": true,
              "comment": "This CIFS Server Belongs to CS Department",
              "security": {
                "restrict_anonymous": "no_enumeration",
                "smb_signing": false,
                "smb_encryption": false,
                "kdc_encryption": false
              },
              "netbios": {
                "aliases": [
                  "ALIAS_1",
                  "ALIAS_2",
                  "ALIAS_3"
                ],
                "wins_servers": [
                  "10.224.65.20",
                  "10.224.65.21"
                ],
                "enabled": false
              },
              "default_unix_user": "string"
            }
          ],
          "num_records": 1
        }
        ```
        ---
        ### Retrieving CIFS server configuration details for a specific SVM
        ---
        ```
        # The API:
        GET /api/protocols/cifs/services/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/services/9f5ab4cb-f703-11e8-91cc-0050568eca13" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "9f5ab4cb-f703-11e8-91cc-0050568eca13",
            "name": "vs1"
          },
          "name": "CIFS-DOC",
          "ad_domain": {
            "fqdn": "CIFS-2008R2-AD.GDL.ENGLAB.NETAPP.COM",
            "organizational_unit": "CN=Computers"
          },
          "enabled": true,
          "comment": "This CIFS Server Belongs to CS Department",
          "security": {
            "restrict_anonymous": "no_enumeration",
            "smb_signing": false,
            "smb_encryption": false,
            "kdc_encryption": false
          },
          "netbios": {
            "aliases": [
              "ALIAS_1",
              "ALIAS_2",
              "ALIAS_3"
            ],
            "wins_servers": [
              "10.224.65.20",
              "10.224.65.21"
            ],
            "enabled": false
          },
          "default_unix_user": "string"
        }
        ```
        ---
        ### Updating CIFS server properties for the specified SVM
        ---
        ```
        # The API:
        PATCH /api/protocols/cifs/services/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/cifs/services/9f5ab4cb-f703-11e8-91cc-0050568eca13" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"comment\": \"CIFS SERVER MODIFICATION\" }"
        ```
        ---
        ### Removing a CIFS server for a specific SVM
        To delete a CIFS server, use the following API. This will delete the CIFS server along with other CIFS configurations such as CIFS share, share ACLs, homedir search-path, and so on.
        <br/>
        ---
        ```
        # The API:
        DELETE /api/protocols/cifs/services/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/cifs/services/9f5ab4cb-f703-11e8-91cc-0050568eca13" -H "accept: application/json" -H "Content-Type: application/json" -d "{\"ad_domain\": { \"password\": \"cifs*123\", \"user\": \"administrator\" } }"
        ```
        ---
      tags:
      - NAS
  /protocols/cifs/services/{svm.uuid}:
    delete:
      description: |
        Deletes a CIFS server and related CIFS configurations.
        ### Related ONTAP commands
        * `vserver cifs server delete`
        * `vserver cifs remove-netbios-aliases`
        ### Learn more
        * [`DOC /protocols/cifs/services`](#docs-NAS-protocols_cifs_services)
      operationId: cifs_service_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_service_delete'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a CIFS server.
        ### Related ONTAP commands
        * `vserver cifs server show`
        * `vserver cifs server options show`
        * `vserver cifs server security show`
        ### Learn more
        * [`DOC /protocols/cifs/services`](#docs-NAS-protocols_cifs_services)
      operationId: cifs_service_get
      parameters:
      - in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates both the mandatory and optional parameters of the CIFS configuration. Ensure the CIFS server is administratively disabled when renaming the CIFS server or modifying the <i>ad_domain</i> properties.
        ### Related ONTAP commands
        * `vserver cifs server modify`
        * `vserver cifs server options modify`
        * `vserver cifs security modify`
        * `vserver cifs server add-netbios-aliases`
        * `vserver cifs server remove-netbios-aliases`
        ### Learn more
        * [`DOC /protocols/cifs/services`](#docs-NAS-protocols_cifs_services)
      operationId: cifs_service_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_service'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/services/{svm.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for the CIFS protocol
        of an SVM.
      operationId: cifs_collection_performance_metrics_get
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_cifs_metric_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/shares:
    get:
      description: |
        Retrieves CIFS shares.
        ### Related ONTAP commands
        * `vserver cifs share show`
        * `vserver cifs share properties show`
        ### Learn more
        * [`DOC /protocols/cifs/shares`](#docs-NAS-protocols_cifs_shares)
      operationId: cifs_share_collection_get
      parameters:
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by oplocks
        in: query
        name: oplocks
        type: boolean
      - description: Filter by encryption
        in: query
        name: encryption
        type: boolean
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by home_directory
        in: query
        name: home_directory
        type: boolean
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by unix_symlink
        in: query
        name: unix_symlink
        type: string
      - description: Filter by access_based_enumeration
        in: query
        name: access_based_enumeration
        type: boolean
      - description: Filter by acls.type
        in: query
        name: acls.type
        type: string
      - description: Filter by acls.permission
        in: query
        name: acls.permission
        type: string
      - description: Filter by acls.user_or_group
        in: query
        name: acls.user_or_group
        type: string
      - description: Filter by change_notify
        in: query
        name: change_notify
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a CIFS share.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the CIFS share.
        * `name` - Name of the CIFS share.
        * `path` - Path in the owning SVM namespace that is shared through this share.
        ### Recommended optional properties
        * `comment` - Optionally choose to add a text comment of up to 256 characters about the CIFS share.
        * `acls` - Optionally choose to add share permissions that users and groups have on the CIFS share.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `home_directory` - _false_
        * `oplocks` - _true_
        * `access_based_enumeration` - _false_
        * `change_notify` - _true_
        * `encryption` - _false_
        * `unix_symlink` - _local_
        ### Related ONTAP commands
        * `vserver cifs share create`
        * `vserver cifs share properties add`
        * `vserver cifs share access-control create`
        ### Learn more
        * [`DOC /protocols/cifs/shares`](#docs-NAS-protocols_cifs_shares)
      operationId: cifs_share_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_share'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655628     | CIFS Share Creation with property 'SMB_ENCRYPTION' failed because the CIFS server does not support SMB3.0 |
            | 655551     | CIFS Share Creation failed because the specified path does not exist |
            | 655577     | The CIFS share name cannot be more than 80 characters long |
            | 655399     | Failed to create CIFS share. The CIFS server does not exist for specified SVM |
            | 656422     | Failed to create the home directory share because the directory shares must specify a path relative to one or more home directory search paths |
            | 656423     | Failed to create CIFS share. The Shares must define an absolute share path |
            | 656424     | Failed to create CIFS the administrator share 'c$' because you are not permitted to created any admin shares |
            | 655625     | Failed to create CIFS share. The Shares path is not a valid file-type for CIFS share |
            | 656426     | CIFS Share Creation failed because the share name is invalid |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Before any users or applications can access data on the CIFS server over SMB, a CIFS share must be created with sufficient share permissions. CIFS share is a named access point in a volume which is tied to the CIFS server on the SVM. Before creating a CIFS share make sure that the path is valid within the scope of the SVM and that it is reachable.</br>
        Permissions can be assigned to this newly created share by specifying the 'acls' field. When a CIFS share is created, ONTAP creates a default ACL for this share with 'Full-Control' permissions for an 'Everyone' user.
        ## Examples
        ### Creating a CIFS share
        To create a CIFS share for a CIFS server, use the following API. Note the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /api/protocols/cifs/shares
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/cifs/shares?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"access_based_enumeration\": false, \"acls\": [ { \"permission\": \"no_access\", \"type\": \"unix_user\", \"user_or_group\": \"root\" } ], \"change_notify\": true, \"comment\": \"HR Department Share\", \"encryption\": false, \"home_directory\": false, \"name\": \"TEST\", \"oplocks\": true, \"path\": \"/\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"000c5cd2-ebdf-11e8-a96e-0050568ea3cb\" }, \"unix_symlink\": \"local\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1"
              },
              "name": "TEST",
              "path": "/",
              "comment": "HR Department Share",
              "home_directory": false,
              "oplocks": true,
              "access_based_enumeration": false,
              "change_notify": true,
              "encryption": false,
              "unix_symlink": "local",
              "acls": [
                {
                  "user_or_group": "root",
                  "type": "unix_user",
                  "permission": "no_access",
                  "winsid_unixId": "0"
                }
              ]
            }
          ]
        }
        ```
        ---
        ### Retrieving CIFS Shares for all SVMs in the cluster
        ---
        ```
        # The API:
        GET /api/protocols/cifs/shares
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/shares?fields=*&return_records=true&return_timeout=15" -H "accept application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/000c5cd2-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "name": "admin$",
              "path": "/",
              "home_directory": false,
              "oplocks": false,
              "access_based_enumeration": false,
              "change_notify": false,
              "encryption": false,
              "volume": {
                "name": "vol1",
                "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/admin%24"
                }
              }
            },
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/000c5cd2-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "name": "c$",
              "path": "/",
              "home_directory": false,
              "oplocks": true,
              "access_based_enumeration": false,
              "change_notify": true,
              "encryption": false,
              "unix_symlink": "local",
              "acls": [
                {
                  "user_or_group": "BUILTIN\\Administrators",
                  "type": "windows",
                  "permission": "full_control"
                }
              ],
              "volume": {
                "name": "vol1",
                "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/c%24"
                }
              }
            },
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/000c5cd2-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "name": "ipc$",
              "path": "/",
              "home_directory": false,
              "oplocks": false,
              "access_based_enumeration": false,
              "change_notify": false,
              "encryption": false,
              "volume": {
                "name": "vol1",
                "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/ipc%24"
                }
              }
            },
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/000c5cd2-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "name": "TEST",
              "path": "/",
              "comment": "HR Department Share",
              "home_directory": false,
              "oplocks": true,
              "access_based_enumeration": false,
              "change_notify": true,
              "encryption": false,
              "unix_symlink": "local",
              "acls": [
                {
                  "user_or_group": "Everyone",
                  "type": "windows",
                  "permission": "full_control"
                },
                {
                  "user_or_group": "root",
                  "type": "unix_user",
                  "permission": "no_access"
                }
              ],
              "volume": {
                "name": "vol1",
                "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/TEST"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/protocols/cifs/shares?fields=*&return_records=true&return_timeout=15"
            }
          }
        }
        ```
        ---
        ### Retrieving all CIFS Shares for all SVMs in the cluster for which the acls are configured for a "root" user
        ---
        ```
        # The API:
        GET /api/protocols/cifs/shares
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/shares?acls.user_or_group=root&fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1"
              },
              "name": "TEST",
              "path": "/",
              "comment": "HR Department Share",
              "home_directory": false,
              "oplocks": true,
              "access_based_enumeration": false,
              "change_notify": true,
              "encryption": false,
              "unix_symlink": "local",
              "acls": [
                {
                  "user_or_group": "Everyone",
                  "type": "windows",
                  "permission": "full_control"
                },
                {
                  "user_or_group": "root",
                  "type": "unix_user",
                  "permission": "no_access"
                }
              ],
              "volume": {
                "name": "vol1",
                "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
              }
            }
          ],
          "num_records": 1
        }
        ```
        ### Retrieving a specific CIFS share configuration for an SVM
        The configuration being returned is identified by the UUID of its SVM and the name of the share.
        ```
        # The API:
        GET /api/protocols/cifs/shares/{svm.uuid}/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/TEST" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
            "name": "vs1"
          },
          "name": "TEST",
          "path": "/",
          "comment": "HR Department Share",
          "home_directory": false,
          "oplocks": true,
          "access_based_enumeration": false,
          "change_notify": true,
          "encryption": false,
          "unix_symlink": "local",
          "acls": [
            {
              "user_or_group": "Everyone",
              "type": "windows",
              "permission": "full_control"
            },
            {
              "user_or_group": "root",
              "type": "unix_user",
              "permission": "no_access"
            }
          ],
          "volume": {
            "name": "vol1",
            "uuid": "4e06f1bc-1ddc-42e2-abb2-f221c6a2ab2a"
          }
        }
        ```
        ### Updating a specific CIFS share for an SVM
        The CIFS share being modified is identified by the UUID of its SVM and the CIFS share name. The CIFS share ACLs cannot be modified with this API.
        ```
        # The API:
        PATCH /api/protocols/cifs/shares/{svm.uuid}/{name}
        # The call:
         curl -X PATCH "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/TEST" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"access_based_enumeration\": true, \"change_notify\": true, \"comment\": \"HR Department Share\", \"encryption\": false, \"oplocks\": true, \"path\": \"/\", \"unix_symlink\": \"widelink\"}"
         ```
        ### Removing a specific CIFS share for an SVM
        The CIFS share being removed is identified by the UUID of its SVM and the CIFS share name.
        ```
        # The API:
        DELETE /api/protocols/cifs/shares/{svm.uuid}/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/test" -H "accept: application/json"
        ```
        ---
      tags:
      - NAS
  /protocols/cifs/shares/{svm.uuid}/{name}:
    delete:
      description: |
        Deletes a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share delete`
        ### Learn more
        * [`DOC /protocols/cifs/shares`](#docs-NAS-protocols_cifs_shares)
      operationId: cifs_share_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share Name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655393     | Standard admin shares cannot be removed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share show`
        * `vserver cifs share properties show`
        ### Learn more
        * [`DOC /protocols/cifs/shares`](#docs-NAS-protocols_cifs_shares)
      operationId: cifs_share_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share Name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share modify`
        * `vserver cifs share properties add`
        * `vserver cifs share properties remove`
        ### Learn more
        * [`DOC /protocols/cifs/shares`](#docs-NAS-protocols_cifs_shares)
      operationId: cifs_share_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share Name
        in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_share'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655628     | 'SMB_ENCRYPTION' property cannot be set on CIFS share because the CIFS server does not support SMB3.0 |
            | 655551     | CIFS Share modification failed because the specified path does not exist |
            | 655620     | Cannot set symlink properties for admin shares                           |
            | 656420     | Cannot modify the standard share ipc$                                    |
            | 656421     | Cannot modify the standard share admin$                                  |
            | 656422     | Failed to modify the home directory share because the directory shares must specify a path relative to one or more home directory search paths |
            | 656423     | Failed to modify CIFS share. The Shares must define an absolute share path |
            | 656425     | Failed to modify the CIFS share because the path for an administrative share cannot be modified |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/shares/{svm.uuid}/{share}/acls:
    get:
      description: |
        Retrieves the share-level ACL on a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share access-control show`
        ### Learn more
        * [`DOC /protocols/cifs/shares/{svm.uuid}/{share}/acls`](#docs-NAS-protocols_cifs_shares_{svm.uuid}_{share}_acls)
      operationId: cifs_share_acl_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: CIFS Share Name
        in: path
        name: share
        required: true
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by permission
        in: query
        name: permission
        type: string
      - description: Filter by user_or_group
        in: query
        name: user_or_group
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share_acl_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a share-level ACL on a CIFS share.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the share acl.
        * `share` - Existing CIFS share in which to create the share acl.
        * `user_or_group` - Existing user or group name for which the acl is added on the CIFS share.
        * `permission` - Access rights that a user or group has on the defined CIFS share.
        ### Default property values
        * `type` - _windows_
        ### Related ONTAP commands
        * `vserver cifs share access-control create`
        ### Learn more
        * [`DOC /protocols/cifs/shares/{svm.uuid}/{share}/acls`](#docs-NAS-protocols_cifs_shares_{svm.uuid}_{share}_acls)
      operationId: cifs_share_acl_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: CIFS Share Name
        in: path
        name: share
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_share_acl'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655470     | Failed to create share ACL because the share does not exist |
            | 655446     | Failed to create share ACL because the specified Windows user/group does not exist|
            | 4849678    | Failed to create share ACL because the specified UNIX user/group does not exist|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Access to files and folders can be secured over a network by configuring share access control lists (ACLs) on CIFS shares. Share-level ACLs can be configured by using either Windows users and groups or UNIX users and groups. A share-level ACL consists of a list of access control entries (ACEs). Each ACE contains a user or group name and a set of permissions that determines user or group access to the share, regardless of the security style of the volume or qtree containing the share. </br>
        When an SMB user tries to access a share, ONTAP checks the share-level ACL to determine whether access should be granted. A share-level ACL only restricts access to files in the share; it never grants more access than the file level ACLs.
        ## Examples
        ### Creating a CIFS share ACL
        To create a share ACL for a CIFS share, use the following API. Note the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /api/protocols/cifs/shares{svm.uuid}/{share}/acls
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/sh1/acls?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"permission\": \"no_access\", \"type\": \"windows\", \"user_or_group\": \"root\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "name": "vs1"
              },
              "user_or_group": "root",
              "type": "windows",
              "permission": "no_access"
            }
          ]
        }
        ```
        ---
        ### Retrieving all CIFS shares ACLs for a specific CIFS share for a specific SVM in the cluster
        ---
        ```
        # The API:
        GET /api/protocols/cifs/shares/{svm.uuid}/{share}/acls
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/sh1/acls?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1"
              },
              "share": "sh1",
              "user_or_group": "Everyone",
              "type": "windows",
              "permission": "full_control"
            },
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1"
              },
              "share": "sh1",
              "user_or_group": "root",
              "type": "windows",
              "permission": "no_access"
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving a CIFS share ACLs for a user or a group of type Windows or type UNIX on a CIFS share for a specific SVM
        ---
        ```
        # The API:
        GET /api/protocols/cifs/shares/{svm.uuid}/{share}/acls/{user_or_group}/{type}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/sh1/acls/everyone/windows" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
            "name": "vs1"
          },
          "share": "sh1",
          "user_or_group": "everyone",
          "type": "windows",
          "permission": "full_control"
        }
        ```
        ### Updating a CIFS share ACLs of a user or group on a CIFS share for a specific SVM
        The CIFS share ACL being modified is identified by the UUID of its SVM, the CIFS share name, user or group name and the type of the user or group.
        ```
        # The API:
        PATCH /api/protocols/cifs/shares/{svm.uuid}/{share}/acls/{user_or_group}/{type}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/sh1/acls/everyone/windows" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"permission\": \"no_access\"}"
        ```
        ### Removing a CIFS share ACLs of a user or group on a CIFS Share for a specific SVM
        The CIFS share ACL being removed is identified by the UUID of its SVM, the CIFS share name, user or group name and the type of the user or group.
        ```
        # The API:
        DELETE /api/protocols/cifs/shares/{svm.uuid}/{share}/acls/{user_or_group}/{type}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/cifs/shares/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/sh1/acls/everyone/windows" -H "accept: application/json"
        ```
        ---
      tags:
      - NAS
  /protocols/cifs/shares/{svm.uuid}/{share}/acls/{user_or_group}/{type}:
    delete:
      description: |
        Deletes a share-level ACL on a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share access-control delete`
        ### Learn more
        * [`DOC /protocols/cifs/shares/{svm.uuid}/{share}/acls`](#docs-NAS-protocols_cifs_shares_{svm.uuid}_{share}_acls)
      operationId: cifs_share_acl_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share name
        in: path
        name: share
        required: true
        type: string
      - description: User or group name
        in: path
        name: user_or_group
        required: true
        type: string
      - description: User or group type
        in: path
        name: type
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the share-level ACL on CIFS share for a specified user or group.
        ### Related ONTAP commands
        * `vserver cifs share access-control show`
        ### Learn more
        * [`DOC /protocols/cifs/shares/{svm.uuid}/{share}/acls`](#docs-NAS-protocols_cifs_shares_{svm.uuid}_{share}_acls)
      operationId: cifs_share_acl_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share name
        in: path
        name: share
        required: true
        type: string
      - description: User or group name
        in: path
        name: user_or_group
        required: true
        type: string
      - description: User or group type
        in: path
        name: type
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_share_acl'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates a share-level ACL on a CIFS share.
        ### Related ONTAP commands
        * `vserver cifs share access-control modify`
        ### Learn more
        * [`DOC /protocols/cifs/shares/{svm.uuid}/{share}/acls`](#docs-NAS-protocols_cifs_shares_{svm.uuid}_{share}_acls)
      operationId: cifs_share_acl_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Share name
        in: path
        name: share
        required: true
        type: string
      - description: User or group name
        in: path
        name: user_or_group
        required: true
        type: string
      - description: User or group type
        in: path
        name: type
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_share_acl'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655516     | The share ACL does not exist for given user and share |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/cifs/unix-symlink-mapping:
    get:
      description: |
        Retrieves UNIX symbolic link mappings for CIFS clients.
        ### Related ONTAP commands
        * `vserver cifs symlink show`
        ### Learn more
        * [`DOC /protocols/cifs/unix-symlink-mapping`](#docs-NAS-protocols_cifs_unix-symlink-mapping)
      operationId: cifs_symlink_mapping_collection_get
      parameters:
      - description: Filter by unix_path
        in: query
        name: unix_path
        type: string
      - description: Filter by target.path
        in: query
        name: target.path
        type: string
      - description: Filter by target.server
        in: query
        name: target.server
        type: string
      - description: Filter by target.share
        in: query
        name: target.share
        type: string
      - description: Filter by target.home_directory
        in: query
        name: target.home_directory
        type: boolean
      - description: Filter by target.locality
        in: query
        name: target.locality
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_symlink_mapping_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a UNIX symbolic link mapping for a CIFS client.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the CIFS unix-symlink-mapping.
        * `unix_path` - UNIX path to which the CIFS symlink mapping to be created.
        * `target.share` - CIFS share name on the destination CIFS server to which the UNIX symbolic link is pointing.
        * `target.path` - CIFS path on the destination to which the symbolic link maps.
        ### Default property values
        * `target.server` - _Local_NetBIOS_Server_Name_
        * `locality` - _local_
        * `home_directory` - _false_
        ### Related ONTAP commands
        * `vserver cifs symlink create`
        ### Learn more
        * [`DOC /protocols/cifs/unix-symlink-mapping`](#docs-NAS-protocols_cifs_unix-symlink-mapping)
      operationId: cifs_symlink_mapping_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_symlink_mapping'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/cifs_symlink_mapping_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655654     | Must specify the target CIFS share while creating path mapping entries with localities "local" or "widelink" |
            | 655572     | The target path contains illegal characters or is too long |
            | 655574     | The target server contains illegal characters or is too long |
            | 655436     | If the locality is "local", the target server must be blank or must match the CIFS NetBIOS name for given SVM |
            | 655439     | The Specified target server is local CIFS server for given SVM but the locality is specified as "widelink" |
            | 655546     | Failed to create symlink mapping becasue administrative share cannot be used as target share |
            | 655437     | Failed to create the symlink mapping with locality "local" because the target share does not exist for specified SVM |
            | 655429     | UNIX path must begin and end with a "/" |
            | 655430     | Target path must begin and end with a "/" |
            | 655399     | Failed to get the CIFS server for specified SVM |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP allows both CIFS and NFS to access the same datastore. This datastore can contain symbolic links which are files, created by UNIX clients. It contains a reference to another file or directory. If an SMB client accesses a symbolic link, it is redirected to the target file or directory that the symbolic link refers to. The symbolic links can point to files within the volume that contain the share, or to files that are contained in other volumes on the Storage Virtual Machine (SVM), or even to volumes contained on other SVMs.<p/>
        There are two types of symbolic links:
          * <b>Relative</b>  A relative symbolic link contains a reference to the file or directory relative to its parent directory. Therefore, the path of the file it is referring to should not begin with a backslash (/). If you enable symbolic links on a share, relative symbolic links work without UNIX symlink mapping.
          * <b>Absolute</b> An absolute symbolic link contains a reference to a file or directory in the form of an absolute path. Therefore, the path of the file it is referring to should begin with a backslash (/). An absolute symbolic link can refer to a file or directory within or outside of the file system of the symbolic link. If the target is not in the same local file system, the symbolic link is called a "widelink". If the symbolic link is enabled on a share and absolute symbolic links do not work right away, the mapping between the UNIX path of the symbolic link to the destination CIFS path must be created. When creating absolute symbolic link mappings, locality could be either "local" or "widelink" and it must be specified. If UNIX symlink mapping is created for a file or directory which is outside of the local share but the locality is set to "local", ONTAP does not allow access to the target.
        </br>A UNIX symbolic link support could be added to SMB shares by specifying the <i>unix_symlink</i> property during the creation of SMB shares or at any time by modifying the existing SMB <i>unix_symlink</i> property. UNIX symbolic link support is enabled by default.<p/>
        ## Examples
        ### Creating a UNIX symlink mapping for CIFS shares
        To create UNIX symlink mappings for SMB shares, use the following API. Note the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ```
        # The API:
        POST /api/protocols/cifs/unix-symlink-mapping
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/cifs/unix-symlink-mapping?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"svm\": { \"name\": \"vs1\", \"uuid\": \"000c5cd2-ebdf-11e8-a96e-0050568ea3cb\" }, \"target\": { \"home_directory\": false, \"locality\": \"local\", \"path\": \"/dir1/dir2/\", \"server\": \"cifs123\", \"share\": \"sh1\" }, \"unix_path\": \"/mnt/eng_volume/\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1"
              },
              "unix_path": "/mnt/eng_volume/",
              "target": {
                "share": "sh1",
                "path": "/dir1/dir2/",
                "server": "cifs123",
                "locality": "local",
                "home_directory": false
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving UNIX symlink mappings for all SVMs in the cluster
        ```
        # The API:
        GET /api/protocols/cifs/unix-symlink-mapping
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/unix-symlink-mapping?fields=*&return_records=true&return_timeout=15" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/000c5cd2-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "unix_path": "/mnt/eng_volume/",
              "target": {
                "share": "sh1",
                "path": "/dir1/dir2/",
                "server": "CIFS123",
                "locality": "local",
                "home_directory": false
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/unix-symlink-mapping/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/%2Fmnt%2Feng_volume%2F"
                }
              }
            },
            {
              "svm": {
                "uuid": "1d30d1b1-ebdf-11e8-a96e-0050568ea3cb",
                "name": "vs2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/1d30d1b1-ebdf-11e8-a96e-0050568ea3cb"
                  }
                }
              },
              "unix_path": "/mnt/eng_volume/",
              "target": {
                "share": "ENG_SHARE",
                "path": "/dir1/dir2/",
                "server": "ENGCIFS",
                "locality": "widelink",
                "home_directory": false
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/cifs/unix-symlink-mapping/1d30d1b1-ebdf-11e8-a96e-0050568ea3cb/%2Fmnt%2Feng_volume%2F"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/cifs/unix-symlink-mapping?fields=*&return_records=true&return_timeout=15"
            }
          }
        }
        ```
        ### Retrieving a specific UNIX symlink mapping for an SVM
        The mapping being returned is identified by the UUID of its SVM and the unix-path.
        <br/>
        ```
        # The API:
        GET /api/protocols/cifs/unix-symlink-mapping/{svm.uuid}/{unix_path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/cifs/unix-symlink-mapping/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/%2Fmnt%2Feng_volume%2F" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "000c5cd2-ebdf-11e8-a96e-0050568ea3cb",
           "name": "vs1"
          },
          "unix_path": "/mnt/eng_volume/",
          "target": {
            "share": "sh1",
            "path": "/dir1/dir2/",
            "server": "CIFS123",
            "locality": "local",
            "home_directory": false
          }
        }
        ```
        ### Updating a specific UNIX symlink mapping for an SVM
        The mapping being modified is identified by the UUID of its SVM and the unix-path.
        <br/>
        ```
        # The API:
        PATCH /api/protocols/cifs/unix-symlink-mapping/{svm.uuid}/{unix_path}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/cifs/unix-symlink-mapping/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/%2Fmnt%2Feng_volume%2F" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"target\": { \"home_directory\": true, \"locality\": \"widelink\", \"path\": \"/new_path/\", \"server\": \"HR_SERVER\", \"share\": \"sh2\" }}"
        ```
        ### Removing a specific UNIX symlink mapping for an SVM
        The mapping being removed is identified by the UUID of its SVM and the unix-path.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/cifs/unix-symlink-mapping/{svm.uuid}/{unix_path}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/cifs/unix-symlink-mapping/000c5cd2-ebdf-11e8-a96e-0050568ea3cb/%2Fmnt%2Feng_volume%2F" -H "accept: application/json"
        ```
      tags:
      - NAS
  /protocols/cifs/unix-symlink-mapping/{svm.uuid}/{unix_path}:
    delete:
      description: |
        Deletes the UNIX symbolic link mapping for CIFS clients.
        ### Related ONTAP commands
        * `vserver cifs symlink delete`
        ### Learn more
        * [`DOC /protocols/cifs/unix-symlink-mapping`](#docs-NAS-protocols_cifs_unix-symlink-mapping)
      operationId: cifs_symlink_mapping_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: UNIX symbolic link path
        in: path
        name: unix_path
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a UNIX symbolic link mapping for CIFS clients.
        ### Related ONTAP commands
        * `vserver cifs symlink show`
        ### Learn more
        * [`DOC /protocols/cifs/unix-symlink-mapping`](#docs-NAS-protocols_cifs_unix-symlink-mapping)
      operationId: cifs_symlink_mapping_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: UNIX symbolic link path
        in: path
        name: unix_path
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cifs_symlink_mapping'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the UNIX symbolic link mapping for CIFS clients.
        ### Related ONTAP commands
        * `vserver cifs symlink modify`
        ### Learn more
        * [`DOC /protocols/cifs/unix-symlink-mapping`](#docs-NAS-protocols_cifs_unix-symlink-mapping)
      operationId: cifs_symlink_mapping_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: UNIX symbolic link path
        in: path
        name: unix_path
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cifs_symlink_mapping'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 655573     | Failed to modify the symlink mapping to target path because it contains illegal characters or is too long |
            | 655575     | Failed to modify the symlink mapping to target server because it contains illegal characters or is too long |
            | 655547     | Failed to modify symlink mapping becasue administrative share cannot be used as target share |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/fpolicy:
    get:
      description: |
        Retrieves an FPolicy configuration.
        ### Related ONTAP commands
        * `fpolicy show`
        * `fpolicy policy show`
        * `fpolicy policy scope show`
        * `fpolicy policy event show`
        * `fpolicy policy external-engine show`
        ### Learn more
        * [`DOC /protocols/fpolicy`](#docs-NAS-protocols_fpolicy)
      operationId: fpolicy_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by policies.enabled
        in: query
        name: policies.enabled
        type: boolean
      - description: Filter by policies.priority
        in: query
        name: policies.priority
        type: integer
      - description: Filter by policies.scope.include_shares
        in: query
        name: policies.scope.include_shares
        type: string
      - description: Filter by policies.scope.exclude_export_policies
        in: query
        name: policies.scope.exclude_export_policies
        type: string
      - description: Filter by policies.scope.exclude_volumes
        in: query
        name: policies.scope.exclude_volumes
        type: string
      - description: Filter by policies.scope.exclude_extension
        in: query
        name: policies.scope.exclude_extension
        type: string
      - description: Filter by policies.scope.exclude_shares
        in: query
        name: policies.scope.exclude_shares
        type: string
      - description: Filter by policies.scope.include_export_policies
        in: query
        name: policies.scope.include_export_policies
        type: string
      - description: Filter by policies.scope.include_volumes
        in: query
        name: policies.scope.include_volumes
        type: string
      - description: Filter by policies.scope.include_extension
        in: query
        name: policies.scope.include_extension
        type: string
      - description: Filter by policies.events.name
        in: query
        name: policies.events.name
        type: string
      - description: Filter by policies.name
        in: query
        name: policies.name
        type: string
      - description: Filter by policies.engine.name
        in: query
        name: policies.engine.name
        type: string
      - description: Filter by policies.mandatory
        in: query
        name: policies.mandatory
        type: boolean
      - description: Filter by events.name
        in: query
        name: events.name
        type: string
      - description: Filter by events.volume_monitoring
        in: query
        name: events.volume_monitoring
        type: boolean
      - description: Filter by events.filters.setattr_with_modify_time_change
        in: query
        name: events.filters.setattr_with_modify_time_change
        type: boolean
      - description: Filter by events.filters.first_read
        in: query
        name: events.filters.first_read
        type: boolean
      - description: Filter by events.filters.exclude_directory
        in: query
        name: events.filters.exclude_directory
        type: boolean
      - description: Filter by events.filters.offline_bit
        in: query
        name: events.filters.offline_bit
        type: boolean
      - description: Filter by events.filters.write_with_size_change
        in: query
        name: events.filters.write_with_size_change
        type: boolean
      - description: Filter by events.filters.setattr_with_group_change
        in: query
        name: events.filters.setattr_with_group_change
        type: boolean
      - description: Filter by events.filters.setattr_with_dacl_change
        in: query
        name: events.filters.setattr_with_dacl_change
        type: boolean
      - description: Filter by events.filters.setattr_with_mode_change
        in: query
        name: events.filters.setattr_with_mode_change
        type: boolean
      - description: Filter by events.filters.open_with_write_intent
        in: query
        name: events.filters.open_with_write_intent
        type: boolean
      - description: Filter by events.filters.setattr_with_access_time_change
        in: query
        name: events.filters.setattr_with_access_time_change
        type: boolean
      - description: Filter by events.filters.setattr_with_sacl_change
        in: query
        name: events.filters.setattr_with_sacl_change
        type: boolean
      - description: Filter by events.filters.setattr_with_size_change
        in: query
        name: events.filters.setattr_with_size_change
        type: boolean
      - description: Filter by events.filters.first_write
        in: query
        name: events.filters.first_write
        type: boolean
      - description: Filter by events.filters.setattr_with_owner_change
        in: query
        name: events.filters.setattr_with_owner_change
        type: boolean
      - description: Filter by events.filters.close_with_modification
        in: query
        name: events.filters.close_with_modification
        type: boolean
      - description: Filter by events.filters.open_with_delete_intent
        in: query
        name: events.filters.open_with_delete_intent
        type: boolean
      - description: Filter by events.filters.monitor_ads
        in: query
        name: events.filters.monitor_ads
        type: boolean
      - description: Filter by events.filters.close_without_modification
        in: query
        name: events.filters.close_without_modification
        type: boolean
      - description: Filter by events.filters.close_with_read
        in: query
        name: events.filters.close_with_read
        type: boolean
      - description: Filter by events.filters.setattr_with_creation_time_change
        in: query
        name: events.filters.setattr_with_creation_time_change
        type: boolean
      - description: Filter by events.filters.setattr_with_allocation_size_change
        in: query
        name: events.filters.setattr_with_allocation_size_change
        type: boolean
      - description: Filter by events.file_operations.close
        in: query
        name: events.file_operations.close
        type: boolean
      - description: Filter by events.file_operations.create
        in: query
        name: events.file_operations.create
        type: boolean
      - description: Filter by events.file_operations.rename_dir
        in: query
        name: events.file_operations.rename_dir
        type: boolean
      - description: Filter by events.file_operations.setattr
        in: query
        name: events.file_operations.setattr
        type: boolean
      - description: Filter by events.file_operations.delete_dir
        in: query
        name: events.file_operations.delete_dir
        type: boolean
      - description: Filter by events.file_operations.read
        in: query
        name: events.file_operations.read
        type: boolean
      - description: Filter by events.file_operations.open
        in: query
        name: events.file_operations.open
        type: boolean
      - description: Filter by events.file_operations.rename
        in: query
        name: events.file_operations.rename
        type: boolean
      - description: Filter by events.file_operations.delete
        in: query
        name: events.file_operations.delete
        type: boolean
      - description: Filter by events.file_operations.getattr
        in: query
        name: events.file_operations.getattr
        type: boolean
      - description: Filter by events.file_operations.symlink
        in: query
        name: events.file_operations.symlink
        type: boolean
      - description: Filter by events.file_operations.create_dir
        in: query
        name: events.file_operations.create_dir
        type: boolean
      - description: Filter by events.file_operations.link
        in: query
        name: events.file_operations.link
        type: boolean
      - description: Filter by events.file_operations.write
        in: query
        name: events.file_operations.write
        type: boolean
      - description: Filter by events.file_operations.lookup
        in: query
        name: events.file_operations.lookup
        type: boolean
      - description: Filter by events.protocol
        in: query
        name: events.protocol
        type: string
      - description: Filter by engines.name
        in: query
        name: engines.name
        type: string
      - description: Filter by engines.type
        in: query
        name: engines.type
        type: string
      - description: Filter by engines.secondary_servers
        in: query
        name: engines.secondary_servers
        type: string
      - description: Filter by engines.primary_servers
        in: query
        name: engines.primary_servers
        type: string
      - description: Filter by engines.port
        in: query
        name: engines.port
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an FPolicy configuration.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the FPolicy configuration.
        ### Recommended optional properties
        * `engines` -  External server to which the notifications will be sent.
        * `events` - File operations to monitor.
        * `policies` - Policy configuration which acts as a container for FPolicy event and FPolicy engine.
        * `scope` - Scope of the policy. Can be limited to exports, volumes, shares or file extensions.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `engines.type` - _synchronous_
        * `policies.engine` - _native_
        * `policies.mandatory` -  _true_
        * `events.volume_monitoring` - _false_
        * `events.file_operations.*` - _false_
        * `events.filters.*` - _false_
        ### Related ONTAP commands
        * `fpolicy policy event create`
        * `fpolicy policy external-engine create`
        * `fpolicy policy create`
        * `fpolicy policy scope create`
        * `fpolicy enable`
        ### Learn more
        * [`DOC /protocols/fpolicy`](#docs-NAS-protocols_fpolicy)
      operationId: fpolicy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fpolicy_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9765032    | The FPolicy engine, FPolicy event or FPolicy policy specified already exists |
            | 9765031    | If any of the FPolicy engine, FPolicy event, or FPolicy policy creation fails due to a systematic error or hardware failure, the cause of the failure is detailed in the error message |
            | 2621706    | The SVM UUID specified belongs to different SVM |
            | 2621462    | The SVM name specified does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        FPolicy is an infrastructure component of ONTAP that enables partner applications to connect to ONTAP in order to monitor and set file access permissions. Every time a client accesses a file from a storage system, based on the configuration of FPolicy, the partner application is notified about file access. This enables partners to set restrictions on files that are created or accessed on the storage system. FPolicy also allows you to create file policies that specify file operation permissions according to file type. For example, you can restrict certain file types, such as .jpeg and .mp3 files, from being stored on the storage system. FPolicy can monitor file access from CIFS and NFS clients.</br>
        As part of FPolicy configuration, you can specify an FPolicy engine which defines the external FPolicy server, FPolicy events, which defines the protocol and file operations to monitor and the FPolicy policy that acts as a container for the FPolicy engine and FPolicy events. It provides a way for policy management functions, such as policy enabling and disabling.
        ## Examples
        ### Creating an FPolicy configuration
        To create an FPolicy for an SVM use the following API. Note that the <i>return_records=true</i> query parameter is used to obtain the newly created entry in the response.
        ```
        # The API:
        POST /protocols/fpolicy/
        #The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy?return_records=tre" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"engines\": [ { \"name\": \"engine1\", \"port\": 9876, \"primary_servers\": [ \"10.132.145.22\", \"10.140.101.109\" ], \"secondary_servers\": [ \"10.132.145.20\", \"10.132.145.21\" ], \"type\": \"synchronous\" } ], \"events\": [ { \"file_operations\": { \"read\": true, \"write\": true }, \"filters\": { \"monitor_ads\": true }, \"name\": \"event_cifs\", \"protocol\": \"cifs\", \"volume_monitoring\": true } ], \"policies\": [ { \"engine\": { \"name\": \"engine1\" }, \"events\": [ \"event_cifs\" ], \"mandatory\": true, \"name\": \"pol0\", \"priority\": 1, \"scope\": { \"include_volumes\": [ \"vol1\" ] } } ], \"svm\": { \"name\": \"vs1\", \"uuid\": \"b34f5e3d-01d0-11e9-8f63-0050568ea311\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "b34f5e3d-01d0-11e9-8f63-0050568ea311",
                "name": "vs1"
              },
              "engines": [
                {
                  "name": "engine1",
                  "primary_servers": [
                    "10.132.145.22",
                    "10.140.101.109"
                  ],
                  "secondary_servers": [
                    "10.132.145.20",
                    "10.132.145.21"
                  ],
                  "type": "synchronous",
                  "port": 9876
                }
              ],
                "events": [
                {
                  "name": "event_cifs",
                  "protocol": "cifs",
                  "volume_monitoring": true,
                  "file_operations": {
                    "read": true,
                    "write": true
                  },
                  "filters": {
                    "monitor_ads": true
                  }
                }
              ],
              "policies": [
                {
                  "name": "pol0",
                  "priority": 1,
                  "events": [
                    {
                      "name": "event_cifs"
                    }
                  ],
                  "engine": {
                    "name": "engine1"
                  },
                  "scope": {
                    "include_volumes": [
                      "vol1"
                    ]
                  },
                  "mandatory": true
                }
              ]
            }
          ]
        }
        ```
        ---
        ### Retrieving the FPolicy configuration for all the SVMs in the cluster
        ---
        ```
        # The API:
        GET /protocols/fpolicy
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "b34f5e3d-01d0-11e9-8f63-0050568ea311",
                "name": "vs1"
              },
              "engines": [
                {
                  "name": "engine1",
                  "primary_servers": [
                    "10.132.145.22",
                    "10.140.101.109"
                  ],
                  "secondary_servers": [
                    "10.132.145.20",
                    "10.132.145.21"
                  ],
                  "type": "synchronous",
                  "port": 9876
                }
              ],
              "events": [
                {
                  "name": "event_cifs",
                  "protocol": "cifs",
                  "volume_monitoring": true,
                  "file_operations": {
                    "close": false,
                    "create": false,
                    "create_dir": false,
                    "delete": false,
                    "delete_dir": false,
                    "getattr": false,
                    "link": false,
                    "lookup": false,
                    "open": false,
                    "read": true,
                    "write": true,
                    "rename": false,
                    "rename_dir": false,
                    "setattr": false,
                    "symlink": false
                  },
                  "filters": {
                    "monitor_ads": true,
                    "close_with_modification": false,
                    "close_without_modification": false,
                    "close_with_read": false,
                    "first_read": false,
                    "first_write": false,
                    "offline_bit": false,
                    "open_with_delete_intent": false,
                    "open_with_write_intent": false,
                    "write_with_size_change": false,
                    "setattr_with_owner_change": false,
                    "setattr_with_group_change": false,
                    "setattr_with_sacl_change": false,
                    "setattr_with_dacl_change": false,
                    "setattr_with_modify_time_change": false,
                    "setattr_with_access_time_change": false,
                    "setattr_with_creation_time_change": false,
                    "setattr_with_mode_change": false,
                    "setattr_with_size_change": false,
                    "setattr_with_allocation_size_change": false,
                    "exclude_directory": false
                  }
                }
              ],
              "policies": [
                {
                  "name": "pol0",
                  "enabled": true,
                  "priority": 1,
                  "events": [
                    {
                      "name": "event_cifs"
                    }
                  ],
                  "engine": {
                    "name": "engine1"
                  },
                  "scope": {
                    "include_volumes": [
                      "vol1"
                    ]
                  },
                  "mandatory": true
                }
              ]
            }
          ],
          "num_records": 1
        }
        ```
        ---
        ### Retrieving an FPolicy configuration for a particular SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/b34f5e3d-01d0-11e9-8f63-0050568ea311?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "b34f5e3d-01d0-11e9-8f63-0050568ea311",
            "name": "vs1"
          },
          "engines": [
            {
              "name": "engine1",
              "primary_servers": [
                "10.132.145.22",
                "10.140.101.109"
              ],
              "secondary_servers": [
                "10.132.145.20",
                "10.132.145.21"
              ],
              "type": "synchronous",
              "port": 9876
            }
          ],
          "events": [
            {
              "name": "event_cifs",
              "protocol": "cifs",
              "volume_monitoring": true,
              "file_operations": {
                "close": false,
                "create": false,
                "create_dir": false,
                "delete": false,
                "delete_dir": false,
                "getattr": false,
                "link": false,
                "lookup": false,
                "open": false,
                "read": true,
                "write": true,
                "rename": false,
                "rename_dir": false,
                "setattr": false,
                "symlink": false
              },
              "filters": {
                "monitor_ads": true,
                "close_with_modification": false,
                "close_without_modification": false,
                "close_with_read": false,
                "first_read": false,
                "first_write": false,
                "offline_bit": false,
                "open_with_delete_intent": false,
                "open_with_write_intent": false,
                "write_with_size_change": false,
                "setattr_with_owner_change": false,
                "setattr_with_group_change": false,
                "setattr_with_sacl_change": false,
                "setattr_with_dacl_change": false,
                "setattr_with_modify_time_change": false,
                "setattr_with_access_time_change": false,
                "setattr_with_creation_time_change": false,
                "setattr_with_mode_change": false,
                "setattr_with_size_change": false,
                "setattr_with_allocation_size_change": false,
                "exclude_directory": false
              }
            }
          ],
          "policies": [
            {
              "name": "pol0",
              "enabled": true,
              "priority": 1,
              "events": [
                {
                  "name": "event_cifs"
                }
              ],
              "engine": {
                "name": "engine1"
              },
              "scope": {
                "include_volumes": [
                  "vol1"
                ]
              },
              "mandatory": true
            }
          ]
        }
        ```
        ---
        ### Deleting an FPolicy configuration for a particular SVM
        ---
        ```
        # The API:
        DELETE /protocols/fpolicy/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/fpolicy/b34f5e3d-01d0-11e9-8f63-0050568ea311" -H "accept: application/json"
        ```
        ---
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}:
    delete:
      description: |
        Deletes the FPolicy configuration for the specified SVM. Before deleting the FPolicy configuration, ensure that all policies belonging to the SVM are disabled.
        ### Related ONTAP commands
        * `fpolicy delete`
        * `fpolicy policy scope delete`
        * `fpolicy policy delete`
        * `fpolicy policy event delete`
        * `fpolicy policy external-engine delete`
        ### Learn more
        * [`DOC /protocols/fpolicy`](#docs-NAS-protocols_fpolicy)
      operationId: fpolicy_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9765030    | Cannot delete an FPolicy configuration if any of the policy is enabled |
            | 9765031    | If any of the FPolicy engine, FPolicy event or FPolicy policy deletion fails due to a systemic error or hardware failure, the cause of the failure is detailed in the error message. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves an FPolicy configuration of an SVM.
        ### Related ONTAP commands
        * `fpolicy show`
        * `fpolicy policy show`
        * `fpolicy policy scope show`
        * `fpolicy policy event show`
        * `fpolicy policy external-engine show`
        ### Learn more
        * [`DOC /protocols/fpolicy`](#docs-NAS-protocols_fpolicy)
      operationId: fpolicy_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/engines:
    get:
      description: |
        Retrieves FPolicy engine configurations of all the engines for a specified SVM. ONTAP allows creation of cluster-level FPolicy engines that act as a template for all the SVMs belonging to the cluster. These cluster-level FPolicy engines are also retrieved for the specified SVM.
        ### Related ONTAP commands
        * `fpolicy policy external-engine show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/engines`](#docs-NAS-protocols_fpolicy_{svm.uuid}_engines)
      operationId: fpolicy_engine_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by secondary_servers
        in: query
        name: secondary_servers
        type: string
      - description: Filter by primary_servers
        in: query
        name: primary_servers
        type: string
      - description: Filter by port
        in: query
        name: port
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_engine_response'
        default:
          description: ''
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an FPolicy engine configuration for a specified SVM. FPolicy engine creation is allowed only on data SVMs.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the FPolicy engine.
        * `name` - Name of external engine.
        * `port` - Port number of the FPolicy server application.
        * `primary_servers` - List of primary FPolicy servers to which the node will send notifications.
        ### Recommended optional properties
        * `secondary_servers` - It is recommended to configure secondary FPolicy server to which the node will send notifications when the primary server is down.
        ### Default property values
        * `type` - _synchronous_
        ### Related ONTAP commands
        * `fpolicy policy external-engine create`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/engines`](#docs-NAS-protocols_fpolicy_{svm.uuid}_engines)
      operationId: fpolicy_engine_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_engine'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fpolicy_engine_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764885    | The primary secondary server has a redundant IP address |
            | 9764953    | The name of the FPolicy engine is "native" which is reserved by the system |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        The FPolicy engine allows you to configure the external servers to which the file access notifications are sent. As part of FPolicy engine configuration, you can configure the server(s) to which the notification is sent, an optional set of secondary server(s) to which the notification is sent in the case of the primary server(s) failure, the port number for FPolicy application and the type of the engine, synchronous or asynchronous. </br>
        For the synchronous engine, ONTAP will wait for a response from the FPolicy application before it allows the operation. With an asynchronous engine, ONTAP proceeds with the operation processing after sending the notification to the FPolicy application. An engine can belong to multiple FPolicy policies.
        ## Examples
        ### Creating an FPolicy engine
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/engines
        #The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"name\": \"engine0\", \"port\": 9876, \"primary_servers\": [ \"10.132.145.22\", \"10.140.101.109\" ], \"secondary_servers\": [ \"10.132.145.20\", \"10.132.145.21\" ], \"type\": \"synchronous\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "engine0",
              "primary_servers": [
                "10.132.145.22",
                "10.140.101.109"
              ],
              "secondary_servers": [
                "10.132.145.20",
                "10.132.145.21"
              ],
              "port": 9876,
              "type": "synchronous"
            }
          ]
        }
        ```
        ---
        ### Creating an FPolicy engine with the minimum required fields
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/engines
        #The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"name\": \"engine0\", \"port\": 9876, \"primary_servers\": [ \"10.132.145.22\", \"10.140.101.109\" ], \"type\": \"synchronous\"}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "engine0",
              "primary_servers": [
                "10.132.145.22",
                "10.140.101.109"
              ],
              "port": 9876,
              "type": "synchronous"
            }
          ]
        }
        ```
        ---
        ### Retrieving an FPolicy engine configuration for a particular SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/engines
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
              },
              "name": "cifs",
              "primary_servers": [
                "10.20.20.10"
              ],
              "port": 9876,
              "type": "synchronous"
            },
            {
              "svm": {
                "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
              },
              "name": "nfs",
              "primary_servers": [
                "10.23.140.64",
                "10.140.101.109"
              ],
              "secondary_servers": [
                "10.132.145.20",
                "10.132.145.22"
              ],
              "port": 9876,
              "type": "synchronous"
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving a specific FPolicy engine configuration for an SVM
        ---
        ```
        # The Api:
        GET /protocols/fpolicy/{svm.uuid}/engines/{name}
        #The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/cifs?fields=*" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
           },
           "name": "cifs",
           "primary_servers": [
             "10.20.20.10"
           ],
           "port": 9876,
           "type": "synchronous"
        }
        ```
        ---
        ### Updating an FPolicy engine for an SVM
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/engines/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/cifs" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"port\": 6666, \"secondary_servers\": [ \"10.132.145.20\", \"10.132.145.21\" ], \"type\": \"synchronous\"}"
        ```
        ---
        ### Updating all the attributes of a specific FPolicy engine for an SVM
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/engines/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/engines/cifs" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"port\": 9876, \"primary_servers\": [ \"10.132.145.20\", \"10.140.101.109\" ], \"secondary_servers\": [ \"10.132.145.23\", \"10.132.145.21\" ], \"type\": \"synchronous\"}"
        ```
        ---
        ### Deleting a specific FPolicy engine for an SVM
        ---
        ```
        # The API:
        DELETE /protocols/fpolicy/{svm.uuid}/engines/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/events/cifs" -H "accept: application/json"
        ```
        ---
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/engines/{name}:
    delete:
      description: |
        Deletes the FPolicy external engine configuration. Deletion of an FPolicy engine that is attached to one or more FPolicy policies is not allowed.
        ### Related ONTAP commands
        * `fpolicy policy external-engine modify`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/engines`](#docs-NAS-protocols_fpolicy_{svm.uuid}_engines)
      operationId: fpolicy_engine_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764940    | At least one FPolicy policy is using the FPolicy engine |
            | 9764887    | The FPolicy engine is a cluster level FPolicy engine |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a particular FPolicy engine configuration of a specifed SVM. A cluster-level FPolicy engine configuration cannot be retrieved for a data SVM.
        ### Related ONTAP commands
        * `fpolicy policy external-engine show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/engines`](#docs-NAS-protocols_fpolicy_{svm.uuid}_engines)
      operationId: fpolicy_engine_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_engine'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates a specific FPolicy engine configuration of an SVM. Modification of an FPolicy engine that is attached to one or more enabled FPolicy policies is not allowed.
        ### Related ONTAP commands
        * `fpolicy policy external-engine modify`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/engines`](#docs-NAS-protocols_fpolicy_{svm.uuid}_engines)
      operationId: fpolicy_engine_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_engine'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764922    | The primary and secondary server has a redundant IP address |
            | 9764942    | At least one FPolicy policy is using the FPolicy engine |
            | 9764886    | FPolicy engine is a cluster-level FPolicy engine |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/events:
    get:
      description: |
        Retrieves FPolicy event configurations for all events for a specified SVM. ONTAP allows the creation of cluster-level FPolicy events that act as a template for all the data SVMs belonging to the cluster. These cluster-level FPolicy events are also retrieved for the specified SVM.
        ### Related ONTAP commands
        * `fpolicy policy event show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/events`](#docs-NAS-protocols_fpolicy_{svm.uuid}_events)
      operationId: fpolicy_event_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by volume_monitoring
        in: query
        name: volume_monitoring
        type: boolean
      - description: Filter by filters.setattr_with_modify_time_change
        in: query
        name: filters.setattr_with_modify_time_change
        type: boolean
      - description: Filter by filters.first_read
        in: query
        name: filters.first_read
        type: boolean
      - description: Filter by filters.exclude_directory
        in: query
        name: filters.exclude_directory
        type: boolean
      - description: Filter by filters.offline_bit
        in: query
        name: filters.offline_bit
        type: boolean
      - description: Filter by filters.write_with_size_change
        in: query
        name: filters.write_with_size_change
        type: boolean
      - description: Filter by filters.setattr_with_group_change
        in: query
        name: filters.setattr_with_group_change
        type: boolean
      - description: Filter by filters.setattr_with_dacl_change
        in: query
        name: filters.setattr_with_dacl_change
        type: boolean
      - description: Filter by filters.setattr_with_mode_change
        in: query
        name: filters.setattr_with_mode_change
        type: boolean
      - description: Filter by filters.open_with_write_intent
        in: query
        name: filters.open_with_write_intent
        type: boolean
      - description: Filter by filters.setattr_with_access_time_change
        in: query
        name: filters.setattr_with_access_time_change
        type: boolean
      - description: Filter by filters.setattr_with_sacl_change
        in: query
        name: filters.setattr_with_sacl_change
        type: boolean
      - description: Filter by filters.setattr_with_size_change
        in: query
        name: filters.setattr_with_size_change
        type: boolean
      - description: Filter by filters.first_write
        in: query
        name: filters.first_write
        type: boolean
      - description: Filter by filters.setattr_with_owner_change
        in: query
        name: filters.setattr_with_owner_change
        type: boolean
      - description: Filter by filters.close_with_modification
        in: query
        name: filters.close_with_modification
        type: boolean
      - description: Filter by filters.open_with_delete_intent
        in: query
        name: filters.open_with_delete_intent
        type: boolean
      - description: Filter by filters.monitor_ads
        in: query
        name: filters.monitor_ads
        type: boolean
      - description: Filter by filters.close_without_modification
        in: query
        name: filters.close_without_modification
        type: boolean
      - description: Filter by filters.close_with_read
        in: query
        name: filters.close_with_read
        type: boolean
      - description: Filter by filters.setattr_with_creation_time_change
        in: query
        name: filters.setattr_with_creation_time_change
        type: boolean
      - description: Filter by filters.setattr_with_allocation_size_change
        in: query
        name: filters.setattr_with_allocation_size_change
        type: boolean
      - description: Filter by file_operations.close
        in: query
        name: file_operations.close
        type: boolean
      - description: Filter by file_operations.create
        in: query
        name: file_operations.create
        type: boolean
      - description: Filter by file_operations.rename_dir
        in: query
        name: file_operations.rename_dir
        type: boolean
      - description: Filter by file_operations.setattr
        in: query
        name: file_operations.setattr
        type: boolean
      - description: Filter by file_operations.delete_dir
        in: query
        name: file_operations.delete_dir
        type: boolean
      - description: Filter by file_operations.read
        in: query
        name: file_operations.read
        type: boolean
      - description: Filter by file_operations.open
        in: query
        name: file_operations.open
        type: boolean
      - description: Filter by file_operations.rename
        in: query
        name: file_operations.rename
        type: boolean
      - description: Filter by file_operations.delete
        in: query
        name: file_operations.delete
        type: boolean
      - description: Filter by file_operations.getattr
        in: query
        name: file_operations.getattr
        type: boolean
      - description: Filter by file_operations.symlink
        in: query
        name: file_operations.symlink
        type: boolean
      - description: Filter by file_operations.create_dir
        in: query
        name: file_operations.create_dir
        type: boolean
      - description: Filter by file_operations.link
        in: query
        name: file_operations.link
        type: boolean
      - description: Filter by file_operations.write
        in: query
        name: file_operations.write
        type: boolean
      - description: Filter by file_operations.lookup
        in: query
        name: file_operations.lookup
        type: boolean
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_event_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an FPolicy event configuration for a specified SVM. FPolicy event creation is allowed only on data SVMs. When a protocol is specified, you must specify a file operation or a file operation and filters.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the FPolicy event.
        * `name` - Name of the FPolicy event.
        ### Recommended optional properties
        * `file-operations` - List of file operations to monitor.
        * `protocol` - Protocol for which the file operations should be monitored.
        * `filters` - List of filters for the specified file operations.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `file_operations.*` - _false_
        * `filters.*` - _false_
        * `volume-monitoring` - _false_
        ### Related ONTAP commands
        * `fpolicy policy event create`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/events`](#docs-NAS-protocols_fpolicy_{svm.uuid}_events)
      operationId: fpolicy_event_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_event'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fpolicy_event_response'
        default:
          description: |
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764929    | The file operation is not supported by the protocol |
            | 9764955    | The filter is not supported by the protocol |
            | 9764930    | The filter is not supported by any of the file operations |
            | 9764946    | The protocol is specifed without a file operation or a file operation and filter pair |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        FPolicy events configurations allow you to specify which file access is monitored. As part of an FPolicy event, you can configure the SVM for which the events are generated, the name of the event configuration, the protocol (cifs, nfsv3/nfsv4) for which the events are generated, the file operations which are monitored, and filters that can be used to filter the unwanted notification generation for a specified protocol and file operation.</br>
        Each protocol has a set of supported file operations and filters. An SVM can have multiple events. A single FPolicy policy can have multiple FPolicy events.
        ## Examples
        ### Creating an FPolicy event for a CIFS protocol with all the supported file operations and filters
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/events
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/eventsreturn_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"file_operations\": { \"close\": true, \"create\": true, \"create_dir\": true, \"delete\": true, \"delete_dir\": true, \"getattr\": true, \"open\": true, \"read\": true, \"rename\": true, \"rename_dir\": true, \"setattr\": true, \"write\": true }, \"filters\": { \"close_with_modification\": true, \"close_with_read\": true, \"close_without_modification\": true, \"first_read\": true, \"first_write\": true, \"monitor_ads\": true, \"offline_bit\": true, \"open_with_delete_intent\": true, \"open_with_write_intent\": true, \"write_with_size_change\": true }, \"name\": \"event_cifs\", \"protocol\": \"cifs\", \"volume_monitoring\": true}"
        # The response:
        {
          "num_records": 1,
            "records": [
              {
                "name": "event_cifs",
                "protocol": "cifs",
                "volume_monitoring": true,
                "file_operations": {
                  "close": true,
                  "create": true,
                  "create_dir": true,
                  "delete": true,
                  "delete_dir": true,
                  "getattr": true,
                  "open": true,
                  "read": true,
                  "write": true,
                  "rename": true,
                  "rename_dir": true,
                  "setattr": true
                },
                "filters": {
                  "monitor_ads": true,
                  "close_with_modification": true,
                  "close_without_modification": true,
                  "close_with_read": true,
                  "first_read": true,
                  "first_write": true,
                  "offline_bit": true,
                  "open_with_delete_intent": true,
                  "open_with_write_intent": true,
                  "write_with_size_change": true
                }
              }
            ]
        }
        ```
        ---
        ### Creating an FPolicy event for an NFS protocol with all the supported file operations and filters
        ---
        ```
        # The API:
        post /protocols/fpolicy/{svm.uuid}/events
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/eventsreturn_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"file_operations\": { \"create\": true, \"create_dir\": true, \"delete\": true, \"delete_dir\": true, \"link\": true, \"lookup\": true, \"read\": true, \"rename\": true, \"rename_dir\": true, \"setattr\": true, \"symlink\": true, \"write\": true }, \"filters\": { \"offline_bit\": true, \"write_with_size_change\": ture }, \"name\": \"event_nfsv3\", \"protocol\": \"nfsv3\", \"volume_monitoring\": false}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "event_nfsv3",
              "protocol": "nfsv3",
              "volume_monitoring": false,
              "file_operations": {
                "create": true,
                "create_dir": true,
                "delete": true,
                "delete_dir": true,
                "link": true,
                "lookup": true,
                "read": true,
                "write": true,
                "rename": true,
                "rename_dir": true,
                "setattr": true,
                "symlink": true
              },
              "filters": {
              "offline_bit": true,
              "write_with_size_change": true
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving all of the FPolicy event configurations for a specified SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/events
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/events/?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
              },
              "name": "cluster",
              "protocol": "cifs",
              "volume_monitoring": false,
              "file_operations": {
                "close": true,
                "create": false,
                "create_dir": false,
                "delete": false,
                "delete_dir": false,
                "getattr": false,
                "link": false,
                "lookup": false,
                "open": false,
                "read": false,
                "write": false,
                "rename": false,
                "rename_dir": false,
                "setattr": false,
                "symlink": false
              },
              "filters": {
                "monitor_ads": false,
                "close_with_modification": false,
                "close_without_modification": false,
                "close_with_read": true,
                "first_read": false,
                "first_write": false,
                "offline_bit": false,
                "open_with_delete_intent": false,
                "open_with_write_intent": false,
                "write_with_size_change": false,
                "setattr_with_owner_change": false,
                "setattr_with_group_change": false,
                "setattr_with_sacl_change": false,
                "setattr_with_dacl_change": false,
                "setattr_with_modify_time_change": false,
                "setattr_with_access_time_change": false,
                "setattr_with_creation_time_change": false,
                "setattr_with_mode_change": false,
                "setattr_with_size_change": false,
                "setattr_with_allocation_size_change": false,
                "exclude_directory": false
              }
            },
            {
              "svm": {
                "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
              },
              "name": "event_cifs",
              "protocol": "cifs",
              "volume_monitoring": true,
              "file_operations": {
                "close": true,
                "create": true,
                "create_dir": true,
                "delete": true,
                "delete_dir": true,
                "getattr": true,
                "link": false,
                "lookup": false,
                "open": true,
                "read": true,
                "write": true,
                "rename": true,
                "rename_dir": true,
                "setattr": true,
                "symlink": false
              },
              "filters": {
                "monitor_ads": true,
                "close_with_modification": true,
                "close_without_modification": true,
                "close_with_read": true,
                "first_read": true,
                "first_write": true,
                "offline_bit": true,
                "open_with_delete_intent": true,
                "open_with_write_intent": true,
                "write_with_size_change": true,
                "setattr_with_owner_change": false,
                "setattr_with_group_change": false,
                "setattr_with_sacl_change": false,
                "setattr_with_dacl_change": false,
                "setattr_with_modify_time_change": false,
                "setattr_with_access_time_change": false,
                "setattr_with_creation_time_change": false,
                "setattr_with_mode_change": false,
                "setattr_with_size_change": false,
                "setattr_with_allocation_size_change": false,
                "exclude_directory": false
              }
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving a specific FPolicy event configuration for an SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/events/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/events/event_cifs?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "4f643fb4-fd21-11e8-ae49-0050568e2c1e"
          },
          "name": "event_cifs",
          "protocol": "cifs",
          "volume_monitoring": true,
          "file_operations": {
            "close": true,
            "create": true,
            "create_dir": true,
            "delete": true,
            "delete_dir": true,
            "getattr": true,
            "link": false,
            "lookup": false,
            "open": true,
            "read": true,
            "write": true,
            "rename": true,
            "rename_dir": true,
            "setattr": true,
            "symlink": false
          },
          "filters": {
            "monitor_ads": true,
            "close_with_modification": true,
            "close_without_modification": true,
            "close_with_read": true,
            "first_read": true,
            "first_write": true,
            "offline_bit": true,
            "open_with_delete_intent": true,
            "open_with_write_intent": true,
            "write_with_size_change": true,
            "setattr_with_owner_change": false,
            "setattr_with_group_change": false,
            "setattr_with_sacl_change": false,
            "setattr_with_dacl_change": false,
            "setattr_with_modify_time_change": false,
            "setattr_with_access_time_change": false,
            "setattr_with_creation_time_change": false,
            "setattr_with_mode_change": false,
            "setattr_with_size_change": false,
            "setattr_with_allocation_size_change": false,
            "exclude_directory": false
           }
          }
         ],
         "num_records": 2
        }
        ```
        ---
        ### Updating a specific FPolicy event configuration for a specified SVM
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/events/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/events/event_cifs" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"file_operations\": { \"close\": false, \"create\": false, \"read\": true }, \"filters\": { \"close_with_modification\": false, \"close_with_read\": false, \"close_without_modification\": false }, \"protocol\": \"cifs\", \"volume_monitoring\": false}"
        ```
        ---
        ### Deleting a specific FPolicy event configuration for a specific SVM
        ---
        ```
        # The API:
        DELETE /protocols/fpolicy/{svm.uuid}/events/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/fpolicy/4f643fb4-fd21-11e8-ae49-0050568e2c1e/events/event_cifs" -H "accept: application/json"
        ```
        ---
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/events/{name}:
    delete:
      description: |
        Deletes a specific FPolicy event configuration for an SVM. A cluster-level FPolicy event configuration cannot be modified for a data SVM through REST. An FPolicy event that is attached to an FPolicy policy cannot be deleted.
        ### Related ONTAP commands
        * `fpolicy policy event delete`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/events`](#docs-NAS-protocols_fpolicy_{svm.uuid}_events)
      operationId: fpolicy_event_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764874    | The FPolicy event is a cluster event |
            | 9764947    | The FPolicy event is attached to an FPolicy policy |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a specific FPolicy event configuration for an SVM. A cluster-level FPolicy event configuration cannot be retrieved for a data SVM through a REST API.
        ### Related ONTAP commands
        * `fpolicy policy event show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/events`](#docs-NAS-protocols_fpolicy_{svm.uuid}_events)
      operationId: fpolicy_events_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_event'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates a specific FPolicy event configuration for an SVM. A cluster-level FPolicy event configuration cannot be modified for a data SVM through REST. When the file operations and filters fields are modified, the previous values are retained and new values are added to the list of previous values. To remove a particular file operation or filter, set its value to false in the request.
        ### Related ONTAP commands
        * `fpolicy policy event modify`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/events`](#docs-NAS-protocols_fpolicy_{svm.uuid}_events)
      operationId: fpolicy_event_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_event'
      responses:
        '200':
          description: OK
        default:
          description: |
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764873    | The event is a cluster event |
            | 9764929    | The file operation is not supported by the protocol |
            | 9764955    | The filter is not supported by the protocol |
            | 9764930    | The filter is not supported by any of the file operations |
            | 9764946    | The protocol is specifed without file operation or a file operation and filter pair |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/policies:
    get:
      description: |
        Retrieves the FPolicy policy configuration of an SVM. ONTAP allows the creation of a cluster level FPolicy policy that acts as a template for all the data SVMs belonging to the cluster. This cluster level FPolicy policy is also retrieved for the specified SVM.
        ### Related ONTAP commands
        * `fpolicy policy show`
        * `fpolicy policy scope show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/policies`](#docs-NAS-protocols_fpolicy_{svm.uuid}_policies)
      operationId: fpolicy_policy_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by priority
        in: query
        name: priority
        type: integer
      - description: Filter by scope.include_shares
        in: query
        name: scope.include_shares
        type: string
      - description: Filter by scope.exclude_export_policies
        in: query
        name: scope.exclude_export_policies
        type: string
      - description: Filter by scope.exclude_volumes
        in: query
        name: scope.exclude_volumes
        type: string
      - description: Filter by scope.exclude_extension
        in: query
        name: scope.exclude_extension
        type: string
      - description: Filter by scope.exclude_shares
        in: query
        name: scope.exclude_shares
        type: string
      - description: Filter by scope.include_export_policies
        in: query
        name: scope.include_export_policies
        type: string
      - description: Filter by scope.include_volumes
        in: query
        name: scope.include_volumes
        type: string
      - description: Filter by scope.include_extension
        in: query
        name: scope.include_extension
        type: string
      - description: Filter by events.name
        in: query
        name: events.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by engine.name
        in: query
        name: engine.name
        type: string
      - description: Filter by mandatory
        in: query
        name: mandatory
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an FPolicy policy configuration for the specified SVM. To create an FPolicy policy, you must specify the policy scope and the FPolicy events to be monitored.
        </br>Important notes:
        * A single policy can monitor multiple events.
        * An FPolicy engine is an optional field whose default value is set to native. A native engine can be used to simply block the file access based on the file extensions specified in the policy scope.
        * To enable a policy, the policy priority  must be specified. If the priority is not specified, the policy is created but it is not enabled.
        * The "mandatory" field, if set to true, blocks the file access when the primary or secondary FPolicy servers are down.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the FPolicy policy.
        * `events` - Name of the events to monitior.
        * `name` - Name of the FPolicy policy.
        * `scope` - Scope of the policy. Can be limited to exports, volumes, shares or file extensions.
        * `priority`- Priority of the policy (ranging from 1 to 10).
        ### Default property values
        * `mandatory` - _true_
        * `engine` - _native_
        ### Related ONTAP commands
        * `fpolicy policy scope create`
        * `fpolicy policy create`
        * `fpolicy enable`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/policies`](#docs-NAS-protocols_fpolicy_{svm.uuid}_policies)
      operationId: fpolicy_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_policy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fpolicy_policy_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9765027    | FPolicy creation is successful but it cannot be enabled as the priority is already in use by another policy |
            | 9764898    | An FPolicy policy cannot be created without defining its scope |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        The FPolicy policy acts as a container for different constituents of the FPolicy such as FPolicy events and the FPolicy engine. It also provides a platform for policy management functions, such as policy enabling and disabling. As part of FPolicy policy configuration, you can specifiy the name of policy, the SVM to which it belongs, the FPolicy events to monitor, the FPolicy engine to which the generated notifications are sent and the policy priority. FPolicy policy configuration also allows to you to configure the file access behaviour when the primary and secondary servers are down. Under such circumstances, if the "mandatory" field is set to true, file access is denied.</br>
        Each FPolicy policy is associated with a scope which allows you to restrain the scope of the policy to specified storage objects such as volume, shares and export or to a set of file extensions such as .txt, .jpeg. An FPolicy policy can be configured to send notifications, to the FPolicy server or for native file blocking which uses the file extension specified in the policy scope. An SVM can have multiple FPolicy policies which can be enabled or disabled independently of each other.
        ## Examples
        ### Creating an FPolicy policy
        Use the following API to create an FPolicy policy configuration. Note that the <i>return_records=true</i> query parameter used to obtain the newly created entry in the response.
        <br/>
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/polices?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"engine\": { \"name\": \"engine1\" }, \"events\": [ \"cifs\", \"nfs\" ], \"mandatory\": true, \"name\": \"FPolicy_policy_0\", \"scope\": { \"exclude_export_policies\": [ \"export_pol1\" ], \"exclude_extension\": [ \"txt\", \"png\" ], \"exclude_shares\": [ \"sh1\" ], \"exclude_volumes\": [ \"vol0\" ], \"include_export_policies\": [ \"export_pol10\" ], \"include_extension\": [ \"pdf\" ], \"include_shares\": [ \"sh2\", \"sh3\" ], \"include_volumes\": [ \"vol1\", \"vol2\" ] }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "FPolicy_policy_0",
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
                ],
              "engine": {
                "name": "engine1"
              },
              "scope": {
                "include_shares": [
                  "sh2",
                  "sh3"
                ],
                "exclude_shares": [
                  "sh1"
                ],
                "include_volumes": [
                  "vol1",
                  "vol2"
                ],
                "exclude_volumes": [
                  "vol0"
                ],
                "include_export_policies": [
                  "export_pol10"
                ],
                "exclude_export_policies": [
                  "export_pol1"
                ],
                "include_extension": [
                  "pdf"
                ],
                "exclude_extension": [
                  "txt",
                  "png"
                ]
              },
              "mandatory": true
            }
          ]
        }
        ```
        ---
        ### Creating and enable an FPolicy policy
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/polices?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"priority\": 1, \"engine\": { \"name\": \"engine1\" }, \"events\": [ \"cifs\", \"nfs\" ], \"mandatory\": true, \"name\": \"FPolicy_policy_on\", \"scope\": { \"exclude_export_policies\": [ \"export_pol1\" ], \"exclude_extension\": [ \"txt\", \"png\" ], \"exclude_shares\": [ \"sh1\" ], \"exclude_volumes\": [ \"vol0\" ], \"include_export_policies\": [ \"export_pol10\" ], \"include_extension\": [ \"pdf\" ], \"include_shares\": [ \"sh2\", \"sh3\" ], \"include_volumes\": [ \"vol1\", \"vol2\" ] }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
             "name": "FPolicy_policy_0",
             "priority": 1,
             "events": [
               {
                 "name": "cifs"
               },
               {
                 "name": "nfs"
               }
             ],
             "engine": {
               "name": "engine1"
             },
             "scope": {
               "include_shares": [
                 "sh2",
                 "sh3"
               ],
               "exclude_shares": [
                 "sh1"
               ],
               "include_volumes": [
                 "vol1",
                 "vol2"
               ],
               "exclude_volumes": [
                 "vol0"
               ],
               "include_export_policies": [
                 "export_pol10"
               ],
               "exclude_export_policies": [
                 "export_pol1"
               ],
               "include_extension": [
                 "pdf"
               ],
               "exclude_extension": [
                 "txt",
                 "png"
               ]
             },
             "mandatory": true
           }
         ]
        }
        ```
        ---
        ### Creating an FPolicy policy with the minimum required fields and a native engine
        ---
        ```
        # The API:
        POST /protocols/fpolicy/{svm.uuid}/policies
        # The call:
        curl -X POST"https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/polices?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"events\": [ \"cifs\", \"nfs\" ], \"name\": \"pol_minimum_fields\", \"scope\": { \"include_volumes\": [ \"vol1\", \"vol2\" ] }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "pol_minimum_fields",
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "scope": {
                "include_volumes": [
                  "vol1",
                  "vol2"
                ]
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving all the FPolicy policy configurations for an SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/policies
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/policis?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "pol0",
              "enabled": false,
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "engine": {
                "name": "engine1"
              },
              "scope": {
                "include_shares": [
                  "sh2",
                  "sh3"
                ],
                "exclude_shares": [
                  "sh1"
                ],
                "include_volumes": [
                  "vol1",
                  "vol2"
                ],
                "exclude_volumes": [
                  "vol0"
                ],
                "include_export_policies": [
                  "export_pol10"
                ],
                "exclude_export_policies": [
                  "export_pol1"
                ],
                "include_extension": [
                  "pdf"
                ],
                "exclude_extension": [
                  "txt",
                  "png"
                ]
              },
              "mandatory": true
            },
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "FPolicy_policy_on",
              "enabled": true,
              "priority": 1,
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "engine": {
                "name": "engine1"
              },
               "scope": {
                "include_shares": [
                  "sh2",
                  "sh3"
                ],
                "exclude_shares": [
                  "sh1"
                ],
                "include_volumes": [
                  "vol1",
                  "vol2"
                ],
                "exclude_volumes": [
                  "vol0"
                ],
                "include_export_policies": [
                  "export_pol10"
                ],
                "exclude_export_policies": [
                  "export_pol1"
                ],
                "include_extension": [
                  "pdf"
                ],
                "exclude_extension": [
                  "txt",
                  "png"
                ]
              },
              "mandatory": true
            },
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "cluster_pol",
              "enabled": false,
              "events": [
                {
                  "name": "cluster"
                }
              ],
              "engine": {
                "name": "native"
              },
              "mandatory": true
            },
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "pol_minimum_fields",
              "enabled": false,
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "engine": {
                "name": "native"
              },
              "scope": {
                "include_volumes": [
                  "vol1",
                  "vol2"
                ]
              },
              "mandatory": true
            }
          ],
          "num_records": 4
        }
        ```
        ---
        ### Retrieving all of the FPolicy policy configurations for the FPolicy engine "engine1" for an SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/policies/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/policis?engine.name=engine1&fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "pol0",
              "enabled": false,
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "engine": {
                "name": "engine1"
              },
              "scope": {
                "include_export_policies": [
                  "export_pol10"
                ],
                "exclude_export_policies": [
                  "export_pol1"
                ],
                "include_extension": [
                  "pdf"
                ],
                "exclude_extension": [
                  "txt",
                  "png"
                ]
              },
              "mandatory": true
            },
            {
              "svm": {
                "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
              },
              "name": "FPolicy_policy_on",
              "enabled": true,
              "priority": 1,
              "events": [
                {
                  "name": "cifs"
                },
                {
                  "name": "nfs"
                }
              ],
              "engine": {
                "name": "engine1"
              },
              "scope": {
                "include_shares": [
                  "sh2",
                  "sh3"
                ],
                "exclude_shares": [
                  "sh1"
                ],
                "include_volumes": [
                  "vol1",
                  "vol2"
                ],
                "exclude_volumes": [
                  "vol0"
                ],
                "include_export_policies": [
                  "export_pol10"
                ],
                "exclude_export_policies": [
                  "export_pol1"
                ],
                "include_extension": [
                  "pdf"
                ],
                "exclude_extension": [
                  "txt",
                  "png"
                ]
              },
              "mandatory": true
            }
          ],
          "num_records": 2
        }
        ```
        ---
        ### Retrieving a particular FPolicy policy configuration for an SVM
        ---
        ```
        # The API:
        GET /protocols/fpolicy/{svm.uuid}/policies/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/policies/pol0" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "a00fac5d-0164-11e9-b64a-0050568eeb34"
          },
          "name": "pol0",
          "enabled": false,
          "events": [
            {
              "name": "cifs"
            },
            {
              "name": "nfs"
            }
          ],
          "engine": {
            "name": "engine1"
          },
          "scope": {
            "include_shares": [
              "sh2",
              "sh3"
            ],
            "exclude_shares": [
              "sh1"
            ],
            "include_volumes": [
              "vol1",
              "vol2"
            ],
            "exclude_volumes": [
              "vol0"
            ],
            "include_export_policies": [
              "export_pol10"
            ],
            "exclude_export_policies": [
              "export_pol1"
            ],
            "include_extension": [
              "pdf"
            ],
            "exclude_extension": [
              "txt",
              "png"
            ]
          },
          "mandatory": true
        }
        ```
        ---
        ### Updating a particular FPolicy policy
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/policies/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/policies/pol0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"engine\": { \"name\": \"native\" }, \"events\": [ \"cifs\" ], \"mandatory\": false, \"scope\": { \"include_volumes\": [ \"*\" ] }}"
        ```
        ---
        ### Enabling a particular FPolicy policy
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/policies/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/poliies/pol0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": true, \"priority\": 3}"
        ```
        ---
        ### Disabling a particular FPolicy policy
        ---
        ```
        # The API:
        PATCH /protocols/fpolicy/{svm.uuid}/policies/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/fpolicy/a00fac5d-0164-11e9-b64a-0050568eeb34/poliies/pol0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": true }"
        ```
        ---
      tags:
      - NAS
  /protocols/fpolicy/{svm.uuid}/policies/{name}:
    delete:
      description: |
        Deletes a particular FPolicy policy configuration for a specified SVM. To delete a policy, you must first disable the policy.
        ### Related ONTAP commands
        * `fpolicy policy scope delete`
        * `fpolicy policy delete`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/policies`](#docs-NAS-protocols_fpolicy_{svm.uuid}_policies)
      operationId: fpolicy_policy_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9764900    | Deletion of a cluster level FPolicy policy is not supported |
            | 9764941    | Cannot delete an enabled FPolicy policy |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a particular FPolicy policy configuration for a specified SVM. Cluster-level FPolicy policy configuration details cannot be retrieved for a data SVM.
        ### Related ONTAP commands
        * `fpolicy policy show`
        * `fpolicy policy scope show`
        * `fpolicy show`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/policies`](#docs-NAS-protocols_fpolicy_{svm.uuid}_policies)
      operationId: fpolicy_policy_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fpolicy_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates a particular FPolicy policy configuration for a specified SVM. PATCH can be used to enable or disable the policy. When enabling a policy, you must specify the policy priority. The policy priority of the policy is not required when disabling the policy. If the policy is enabled, the FPolicy policy engine cannot be modified.
        ### Related ONTAP commands
        * `fpolicy policy modify`
        * `fpolicy policy scope modify`
        * `fpolicy enable`
        * `fpolicy disable`
        ### Learn more
        * [`DOC /protocols/fpolicy/{svm.uuid}/policies`](#docs-NAS-protocols_fpolicy_{svm.uuid}_policies)
      operationId: fpolicy_policy_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/fpolicy_policy'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9765026    | The priority must be specified when enabling the FPolicy policy |
            | 9765025    | Cannot disable an FPolicy policy when the priority is specified |
            | 9764899    | Cannot modify an FPolicy engine when the policy is enabled |
            | 9764899    | Deletion of a cluster policy is not supported |
            | 9764908    | An FPolicy policy is already enabled |
            | 9764907    | An FPolicy policy is already disabled |
            | 9765029    | An FPolicy was modified but disable/enable failed as the policy is already disabled/enabled |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/ndmp:
    get:
      description: |
        Retrieves the current NDMP mode.
        ### Related ONTAP commands
        * `system services ndmp node-scope-mode status`
        ### Learn more
        * [`DOC /protocols/ndmp`](#docs-ndmp-protocols_ndmp)
      operationId: cluster_ndmp_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by mode
        in: query
        name: mode
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_ndmp_properties'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    patch:
      description: |
        Updates the NDMP mode.
        ### Related ONTAP commands
        * `system services ndmp node-scope-mode`
        ### Learn more
        * [`DOC /protocols/ndmp`](#docs-ndmp-protocols_ndmp)
      operationId: cluster_ndmp_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster_ndmp_properties'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_ndmp_properties'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    x-ntap-long-description:
      description: |
        You can use this API to manage NDMP mode: SVM-scope or node-scope.
        ### Examples
        Updates NDMP mode to SVM:
           <br/>
           ```
           PATCH "/api/protocols/ndmp" '{"mode":"svm"}'
           ```
           <br/>
        Updates NDMP mode to node:
           <br/>
           ```
           PATCH "/api/protocols/ndmp" '{"mode":"node"}'
           ```
           <br/>
      tags:
      - NDMP 
  /protocols/ndmp/nodes:
    get:
      description: |
        Retrieves NDMP node configurations for all of the nodes.
        ### Related ONTAP commands
        * `system services ndmp show`
        ### Learn more
        * [`DOC /protocols/ndmp/nodes`](#docs-ndmp-protocols_ndmp_nodes)
      operationId: ndmp_node_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by authentication_types
        in: query
        name: authentication_types
        type: string
      - description: Filter by user
        in: query
        name: user
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_node_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812801    | Node-scoped operations are not allowed in an SVM-scope.|
            | 68812804    | Failed to get the node name from the specified node UUID.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    x-ntap-long-description:
      description: |
        You can use this API to manage node configurations. The authentication types "plaintext" and "plaintext_sso" are used to show that the password uses clear text. Also, they contain no differences for NDMP node scope.
        ### Examples
        Updates "enabled" and "authentication_types" fields:
           <br/>
           ```
           PATCH "/api/protocols/ndmp/nodes/13bb2092-458b-11e9-9c06-0050568ea64e" '{"enabled":"false","authentication_types":["plaintext"]}'
           ```
           <br/>
        Updates the "user" field:
           <br/>
           ```
           PATCH "/api/protocols/ndmp/nodes/13bb2092-458b-11e9-9c06-0050568ea64e" '{"user":"user22"}'
           ```
           <br/>
      tags:
      - NDMP 
  /protocols/ndmp/nodes/{node.uuid}:
    get:
      description: |
        Retrieves an NDMP node configuration for a specific node.
        ### Related ONTAP commands
        * `system services ndmp show`
        ### Learn more
        * [`DOC /protocols/ndmp/nodes`](#docs-ndmp-protocols_ndmp_nodes)
      operationId: ndmp_node_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: Node UUID
        in: path
        name: node.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_node'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812801    | Node-scoped operations are not allowed in an SVM-scope.|
            | 68812802    | The UUID is not valid.|
            | 68812804    | Failed to get the node name from the specified node UUID.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    patch:
      description: |
        Updates the NDMP node configuration for a specific node.
        ### Related ONTAP commands
        * `system services ndmp modify`
        ### Learn more
        * [`DOC /protocols/ndmp/nodes`](#docs-ndmp-protocols_ndmp_nodes)
      operationId: ndmp_node_modify
      parameters:
      - description: Node UUID
        in: path
        name: node.uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ndmp_node'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_node'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812800    | The user is required to enable NDMP on a node.|
            | 68812801    | Node-scoped operations are not allowed in an SVM-scope.|
            | 68812802    | The UUID is not valid.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
  /protocols/ndmp/sessions:
    get:
      description: |
        Retrieves a collection of NDMP sessions. In the case of SVM-scope, if this API is executed on a data IP, it displays the list of NDMP sessions under the specified SVM; otherwise it displays the list of NDMP sessions for all the SVMs under the cluster. In the case of node-scope, it displays the list of NDMP sessions for all nodes.
        ### Related ONTAP commands
        * `vserver services ndmp probe`
        * `system services ndmp probe`
        ### Learn more
        * [`DOC /protocols/ndmp/sessions`](#docs-ndmp-protocols_ndmp_sessions)
      operationId: ndmp_node_sessions_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by client_port
        in: query
        name: client_port
        type: integer
      - description: Filter by source_address
        in: query
        name: source_address
        type: string
      - description: Filter by data.reason
        in: query
        name: data.reason
        type: string
      - description: Filter by data.connection.type
        in: query
        name: data.connection.type
        type: string
      - description: Filter by data.connection.address
        in: query
        name: data.connection.address
        type: string
      - description: Filter by data.connection.port
        in: query
        name: data.connection.port
        type: integer
      - description: Filter by data.state
        in: query
        name: data.state
        type: string
      - description: Filter by data.bytes_processed
        in: query
        name: data.bytes_processed
        type: integer
      - description: Filter by data.operation
        in: query
        name: data.operation
        type: string
      - description: Filter by client_address
        in: query
        name: client_address
        type: string
      - description: Filter by tape_device
        in: query
        name: tape_device
        type: string
      - description: Filter by id
        in: query
        name: id
        type: string
      - description: Filter by data_path
        in: query
        name: data_path
        type: string
      - description: Filter by tape_mode
        in: query
        name: tape_mode
        type: string
      - description: Filter by mover.bytes_moved
        in: query
        name: mover.bytes_moved
        type: integer
      - description: Filter by mover.state
        in: query
        name: mover.state
        type: string
      - description: Filter by mover.mode
        in: query
        name: mover.mode
        type: string
      - description: Filter by mover.connection.type
        in: query
        name: mover.connection.type
        type: string
      - description: Filter by mover.connection.address
        in: query
        name: mover.connection.address
        type: string
      - description: Filter by mover.connection.port
        in: query
        name: mover.connection.port
        type: integer
      - description: Filter by mover.reason
        in: query
        name: mover.reason
        type: string
      - description: Filter by backup_engine
        in: query
        name: backup_engine
        type: string
      - description: Filter by scsi.target_id
        in: query
        name: scsi.target_id
        type: integer
      - description: Filter by scsi.lun_id
        in: query
        name: scsi.lun_id
        type: integer
      - description: Filter by scsi.host_adapter
        in: query
        name: scsi.host_adapter
        type: integer
      - description: Filter by scsi.device_id
        in: query
        name: scsi.device_id
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_session_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812805    | Failed to obtain the NDMP mode of the operation.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    x-ntap-long-description:
      description: |
        You can use this API to manage diagnostic information on NDMP sessions belonging to a specific SVM in the case of SVM-scope or to a specific node in the case of node-scope.
        ### Examples
        Retrieves NDMP session details under node-scope:
        <br/>
        ```
        GET "/api/protocols/ndmp/sessions/9b372ce7-3a4b-11e9-a7f8-0050568e3d73/2000"
        ```
        <br/>
        Retrieves NDMP session details under SVM-scope:
        <br/>
        ```
        GET "/api/protocols/ndmp/sessions/13bb2092-458b-11e9-9c06-0050568ea604/2000:4000"
        ```
        <br/>
        Deletes NDMP session details under node-scope:
        <br/>
        ```
        DELETE "/api/protocols/ndmp/sessions/9b372ce7-3a4b-11e9-a7f8-0050568e3d73/2000"
        ```
        <br/>
        Deletes NDMP session details under SVM-scope:
        <br/>
        ```
        DELETE "/api/protocols/ndmp/sessions/13bb2092-458b-11e9-9c06-0050568ea604/2000:4000"
        ```
        <br/>
      tags:
      - NDMP 
  /protocols/ndmp/sessions/{owner.uuid}/{session.id}:
    delete:
      description: |
        Deletes a specific NDMP session.
        ### Related ONTAP commands
        * `vserver services ndmp kill`
        * `system services ndmp kill`
        ### Learn more
        * [`DOC /protocols/ndmp/sessions`](#docs-ndmp-protocols_ndmp_sessions)
      operationId: ndmp_node_session_delete
      parameters:
      - description: NDMP node UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Session identifier
        in: path
        name: session.id
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812802    | The UUID is not valid.|
            | 68812803    | Failed to get the SVM name from the specified SVM UUID.|
            | 68812804    | Failed to get the node name from the specified node UUID.|
            | 68812805    | Failed to obtain the NDMP mode of operation.|
            | 68812806    | UUID and Session ID are required.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    get:
      description: |
        Retrieves the details of a specific NDMP session.
        ### Related ONTAP commands
        * `vserver services ndmp probe`
        * `system services ndmp probe`
        ### Learn more
        * [`DOC /protocols/ndmp/sessions`](#docs-ndmp-protocols_ndmp_sessions)
      operationId: ndmp_node_session_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: The NDMP node or SVM UUID based on whether NDMP is operating
          in node-scope or SVM-scope mode.
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: NDMP session identifier
        in: path
        name: session.id
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_session'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 68812802    | The UUID is not valid.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
  /protocols/ndmp/svms:
    get:
      description: |
        Retrieves NDMP configurations for all SVMs.
        ### Related ONTAP commands
        * `vserver services ndmp show`
        ### Learn more
        * [`DOC /protocols/ndmp/svms`](#docs-ndmp-protocols_ndmp_svms)
      operationId: ndmp_svm_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by authentication_types
        in: query
        name: authentication_types
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_svm_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    x-ntap-long-description:
      description: |
        You can use this API to manage NDMP configurations of SVMs.
        ### Examples
        Updates the "enabled" field:
           <br/>
           ```
           PATCH "/api/protocols/ndmp/svms/9b372ce7-3a4b-11e9-a7f8-0050568e3d73" '{"enabled":"false"}'
           ```
           <br/>
        Updates the "authentication_types" field:
           <br/>
           ```
           PATCH "/api/protocols/ndmp/svms/9b372ce7-3a4b-11e9-a7f8-0050568e3d73" '{"authentication_types":["challenge"]}'
           ```
           <br/>
      tags:
      - NDMP 
  /protocols/ndmp/svms/{svm.uuid}:
    get:
      description: |
        Retrieves an NDMP configuration for a specific SVM.
        ### Related ONTAP commands
        * `vserver services ndmp show`
        ### Learn more
        * [`DOC /protocols/ndmp/svms`](#docs-ndmp-protocols_ndmp_svms)
      operationId: ndmp_svm_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_svm'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NDMP 
    patch:
      description: |
        Updates the NDMP configuration for a specific SVM.
        ### Related ONTAP commands
        * `vserver services ndmp modify`
        ### Learn more
        * [`DOC /protocols/ndmp/svms`](#docs-ndmp-protocols_ndmp_svms)
      operationId: ndmp_svm_modify
      parameters:
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ndmp_svm'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ndmp_svm'
        default:
          description: Error
      tags:
      - NDMP 
  /protocols/nfs/connected-clients:
    get:
      description: |-
        Retrieves the NFS configuration of SVMs.

        ### Learn more
        * [`DOC /protocols/nfs/connected-clients`](#docs-NAS-protocols_nfs_connected-clients)
      operationId: nfs_clients_get
      parameters:
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by client_ip
        in: query
        name: client_ip
        type: string
      - description: Filter by server_ip
        in: query
        name: server_ip
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by idle_duration
        in: query
        name: idle_duration
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by local_request_count
        in: query
        name: local_request_count
        type: integer
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by remote_request_count
        in: query
        name: remote_request_count
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nfs_clients_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP connected clients show functionality is mainly used to provide a list of currently connected NFS clients. It also provides a potential list of other NFS clients that can be connected but are currently idle.<p/>
        The following are details of the fields retrieved for the Connected Clients GET API:<p/>
        node.name: The node name hosting this record; basically the node hosting the "server_ip".
        node.uuid: The node UUID hosting this record; basically the node hosting the "server_ip".
        svm.name: The svm name to which the "server_ip" belongs to.
        svm.uuid: The svm uuid to which the "server_ip" belongs to.
        server_ip: All clients that are connected to this interface are displayed in rows.
        client_ip: The IP address of the client that is connected to the interface.
        volume.name: The name of the volume the client is accessing.
        volume.uuid: The UUID of the volume the client is accessing.
        protocol: The NFS protocol version over which client is accessing the volume.
        idle_duration: The time elapsed since the last request was sent by the client for this volume.
        local_request_count: A counter that tracks requests that are sent to the volume with fast-path to local node.
        remote_request_count: A counter that tracks requests that are sent to the volume with slow-path to remote node.
        ## Example
        ### Retrieves connected client information
        ```
        # The API:
        GET /protocols/nfs/connected-clients
        # The call:
        curl -X GET "https://<cluster-mgmt-ip>/api/protocols/nfs/connected-clients?return_timeout=15&return_records=true" -H "accept: application/json"
        # The response:
        {
          "records": [
          {
             "svm": {
               "uuid": "c642db55-b8d0-11e9-9ad1-0050568e8480",
               "name": "vs1"
             },
             "node": {
               "uuid": "cc282893-b82f-11e9-a3ad-0050568e8480",
               "name": "vsim1"
             },
             "server_ip": "10.140.72.214",
             "client_ip": "10.140.137.57",
             "volume": {
               "name": "rvol1",
               "uuid": "c6bbc6f2-b8d0-11e9-9ad1-0050568e8480"
             },
             "protocol": "nfs4"
           },
           {
             "svm": {
               "uuid": "c642db55-b8d0-11e9-9ad1-0050568e8480",
               "name": "vs1"
             },
             "node": {
               "uuid": "cc282893-b82f-11e9-a3ad-0050568e8480",
               "name": "vsim1"
             },
             "server_ip": "10.140.72.214",
             "client_ip": "10.140.137.57",
             "volume": {
               "name": "vol1",
               "uuid": "d28d1999-b8d0-11e9-9ad1-0050568e8480"
             },
             "protocol": "nfs3"
           },
           {
             "svm": {
               "uuid": "c642db55-b8d0-11e9-9ad1-0050568e8480",
               "name": "vs1"
             },
             "node": {
               "uuid": "cc282893-b82f-11e9-a3ad-0050568e8480",
               "name": "vsim1"
             },
             "server_ip": "10.140.72.214",
             "client_ip": "10.140.137.57",
             "volume": {
               "name": "vol1",
               "uuid": "d28d1999-b8d0-11e9-9ad1-0050568e8480"
             },
             "protocol": "nfs4"
           }],
           "num_records": 3
        }
        ```
      tags:
      - NAS
  /protocols/nfs/export-policies:
    get:
      description: |
        Retrieves export policies.
        ### Related ONTAP commands
        * `vserver export-policy show`
        * `vserver export-policy rule show`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_policy_collection_get
      parameters:
      - description: Filter by rules.superuser
        in: query
        name: rules.superuser
        type: string
      - description: Filter by rules.ro_rule
        in: query
        name: rules.ro_rule
        type: string
      - description: Filter by rules.index
        in: query
        name: rules.index
        type: integer
      - description: Filter by rules.protocols
        in: query
        name: rules.protocols
        type: string
      - description: Filter by rules.rw_rule
        in: query
        name: rules.rw_rule
        type: string
      - description: Filter by rules.anonymous_user
        in: query
        name: rules.anonymous_user
        type: string
      - description: Filter by rules.clients.match
        in: query
        name: rules.clients.match
        type: string
      - description: Filter by id
        in: query
        name: id
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an export policy. An SVM can have any number of export policies to define rules for which clients can access data exported by the SVM. A policy with no rules prohibits access.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create an export policy.
        * `name`  - Name of the export policy.
        ### Recommended optional properties
        * `rules`  - Rule(s) of an export policy. Used to create the export rule and populate the export policy with export rules in a single request.
        ### Related ONTAP commands
        * `vserver export-policy create`
        * `vserver export-policy rule create`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/export_policy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/export_policy_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703952    | Invalid ruleset name provided. No spaces allowed in a ruleset name|
            | 1703954    | Export policy does not exist |
            | 1704049    | Invalid clientmatch: clientmatch lists require an effective cluster version of Data ONTAP 9.0 or later. Upgrade all nodes to Data ONTAP 9.0 or above to use features that operate on lists of clientmatch strings in export-policy rules |
            | 1704055    | Export policies are only supported for data Vservers |
            | 3277000    | Upgrade all nodes to Data ONTAP 9.0.0 or above to use krb5p as a security flavor in export-policy rules |
            | 3277083    | User ID is not valid. Enter a value for User ID from 0 to 4294967295 |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ##  Export Policies
        ### 1) Retrieve the export policy details
        ---
        ```
        # The API:
        GET /api/protocols/nfs/export-policies
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/export-policies"
        ```
        ---
        ### 2) Create an export policy for an SVM
        ---
        ```
        # The API:
        POST /api/protocols/nfs/export-policies
        # The call:
        curl -d "@test_post_policy_single_rule.txt" -X POST "https://<mgmt-ip>/api/protocols/nfs/export-policies"
        test_post_policy_single_rule.txt(body):
        {
          "name": "P1",
          "rules":[
            {
              "clients": [
                {
                  "match": "host1"
                }
              ],
              "ro_rule": [
                "krb5"
              ],
              "rw_rule": [
                "ntlm"
              ],
              "anonymous_user": "anon1"
            },
            {
              "clients": [
                {
                  "match": "host2"
                }
              ],
              "ro_rule": [
                "sys"
              ],
              "rw_rule": [
                "ntlm"
              ],
              "superuser": [
                "any"
              ]
            }
          ]
        }
        ```
        ---
        ### 3) Update an export policy for an SVM
        ---
        ```
        # The API:
        PATCH /api/protocols/nfs/export-policies/{policy.id}
        # The call:
        curl -d "@test_patch_policy.txt" -X PATCH "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934594"
        test_patch_policy.txt(body):
        {
          "name": "S1",
          "rules":[
            {
              "clients": [
                {
                  "match": "host4"
                }
              ],
              "ro_rule": [
                "krb5"
              ],
              "rw_rule": [
                "ntlm"
              ]
            }
          ]
        }
        ```
        ---
        ### 4) Delete an export policy for an SVM
        ---
        ```
        # The API:
        DELETE /api/protocols/nfs/export-policies/{policy.id}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934594"
        ```
        ---
        ##  Export Rules
        ### 1) Retrieve the export policy rule details for an export policy
        ---
        ```
        # The API:
        GET /api/protocols/nfs/export-policies/{policy.id}/rules
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934595/rules"
        ```
        ---
        ### 2) Create an export policy rule for an export policy
        ---
        ```
        # The API:
        POST /api/protocols/nfs/export-policies/{policy.id}/rules
        # The call:
        curl -d "<@test_patch_export_rule.txt>" -X POST "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934595/rules"
        test_patch_export_rule.txt(body):
        {
          "clients": [
            {
              "match": "host2"
            }
          ],
          "ro_rule": [
            "sys"
          ],
          "rw_rule": [
            "ntlm"
          ]
        }
        ```
        ---
        ### 3) Update an export policy rule for an export policy
        ---
        ```
        # The API:
        PATCH /api/protocols/nfs/export-policies/{policy.id}/rules/{index}
        # The call:
        curl -d "@test_patch_export_rule.txt" -X PATCH "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934595/rules/5"
        test_patch_export_rule.txt(body):
        {
          "new_index": "10",
          "clients": [
            {
              "match": "host4"
            }
          ],
          "ro_rule": [
            "sys"
          ],
          "rw_rule": [
            "krb5"
          ]
        }
        ```
        ---
        ### 4) Delete an export policy rule for an export policy
        ---
        ```
        # The API:
        DELETE /api/protocols/nfs/export-policies/{policy.id}/rules/{index}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934595/rules/15"
        ```
        ---
        ##  Export Clients
        ### 1) Retrieve the export client matches of an export policy rule
        ---
        ```
        # The API:
        GET /api/protocols/nfs/export-policies/{policy.id}/rules/{index}/clients
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934593/rules/2/clients"
        ```
        ---
        ### 2) Add an export client match to an export policy rule
        ---
        ```
        # The API:
        POST /api/protocols/nfs/export-policies/{policy.id}/rules/{index}/clients
        # The call:
        curl -d "@add_client_match.txt"" -X POST "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934593/rules/1/clients"
        add_client_match.txt(body):
        {
          "match" : "host4"
        }
        ```
        ---
        ### 3) Delete an export client match from an export policy rule
        ---
        ```
        # The API:
        DELETE /api/protocols/nfs/export-policies/{policy.id}/rules/{index}/clients/{match}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/nfs/export-policies/8589934593/rules/1/clients/host1,host2"
        ```
        ---
      tags:
      - NAS
  /protocols/nfs/export-policies/{id}:
    delete:
      description: |
        Deletes an export policy.
        ### Related ONTAP commands
        * `vserver export-policy delete`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_policy_delete
      parameters:
      - description: Export Policy ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703944    | Failed to delete rule |
            | 1703945    | Ruleset is in use by a volume.  It cannot be deleted until all volumes that refer to it are first deleted|
            | 1703946    | Cannot determine if the ruleset is in use by a volume.  It cannot be deleted until all volumes that refer to it are first deleted|
            | 1703947    | Cannot delete default ruleset.  This ruleset will be deleted when the owning Vserver is deleted|
            | 1703952    | Invalid ruleset name provided. No spaces are allowed in a ruleset name|
            | 1703953    | This ruleset is in use by a qtree export policy.  It cannot be deleted until all qtree policies that refer to it are first deleted|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves an export policy.
        ### Related ONTAP commands
        * `vserver export-policy show`
        * `vserver export-policy rule show`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_policy_get
      parameters:
      - description: Export Policy ID
        in: path
        name: id
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the properties of an export policy to change an export policy name or replace all export policy rules.
        ### Related ONTAP commands
        * `vserver export-policy rename`
        * `vserver export-policy rule delete`
        * `vserver export-policy rule create`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_policy_modify
      parameters:
      - description: Export Policy ID
        in: path
        name: id
        required: true
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/export_policy'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703950    | Failed to rename ruleset |
            | 1703952    | Invalid ruleset name provided. No spaces are allowed in a ruleset name|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/export-policies/{policy.id}/rules:
    get:
      description: |
        Retrieves export policy rules.
        ### Related ONTAP commands
        * `vserver export-policy rule show`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_collection_get
      parameters:
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Filter by superuser
        in: query
        name: superuser
        type: string
      - description: Filter by ro_rule
        in: query
        name: ro_rule
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by protocols
        in: query
        name: protocols
        type: string
      - description: Filter by rw_rule
        in: query
        name: rw_rule
        type: string
      - description: Filter by anonymous_user
        in: query
        name: anonymous_user
        type: string
      - description: Filter by clients.match
        in: query
        name: clients.match
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_rule_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an export policy rule.
        ### Required properties
        * `policy.id`  - Existing export policy for which to create an export rule.
        * `clients.match`  - List of clients (hostnames, ipaddresses, netgroups, domains) to which the export rule applies.
        * `ro_rule`  - Used to specify the security type for read-only access to volumes that use the export rule.
        * `rw_rule`  - Used to specify the security type for read-write access to volumes that use the export rule.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `protocols` - _any_
        * `anonymous_user` - _none_
        * `superuser` - _any_
        ### Related ONTAP commands
        * `vserver export-policy rule create`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/export_rule'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/export_rule_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703954    | Export policy does not exist |
            | 1704036    | Invalid clientmatch:  missing domain name |
            | 1704037    | Invalid clientmatch:  missing network name |
            | 1704038    | Invalid clientmatch:  missing netgroup name |
            | 1704039    | Invalid clientmatch |
            | 1704040    | Invalid clientmatch: address bytes masked out by netmask are non-zero |
            | 1704041    | Invalid clientmatch: address bytes masked to zero by netmask |
            | 1704042    | Invalid clientmatch: too many bits in netmask |
            | 1704043    | Invalid clientmatch: invalid netmask |
            | 1704044    | Invalid clientmatch: invalid characters in host name |
            | 1704045    | Invalid clientmatch: invalid characters in domain name |
            | 1704050    | Invalid clientmatch: clientmatch list contains a duplicate string. Duplicate strings in a clientmatch list are not supported |
            | 1704051    | Warning: Not adding any new strings to the clientmatch field for ruleindex. All of the match strings are already in the clientmatch list |
            | 1704064    | Clientmatch host name too long |
            | 1704065    | Clientmatch domain name too long |
            | 3277000    | Upgrade all nodes to Data ONTAP 9.0.0 or above to use krb5p as a security flavor in export-policy rules |
            | 3277083    | User ID is not valid. Enter a value for User ID from 0 to 4294967295 |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/export-policies/{policy.id}/rules/{index}:
    delete:
      description: |
        Deletes an export policy rule.
        ### Related ONTAP commands
        * `vserver export-policy rule delete`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_delete
      parameters:
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703945    | Ruleset is in use by a volume.  It cannot be deleted until all volumes that refer to it are first deleted|
            | 1703946    | Cannot determine if the ruleset is in use by a volume.  It cannot be deleted until all volumes that refer to it are first deleted|
            | 1703954    | Export policy does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves an export policy rule
        ### Related ONTAP commands
        * `vserver export-policy rule show`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_get
      parameters:
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_rule'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the properties of an export policy rule to change an export policy rule's index or fields.
        ### Related ONTAP commands
        * `vserver export-policy rule modify`
        * `vserver export-policy rule setindex`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_modify
      parameters:
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      - description: New Export Rule Index
        in: query
        name: new_index
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/export_rule'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703954    | Export policy does not exist |
            | 1704036    | Invalid clientmatch:  missing domain name |
            | 1704037    | Invalid clientmatch:  missing network name |
            | 1704038    | Invalid clientmatch:  missing netgroup name |
            | 1704039    | Invalid clientmatch |
            | 1704040    | Invalid clientmatch: address bytes masked out by netmask are non-zero |
            | 1704041    | Invalid clientmatch: address bytes masked to zero by netmask |
            | 1704042    | Invalid clientmatch: too many bits in netmask |
            | 1704043    | Invalid clientmatch: invalid netmask |
            | 1704044    | Invalid clientmatch: invalid characters in host name |
            | 1704045    | Invalid clientmatch: invalid characters in domain name |
            | 1704050    | Invalid clientmatch: clientmatch list contains a duplicate string. Duplicate strings in a clientmatch list are not supported |
            | 1704051    | Warning: Not adding any new strings to the clientmatch field for ruleindex. All of the match strings are already in the clientmatch list |
            | 1704064    | Clientmatch host name too long |
            | 1704065    | Clientmatch domain name too long |
            | 3277000    | Upgrade all nodes to Data ONTAP 9.0.0 or above to use krb5p as a security flavor in export-policy rules |
            | 3277083    | User ID is not valid. Enter a value for User ID from 0 to 4294967295 |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/export-policies/{policy.id}/rules/{index}/clients:
    get:
      description: |
        Retrieves export policy rule clients.
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_clients_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/export_client_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an export policy rule client
        ### Required properties
        * `policy.id` - Existing export policy that contains export policy rules for the client being added.
        * `index`  - Existing export policy rule for which to create an export client.
        * `match`  - Base name for the export policy client.
        ### Related ONTAP commands
        * `vserver export-policy rule add-clientmatches`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_clients_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/export_client'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/export_client_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703954    | Export policy does not exist |
            | 1704036    | Invalid clientmatch:  missing domain name |
            | 1704037    | Invalid clientmatch:  missing network name |
            | 1704038    | Invalid clientmatch:  missing netgroup name |
            | 1704039    | Invalid clientmatch |
            | 1704040    | Invalid clientmatch: address bytes masked out by netmask are non-zero |
            | 1704041    | Invalid clientmatch: address bytes masked to zero by netmask |
            | 1704042    | Invalid clientmatch: too many bits in netmask |
            | 1704043    | Invalid clientmatch: invalid netmask |
            | 1704044    | Invalid clientmatch: invalid characters in host name |
            | 1704045    | Invalid clientmatch: invalid characters in domain name |
            | 1704050    | Invalid clientmatch: the clientmatch list contains a duplicate string. Duplicate strings in a clientmatch list are not supported |
            | 1704051    | Warning: Not adding any new strings to the clientmatch field for ruleindex. All of the match strings are already in the clientmatch list |
            | 1704064    | Clientmatch host name too long |
            | 1704065    | Clientmatch domain name too long |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/export-policies/{policy.id}/rules/{index}/clients/{match}:
    delete:
      description: |
        Deletes an export policy client
        ### Related ONTAP commands
        * `vserver export-policy rule remove-clientmatches`
        ### Learn more
        * [`DOC /protocols/nfs/export-policies`](#docs-NAS-protocols_nfs_export-policies)
      operationId: export_rule_clients_delete
      parameters:
      - description: Export Policy ID
        in: path
        name: policy.id
        required: true
        type: integer
      - description: Export Rule Index
        in: path
        name: index
        required: true
        type: integer
      - description: Export Client Match
        in: path
        name: match
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1703954    | Export policy does not exist |
            | 1704036    | Invalid clientmatch:  missing domain name |
            | 1704037    | Invalid clientmatch:  missing network name |
            | 1704038    | Invalid clientmatch:  missing netgroup name |
            | 1704039    | Invalid clientmatch |
            | 1704040    | Invalid clientmatch: address bytes masked out by netmask are non-zero |
            | 1704041    | Invalid clientmatch: address bytes masked to zero by netmask |
            | 1704042    | Invalid clientmatch: too many bits in netmask |
            | 1704043    | Invalid clientmatch: invalid netmask |
            | 1704044    | Invalid clientmatch: invalid characters in host name |
            | 1704045    | Invalid clientmatch: invalid characters in domain name |
            | 1704050    | Invalid clientmatch: the clientmatch list contains a duplicate string. Duplicate strings in a clientmatch list are not supported |
            | 1704052    | Warning: Not removing any strings from the clientmatch field for ruleindex. None of the match strings were found in the clientmatch list |
            | 1704064    | Clientmatch host name too long |
            | 1704065    | Clientmatch domain name too long |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/kerberos/interfaces:
    get:
      description: |
        Retrieves Kerberos interfaces.
        ### Related ONTAP commands
        * `vserver nfs kerberos interface show`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/interfaces`](#docs-NAS-protocols_nfs_kerberos_interfaces)
      operationId: kerberos_interface_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by encryption_types
        in: query
        name: encryption_types
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by spn
        in: query
        name: spn
        type: string
      - description: Filter by interface.name
        in: query
        name: interface.name
        type: string
      - description: Filter by interface.ip.address
        in: query
        name: interface.ip.address
        type: string
      - description: Filter by interface.uuid
        in: query
        name: interface.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/kerberos_interface_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ##  Examples
        ### Retrieving the Kerberos interface configuration details
        ```
        # The API:
        GET /api/protocols/nfs/kerberos/interfaces
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/kerberos/interfaces"
        ```
        ### Updating the Kerberos interface configuration
        ```
        # The API:
        PATCH /api/protocols/nfs/kerberos/interfaces/{interface.uuid}
        # The call:
        curl -d "@test_patch_kerb_interface.txt" -X PATCH "https://<mgmt-ip>/api/protocols/nfs/kerberos/interfaces/e62936de-7342-11e8-9eb4-0050568be2b7"
        test_patch_kerb_interface.txt(body):
        {
         "enabled" : "true",
         "spn": "nfs/datalif1-vsim3-d1.sim.netapp.com@NFS-NSR-W01.RTP.NETAPP.COM",
         "user" :"administrator",
         "password" :"Hello123!"
        }
        ```
      tags:
      - NAS
  /protocols/nfs/kerberos/interfaces/{interface.uuid}:
    get:
      description: |
        Retrieves a Kerberos interface.
        ### Related ONTAP commands
        * `vserver nfs kerberos interface show`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/interfaces`](#docs-NAS-protocols_nfs_kerberos_interfaces)
      operationId: kerberos_interface_get
      parameters:
      - description: Network interface UUID
        in: path
        name: interface.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/kerberos_interface'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the properties of a Kerberos interface.
        ### Related ONTAP commands
        * `vserver nfs kerberos interface modify`
        * `vserver nfs kerberos interface enable`
        * `vserver nfs kerberos interface disable`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/interfaces`](#docs-NAS-protocols_nfs_kerberos_interfaces)
      operationId: kerberos_interface_modify
      parameters:
      - description: Network interface UUID
        in: path
        name: interface.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/kerberos_interface'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 1966082     | LIF could not be found in database. Contact technical support for assistance.|
            | 3276801     | Failed to bind service principal name on LIF.|
            | 3276809     | Failed to disable NFS Kerberos on LIF.|
            | 3276832     | Failed to insert Kerberos attributes to database.|
            | 3276842     | Internal error. Failed to import Kerberos keytab file into the management databases. Contact technical support for assistance.|
            | 3276861     | Kerberos is already enabled/disabled on this LIF.|
            | 3276862     | Kerberos service principal name is required.|
            | 3276889     | Failed to enable NFS Kerberos on LIF.|
            | 3276937     | Failed to lookup the Vserver for the virtual interface.|
            | 3276941     | Kerberos is a required field.|
            | 3276942     | Service principal name is invalid. It must of the format:"nfs/<LIF-FQDN>@REALM"|
            | 3276944     | Internal error. Reason: Failed to initialize the Kerberos context|
            | 3276945     | Internal error. Reason: Failed to parse the service principal name|
            | 3276951     | Warning: Skipping unsupported encryption type for service principal name|
            | 3276952     | "organizational_unit" option cannot be used for "Other" vendor.|
            | 3276965     | Account sharing across Vservers is not allowed. Use a different service principal name unique within the first 15 characters.|
            | 3277019     | Cannot specify -force when enabling Kerberos.|
            | 3277020     | Modifying the NFS Kerberos configuration for a LIF that is not configured for NFS is not supported.|
            | 3277043     | Keytab import failed due to missing keys. Keys for encryption types are required for  Vserver but found no matching keys for service principal name. Generate the keytab file with all required keys and try again.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/kerberos/realms:
    get:
      description: |
        Retrieves Kerberos realms.
        ### Related ONTAP commands
        * `vserver nfs kerberos realm show`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/realms`](#docs-NAS-protocols_nfs_kerberos_realms)
      operationId: kerberos_realm_collection_get
      parameters:
      - description: Filter by encryption_types
        in: query
        name: encryption_types
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by ad_server.name
        in: query
        name: ad_server.name
        type: string
      - description: Filter by ad_server.address
        in: query
        name: ad_server.address
        type: string
      - description: Filter by kdc.vendor
        in: query
        name: kdc.vendor
        type: string
      - description: Filter by kdc.ip
        in: query
        name: kdc.ip
        type: string
      - description: Filter by kdc.port
        in: query
        name: kdc.port
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/kerberos_realm_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a Kerberos realm.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM on which to create the Kerberos realm.
        * `name` - Base name for the Kerberos realm.
        * `kdc.vendor` - Vendor of the Key Distribution Center (KDC) server for this Kerberos realm. If the configuration uses a Microsoft Active Directory domain for authentication, this field nust be `microsoft`.
        * `kdc.ip` - IP address of the KDC server for this Kerberos realm.
        ### Recommended optional properties
        * `ad_server.name` - Host name of the Active Directory Domain Controller (DC). This is a mandatory parameter if the kdc-vendor is `microsoft`.
        * `ad_server.address` - IP address of the Active Directory Domain Controller (DC). This is a mandatory parameter if the kdc-vendor is `microsoft`.
        ### Default property values
        If not specified in POST, the following default property value is assigned:
        * `kdc.port` - _88_
        ### Related ONTAP commands
        * `vserver nfs kerberos realm create`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/realms`](#docs-NAS-protocols_nfs_kerberos_realms)
      operationId: kerberos_realm_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/kerberos_realm'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 2949121     | Active Directory server name required.|
            | 2949122     | Active Directory server address required|
            | 2949123     | Failed to create Kerberos realm.|
            | 2949124     | Failed to create hosts file entry.|
            | 3276949     | Kerberos realm creation failed. Reason: The parameters "ad_server.name" and "ad_server.address" are only valid when "kdc.vendor" is Microsoft|
            | 3276976     | "realm" is a required input|
            | 3276998     | Only the data Vservers can own NFS Kerberos realms.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ##  Examples
        ### Retrieving the Kerberos realm details
        ```
        # The API:
        GET /api/protocols/nfs/kerberos/realms
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/kerberos/realms"
        ```
        ### Creating the Kerberos realm for an SVM
        ```
        # The API:
        POST /api/protocols/nfs/kerberos/realms
        # The call:
        curl -d "@test_post_kerb_realm.txt" -X POST "https://<mgmt-ip>/api/protocols/nfs/kerberos/realms"
        test_post_kerb_realm.txt(body):
        {
          "svm.uuid": "05c90dc2-7343-11e8-9eb4-0050568be2b7",
          "name": "NFS-NSR-W02.RTP.NETAPP.COM",
            "kdc": {
              "vendor": "microsoft",
              "ip": "10.225.185.112",
              "port": 88
            },
            "comment": "realm",
            "ad_server": {
              "name": "nfs-nsr-w02.rtp.netapp.com",
              "address": "10.225.185.112"
            }
        }
        ```
        ### Updating the Kerberos realm for an SVM
        ```
        # The API:
        PATCH /api/protocols/nfs/kerberos/realms/{svm.uuid}/{name}
        # The call:
        curl -d "@test_patch_kerb_realm.txt" -X PATCH "https://<mgmt-ip>/api/protocols/nfs/kerberos/realms/05c90dc2-7343-11e8-9eb4-0050568be2b7/NFS-NSR-W02.RTP.NETAPP.COM"
        test_patch_kerb_realm.txt(body):
        {
          "kdc": {
            "vendor": "Microsoft",
            "ip": "100.225.185.112",
            "port": 88
          },
          "comment": "realm modify",
          "ad_server": {
            "name": "nfs.netapp.com",
            "address": "192.2.18.112"
          }
        }
        ```
        ### Deleting the Kerberos realm for an SVM
        ```
        # The API:
        DELETE /api/protocols/nfs/kerberos/realms/{svm.uuid}/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/nfs/kerberos/realms/05c90dc2-7343-11e8-9eb4-0050568be2b7/NFS-NSR-W02.RTP.NETAPP.COM"
        ```
        ---
      tags:
      - NAS
  /protocols/nfs/kerberos/realms/{svm.uuid}/{name}:
    delete:
      description: |
        Deletes a Kerberos realm.
        * `vserver nfs kerberos realm delete`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/realms`](#docs-NAS-protocols_nfs_kerberos_realms)
      operationId: kerberos_realm_delete
      parameters:
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Kerberos realm
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 1966125     | Failed to remove hosts entry.|
            | 1966126     | Failed to lookup hosts entry.|
            | 2949141     | Failed to lookup Kerberos realm.|
            | 2949142     | Failed to remove Kerberos realm.|
            | 3276942     | Service principal name is invalid. It must of the format:"nfs/<LIF-FQDN>@REALM\\\"|
            | 3276976     | "realm" is a required input|
            | 3276998     | Only the data Vservers can own NFS Kerberos realms.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves a Kerberos realm.
        * `vserver nfs kerberos realm show`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/realms`](#docs-NAS-protocols_nfs_kerberos_realms)
      operationId: kerberos_realm_get
      parameters:
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Kerberos realm
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/kerberos_realm'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the properties of a Kerberos realm.
        * `vserver nfs kerberos realm modify`
        ### Learn more
        * [`DOC /protocols/nfs/kerberos/realms`](#docs-NAS-protocols_nfs_kerberos_realms)
      operationId: kerberos_realm_modify
      parameters:
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Kerberos realm
        in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/kerberos_realm'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 1966125     | Failed to remove hosts entry.|
            | 1966126     | Failed to lookup hosts entry.|
            | 1966131     | Failed to create hosts entry.|
            | 1966132     | Failed to modify hosts entry.|
            | 2949121     | Active Directory server name required.|
            | 2949122     | Active Directory server address required|
            | 2949123     | Failed to create Kerberos realm.|
            | 2949124     | Failed to create hosts file entry.|
            | 2949141     | Failed to lookup Kerberos realm.|
            | 2949148     | Failed to modify Kerberos realm.|
            | 3276976     | "realm" is a required input|
            | 3276998     | Only the data Vservers can own NFS Kerberos realms.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/services:
    get:
      description: |
        Retrieves the NFS configuration of SVMs.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `statistics.*`
        * `metric.*`
        ### Related ONTAP commands
        * `vserver nfs show`
        * `vserver nfs status`
        ### Learn more
        * [`DOC /protocols/nfs/services`](#docs-NAS-protocols_nfs_services)
      operationId: nfs_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by statistics.v3.status
        in: query
        name: statistics.v3.status
        type: string
      - description: Filter by statistics.v3.latency_raw.other
        in: query
        name: statistics.v3.latency_raw.other
        type: integer
      - description: Filter by statistics.v3.latency_raw.write
        in: query
        name: statistics.v3.latency_raw.write
        type: integer
      - description: Filter by statistics.v3.latency_raw.read
        in: query
        name: statistics.v3.latency_raw.read
        type: integer
      - description: Filter by statistics.v3.latency_raw.total
        in: query
        name: statistics.v3.latency_raw.total
        type: integer
      - description: Filter by statistics.v3.timestamp
        in: query
        name: statistics.v3.timestamp
        type: string
      - description: Filter by statistics.v3.throughput_raw.read
        in: query
        name: statistics.v3.throughput_raw.read
        type: integer
      - description: Filter by statistics.v3.throughput_raw.write
        in: query
        name: statistics.v3.throughput_raw.write
        type: integer
      - description: Filter by statistics.v3.throughput_raw.total
        in: query
        name: statistics.v3.throughput_raw.total
        type: integer
      - description: Filter by statistics.v3.iops_raw.other
        in: query
        name: statistics.v3.iops_raw.other
        type: integer
      - description: Filter by statistics.v3.iops_raw.write
        in: query
        name: statistics.v3.iops_raw.write
        type: integer
      - description: Filter by statistics.v3.iops_raw.read
        in: query
        name: statistics.v3.iops_raw.read
        type: integer
      - description: Filter by statistics.v3.iops_raw.total
        in: query
        name: statistics.v3.iops_raw.total
        type: integer
      - description: Filter by metric.v3.duration
        in: query
        name: metric.v3.duration
        type: string
      - description: Filter by metric.v3.latency.other
        in: query
        name: metric.v3.latency.other
        type: integer
      - description: Filter by metric.v3.latency.write
        in: query
        name: metric.v3.latency.write
        type: integer
      - description: Filter by metric.v3.latency.read
        in: query
        name: metric.v3.latency.read
        type: integer
      - description: Filter by metric.v3.latency.total
        in: query
        name: metric.v3.latency.total
        type: integer
      - description: Filter by metric.v3.throughput.read
        in: query
        name: metric.v3.throughput.read
        type: integer
      - description: Filter by metric.v3.throughput.write
        in: query
        name: metric.v3.throughput.write
        type: integer
      - description: Filter by metric.v3.throughput.total
        in: query
        name: metric.v3.throughput.total
        type: integer
      - description: Filter by metric.v3.timestamp
        in: query
        name: metric.v3.timestamp
        type: string
      - description: Filter by metric.v3.iops.other
        in: query
        name: metric.v3.iops.other
        type: integer
      - description: Filter by metric.v3.iops.write
        in: query
        name: metric.v3.iops.write
        type: integer
      - description: Filter by metric.v3.iops.read
        in: query
        name: metric.v3.iops.read
        type: integer
      - description: Filter by metric.v3.iops.total
        in: query
        name: metric.v3.iops.total
        type: integer
      - description: Filter by metric.v3.status
        in: query
        name: metric.v3.status
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by transport.tcp_enabled
        in: query
        name: transport.tcp_enabled
        type: boolean
      - description: Filter by transport.udp_enabled
        in: query
        name: transport.udp_enabled
        type: boolean
      - description: Filter by vstorage_enabled
        in: query
        name: vstorage_enabled
        type: boolean
      - description: Filter by protocol.v40_enabled
        in: query
        name: protocol.v40_enabled
        type: boolean
      - description: Filter by protocol.v40_features.acl_enabled
        in: query
        name: protocol.v40_features.acl_enabled
        type: boolean
      - description: Filter by protocol.v40_features.read_delegation_enabled
        in: query
        name: protocol.v40_features.read_delegation_enabled
        type: boolean
      - description: Filter by protocol.v40_features.write_delegation_enabled
        in: query
        name: protocol.v40_features.write_delegation_enabled
        type: boolean
      - description: Filter by protocol.v41_enabled
        in: query
        name: protocol.v41_enabled
        type: boolean
      - description: Filter by protocol.v4_id_domain
        in: query
        name: protocol.v4_id_domain
        type: string
      - description: Filter by protocol.v41_features.pnfs_enabled
        in: query
        name: protocol.v41_features.pnfs_enabled
        type: boolean
      - description: Filter by protocol.v41_features.read_delegation_enabled
        in: query
        name: protocol.v41_features.read_delegation_enabled
        type: boolean
      - description: Filter by protocol.v41_features.write_delegation_enabled
        in: query
        name: protocol.v41_features.write_delegation_enabled
        type: boolean
      - description: Filter by protocol.v41_features.acl_enabled
        in: query
        name: protocol.v41_features.acl_enabled
        type: boolean
      - description: Filter by protocol.v3_enabled
        in: query
        name: protocol.v3_enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nfs_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates an NFS configuration for an SVM.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM for which to create the NFS configuration.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `enabled` - _true_
        * `state` - online
        * `transport.udp_enabled` - _true_
        * `transport.tcp_enabled` - _true_
        * `protocol.v3_enabled` - _true_
        * `protocol.v4_id_domain` - defaultv4iddomain.com
        * `protocol.v4_enabled` - _false_
        * `protocol.v41_enabled` - _false_
        * `protocol.v40_features.acl_enabled` - _false_
        * `protocol.v40_features.read_delegation_enabled` - _false_
        * `protocol.v40_features.write_delegation_enabled` - _false_
        * `protocol.v41_features.acl_enabled` - _false_
        * `protocol.v41_features.read_delegation_enabled` - _false_
        * `protocol.v41_features.write_delegation_enabled` - _false_
        * `protocol.v41_features.pnfs_enabled` - _false_
        * `vstorage_enabled` - _false_
        ### Related ONTAP commands
        * `vserver nfs create`
        ### Learn more
        * [`DOC /protocols/nfs/services`](#docs-NAS-protocols_nfs_services)
      operationId: nfs_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info Specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/nfs_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nfs_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3276916    | Vserver is not running |
            | 3276994    | Kerberos must be disabled on all LIFs on Vserver before adding or removing AES encryption. Disable Kerberos on the LIF and try again |
            | 3277038    | Cannot enable \\\"showmount\\\" feature because it requires an effective cluster version of Data ONTAP 8.3.0 or later |
            | 3277049    | Cannot enable \\\"showmount\\\" feature on ID-Discard Vserver. Ensure that the Vserver is initialized and retry the command |
            | 3277052    | NFSv4.x access to transitioned volumes in this Vserver could trigger conversion of non-Unicode directories to Unicode, which might impact data-serving performance. Before enabling NFSv4.x for this Vserver, refer to the Data and Configuration Transition Guide |
            | 3277069    | Cannot disable TCP because the SnapDiff RPC server is in the \\\"on\\\" state |
            | 3277089    | Attempting to create an NFS server using 64-bits for NFSv3 FSIDs and File IDs on Vserver. Older client software might not work with 64-bit identifiers|
            | 3277099    | Domain name contains invalid characters or it is too short. Allowed characters are: alphabetical characters (A-Za-z), numeric characters (0-9), minus sign (-), and the period (.). The first character must be alphabetical or numeric, last character must not be a minus sign or a period. Minimum supported length: 2 characters, maximum of 256 characters |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ### Retrieving an NFS configuration
        ```
        # The API:
        GET /api/protocols/nfs/services
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/nfs/services"
        ```
        ### Creating an NFS configuration for an SVM
        ```
        # The API:
        POST /api/protocols/nfs/services
        # The call:
        curl  -d "@test_nfs_post.txt" -X POST "https://<mgmt-ip>/api/protocols/nfs/services"
        test_nfs_post.txt(body):
        {
          "svm": {
            "uuid": "1cd8a442-86d1-11e0-ae1c-123478563412"
          },
          "protocol": {
            "v4_id_domain": "nfs-nsr-w01.rtp.netapp.com"
          },
          "vstorage_enabled": "true"
        }
        ```
        ### Updating an  NFS configuration for an SVM
        ```
        # The API:
        PATCH /api/protocols/nfs/services/{svm.uuid}
        # The call:
        curl -d "@test_nfs_patch.txt" -X PATCH "https://<mgmt-ip>/api/protocols/nfs/services/4a415601-548c-11e8-a21d-0050568bcbc9"
        test_nfs_patch.txt(body):
        {
          "protocol": {
            "v4_id_domain": "nfs-nsr-w01.rtp.netapp.com"
          },
          "vstorage_enabled": "false"
        }
        ```
        ### Deleting an NFS configuration for an SVM
        ```
        # The API:
        DELETE /api/protocols/nfs/services/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/nfs/services/4a415601-548c-11e8-a21d-0050568bcbc9"
        ```
        ## Performance monitoring
        Performance of the SVM can be monitored by the `metric.*` and `statistics.*` properties. These show the performance of the SVM in terms of IOPS, latency and throughput. The `metric.*` properties denote an average whereas `statistics.*` properties denote a real-time monotonically increasing value aggregated across all nodes.
      tags:
      - NAS
  /protocols/nfs/services/{svm.uuid}:
    delete:
      description: |
        Deletes the NFS configuration of an SVM.
        ### Related ONTAP commands
        * `vserver nfs delete`
        ### Learn more
        * [`DOC /protocols/nfs/services`](#docs-NAS-protocols_nfs_services)
      operationId: nfs_delete
      parameters:
      - in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3276916    | Vserver is not running |
            | 3277008    | NFS Kerberos must be disabled on all LIFs of Vserver before deleting the NFS configuration. When all LIFs are disabled, try the operation |
            | 3277009    | NFS Kerberos realms associated with the Vserver are deleted |
            | 3277111    | Internal error. Failed to remove NFS-specific security trace filter for Vserver |
            | 3277112    | Internal error. Failed to modify the protocols field of a security trace filter for Vserver  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the NFS configuration of an SVM.
        ### Related ONTAP commands
        * `vserver nfs show`
        * `vserver nfs status`
        ### Learn more
        * [`DOC /protocols/nfs/services`](#docs-NAS-protocols_nfs_services)
      operationId: nfs_get
      parameters:
      - in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nfs_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the NFS configuration of an SVM.
        ### Related ONTAP commands
        * `vserver nfs modify`
        * `vserver nfs on`
        * `vserver nfs off`
        * `vserver nfs start`
        * `vserver nfs stop`
        ### Learn more
        * [`DOC /protocols/nfs/services`](#docs-NAS-protocols_nfs_services)
      operationId: nfs_modify
      parameters:
      - in: path
        name: svm.uuid
        required: true
        type: string
      - description: Info Specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/nfs_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3276916    | Vserver is not running |
            | 3277069    | Cannot disable TCP because the SnapDiff RPC server is in the \\\"on\\\" state |
            | 3277087    | Attempting to reduce the number of bits used for NFSv3 FSIDs and File IDs from 64 to 32 on Vserver. This could result in collisions between different File IDs and is not recommended |
            | 3277088    | Attempting to increase the number of bits used for NFSv3 FSIDs and File IDs from 32 to 64 on Vserver. This could result in older client software no longer working with the volumes owned by Vserver  |
            | 3277090    | Attempting to disallow multiple FSIDs per mount point on Vserver. Since this Vserver currently uses 32-bit NFSv3 FSIDs and File IDs, this could result in collisions between different File IDs and is not recommended |
            | 3277099    | Domain name contains invalid characters or its too short. Allowed characters are: alphabetical characters (A-Za-z), numeric characters (0-9), minus sign (-), and the period (.). The first character must be alphabetical or numeric, last character must not be a minus sign or a period. Minimum supported length: 2 characters, maximum of 256 characters |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nfs/services/{svm.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for the NFS protocol of
        an SVM.
      operationId: nfs_collection_performance_metrics_get
      parameters:
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by v3.iops.other
        in: query
        name: v3.iops.other
        type: integer
      - description: Filter by v3.iops.write
        in: query
        name: v3.iops.write
        type: integer
      - description: Filter by v3.iops.read
        in: query
        name: v3.iops.read
        type: integer
      - description: Filter by v3.iops.total
        in: query
        name: v3.iops.total
        type: integer
      - description: Filter by v3.status
        in: query
        name: v3.status
        type: string
      - description: Filter by v3.latency.other
        in: query
        name: v3.latency.other
        type: integer
      - description: Filter by v3.latency.write
        in: query
        name: v3.latency.write
        type: integer
      - description: Filter by v3.latency.read
        in: query
        name: v3.latency.read
        type: integer
      - description: Filter by v3.latency.total
        in: query
        name: v3.latency.total
        type: integer
      - description: Filter by v3.duration
        in: query
        name: v3.duration
        type: string
      - description: Filter by v3.throughput.read
        in: query
        name: v3.throughput.read
        type: integer
      - description: Filter by v3.throughput.write
        in: query
        name: v3.throughput.write
        type: integer
      - description: Filter by v3.throughput.total
        in: query
        name: v3.throughput.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_svm_nfs_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/nvme/interfaces:
    get:
      description: |
        Retrieves NVMe interfaces.
        ### Related ONTAP commands
        * `vserver nvme show-interface`
        ### Learn more
        * [`DOC /protocols/nvme/interfaces`](#docs-NVMe-protocols_nvme_interfaces)
      operationId: nvme_interface_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by transport_address
        in: query
        name: transport_address
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by fc_interface.wwpn
        in: query
        name: fc_interface.wwpn
        type: string
      - description: Filter by fc_interface.wwnn
        in: query
        name: fc_interface.wwnn
        type: string
      - description: Filter by fc_interface.port.name
        in: query
        name: fc_interface.port.name
        type: string
      - description: Filter by fc_interface.port.node.name
        in: query
        name: fc_interface.port.node.name
        type: string
      - description: Filter by fc_interface.port.uuid
        in: query
        name: fc_interface.port.uuid
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_interface_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        NVMe interfaces are network interfaces configured to support an NVMe over Fabrics (NVMe-oF) protocol. The NVMe interfaces are Fibre Channel (FC) interfaces supporting an NVMe-oF data protocol. Regardless of the underlying physical and data protocol, NVMe interfaces are treated equally for host-side application configuration. This endpoint provides a consolidated view of all NVMe interfaces for the purpose of configuring host-side applications.<br/>
        The NVMe interfaces REST API provides NVMe-specific information about network interfaces configured to support an NVMe-oF protocol.<br/>
        NVMe interfaces must be created using the protocol-specific endpoints for FC interfaces. See [`POST /network/fc/interfaces`](#/networking/fc_interface_create). After creation, the interfaces are available via this interface.
        ## Examples
        ### Retrieving summary information for all NVMe interfaces
        ```
        # The API:
        GET /api/protocols/nvme/interfaces
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/interfaces' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "013e2c44-0d30-11e9-a684-005056bbdb14",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/013e2c44-0d30-11e9-a684-005056bbdb14"
                  }
                }
              },
              "uuid": "74d69872-0d30-11e9-a684-005056bbdb14",
              "name": "nvme1",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/interfaces/74d69872-0d30-11e9-a684-005056bbdb14"
                }
              }
            },
            {
              "svm": {
                "uuid": "013e2c44-0d30-11e9-a684-005056bbdb14",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/013e2c44-0d30-11e9-a684-005056bbdb14"
                  }
                }
              },
              "uuid": "77ded991-0d30-11e9-a684-005056bbdb14",
              "name": "nvme2",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/interfaces/77ded991-0d30-11e9-a684-005056bbdb14"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/interfaces"
            }
          }
        }
        ```
        ---
        ### Retrieving detailed information for a specific NVMe interface
        ```
        # The API:
        GET /api/protocols/nvme/interfaces/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/interfaces/77ded991-0d30-11e9-a684-005056bbdb14' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "013e2c44-0d30-11e9-a684-005056bbdb14",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/013e2c44-0d30-11e9-a684-005056bbdb14"
              }
            }
          },
          "uuid": "77ded991-0d30-11e9-a684-005056bbdb14",
          "name": "nvme2",
          "enabled": true,
          "node": {
            "name": "node1",
            "uuid": "cd4d47fd-0d2e-11e9-a684-005056bbdb14",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/cd4d47fd-0d2e-11e9-a684-005056bbdb14"
              }
            }
          },
          "transport_address": "nn-0x2003005056bbdb14:pn-0x2005005056bbdb14",
          "fc_interface": {
            "wwnn": "20:03:00:50:56:bb:db:14",
            "wwpn": "20:05:00:50:56:bb:db:14",
            "port": {
              "name": "1a",
              "uuid": "081ec491-0d2f-11e9-a684-005056bbdb14",
              "node": {
                "name": "node1"
              },
              "_links": {
                "self": {
                  "href": "/api/network/fc/ports/081ec491-0d2f-11e9-a684-005056bbdb14"
                }
              }
            },
            "_links": {
              "self": {
                "href": "/api/network/fc/interfaces/77ded991-0d30-11e9-a684-005056bbdb14"
              }
            }
          },
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/interfaces/77ded991-0d30-11e9-a684-005056bbdb14"
            }
          }
        }
        ```
        ---
      tags:
      - NVMe
  /protocols/nvme/interfaces/{uuid}:
    get:
      description: |
        Retrieves an NVMe interface.
        ### Related ONTAP commands
        * `vserver nvme show-interface`
        ### Learn more
        * [`DOC /protocols/nvme/interfaces`](#docs-NVMe-protocols_nvme_interfaces)
      operationId: nvme_interface_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: |
          The unique identifier of the NVMe interface.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_interface'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | The supplied SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/services:
    get:
      description: |
        Retrieves NVMe services.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `statistics.*`
        * `metric.*`
        ### Related ONTAP commands
        * `vserver nvme show`
        ### Learn more
        * [`DOC /protocols/nvme/services`](#docs-NVMe-protocols_nvme_services)
      operationId: nvme_service_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    post:
      description: |
        Creates an NVMe service.
        ### Required properties
        * `svm.uuid` or `svm.name` - The existing SVM in which to create the NVMe service.
        ### Related ONTAP commands
        * `vserver nvme create`
        ### Learn more
        * [`DOC /protocols/nvme/services`](#docs-NVMe-protocols_nvme_services)
      operationId: nvme_service_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new NVMe service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nvme_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1115127 | The cluster lacks a valid NVMe license. |
            | 2621462 | The supplied SVM does not exist. |
            | 2621507 | NVMe is not allowed for the specified SVM. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5374893 | The SVM is stopped. The SVM must be running to create an NVMe service. |
            | 72089650 | An NVMe service already exists for the specified SVM. |
            | 72089900 | An NVMe service cannot be creating in an SVM that is configured for a SAN protocol. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        A Non-Volatile Memory Express (NVMe) service defines the properties of the NVMe controller target for an SVM. There can be at most one NVMe service for an SVM. An SVM's NVMe service must be created before NVMe host initiators can connect to the SVM.<br/>
        The Non-Volatile Memory Express (NVMe) service REST API allows you to create, update, delete, and discover NVMe services for SVMs.
        ## Performance monitoring
        Performance of the SVM can be monitored by the `metric.*` and `statistics.*` properties. These show the performance of the SVM in terms of IOPS, latency and throughput. The `metric.*` properties denote an average whereas `statistics.*` properties denote a real-time monotonically increasing value aggregated across all nodes.
        ## Examples
        ### Creating an NVMe service for an SVM
        The simpliest way to create an NVMe service is to specify only the SVM, either by name or UUID. By default, the new NVMe service is enabled.<br/>
        In this example, the `return_records` query parameter is used to retrieve the new NVMe service object in the REST response.
        <br/>
        ```
        # The API:
        POST /api/protocols/nvme/services
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/services?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "bfb1beb0-dc69-11e8-b29f-005056bb7341",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/bfb1beb0-dc69-11e8-b29f-005056bb7341"
                  }
                }
              },
              "enabled": true,
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving the NVMe services for all SVMs in the cluster
        ```
        # The API:
        GET /api/protocols/nvme/services
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/services' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "ab60c350-dc68-11e8-9711-005056bbe408",
                "name": "svm0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/ab60c350-dc68-11e8-9711-005056bbe408"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/services/ab60c350-dc68-11e8-9711-005056bbe408"
                }
              }
            },
            {
              "svm": {
                "uuid": "bfb1beb0-dc69-11e8-b29f-005056bb7341",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/bfb1beb0-dc69-11e8-b29f-005056bb7341"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/services"
            }
          }
        }
        ```
        ---
        ### Retrieving details for a specific NVMe service
        The NVMe service is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        GET /api/protocols/nvme/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "bfb1beb0-dc69-11e8-b29f-005056bb7341",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/bfb1beb0-dc69-11e8-b29f-005056bb7341"
              }
            }
          },
          "enabled": true,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341"
            }
          }
        }
        ```
        ---
        ### Disabling an NVMe service
        Disabling an NVMe service shuts down all active NVMe connections for the SVM and prevents the creation of new NVMe connections.<br/>
        The NVMe service to update is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        PATCH /api/protocols/nvme/services/{svm.uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341' -H 'accept: application/hal+json' -d '{ "enabled": "false" }'
        ```
        <br/>
        You can retrieve the NVMe service to confirm the change.<br/>
        <br/>
        ```
        # The API:
        GET /api/protocols/nvme/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "bfb1beb0-dc69-11e8-b29f-005056bb7341",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/bfb1beb0-dc69-11e8-b29f-005056bb7341"
              }
            }
          },
          "enabled": false,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341"
            }
          }
        }
        ```
        ---
        ### Deleting an NVMe service
        The NVMe service must be disabled before it can be deleted. In addition, all NVMe interfaces, subsystems, and subsystem maps associated with the SVM must first be deleted.<br/>
        The NVMe service to delete is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/nvme/services/{svm.uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/services/bfb1beb0-dc69-11e8-b29f-005056bb7341' -H 'accept: application/hal+json'
        ```
      tags:
      - NVMe
  /protocols/nvme/services/{svm.uuid}:
    delete:
      description: |
        Deletes an NVMe service. An NVMe service must be disabled before it can be deleted. In addition, all NVMe interfaces, subsystems, and subsystem maps associated with the SVM must first be deleted.
        ### Related ONTAP commands
        * `vserver nvme delete`
        ### Learn more
        * [`DOC /protocols/nvme/services`](#docs-NVMe-protocols_nvme_services)
      operationId: nvme_service_delete
      parameters:
      - description: |
          The unique identifier of the SVM whose NVMe service is to be deleted.
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | The supplied SVM does not exist. |
            | 72089651 | The supplied SVM does not have an NVMe service. |
            | 72089653 | There are subsystems associated with the NVMe service SVM. The subsystems must be removed before deleting the NVMe service. |
            | 72089654 | There are NVMe-oF LIFs associated with the NVMe service SVM. The LIFs must be removed before deleting the NVMe service. |
            | 72090028 | The NVMe service is enabled. The NVMe service must be disabled before it can be deleted. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    get:
      description: |
        Retrieves an NVMe service.
        ### Related ONTAP commands
        * `vserver nvme show`
        ### Learn more
        * [`DOC /protocols/nvme/services`](#docs-NVMe-protocols_nvme_services)
      operationId: nvme_service_get
      parameters:
      - description: |
          The unique identifier of the SVM whose NVMe service is to be retrieved.
        in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_service'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | The supplied SVM does not exist. |
            | 72089651 | The supplied SVM does not have an NVMe service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    patch:
      description: |
        Updates an NVMe service.
        ### Related ONTAP commands
        * `vserver nvme modify`
        ### Learn more
        * [`DOC /protocols/nvme/services`](#docs-NVMe-protocols_nvme_services)
      operationId: nvme_service_modify
      parameters:
      - description: |
          The unique identifier of the SVM whose NVMe service is to be updated.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The new property values for the NVMe service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1115127 | The cluster lacks a valid NVMe license. |
            | 2621462 | The supplied SVM does not exist. |
            | 5374893 | The SVM is stopped. The SVM must be running to create an NVMe service. |
            | 72089651 | The supplied SVM does not have an NVMe service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/services/{svm.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for NVMe protocol of an
        SVM.
      operationId: nvme_collection_performance_metrics_get
      parameters:
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_nvme_metric_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/subsystem-controllers:
    get:
      description: |
        Retrieves NVMe subsystem controllers.
        ### Related ONTAP commands
        * `vserver nvme subsystem controller show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-controllers`](#docs-NVMe-protocols_nvme_subsystem-controllers)
      operationId: nvme_subsystem_controller_collection_get
      parameters:
      - description: Filter by io_queue.count
        in: query
        name: io_queue.count
        type: integer
      - description: Filter by io_queue.depth
        in: query
        name: io_queue.depth
        type: integer
      - description: Filter by admin_queue.depth
        in: query
        name: admin_queue.depth
        type: integer
      - description: Filter by id
        in: query
        name: id
        type: string
      - description: Filter by host.id
        in: query
        name: host.id
        type: string
      - description: Filter by host.nqn
        in: query
        name: host.nqn
        type: string
      - description: Filter by host.transport_address
        in: query
        name: host.transport_address
        type: string
      - description: Filter by subsystem.uuid
        in: query
        name: subsystem.uuid
        type: string
      - description: Filter by subsystem.name
        in: query
        name: subsystem.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by interface.uuid
        in: query
        name: interface.uuid
        type: string
      - description: Filter by interface.transport_address
        in: query
        name: interface.transport_address
        type: string
      - description: Filter by interface.name
        in: query
        name: interface.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_controller_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        Non-Volatile Memory Express (NVMe) subsystem controllers represent dynamic connections between hosts and a storage solution.<br/>
        The NVMe subsystem controllers REST API provides information about connected hosts.
        ## Examples
        ### Retrieving the NVMe subsystem controllers for the entire system
        ```
        # The API:
        GET /api/protocols/nvme/subsystem-controllers
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystem-controllers' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "14875240-2594-11e9-abde-00a098984313",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_0",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/14875240-2594-11e9-abde-00a098984313"
                  }
                }
              },
              "id": "0040h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0040h"
                }
              }
            },
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "14875240-2594-11e9-abde-00a098984313",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_0",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/14875240-2594-11e9-abde-00a098984313"
                  }
                }
              },
              "id": "0041h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0041h"
                }
              }
            },
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "1489d0d5-2594-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_1",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/1489d0d5-2594-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "id": "0040h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/1489d0d5-2594-11e9-94c4-00a0989a1c8e/0040h"
                }
              }
            },
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "1489d0d5-2594-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_1",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/1489d0d5-2594-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "id": "0041h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/1489d0d5-2594-11e9-94c4-00a0989a1c8e/0041h"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/subsystem-controllers"
            }
          }
        }
        ```
        ---
        ### Retrieving the NVMe subsystem controllers for a specific subsystem
        ```
        # The API:
        GET /api/protocols/nvme/subsystem-controllers/{subsystem.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "14875240-2594-11e9-abde-00a098984313",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_0",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/14875240-2594-11e9-abde-00a098984313"
                  }
                }
              },
              "id": "0040h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0040h"
                }
              }
            },
            {
              "svm": {
                "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
                "name": "symmcon_fcnvme_vserver_0",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
                  }
                }
              },
              "subsystem": {
                "uuid": "14875240-2594-11e9-abde-00a098984313",
                "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_0",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/14875240-2594-11e9-abde-00a098984313"
                  }
                }
              },
              "id": "0041h",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0041h"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific NVMe subsystem controller
        ```
        # The API:
        GET /api/protocols/nvme/subsystem-controllers/{subsystem.uuid}/{id}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0040h' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "f0f5b928-2593-11e9-94c4-00a0989a1c8e",
            "name": "symmcon_fcnvme_vserver_0",
            "_links": {
              "self": {
                "href": "/api/svm/svms/f0f5b928-2593-11e9-94c4-00a0989a1c8e"
              }
            }
          },
          "subsystem": {
            "uuid": "14875240-2594-11e9-abde-00a098984313",
            "name": "symmcon_symmcon_fcnvme_vserver_0_subsystem_0",
            "_links": {
              "self": {
                "href": "/api/protocols/nvme/subsystems/14875240-2594-11e9-abde-00a098984313"
              }
            }
          },
          "id": "0040h",
          "interface": {
            "name": "symmcon_lif_fcnvme_symmcon_fcnvme_vserver_0_3a_0",
            "uuid": "fa1c5941-2593-11e9-94c4-00a0989a1c8e",
            "transport_address": "nn-0x200400a0989a1c8d:pn-0x200500a0989a1c8d",
            "_links": {
              "self": {
                "href": "/api/protocols/nvme/interfaces/fa1c5941-2593-11e9-94c4-00a0989a1c8e"
              }
            }
          },
          "node": {
            "name": "ssan-8040-94a",
            "uuid": "ebf66f05-2590-11e9-abde-00a098984313",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/ebf66f05-2590-11e9-abde-00a098984313"
              }
            }
          },
          "host": {
            "transport_address": "nn-0x20000090fae00806:pn-0x10000090fae00806",
            "nqn": "nqn.2014-08.org.nvmexpress:uuid:c2846cb1-89d2-4020-a3b0-71ce907b4eef",
            "id": "b8546ca6097349e5b1558dc154fc073b"
          },
          "io_queue": {
            "count": 4,
            "depth": [
              32,
              32,
              32,
              32
            ]
          },
          "admin_queue": {
            "depth": 32
          },
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/subsystem-controllers/14875240-2594-11e9-abde-00a098984313/0040h"
            }
          }
        }
        ```
      tags:
      - NVMe
  /protocols/nvme/subsystem-controllers/{subsystem.uuid}/{id}:
    get:
      description: |
        Retrieves an NVMe subsystem controller.
        ### Related ONTAP commands
        * `vserver nvme subsystem controller show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-controllers`](#docs-NVMe-protocols_nvme_subsystem-controllers)
      operationId: nvme_subsystem_controller_get
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The unique identifier of the NVMe subsystem controller.
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_controller'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090001 | The supplied subsystem identifier does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/subsystem-maps:
    get:
      description: |
        Retrieves NVMe subsystem maps.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `anagrpid`
        ### Related ONTAP commands
        * `vserver nvme subsystem map show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-maps`](#docs-NVMe-protocols_nvme_subsystem-maps)
      operationId: nvme_subsystem_map_collection_get
      parameters:
      - description: Filter by nsid
        in: query
        name: nsid
        type: string
      - description: Filter by subsystem.uuid
        in: query
        name: subsystem.uuid
        type: string
      - description: Filter by subsystem.name
        in: query
        name: subsystem.name
        type: string
      - description: Filter by anagrpid
        in: query
        name: anagrpid
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by namespace.uuid
        in: query
        name: namespace.uuid
        type: string
      - description: Filter by namespace.node.uuid
        in: query
        name: namespace.node.uuid
        type: string
      - description: Filter by namespace.node.name
        in: query
        name: namespace.node.name
        type: string
      - description: Filter by namespace.name
        in: query
        name: namespace.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_map_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    post:
      description: |
        Creates an NVMe subsystem map.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the NVMe subsystem map.
        * `namespace.uuid` or `namespace.name` - Existing NVMe namespace to map to the specified NVme subsystem.
        * `subsystem.uuid` or `subsystem.name` - Existing NVMe subsystem to map to the specified NVMe namespace.
        ### Related ONTAP commands
        * `vserver nvme subsystem map create`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-maps`](#docs-NVMe-protocols_nvme_subsystem-maps)
      operationId: nvme_subsystem_map_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new NVMe subsystem map.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_subsystem_map'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nvme_subsystem_map_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72089790 | The supplied NVMe namespace is already mapped to the supplied NVMe subsystem. |
            | 72089793 | An NVMe namespace in a Snapshot copy cannot be mapped. |
            | 72089799 | The NVMe namespace is the destination of an ongoing restore operation and is inaccessible for I/O and management. |
            | 72089902 | A node does not have an NVMe interface configured. |
            | 72089903 | Multiple nodes do not have an NVMe interface configured. |
            | 72089904 | The aggregate must be given back to its home node prior to mapping the NVMe namespace it contains. |
            | 72090001 | The NVMe subsystem specified by `subsystem.uuid` was not found. |
            | 72090005 | The specified `namespace.uuid` and `namespace.name` refer to different NVMe namespaces. |
            | 72090006 | The NVMe namespace specified by `namespace.uuid` was not found. |
            | 72090007 | The NVMe namespace specified by `namespace.name` was not found. |
            | 72090020 | The specified `subsystem.uuid` and `subsystem.name` refer to different NVMe subsystems. |
            | 72090021 | The NVMe subsystem specified by `subsystem.name` was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        An NVMe subsystem map is an association of an NVMe namespace with an NVMe subsystem. When an NVMe namespace is mapped to an NVMe subsystem, the NVMe subsystem's hosts are granted access to the NVMe namespace. The relationship between an NVMe subsystem and an NVMe namespace is one subsystem to many namespaces.<br/>
        The NVMe subsystem map REST API allows you to create, delete and discover NVMe subsystem maps.
        ## Examples
        ### Creating an NVMe subsystem map
        ```
        # The API:
        POST /api/protocols/nvme/subsystem-maps
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/subsystem-maps' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "subsystem": { "name": "subsystem1" }, "namespace": { "name": "/vol/vol1/namespace1" } }'
        ```
        ---
        ### Retrieving all of the NVMe subsystem maps
        ```
        # The API:
        GET /api/protocols/nvme/subsystem-maps
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystem-maps' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "0e91b214-fe40-11e8-91a0-005056a79967",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/0e91b214-fe40-11e8-91a0-005056a79967"
                  }
                }
              },
              "subsystem": {
                "uuid": "580a6b1e-fe43-11e8-91a0-005056a79967",
                "name": "subsystem1",
                "_links": {
                  "self": {
                    "href": "/api/protocols/nvme/subsystems/580a6b1e-fe43-11e8-91a0-005056a79967"
                  }
                }
              },
              "namespace": {
                "uuid": "3ccdedc6-2519-4206-bc1f-b0f4adab6f89",
                "name": "/vol/vol1/namespace1",
                "_links": {
                  "self": {
                    "href": "/api/storage/namespaces/3ccdedc6-2519-4206-bc1f-b0f4adab6f89"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystem-maps/580a6b1e-fe43-11e8-91a0-005056a79967/3ccdedc6-2519-4206-bc1f-b0f4adab6f89"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/subsystem-maps"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific NVMe subsystem map
        The NVMe subsystem map is identified by the UUID of the NVMe subsystem followed by the UUID of the NVMe namespace.
        <br/>
        ```
        # The API:
        GET /api/protocols/nvme/subsystem-maps/{subsystem.uuid}/{namespace.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystem-maps/580a6b1e-fe43-11e8-91a0-005056a79967/3ccdedc6-2519-4206-bc1f-b0f4adab6f89' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "0e91b214-fe40-11e8-91a0-005056a79967",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/0e91b214-fe40-11e8-91a0-005056a79967"
              }
            }
          },
          "subsystem": {
            "uuid": "580a6b1e-fe43-11e8-91a0-005056a79967",
            "name": "subsystem1",
            "_links": {
              "self": {
                "href": "/api/protocols/nvme/subsystems/580a6b1e-fe43-11e8-91a0-005056a79967"
              }
            }
          },
          "namespace": {
            "uuid": "3ccdedc6-2519-4206-bc1f-b0f4adab6f89",
            "name": "/vol/vol1/namespace1",
            "node": {
              "name": "node1",
              "uuid": "012b4508-67d6-4788-8c2d-801f254ce976",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/012b4508-67d6-4788-8c2d-801f254ce976"
                }
              }
            }
            "_links": {
              "self": {
                "href": "/api/storage/namespaces/3ccdedc6-2519-4206-bc1f-b0f4adab6f89"
              }
            }
          },
          "nsid": "00000001h",
          "_links": {
            "self": {
              "href": "/api/protocols/nvme/subsystem-maps/580a6b1e-fe43-11e8-91a0-005056a79967/3ccdedc6-2519-4206-bc1f-b0f4adab6f89"
            }
          }
        }
        ```
        ---
        ### Deleting an NVMe subsystem map
        ```
        # The API:
        DELETE /api/protocols/nvme/subsystem-maps/{subsystem.uuid}/{namespace.uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/subsystem-maps/580a6b1e-fe43-11e8-91a0-005056a79967/3ccdedc6-2519-4206-bc1f-b0f4adab6f89' -H 'accept: application/hal+json'
        ```
      tags:
      - NVMe
  /protocols/nvme/subsystem-maps/{subsystem.uuid}/{namespace.uuid}:
    delete:
      description: |
        Deletes an NVMe subsystem map.
        ### Related ONTAP commands
        * `vserver nvme subsystem map delete`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-maps`](#docs-NVMe-protocols_nvme_subsystem-maps)
      operationId: nvme_subsystem_map_delete
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The unique identifier of the NVMe namespace.
        in: path
        name: namespace.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_map_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090019 | The specified NVMe namespace is not mapped to the specified NVMe subsystem. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    get:
      description: |
        Retrieves an NVMe subsystem map.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `anagrpid`
        ### Related ONTAP commands
        * `vserver nvme subsystem map show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystem-maps`](#docs-NVMe-protocols_nvme_subsystem-maps)
      operationId: nvme_subsystem_map_get
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The unique identifier of the NVMe namespace.
        in: path
        name: namespace.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_map'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090019 | The specified NVMe namespace is not mapped to the specified NVMe subsystem. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/subsystems:
    get:
      description: |
        Retrieves NVMe subsystems.
        ### Related ONTAP commands
        * `vserver nvme subsystem host show`
        * `vserver nvme subsystem map show`
        * `vserver nvme subsystem show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_collection_get
      parameters:
      - description: Filter by target_nqn
        in: query
        name: target_nqn
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by subsystem_maps.nsid
        in: query
        name: subsystem_maps.nsid
        type: string
      - description: Filter by subsystem_maps.anagrpid
        in: query
        name: subsystem_maps.anagrpid
        type: string
      - description: Filter by subsystem_maps.namespace.uuid
        in: query
        name: subsystem_maps.namespace.uuid
        type: string
      - description: Filter by subsystem_maps.namespace.name
        in: query
        name: subsystem_maps.namespace.name
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by delete_on_unmap
        in: query
        name: delete_on_unmap
        type: boolean
      - description: Filter by io_queue.default.depth
        in: query
        name: io_queue.default.depth
        type: integer
      - description: Filter by io_queue.default.count
        in: query
        name: io_queue.default.count
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by hosts.nqn
        in: query
        name: hosts.nqn
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    post:
      description: |
        Creates an NVMe subsystem.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the NVMe subsystem.
        * `name` - Name for NVMe subsystem. Once created, an NVMe subsytem cannot be renamed.
        * `os_type` - Operating system of the NVMe subsystem's hosts.
        ### Related ONTAP commands
        * `vserver nvme subsystem create`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new NVMe subsystem.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_subsystem'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nvme_subsystem_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | The supplied SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | The svm.uuid or svm.name must be provided. |
            | 72089709 | The NVMe subsystem name contains an invalid character. |
            | 72089771 | The NQN is invalid. A non-empty qualifier is required after the prefix. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089772 | The NQN is invalid. Add the prefix _'nqn'_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089773 | The NQN is invalid. The date field must be formatted _yyyy-mm_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72090025 | The NVMe subsystem already exists for the SVM. |
            | 72090029 | The NVMe service does not exist. |
            | 72090030 | A partial success occured while adding multiple NVMe subsystem hosts to an NVMe subsystem. |
            | 72090035 | Passing NVMe subsystem host NQNs on NVMe subsystem POST requires an effective cluster version of 9.7 or later. |
            | 72090036 | The `hosts.nqn` NVMe subsystem property must contain unique values. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        An NVMe subsystem maintains configuration state and namespace access control for a set of NVMe-connected hosts.<br/>
        The NVMe subsystem REST API allows you to create, update, delete, and discover NVMe subsystems as well as add and remove NVMe hosts that can access the subsystem and associated namespaces.
        ## Examples
        ### Creating an NVMe subsystem
        ```
        # The API:
        POST /api/protocols/nvme/subsystems
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/subsystems' -H 'accept: application/json' -d '{ "svm": { "name": "svm1" }, "name": "subsystem1", "os_type": "linux" }'
        ```
        ---
        ### Creating an NVMe subsystem with multiple NVMe subsystem hosts
        ```
        # The API:
        POST /api/protocols/nvme/subsystems
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/subsystems' -H 'accept: application/json' -d '{ "svm": { "name": "svm1" }, "name": "subsystem2", "os_type": "vmware", "hosts": [ { "nqn": "nqn.1992-01.example.com:host1" }, { "nqn": "nqn.1992-01.example.com:host2" } ] }'
        ```
        ---
        ### Retrieving all NVMe subsystems
        ```
        # The API:
        GET /api/protocols/nvme/subsystems
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems' -H 'accept: application/json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm1",
              },
              "uuid": "acde901a-a379-4a91-9ea6-1b728ed6696f",
              "name": "subsystem1",
            },
            {
              "svm": {
                "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm1",
              },
              "uuid": "bcde901a-a379-4a91-9ea6-1b728ed6696f",
              "name": "subsystem2",
            }
          ],
          "num_records": 2,
        }
        ```
        ---
        ### Retrieving all NVMe subsystems with OS type _linux_
        Note that the `os_type` query parameter is used to perform the query.
        <br/>
        ```
        # The API:
        GET /api/protocols/nvme/subsystems
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems?os_type=linux' -H 'accept: application/json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm1",
              },
              "uuid": "acde901a-a379-4a91-9ea6-1b728ed6696f",
              "name": "subsystem1",
              "os_type": "linux",
            }
          ],
          "num_records": 1,
        }
        ```
        ---
        ### Retrieving a specific NVMe subsystem
        ```
        # The API:
        GET /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f' -H 'accept: application/json'
        # The response:
        {
          "svm": {
            "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
            "name": "svm1",
          },
          "uuid": "acde901a-a379-4a91-9ea6-1b728ed6696f",
          "name": "subsystem1",
          "os_type": "linux",
          "target_nqn": "nqn.1992-08.com.netapp:sn.d04594ef915b4c73b642169e72e4c0b1:subsystem.subsystem1",
          "serial_number": "wtJNKNKD-uPLAAAAAAAD",
          "io_queue": {
            "default": {
              "count": 4,
              "depth": 32
            }
          }
        }
        ```
        ---
        ### Retrieving the NVMe namespaces mapped to a specific NVMe subsystem
        Note that the `fields` query parameter is used to specify the desired properties.
        <br/>
        ```
        # The API:
        GET /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f?fields=subsystem_maps' -H 'accept: application/json'
        # The response:
        {
          "svm": {
            "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
            "name": "svm1",
          },
          "uuid": "acde901a-a379-4a91-9ea6-1b728ed6696f",
          "name": "subsystem1",
          "subsystem_maps": [
            {
              "anagrpid": "00000001h",
              "namespace": {
                "uuid": "eeaaca23-128d-4a7d-be4a-dc9106705799",
                "name": "/vol/vol1/namespace1"
              },
              "nsid": "00000001h"
            },
            {
              "anagrpid": "00000002h",
              "namespace": {
                "uuid": "feaaca23-83a0-4a7d-beda-dc9106705799",
                "name": "/vol/vol1/namespace2"
              },
              "nsid": "00000002h"
            }
          ]
        }
        ```
        ---
        ### Adding a comment about an NVMe subsystem
        ```
        # The API:
        PATCH /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f' -H 'accept: application/json' -d '{ "comment": "A brief comment about the subsystem" }'
        ```
        ---
        ### Deleting an NVMe subsystem
        ```
        # The API:
        DELETE /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f' -H 'accept: application/json'
        ```
        ### Deleting an NVMe subsystem with mapped NVMe namespaces
        Normally, deleting an NVMe subsystem that has mapped NVMe namespaces is not allowed. The deletion can be forced using the `allow_delete_while_mapped` query parameter.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f?allow_delete_while_mapped=true' -H 'accept: application/json'
        ```
        ### Delete an NVMe subsystem with NVMe subsystem hosts
        Normally, deleting an NVMe subsystem with NVMe subsystem hosts is disallowed. The deletion can be forced using the `allow_delete_with_hosts` query parameter.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/nvme/subsystems/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f?allow_delete_with_hosts=true' -H 'accept: application/json'
        ```
        ---
        ## An NVMe Subsystem Host
        An NVMe subsystem host is a network host provisioned to an NVMe subsystem to access namespaces mapped to that subsystem.
        ## Examples
        ### Adding an NVMe subsystem host to an NVMe subsystem
        ```
        # The API:
        POST /protocols/nvme/subsystems/{subsystem.uuid}/hosts
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f/hosts' -H 'accept: application/json' -d '{ "nqn": "nqn.1992-01.com.example:subsys1.host1" }'
        ```
        ---
        ### Adding multiple NVMe subsystem hosts to an NVMe subsystem
        ```
        # The API:
        POST /protocols/nvme/subsystems/{subsystem.uuid}/hosts
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f/hosts' -H 'accept: application/json' -d '{ "records": [ { "nqn": "nqn.1992-01.com.example:subsys1.host2" }, { "nqn": "nqn.1992-01.com.example:subsys1.host3" } ] }'
        ```
        ---
        ### Retrieving all NVMe subsystem hosts for an NVMe subsystem
        ```
        # The API:
        GET /protocols/nvme/subsystems/{subsystem.uuid}/hosts
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f/hosts' -H 'accept: application/json'
        # The response:
        {
          "records": [
            {
              "nqn": "nqn.1992-01.com.example:subsys1.host1",
            },
            {
              "nqn": "nqn.1992-01.com.example:subsys1.host2",
            },
            {
              "nqn": "nqn.1992-01.com.example:subsys1.host3",
            }
          ],
          "num_records": 3,
        }
        ```
        ---
        ### Retrieving a specific NVMe subsystem host for an NVMe subsystem
        ```
        # The API:
        GET /protocols/nvme/subsystems/{subsystem.uuid}/hosts/{nqn}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f/hosts/nqn.1992-01.com.example:subsys1.host1' -H 'accept: application/json'
        # The response:
        {
          "subsystem": {
            "uuid": "acde901a-a379-4a91-9ea6-1b728ed6696f",
          },
          "nqn": "nqn.1992-01.com.example:subsys1.host1",
          "io_queue": {
            "count": 4,
            "depth": 32
          },
        }
        ```
        ---
        ### Deleting an NVMe subsystem host from an NVMe subsystem
        ```
        # The API:
        DELETE /protocols/nvme/subsystems/{subsystem.uuid}/hosts/{nqn}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/nvme/subsystems/acde901a-a379-4a91-9ea6-1b728ed6696f/hosts/nqn.1992-01.com.example:subsys1.host1' -H 'accept: application/json'
        ```
      tags:
      - NVMe
  /protocols/nvme/subsystems/{subsystem.uuid}/hosts:
    get:
      description: |
        Retrieves the NVMe subsystem hosts of an NVMe subsystem.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `subsystem_maps.*`
        ### Related ONTAP commands
        * `vserver nvme subsystem map show`
        * `vserver nvme subsystem show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_host_collection_get
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_host_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    post:
      description: |
        Adds NVMe subsystem host(s) to an NVMe subsystem.
        ### Required properties
        * `nqn` or `records.nqn` - NVMe host(s) NQN(s) to add to the NVMe subsystem.
        ### Related ONTAP commands
        * `vserver nvme subsystem host add`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_host_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The property values for the NVMe subsystem host to add to the NVMe subsystem.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_subsystem_host'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nvme_subsystem_host_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72089705 | The NVMe subsystem host already exists for the NVMe subsystem. |
            | 72089771 | The NQN is invalid. A non-empty qualifier is required after the prefix. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089772 | The NQN is invalid. Add the prefix _'nqn'_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089773 | The NQN is invalid. The date field must be formatted _yyyy-mm_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72090002 | The POST request of hosts to an NVMe subsystem can only contain an 'nqn' property or 'records' property, but not both. |
            | 72090003 | The elements in the records array for a POST of hosts to an NVMe subsystem must contain only the nqn property. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/subsystems/{subsystem.uuid}/hosts/{nqn}:
    delete:
      description: |
        Deletes an NVMe subsystem host from an NVMe subsystem.
        ### Related ONTAP commands
        * `vserver nvme subsystem host remove`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_host_delete
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The NVMe qualified name (NQN) used to identify the NVMe subsystem host.
        in: path
        name: nqn
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72089771 | The NQN is invalid. A non-empty qualifier is required after the prefix. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089772 | The NQN is invalid. Add the prefix _'nqn'_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
            | 72089773 | The NQN is invalid. The date field must be formatted _yyyy-mm_. An example of a valid NQN is _nqn.1992-01.com.example:string_. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    get:
      description: |
        Retrieves an NVMe subsystem host of an NVMe subsystem.
        ### Related ONTAP commands
        * `vserver nvme subsystem host show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_host_get
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: subsystem.uuid
        required: true
        type: string
      - description: |
          The NVMe qualified name (NQN) used to identify the NVMe subsystem host.
        in: path
        name: nqn
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem_host'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/nvme/subsystems/{uuid}:
    delete:
      description: |
        Removes an NVMe subsystem.
        ### Related ONTAP commands
        * `vserver nvme subsystem delete`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_delete
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          Allows for the deletion of a mapped NVMe subsystem.
        in: query
        name: allow_delete_while_mapped
        type: boolean
      - description: |
          Allows for the deletion of an NVMe subsystem with NVMe hosts.
        in: query
        name: allow_delete_with_hosts
        type: boolean
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090023 | The NVMe subsystem contains one or more mapped namespaces. Use the `allow_delete_while_mapped` query parameter to delete an NVMe subsystem with mapped NVMe namespaces. |
            | 72090024 | The NVMe subsystem contains one or more NVMe hosts. Use the `allow_delete_with_hosts` query parameter to delete an NVMe subsystem with NVMe hosts. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    get:
      description: |
        Retrieves an NVMe subsystem.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `subsystem_maps.*`
        ### Related ONTAP commands
        * `vserver nvme subsystem host show`
        * `vserver nvme subsystem map show`
        * `vserver nvme subsystem show`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_get
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_subsystem'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    patch:
      description: |
        Updates an NVMe subsystem.
        ### Related ONTAP commands
        * `vserver nvme subsystem modify`
        ### Learn more
        * [`DOC /protocols/nvme/subsystems`](#docs-NVMe-protocols_nvme_subsystems)
      operationId: nvme_subsystem_modify
      parameters:
      - description: |
          The unique identifier of the NVMe subsystem.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the NVMe subsystem.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_subsystem'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /protocols/s3/buckets:
    get:
      description: |
        Retrieves all S3 buckets for all SVMs.
        ### Related ONTAP commands
        * `vserver object-store-server bucket show`
        ### Learn more
        * [`DOC /protocols/s3/buckets`](#docs-object-store-protocols_s3_buckets)
      operationId: all_svm_buckets_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by encryption.enabled
        in: query
        name: encryption.enabled
        type: boolean
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by logical_used_size
        in: query
        name: logical_used_size
        type: integer
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_bucket_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    x-ntap-long-description:
      description: |
        ## Overview
        An S3 bucket is a container of objects. Each bucket defines an object namespace. S3 server requests specify objects using a bucket-name and object-name pair. An object consists of data, along with optional metadata and access controls, that is accessible using a name. An object resides within a bucket. There can be more than one bucket in an S3 server. Buckets that are created for the server are associated with an S3 user that is created on the S3 server.
        ## Examples
        ### Retrieving all fields for all S3 buckets of a cluster
        ```
        # The API:
        /api/protocols/s3/buckets
        # The call:
        curl -X GET "https://10.140.117.223/api/protocols/s3/buckets?fields=*&return_records=true" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "527812ab-7c6d-11e9-97e8-0050568ea123",
              "name": "bucket-2",
              "volume": {
                "name": "fg_oss_1558514455",
                "uuid": "51276f5f-7c6d-11e9-97e8-0050568ea123"
              },
              "size": 209715200,
              "logical_used_size": 157286400,
              "encryption": {
                "enabled": false
              },
              "comment": "S3 bucket."
            },
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "a8234aec-7e06-11e9-97e8-0050568ea123",
              "name": "bucket-1",
              "volume": {
                "name": "fg_oss_1558690256",
                "uuid": "a36a1ea7-7e06-11e9-97e8-0050568ea123"
              },
              "size": 1677721600,
              "logical_used_size": 0,
              "encryption": {
                "enabled": false
              },
              "comment": "bucket1"
            },
            {
              "svm": {
                "uuid": "ee30eb2d-7ae1-11e9-8abe-0050568ea123",
                "name": "vs2"
              },
              "uuid": "19283b75-7ae2-11e9-8abe-0050568ea123",
              "name": "bucket-3",
              "volume": {
                "name": "fg_oss_1558690257",
                "uuid": "a46a1ea7-7e06-11e9-97e8-0050568ea123"
              },
              "size": 1677721600,
              "logical_used_size": 1075838976,
              "encryption": {
                "enabled": false
              },
              "comment": "bucket3"
            }
          ],
          "num_records": 3
        }
        ```
        ### Retrieving all S3 buckets of a cluster ordered by size
        ```
        # The API:
        /api/protocols/s3/buckets
        # The call:
        curl -X GET "https://10.140.117.223/api/protocols/s3/buckets?return_records=true&order_by=size" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "754389d0-7e13-11e9-bfdc-0050568ea123",
              "name": "bb1",
              "size": 83886080
            },
            {
              "svm": {
                "uuid": "ee30eb2d-7ae1-11e9-8abe-0050568ea123",
                "name": "vs2"
              },
              "uuid": "19283b75-7ae2-11e9-8abe-0050568ea123",
              "name": "bb2",
              "size": 838860800
            },
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "a8234aec-7e06-11e9-97e8-0050568ea123",
              "name": "bucket-1",
              "size": 1677721600
            }
          ],
          "num_records": 3
        }
        ```
        ### Retrieving all S3 buckets of a cluster with name  "bb2"
        ```
        # The API:
        /api/protocols/s3/buckets
        # The call:
        curl -X GET "https://10.140.117.223/api/protocols/s3/buckets?name=bb2&return_records=true" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "087d940e-7e15-11e9-bfdc-0050568ea123",
              "name": "bb2"
            },
            {
              "svm": {
                "uuid": "ee30eb2d-7ae1-11e9-8abe-0050568ea123",
                "name": "vs2"
              },
              "uuid": "19283b75-7ae2-11e9-8abe-0050568ea123",
              "name": "bb2"
            }
          ],
          "num_records": 2
        }
        ```
      tags:
      - object-store
  /protocols/s3/services:
    get:
      description: |
        Retrieves the S3 server configuration for all SVMs.
        ### Related ONTAP commands
        * `vserver object-store-server show`
        ### Learn more
        * [`DOC /protocols/s3/services`](#docs-object-store-protocols_s3_services)
      operationId: s3_service_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by users.comment
        in: query
        name: users.comment
        type: string
      - description: Filter by users.access_key
        in: query
        name: users.access_key
        type: string
      - description: Filter by users.name
        in: query
        name: users.name
        type: string
      - description: Filter by users.svm.uuid
        in: query
        name: users.svm.uuid
        type: string
      - description: Filter by users.svm.name
        in: query
        name: users.svm.name
        type: string
      - description: Filter by buckets.svm.uuid
        in: query
        name: buckets.svm.uuid
        type: string
      - description: Filter by buckets.svm.name
        in: query
        name: buckets.svm.name
        type: string
      - description: Filter by buckets.encryption.enabled
        in: query
        name: buckets.encryption.enabled
        type: boolean
      - description: Filter by buckets.uuid
        in: query
        name: buckets.uuid
        type: string
      - description: Filter by buckets.logical_used_size
        in: query
        name: buckets.logical_used_size
        type: integer
      - description: Filter by buckets.size
        in: query
        name: buckets.size
        type: integer
      - description: Filter by buckets.volume.uuid
        in: query
        name: buckets.volume.uuid
        type: string
      - description: Filter by buckets.volume.name
        in: query
        name: buckets.volume.name
        type: string
      - description: Filter by buckets.name
        in: query
        name: buckets.name
        type: string
      - description: Filter by buckets.comment
        in: query
        name: buckets.comment
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    post:
      description: |
        Creates an S3 server, users, and buckets configurations.
        ### Important notes
        - Each SVM can have one S3 server configuration.
        - One or more buckets and users can also be created using this end-point.
        - If creating a user configuration fails, buckets are not created either and already created users are not saved.
        - If creating a bucket configuration fails, all buckets already created are saved with no new buckets created.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create an S3 server configuration.
        ### Recommended optional properties
        * `enabled` - Specifies the state of the server created.
        * `comment` - Any information related to the server created.
        ### Default property values
        * `comment` - ""
        * `enabled` - _true_
        ### Related ONTAP commands
        * `vserver object-store-server create`
        * `vserver object-store-server bucket create`
        * `vserver object-store-server user create`
        ### Learn more
        * [`DOC /protocols/s3/services`](#docs-object-store-protocols_s3_services)
      operationId: s3_service_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/s3_service_post_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621706    | The specified SVM UUID is incorrect for the specified SVM name. |
            | 92405789   | The specified object server name contains invalid characters or not a fully qualified domain name. Valid characters for an object store server name are 0-9, A-Z, a-z, \".\", and \"-\". |
            | 92405790   | Object store server names must have between 1 and 15 characters. |
            | 92405839   | Creating an object store server requires an effective cluster version of data ONTAP 9.7.0 or later. Upgrade all the nodes to 9.7.0 or later and try the operation again. |
            | 92405853   | Failed to create the object store server because Cloud Volumes ONTAP does not support object store servers. |
            | 92405863   | An error occurs when creating an S3 user or bucket. The reason for failure is detailed in the error message. Follow the error codes specified for the user or bucket endpoints to see details for the failure. |
            | 92405884   | An object store server can only be created on a data SVM. An object store server can also be created on a system SVM on a mixed platform cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    x-ntap-long-description:
      description: |
        ## Overview
        An S3 server is an object store server that is compatible with the Amazon S3 protocol. In the initial version, only a subset of the protocol features necessary to support Fabric Pool capacity tier usecases are implemented. S3 server allows you to store objects in ONTAP using Amazon S3 protocol. This feature can be used as a target object store server for ONTAP FabricPools.
        ## Examples
        ### Retrieving all of the S3 configurations
        ```
        # The API:
        /api/protocols/s3/services
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/s3/services?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "cf90b8f2-8071-11e9-8190-0050568eae21",
                "name": "vs2"
              },
              "name": "s1",
              "comment": "S3 server",
              "enabled": false,
            },
            {
              "svm": {
                "uuid": "d7f1219c-7f8e-11e9-9124-0050568eae21",
                "name": "vs1"
              },
              "name": "Server-1",
              "comment": "S3 server",
              "enabled": true,
              "buckets": [
                {
                  "uuid": "e08665af-8114-11e9-8190-0050568eae21",
                  "name": "bucket-1",
                  "volume": {
                    "name": "fg_oss_1559026220",
                    "uuid": "de146bff-8114-11e9-8190-0050568eae21"
                  },
                  "size": 209715200,
                  "logical_used_size": 157286400,
                  "encryption": {
                    "enabled": false
                  },
                  "comment": "s3 bucket"
                },
                {
                  "uuid": "fb1912ef-8114-11e9-8190-0050568eae21",
                  "name": "bucket-2",
                  "volume": {
                    "name": "fg_oss_1559026269",
                    "uuid": "f9b1cdd0-8114-11e9-8190-0050568eae21"
                  },
                  "size": 104857600,
                  "logical_used_size": 78643200,
                  "encryption": {
                    "enabled": false
                  },
                  "comment": "s3 bucket"
                }
              ],
              "users": [
                {
                  "name": "user-1",
                  "comment": "S3 user",
                  "access_key": "3333_w162ypaTi7_aAQuJo76Z16zc9Gz_W3IN83bDQWkcCN3jYU_z_xn20XATMKKa90509KCH__r4lh1IPU58vf1QlWAJt8k2F1BPjPtM6CsDRX_dOP_QZkF5N9fBuz3"
                },
                {
                  "name": "user-2",
                  "comment": "",
                  "access_key": "g6T24qhH92dOA6gc1WTcDO_2oNZhQ6Drl2zu5_s5Id_QK1wLgghgxsD2xP1xqG7oX1T_9AI0D39q65CY3FAg0CbAtVU_903bSnCnht3xqjbrF5_3Cs9RnY8nE_az1Ltc"
                }
              ]
            }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving all S3 configurations for a particular SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/s3/services/24c2567a-f269-11e8-8852-0050568e5298?fields=*" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "d7f1219c-7f8e-11e9-9124-0050568eae21",
            "name": "vs1"
          },
          "name": "Server-1",
          "comment": "S3 server",
          "enabled": true,
          "buckets": [
            {
              "uuid": "e08665af-8114-11e9-8190-0050568eae21",
              "name": "bucket-1",
              "volume": {
                "name": "fg_oss_1559026220",
                "uuid": "de146bff-8114-11e9-8190-0050568eae21"
              },
              "size": 209715200,
              "logical_used_size": 157286400,
              "encryption": {
                "enabled": false
              },
              "comment": "s3 bucket"
            },
            {
              "uuid": "fb1912ef-8114-11e9-8190-0050568eae21",
              "name": "bucket-2",
              "volume": {
                "name": "fg_oss_1559026269",
                "uuid": "f9b1cdd0-8114-11e9-8190-0050568eae21"
              },
              "size": 1677721600,
              "logical_used_size": 1075838976,
              "encryption": {
                "enabled": false
              },
              "comment": "s3 bucket"
            }
          ],
          "users": [
            {
              "name": "user-1",
              "comment": "s3 user",
              "access_key": "3333_w162ypaTi7_aAQuJo76Z16zc9Gz_W3IN83bDQWkcCN3jYU_z_xn20XATMKKa90509KCH__r4lh1IPU58vf1QlWAJt8k2F1BPjPtM6CsDRX_dOP_QZkF5N9fBuz3"
            },
            {
              "name": "user-2",
              "comment": "",
              "access_key": "g6T24qhH92dOA6gc1WTcDO_2oNZhQ6Drl2zu5_s5Id_QK1wLgghgxsD2xP1xqG7oX1T_9AI0D39q65CY3FAg0CbAtVU_903bSnCnht3xqjbrF5_3Cs9RnY8nE_az1Ltc"
            }
          ]
        }
        ```
        ### Creating an S3 server, users, and buckets configurations with required fields specified
        ```
        # The API:
        /api/protocols/s3/services
        # The call:
        curl -X POST "https://10.140.103.139/api/protocols/s3/services" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"buckets\": [ { \"name\": \"bucket-1\" }, { \"name\": \"bucket-2\" } ], \"enabled\": true, \"name\": \"Server-1\", \"svm\": { \"uuid\": \"d49ef663-7f8e-11e9-9b2c-0050568e4594\" }, \"users\": [ { \"name\": \"user-1\" }, { \"name\": \"user-2\" } ]}"
        # The response:
        HTTP/1.1 201 Created
        Date: Fri, 31 May 2019 08:44:16 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/protocols/s3/services/
        Content-Length: 623
        Content-Type: application/hal+json
        {
          "num_records": 1,
          "records": [
            {
              "users": [
                {
                  "name": "user-1",
                  "access_key": "x129aL0q9bu3J_4_2S0OcU34AA5DJXXB_j9R34_60tqiqAS5_c8PAgN6Lg1zkv_76P4IxNWir9st9uhhgldb31u364Cczq_c39C1fUP7HDheUmYY6u4xt61_N7Sw6c33",
                  "secret_key": "gh0pYc__43Csnx_Ks4_C0tb_5AfT4HZTfQl8xN8Dl5TjqB90oNt5ZaPO6Hs4h6Q4Fq4B4uq5Cqht82X6vcE32c3uLZB8pXAAx819LWPgpOSwD5xga2RE3czr1qhCd9V6"
                },
                {
                  "name": "user-2",
                  "access_key": "nntYZrNN65mKn57yS04o1sDp_D0AY58jdwCW573_5x2OPW09AbyFl86DB7r30N2373_bA12n08aovQp8ySItRss9AjsYoSj7TsIiHOW_Y21DaqYPl5I2a849b11y8X4c",
                  "secret_key": "bjtsPXV2D8BM6pZNQ9pzmKoXU3qIv2yQ3957dhjK4X7M2dB6Rjtrq1As_8cS_4bSP0jt_P31R5eLdZ_zcBO9Z_ZRMldTc1Bw_5c7LugBnzG2D3xXB91jqLaP2xnKn_Zg"
                }
              ],
              "job": {
                "uuid": "f51675dd-820a-11e9-a762-0050568e4594",
                "_links": {
                  "self": {
                    "href": "/api/cluster/jobs/f51675dd-820a-11e9-a762-0050568e4594"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/s3/services/"
                }
              }
            }
          ]
        }
        ```
        ### Creating an S3 server, users, and buckets configurations
        ```
        # The API:
        /api/protocols/s3/services
        # The call:
        curl -X POST "https://10.140.103.139/api/protocols/s3/services" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"buckets\": [ { \"aggregates\": [ { \"name\": \"aggr1\", \"uuid\": \"1cd8a442-86d1-11e0-ae1c-123478563412\" } ], \"constituents_per_aggregate\": 2, \"name\": \"bucket-1\", \"size\": \"209715200\" }, { \"aggregates\": [ { \"name\": \"aggr1\", \"uuid\": \"1cd8a442-86d1-11e0-ae1c-123478563412\" }, { \"name\": \"aggr2\", \"uuid\": \"982fc4d0-d1a2-4da4-9c47-5b433f24757d\"} ], \"constituents_per_aggregate\": 4, \"name\": \"bucket-2\" } ], \"enabled\": true, \"name\": \"Server-1\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"d49ef663-7f8e-11e9-9b2c-0050568e4594\" }, \"users\": [ { \"name\": \"user-1\" }, { \"name\": \"user-2\" } ]}"
        # The response:
        HTTP/1.1 201 Created
        Date: Fri, 31 May 2019 08:44:16 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/protocols/s3/services/
        Content-Length: 623
        Content-Type: application/hal+json
        {
          "num_records": 1,
          "records": [
            {
              "users": [
                {
                  "name": "user-1",
                  "access_key": "x129aL0q9bu3J_4_2S0OcU34AA5DJXXB_j9R34_60tqiqAS5_c8PAgN6Lg1zkv_76P4IxNWir9st9uhhgldb31u364Cczq_c39C1fUP7HDheUmYY6u4xt61_N7Sw6c33",
                  "secret_key": "gh0pYc__43Csnx_Ks4_C0tb_5AfT4HZTfQl8xN8Dl5TjqB90oNt5ZaPO6Hs4h6Q4Fq4B4uq5Cqht82X6vcE32c3uLZB8pXAAx819LWPgpOSwD5xga2RE3czr1qhCd9V6"
                },
                {
                  "name": "user-2",
                  "access_key": "nntYZrNN65mKn57yS04o1sDp_D0AY58jdwCW573_5x2OPW09AbyFl86DB7r30N2373_bA12n08aovQp8ySItRss9AjsYoSj7TsIiHOW_Y21DaqYPl5I2a849b11y8X4c",
                  "secret_key": "bjtsPXV2D8BM6pZNQ9pzmKoXU3qIv2yQ3957dhjK4X7M2dB6Rjtrq1As_8cS_4bSP0jt_P31R5eLdZ_zcBO9Z_ZRMldTc1Bw_5c7LugBnzG2D3xXB91jqLaP2xnKn_Zg"
                }
              ],
              "job": {
                "uuid": "f51675dd-820a-11e9-a762-0050568e4594",
                "_links": {
                  "self": {
                    "href": "/api/cluster/jobs/f51675dd-820a-11e9-a762-0050568e4594"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/s3/services/"
                }
              }
            }
          ]
        }
        ```
        ### Creating an S3 server configuration
        ```
        # The API:
        /api/protocols/s3/services
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/s3/services" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"comment\": \"S3 server\", \"enabled\": true, \"name\": \"Server-1\", \"svm\": { \"name\": \"vs1\", \"uuid\": \"db2ec036-8375-11e9-99e1-0050568e3ed9\" } }"
        ```
        ### Disable s3 server for the specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/s3/services/03ce5c36-f269-11e8-8852-0050568e5298" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": false }"
        ```
        ### Deleting the S3 server for a specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/s3/services/a425f10b-ad3b-11e9-b559-0050568e8222?delete_all=false" -H  "accept: application/json"
        HTTP/1.1 200 OK
        Date: Wed, 14 Aug 2019 07:04:24 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 132
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "job": {
                "uuid": "bf74ba50-be61-11e9-bea8-0050568e8222"
              }
            }
          ]
        }
        ```
        ### Deleting all of the S3 server configuration for a specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/s3/services/03ce5c36-f269-11e8-8852-0050568e5298?delete_all=true" -H "accept: application/json"
        # The response:
        HTTP/1.1 200 OK
        Date: Sat, 01 Jun 2019 15:46:39 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 132
        Content-Type: application/hal+json
        {
          "num_records": 1,
          "records": [
            {
              "job": {
                "uuid": "71eaaf02-8484-11e9-91f7-0050568ebc5f"
              }
            }
          ]
        }
        ```
      tags:
      - object-store
  /protocols/s3/services/{svm.uuid}:
    delete:
      description: |
        Deletes the S3 server configuration of an SVM. If the 'delete_all' parameter is set to false, only the S3 server is deleted. Otherwise S3 users and buckets present on the SVM are also deleted. Note that only empty buckets can be deleted. This endpoint returns the S3 server delete job-uuid in response. To monitor the job status follow /api/cluster/jobs/<job-uuid>.
        ### Related ONTAP commands
        * `vserver object-store-server delete`
        ### Learn more
        * [`DOC /protocols/s3/services`](#docs-object-store-protocols_s3_services)
      operationId: s3_service_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - default: true
        description: Delete S3 server and associated users and empty buckets.
        in: query
        name: delete_all
        required: false
        type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_service_delete_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 92405864   | An error occurs when deleting an S3 user or bucket. The reason for failure is detailed in the error message. Follow the error codes specified for the user or bucket endpoints to see details for the failure. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    get:
      description: |
        Retrieves the S3 Server configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server show`
        ### Learn more
        * [`DOC /protocols/s3/services`](#docs-object-store-protocols_s3_services)
      operationId: s3_service_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    patch:
      description: |
        Updates the S3 Server configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server modify`
        ### Learn more
        * [`DOC /protocols/s3/services`](#docs-object-store-protocols_s3_services)
      operationId: s3_service_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 92405789   | The specified object server name contains invalid characters. Valid characters for an object store server name are 0-9, A-Z, a-z, \".\", and \"-\". |
            | 92405790   | Object store server names must have between 1 and 15 characters. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
  /protocols/s3/services/{svm.uuid}/buckets:
    get:
      description: |
        Retrieves the S3 bucket's configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server bucket show`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/buckets`](#docs-object-store-protocols_s3_services_{svm.uuid}_buckets)
      operationId: buckets_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by encryption.enabled
        in: query
        name: encryption.enabled
        type: boolean
      - description: Filter by logical_used_size
        in: query
        name: logical_used_size
        type: integer
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_bucket_svm_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    post:
      description: |
        Creates the S3 bucket configuration of an SVM.
        ### Important notes
        - Each SVM can have one or more bucket configurations.
        - Aggregate lists should be specified explicitly. If not specified, then the bucket is auto-provisioned as a FlexGroup.
        - Constituents per aggregate specifies the number of components (or FlexVols) per aggregate. Is specified only when an aggregate list is explicitly defined.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the bucket configuration.
        * `name` - Bucket name that is to be created.
        ### Recommended optional properties
        * `aggregates` - List of aggregates for the FlexGroup on which the bucket is hosted on.
        * `constituents_per_aggregate` - Number of constituents per aggregate.
        * `size` - Specifying the bucket size is recommended.
        ### Default property values
        * `size` - 800MB
        * `comment` - ""
        * `aggregates` - No default value.
        * `constituents_per_aggregate` - _4_ , if an aggregates list is specified. Otherwise, no default value.
        ### Related ONTAP commands
        * `vserver object-store-server bucket create`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/buckets`](#docs-object-store-protocols_s3_services_{svm.uuid}_buckets)
      operationId: s3_bucket_svm_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_bucket_svm'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error code | Message |
            | ---------- | ------- |
            | 92405777   | "Failed to create bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Reason: {Reason of failure}. ";
            | 92405785   | "Bucket name \\\"{bucket name}\\\" contains invalid characters. Valid characters for a bucket name are 0-9, a-z, \\\".\\\", and \\\"-\\\". ";
            | 92405786   | "Bucket name \\\"{bucket name}\\\" is not valid. Bucket names must have between 3 and 63 characters. ";
            | 92405811   | "Failed to create bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Wait a few minutes and try the operation again.";
            | 92405812   | "Failed to create the object store volume. Reason: {Reason for failure}.";
            | 92405819   | "Cannot provision an object store server volume for bucket \\\"{bucket name}\\\" in SVM \\\"{svm.name}\\\" on the following aggregates because they are SnapLock aggregates: {List of aggregates.name}.";
            | 92405820   | "Failed to check whether the aggregate \\\"{aggregates.name}\\\" is a FabricPool. Reason: {Reason for failure}.";
            | 92405821   | "Cannot provision an object store server volume for bucket \\\"{bucket name}\\\" in SVM \\\"{svm.name}\\\" on the following aggregates because they are FabricPool: {List of aggregates.name}.";
            | 92405827   | "Internal Error. Unable to generate object store volume name.";
            | 92405857   | "One or more aggregates must be specified if \\\"constituents_per_aggregate\\\" is specified.";
            | 92405858   | "Failed to \\\"create\\\" the \\\"bucket\\\" because the operation is only supported on data SVMs.";
            | 92405859   | "The specified \\\"aggregates.uuid\\\" \\\"{aggregates.uuid}\\\" does not exist.";
            | 92405860   | "The specified \\\"aggregates.name\\\" \\\"{aggregates.name}\\\" and \\\"aggregates.uuid\\\" \\\"{aggregates.uuid}\\\" refer to different aggregates.";
            | 92405861   | "The specified SVM UUID or bucket UUID does not exist.";
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    x-ntap-long-description:
      description: |
        ## Overview
        An S3 bucket is a container of objects. Each bucket defines an object namespace. S3 server requests specify objects using a bucket-name and object-name pair. An object consists of data, along with optional metadata and access controls, accessible via a name. An object resides within a bucket. There can be more than one bucket in an S3 server. Buckets which are created for the server are associated with an S3 user that is created on the S3 server.
        ## Examples
        ### Retrieving all fields for all S3 buckets of an SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/buckets
        # The call:
        curl -X GET "https://10.140.117.223/api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets?fields=*&return_records=true" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "527812ab-7c6d-11e9-97e8-0050568ea123",
              "name": "bucket-2",
              "volume": {
                "name": "fg_oss_1558514455",
                "uuid": "51276f5f-7c6d-11e9-97e8-0050568ea123"
              },
              "size": 209715200,
              "logical_used_size": 157286400,
              "encryption": {
                "enabled": false
              },
              "comment": "S3 bucket."
            },
            {
              "svm": {
                "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
                "name": "vs1"
              },
              "uuid": "a8234aec-7e06-11e9-97e8-0050568ea123",
              "name": "bucket-1",
              "volume": {
                "name": "fg_oss_1558690256",
                "uuid": "a36a1ea7-7e06-11e9-97e8-0050568ea123"
              },
              "size": 1677721600,
              "logical_used_size": 0,
              "encryption": {
                "enabled": false
              },
              "comment": "bucket1"
            }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving the specified bucket associated with an SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/buckets/{uuid}
        # The call:
        curl -X GET "https://10.140.117.223/api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets/527812ab-7c6d-11e9-97e8-0050568ea123" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "12f3ba4c-7ae0-11e9-8c06-0050568ea123",
            "name": "vs1"
          },
          "uuid": "527812ab-7c6d-11e9-97e8-0050568ea123",
          "name": "bucket-2",
          "volume": {
            "name": "fg_oss_1558514455",
            "uuid": "51276f5f-7c6d-11e9-97e8-0050568ea123"
          },
          "size": 209715200,
          "logical_used_size": 157286400,
          "encryption": {
            "enabled": false
          },
          "comment": "S3 bucket."
        }
        ```
        ### Creating an S3 bucket for an SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/buckets
        # The call:
        curl -iku admin:netapp1! -X POST "https://10.140.117.223/api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"aggregates\": [ { \"name\": \"aggr5\", \"uuid\": \"12f3ba4c-7ae0-11e9-8c06-0050568ea123\" } ], \"comment\": \"S3 bucket.\", \"constituents_per_aggregate\": 1, \"name\": \"bucket-3\"}"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Fri, 24 May 2019 11:22:14 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets/?name=bucket-3
        Content-Length: 353
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "name": "bucket-3",
              "comment": "S3 bucket."
            }
          ],
          "job": {
            "uuid": "2e880171-7e16-11e9-bfdc-0050568ea123",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/2e880171-7e16-11e9-bfdc-0050568ea123"
              }
            }
          }
        }
        ```
        ### Updating an S3 bucket for an SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/buckets/{uuid}
        # The call:
        curl -X PATCH "https://10.140.117.223/api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets/754389d0-7e13-11e9-bfdc-0050568ea122" -H "accept: application/json?return_records=true" -H "Content-Type: application/json" -d "{ \"comment\": \"Bucket modified.\", \"size\": 111111111111}"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Fri, 24 May 2019 11:32:27 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "9beafabb-7e17-11e9-bfdc-0050568ea123",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/9beafabb-7e17-11e9-bfdc-0050568ea123"
              }
            }
          }
        }
        ```
        ### Deleting an S3 bucket for a specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/buckets/{uuid}
        # The call:
        curl -iku admin:netapp1! -X DELETE "https://10.140.117.223/api/protocols/s3/services/12f3ba4c-7ae0-11e9-8c06-0050568ea123/buckets/754389d0-7e13-11e9-bfdc-0050568ea123?return_records=true" -H "accept: application/json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Fri, 24 May 2019 11:40:17 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "b3af4a54-7e18-11e9-bfdc-0050568ea123",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/b3af4a54-7e18-11e9-bfdc-0050568ea123"
              }
            }
          }
        }
        ```
      tags:
      - object-store
  /protocols/s3/services/{svm.uuid}/buckets/{uuid}:
    delete:
      description: |
        Deletes the S3 bucket configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server bucket delete`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/buckets`](#docs-object-store-protocols_s3_services_{svm.uuid}_buckets)
      operationId: s3_bucket_svm_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: The unique identifier of the bucket.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error code | Message |
            | ---------- | ------- |
            | 92405811   | "Failed to delete bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Wait a few minutes and try the operation again.";
            | 92405858   | "Failed to \\\"delete\\\" the \\\"bucket\\\" because the operation is only supported on data SVMs.";
            | 92405861   | "The specified SVM UUID or bucket UUID does not exist.";
            | 92405779   | "Failed to remove bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Reason: {Reason for failure}. ";
            | 92405813   | "Failed to delete the object store volume. Reason: {Reason for failure}.";
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    get:
      description: |
        Retrieves the S3 bucket configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server bucket show`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/buckets`](#docs-object-store-protocols_s3_services_{svm.uuid}_buckets)
      operationId: s3_bucket_svm_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: The unique identifier of the bucket.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_bucket_svm'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    patch:
      description: |
        Updates the S3 bucket configuration of an SVM.
        ### Important notes
        - The following fields can be modified for a bucket:
          * `comment` - Any information related to the bucket.
          * `size` - Bucket size.
        ### Related ONTAP commands
        * `vserver object-store-server bucket modify`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/buckets`](#docs-object-store-protocols_s3_services_{svm.uuid}_buckets)
      operationId: s3_bucket_svm_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: The unique identifier of the bucket.
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_bucket_svm'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error code | Message |
            | ---------- | ------- |
            | 92405778   | "Failed to modify bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Reason: {Reason for failure}. ";
            | 92405846   | "Failed to modify the object store volume. Reason: {Reason for failure}.";
            | 92405811   | "Failed to modify bucket \\\"{bucket name}\\\" for SVM \\\"{svm.name}\\\". Wait a few minutes and try the operation again.";
            | 92405858   | "Failed to \\\"modify\\\" the \\\"bucket\\\" because the operation is only supported on data SVMs.";
            | 92405861   | "The specified SVM UUID or bucket UUID does not exist.";
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
  /protocols/s3/services/{svm.uuid}/users:
    get:
      description: |
        Retrieves the S3 user's SVM configuration.
        ### Related ONTAP commands
        * `vserver object-store-server user show`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/users`](#docs-object-store-protocols_s3_services_{svm.uuid}_users)
      operationId: s3_user_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by access_key
        in: query
        name: access_key
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_user_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    post:
      description: |
        Creates the S3 user configuration.
        ### Important notes
        - Each SVM can have one or more user configurations.
        - If user creation is successful, a user access_key and secret_key is returned as part of the response.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the user configuration.
        * `name` - User name that is to be created.
        ### Default property values
        * `comment` - ""
        ### Related ONTAP commands
        * `vserver object-store-server user create`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/users`](#docs-object-store-protocols_s3_services_{svm.uuid}_users)
      operationId: s3_user_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_user'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/s3_user_post_patch_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 92405773   | Object store server is not present for specified SVM. Create a object store server and retry the operation. |
            | 92405787   | The specified user name contains invalid characters. Valid characters for a user name are 0-9, A-Z, a-z, \"_\", \"+\", \"=\", \",\", \".\", \"@\", and \"-\". |
            | 92405788   | User names must have between 1 and 64 characters. |
            | 92405791   | Failed to create access-key and secret-key. |
            | 92405817   | S3 users can be created only on data SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    x-ntap-long-description:
      description: |
        ## Overview
        An S3 user account is created on the S3 server. Buckets that are created for the server are associated with that user (as the owner of the buckets).
        The creation of the user account involves generating a pair of keys "access" and "secret".
        These keys are shared with clients (by the administrator out of band) who want to access the S3 server. The access_key is sent in the request and it identifies the user performing the operation. The client or server never send the secret_key over the wire.
        Only the access_key can be retrieved from a GET operation. The secret_key along with the access_key is returned from a POST operation and from a PATCH operation if the administrator needs to regenerate the keys.
        ## Examples
        ### Retrieving S3 user configurations for a particular SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/users
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users?fields=*&return_records=true" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "db2ec036-8375-11e9-99e1-0050568e3ed9",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/db2ec036-8375-11e9-99e1-0050568e3ed9"
                  }
                }
              },
              "name": "user-1",
              "comment": "S3 user",
              "access_key": "8OPlYd5gm53sTNkTNgrsJ0_4iHvw_Ir_9xtDhzGa3m2_a_Yhtv6Bm3Dq_Xv79Stq90BWa5NrTL7UQ2u_0xN0IW_x39cm1h3sn69fN6cf6STA48W05PAxuGED3NcR7rsn",
              "_links": {
                "self": {
                  "href": "/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-1"
                }
              }
            },
            {
              "svm": {
                "uuid": "db2ec036-8375-11e9-99e1-0050568e3ed9",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/db2ec036-8375-11e9-99e1-0050568e3ed9"
                  }
                }
              },
              "name": "user-2",
              "comment": "s3-user",
              "access_key": "uYo34d4eR8a3is7JDSCY1xrNwL7gFMA338ZEX2mNrgJ34Kb4u98QNhBGT3ghs9GA2bzNdYBSn5_rBfjIY4mt36CMFE4d3g0L3Pa_2nXD6g6CAq_D0422LK__pbH6wvy8",
              "_links": {
                "self": {
                  "href": "/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-2"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users?fields=*&return_records=true"
            }
          }
        }
        ```
        ### Retrieving the user configuration of a specific S3 user
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/users/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-1" -H "accept: application/hal+json"
        # The response:
        {
          "svm": {
            "uuid": "db2ec036-8375-11e9-99e1-0050568e3ed9",
            "name": "vs1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/db2ec036-8375-11e9-99e1-0050568e3ed9"
              }
            }
          },
          "name": "user-1",
          "comment": "s3-user",
          "access_key": "uYo34d4eR8a3is7JDSCY1xrNwL7gFMA338ZEX2mNrgJ34Kb4u98QNhBGT3ghs9GA2bzNdYBSn5_rBfjIY4mt36CMFE4d3g0L3Pa_2nXD6g6CAq_D0422LK__pbH6wvy8",
          "_links": {
            "self": {
              "href": "/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-1"
            }
          }
        }
        ```
        ### Creating an S3 user configuration
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/users
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"name\": \"user-1\"}"
        # The response:
        HTTP/1.1 201 Created
        Date: Fri, 31 May 2019 09:34:25 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-1
        Content-Length: 244
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "name": "user-1",
              "access_key": "8OPlYd5gm53sTNkTNgrsJ0_4iHvw_Ir_9xtDhzGa3m2_a_Yhtv6Bm3Dq_Xv79Stq90BWa5NrTL7UQ2u_0xN0IW_x39cm1h3sn69fN6cf6STA48W05PAxuGED3NcR7rsn",
              "secret_key": "SSS4oNA7_43yfu_zs938T5nY9xYZccFq_60_Q925h4t535km313qb0bDvdQ2MIK_8ebVf0gnD06K8qcNBg3t_KcpjHTXA2elshTEjrdMhsM9b47uOdQGw4Mex6yrbPgr"
            }
          ]
        }
        ```
        ### Regenerating keys for a specific S3 user for the specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/users/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-2?regenerate_keys=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ }"
        # The response:
        HTTP/1.1 200 OK
        Date: Fri, 31 May 2019 09:55:45 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 391
        Content-Type: application/hal+json
        {
          "num_records": 1,
          "records": [
            {
              "name": "user-2",
              "access_key": "hUod3l_sg632PjPlTgdQNKWXI3E_yTra0h96xrpsAPly3Qa_KmYYXq3kIuAJ3CyD4gVOakjj_PwVIVjATP1C2t1IQ3KB_9ctS1Ph921b1C17N6Y0PtWfv6AZD__j_C4j",
              "secret_key": "3w03fT_7Pv328_dYB8FN4YsD101Hn0i1u_gmqOenYydaNc22c7AIDN46c__T_5y0A3Y69w412F13A1bzJSpXH4C0nNAP4N_Ce1_Z_9_d7bA08bs28ccw50ab_4osA3bq",
              "_links": {
                "self": {
                  "href": "/api/protocols/s3/services/db2ec036-8375-11e9-99e1-0050568e3ed9/users/user-2"
                }
              }
            }
          ]
        }
        ```
        ### Deleting the specified S3 user configuration for a specified SVM
        ```
        # The API:
        /api/protocols/s3/services/{svm.uuid}/users/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/s3/services/03ce5c36-f269-11e8-8852-0050568e5298/users/user-2" -H "accept: application/json"
        ```
      tags:
      - object-store
  /protocols/s3/services/{svm.uuid}/users/{name}:
    delete:
      description: |
        Deletes the S3 user configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server user delete`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/users`](#docs-object-store-protocols_s3_services_{svm.uuid}_users)
      operationId: s3_user_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: User name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    get:
      description: |
        Retrieves the S3 user configuration of an SVM.
        ### Related ONTAP commands
        * `vserver object-store-server user show`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/users`](#docs-object-store-protocols_s3_services_{svm.uuid}_users)
      operationId: s3_user_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: User name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_user'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
    patch:
      description: |
        Updates the S3 user configuration of an SVM.
        ### Important notes
        - User access_key and secret_key pair can be regenerated using the PATCH operation.
        - User access_key and secret_key is returned in a PATCH operation if the "regenerate_keys" field is specified as true.
        ### Recommended optional properties
        * `regenerate_keys` - Specifies if secret_key and access_key need to be regenerated.
        * `comment` - Any information related to the S3 user.
        ### Related ONTAP commands
        * `vserver object-store-server user show`
        * `vserver object-store-server user regenerate-keys`
        ### Learn more
        * [`DOC /protocols/s3/services/{svm.uuid}/users`](#docs-object-store-protocols_s3_services_{svm.uuid}_users)
      operationId: s3_user_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: User name
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: |
          Specifies whether or not to regenerate the user keys.
        in: query
        name: regenerate_keys
        required: false
        type: boolean
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/s3_user'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/s3_user_post_patch_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 92405792   | Failed to regenerate access-key and secret-key for user. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - object-store
  /protocols/san/fcp/services:
    get:
      description: |
        Retrieves FC Protocol services.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `statistics.*`
        * `metric.*`
        ### Related ONTAP commands
        * `vserver fcp show`
        ### Learn more
        * [`DOC /protocols/san/fcp/services`](#docs-SAN-protocols_san_fcp_services)
      operationId: fcp_service_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by target.name
        in: query
        name: target.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fcp_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates an FC Protocol service.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the FC Protocol service.
        ### Related ONTAP commands
        * `vserver fcp create`
        ### Learn more
        * [`DOC /protocols/san/fcp/services`](#docs-SAN-protocols_san_fcp_services)
      operationId: fcp_service_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new FC Protocol service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/fcp_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/fcp_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1115127 | The cluster lacks a valid FCP license. |
            | 2621462 | The supplied SVM does not exist. |
            | 2621507 | The Fibre Channel Protocol is not allowed for the specified SVM. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5374082 | The Fibre Channel Protocol service already exists for the SVM. |
            | 5374092 | The Fibre Channel Procotol is not supported on the cluster hardware configuration; there are no Fibre Channel adapters. |
            | 5374893 | The SVM is stopped. The SVM must be running to create a Fibre Channel Protocol service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        A Fibre Channel Protocol (FC Protocol) service defines the properties of the FC Protocol target for an SVM. There can be at most one FC Protocol service for an SVM. An SVM FC Protocol service must be created before FC Protocol initiators can log in to the SVM.<br/>
        The FC Protocol service REST API allows you to create, update, delete, and discover FC services for SVMs.
        ## Performance monitoring
        Performance of the SVM can be monitored by the `metric.*` and `statistics.*` properties. These show the performance of the SVM in terms of IOPS, latency, and throughput. The `metric.*` properties denote an average whereas `statistics.*` properties denote a real-time monotonically increasing value aggregated across all nodes.
        ## Examples
        ### Creating an FC Protocol service for an SVM
        The simplest way to create an FC Protocol service is to specify only the SVM, either by name or UUID. By default, the new FC Protocol service is enabled.<br/>
        In this example, the `return_records` query parameter is used to retrieve the new FC Protocol service object in the REST response.
        <br/>
        ```
        # The API:
        POST /api/protocols/san/fcp/services
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/fcp/services?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "5c659d90-c01a-11e8-88ed-005056bbb24b",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/5c659d90-c01a-11e8-88ed-005056bbb24b"
                  }
                }
              },
              "enabled": true,
              "target": {
                "name": "20:00:00:50:56:bb:b2:4b"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving FC Protocol services for all SVMs in the cluster
        ```
        # The API:
        GET /api/protocols/san/fcp/services
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/fcp/services' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "5c659d90-c01a-11e8-88ed-005056bbb24b",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/5c659d90-c01a-11e8-88ed-005056bbb24b"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b"
                }
              }
            },
            {
              "svm": {
                "uuid": "6011f874-c01a-11e8-88ed-005056bbb24b",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6011f874-c01a-11e8-88ed-005056bbb24b"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/fcp/services/6011f874-c01a-11e8-88ed-005056bbb24b"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/san/fcp/services"
            }
          }
        }
        ```
        ---
        ### Retrieving details for a specific FC Protocol service
        The FC Protocol service is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/fcp/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "5c659d90-c01a-11e8-88ed-005056bbb24b",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5c659d90-c01a-11e8-88ed-005056bbb24b"
              }
            }
          },
          "enabled": true,
          "target": {
            "name": "20:00:00:50:56:bb:b2:4b"
          },
          "_links": {
            "self": {
              "href": "/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b"
            }
          }
        }
        ```
        ---
        ### Disabling an FC Protocol service
        Disabling an FC Protocol service shuts down all active FC Protocol logins for the SVM and prevents new FC Protocol logins.<br/>
        The FC Protocol service to update is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        PATCH /api/protocols/san/fcp/services/{svm.uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b' -H 'accept: application/hal+json' -d '{ "enabled": "false" }'
        ```
        <br/>
        You can retrieve the FC Protocol service to confirm the change.<br/>
        In this example, the `fields` query parameter is used to limit the response to the `enabled` property and FC Protocol service identifiers.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/fcp/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b?fields=enabled' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "5c659d90-c01a-11e8-88ed-005056bbb24b",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5c659d90-c01a-11e8-88ed-005056bbb24b"
              }
            }
          },
          "enabled": false,
          "_links": {
            "self": {
              "href": "/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b"
            }
          }
        }
        ```
        ---
        ### Deleting an FC Protocol service
        The FC Protocol service must be disabled before it can be deleted.<br/>
        The FC Protocol service to delete is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/san/fcp/services/{svm.uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/fcp/services/5c659d90-c01a-11e8-88ed-005056bbb24b' -H 'accept: application/hal+json'
        ```
      tags:
      - SAN
  /protocols/san/fcp/services/{svm.uuid}:
    delete:
      description: |
        Deletes an FC Protocol service. An FC Protocol service must be disabled before it can be deleted.
        ### Related ONTAP commands
        * `vserver fcp delete`
        ### Learn more
        * [`DOC /protocols/san/fcp/services`](#docs-SAN-protocols_san_fcp_services)
      operationId: fcp_service_delete
      parameters:
      - description: |
          The unique identifier of the SVM for which to delete the FC Protocol service.
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5373960 | The Fibre Channel Protocol service cannot be removed while it is enabled. |
            | 5374083 | There is no Fibre Channel Protocol service for the specified SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves an FC Protocol service.
        ### Related ONTAP commands
        * `vserver fcp show`
        ### Learn more
        * [`DOC /protocols/san/fcp/services`](#docs-SAN-protocols_san_fcp_services)
      operationId: fcp_service_get
      parameters:
      - description: |
          The unique identifier of the SVM for which to retrieve the FC Protocol service.
        in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/fcp_service'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5374083 | There is no Fibre Channel Protocol service for the specified SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    patch:
      description: |
        Updates an FC Protocol service.
        ### Related ONTAP commands
        * `vserver fcp modify`
        * `vserver fcp start`
        * `vserver fcp stop`
        ### Learn more
        * [`DOC /protocols/san/fcp/services`](#docs-SAN-protocols_san_fcp_services)
      operationId: fcp_service_modify
      parameters:
      - description: |
          The unique identifier of the SVM whose FC Protocol service is to be updated.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The new property values for the FC Protocol service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/fcp_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5374083 | There is no Fibre Channel Protocol service for the specified SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/fcp/services/{svm.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for the FC Protocol service
        of an SVM.
      operationId: fcp_collection_performance_metrics_get
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: The unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_fcp_metric_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/igroups:
    get:
      description: |
        Retrieves initiator groups.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `lun_maps.*`
        ### Related ONTAP commands
        * `lun igroup show`
        * `lun mapping show`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_collection_get
      parameters:
      - description: Filter by delete_on_unmap
        in: query
        name: delete_on_unmap
        type: boolean
      - description: Filter by initiators.name
        in: query
        name: initiators.name
        type: string
      - description: Filter by initiators.igroup.uuid
        in: query
        name: initiators.igroup.uuid
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by lun_maps.logical_unit_number
        in: query
        name: lun_maps.logical_unit_number
        type: integer
      - description: Filter by lun_maps.lun.node.uuid
        in: query
        name: lun_maps.lun.node.uuid
        type: string
      - description: Filter by lun_maps.lun.node.name
        in: query
        name: lun_maps.lun.node.name
        type: string
      - description: Filter by lun_maps.lun.uuid
        in: query
        name: lun_maps.lun.uuid
        type: string
      - description: Filter by lun_maps.lun.name
        in: query
        name: lun_maps.lun.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates an initiator group.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the initiator group.
        * `name` - Name of the initiator group.
        * `os_type` - Operating system of the initiator group's initiators.
        ### Recommended optional properties
        * `initiators.name` - Name(s) of initiator group's initiators. This property can be used to create the initiator group and populate it with initiators in a single request.
        ### Default property values
        If not specified in POST, the following default property values are assigned.
        * `protocol` - _mixed_ - Data protocol of the initiator group's initiators.
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new initiator group.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/igroup'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/igroup_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | The supplied SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5373958 | An invalid initiator group name was supplied. |
            | 5373966 | An initiator group cannot be created in an SVM that is configured for NVMe. |
            | 5373969 | A supplied initiator name looks like an iSCSI IQN initiator, but the portions after the prefix are missing. |
            | 5373971 | A supplied initiator name looks like an iSCSI IQN initiator, but the date portion is invalid. |
            | 5373972 | A supplied initiator name looks like an iSCSI IQN initiator, but the naming authority portion is invalid. |
            | 5373977 | A supplied initiator name looks like an iSCSI EUI initiator, but the length is invalid. |
            | 5373978 | A supplied initiator name looks like an iSCSI EUI initiator, but the format is invalid. |
            | 5373992 | A supplied initiator name was too long to be valid. |
            | 5373993 | A supplied initiator name did not match any valid format. |
            | 5374023 | An initiator group with the same name already exists. |
            | 5374038 | An invalid Fibre Channel WWPN was supplied. |
            | 5374039 | An invalid iSCSI initiator name was supplied. |
            | 5374732 | An initiator is already in another initiator group with a conflicting operating system type. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        An initiator group (igroup) is a collection of Fibre Channel (FC) world wide port names (WWPNs), and/or iSCSI Qualified Names (IQNs), and/or iSCSI EUIs (Extended Unique Identifiers) that identify host initiators.<br/>
        Initiator groups are used to control which hosts can access specific LUNs. To grant access to a LUN from one or more hosts, create an initiator group containing the host initiator names, then create a LUN map that associates the initiator group with the LUN.<br/>
        The initator group REST API allows you to create, update, delete, and discover initiator groups, and add and remove initiators that can access the target and associated LUNs.
        An initiator can appear in multiple initiator groups. An initiator group can be mapped to multiple LUNs. A specific initiator can be mapped to a specific LUN only once.<br/>
        All initiators in an initiator group must be from the same operating system. The initiator group's operating system is specified when the initiator group is created.<br/>
        When an initiator group is created, the `protocol` property is used to restrict member initiators to Fibre Channel (_fcp_), iSCSI (_iscsi_), or both (_mixed_).<br/>
        Zero or more initiators can be supplied when the initiator group is created. After creation, initiators can be added or removed from the initiator group using the `/protocols/san/igroups/{igroup.uuid}/initiators` endpoint. See [`POST /protocols/san/igroups/{igroup.uuid}/initiators`](#/SAN/igroup_initiator_create) and [`DELETE /protocols/san/igroups/{igroup.uuid}/initiators/{name}`](#/SAN/igroup_initiator_delete) for more details.<br/>
        An FC WWPN consist of 16 hexadecimal digits grouped as 8 pairs separated by colons. The format for an iSCSI IQN is _iqn.yyyy-mm.reverse_domain_name:any_. The iSCSI EUI format consists of the _eui._ prefix followed by 16 hexadecimal characters.
        ## Examples
        ### Creating an initiator group with no initiators
        The example initiator group is for Linux iSCSI initiators only. Note that the `return_records` query parameter is used to obtain the newly created initiator group in the response.
        <br/>
        ```
        # The API:
        POST /api/protocols/san/igroups
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/igroups?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "name": "igroup1", "os_type": "linux", "protocol": "iscsi" }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup1",
              "protocol": "iscsi",
              "os_type": "linux",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an initiator group with initiators
        The example initiator group is for Windows. FC Protocol and iSCSI initiators are allowed. Note that the `return_records` query parameter is used to obtain the newly created initiator group in the response.
        <br/>
        ```
        # The API:
        POST /api/protocols/san/igroups
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/igroups?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "name": "igroup2", "os_type": "windows", "protocol": "mixed", "initiators": [ { "name": "20:01:00:50:56:bb:70:72" }, { "name": "iqn.1991-05.com.ms:host1" } ] }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "abf9c39d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup2",
              "protocol": "mixed",
              "os_type": "windows",
              "initiators": [
                {
                  "name": "20:01:00:50:56:bb:70:72",
                  "_links": {
                    "self": {
                      "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072/initiators/20:01:00:50:56:bb:70:72"
                    }
                  }
                },
                {
                  "name": "iqn.1991-05.com.ms:host1",
                  "_links": {
                    "self": {
                      "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072/initiators/iqn.1991-05.com.ms:host1"
                    }
                  }
                }
              ],
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving all initiator groups
        ```
        # The API:
        GET /api/protocols/san/igroups
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/igroups' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup1",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            },
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "abf9c39d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup2",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/san/igroups"
            }
          }
        }
        ```
        ---
        ### Retrieving all properties of all initiator groups
        The `fields` query parameter is used to request all initiator group properties.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/igroups
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/igroups?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup1",
              "protocol": "iscsi",
              "os_type": "linux",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            },
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "abf9c39d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup2",
              "protocol": "mixed",
              "os_type": "windows",
              "initiators": [
                {
                  "name": "20:01:00:50:56:bb:70:72",
                  "_links": {
                    "self": {
                      "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072/initiators/20:01:00:50:56:bb:70:72"
                    }
                  }
                },
                {
                  "name": "iqn.1991-05.com.ms:host1",
                  "_links": {
                    "self": {
                      "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072/initiators/iqn.1991-05.com.ms:host1"
                    }
                  }
                }
              ],
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/san/igroups?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving all initiator groups for Linux
        The `os_type` query parameter is used to perform the query.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/igroups
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/igroups?os_type=linux' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
                  }
                }
              },
              "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
              "name": "igroup1",
              "os_type": "linux",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/protocols/san/igroups?os_type=linux"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific initiator group
        ```
        # The API:
        GET /api/protocols/san/igroups/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
              }
            }
          },
          "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
          "name": "igroup1",
          "protocol": "iscsi",
          "os_type": "linux",
          "_links": {
            "self": {
              "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
            }
          }
        }
        ```
        ---
        ### Retrieving LUNs mapped to a specific initiator group
        The `fields` parameter is used to specify the desired properties.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/igroups
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072?fields=lun_maps' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "02b0dfff-aa28-11e8-a653-005056bb7072",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/02b0dfff-aa28-11e8-a653-005056bb7072"
              }
            }
          },
          "uuid": "8f249e7d-ab9f-11e8-b8a3-005056bb7072",
          "name": "igroup1",
          "lun_maps": [
            {
              "logical_unit_number": 0,
              "lun": {
                "name": "/vol/vol1/lun1",
                "uuid": "4b33ba57-c4e0-4dbb-bc47-214800d18a71",
                "node": {
                  "name": "node1",
                  "uuid": "f17182af-223f-4d51-8197-2cb2146d5c4c",
                  "_links": {
                    "self": {
                      "href": "/api/cluster/nodes/f17182af-223f-4d51-8197-2cb2146d5c4c"
                    }
                  }
                },
                "_links": {
                  "self": {
                    "href": "/api/storage/luns/4b33ba57-c4e0-4dbb-bc47-214800d18a71"
                  }
                }
              }
            }
          ]
          "_links": {
            "self": {
              "href": "/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072"
            }
          }
        }
        ```
        ---
        ### Renaming an initiator group
        Note that renaming an initiator group must be done in a PATCH request separate from any other modifications.
        <br/>
        ```
        # The API:
        PATCH /api/protocols/san/igroups/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072' -H 'accept: application/hal+json' -d '{ "name": "igroup1_newName" }'
        ```
        ---
        ### Changing the operating system type of an initiator group
        ```
        # The API:
        PATCH /api/protocols/san/igroups/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072' -H 'accept: application/hal+json' -d '{ "os_type": "aix" }'
        ```
        ---
        ### Adding an initiator to an initiator group
        ```
        # The API:
        POST /api/protocols/san/igroups/{igroup.uuid}/initiators
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072/initiators' -H 'accept: application/hal+json' -d '{ "name": "iqn.1991-05.com.ms:host2" }'
        ```
        ---
        ### Adding multiple initiators to an initiator group
        Note the use of the `records` property to add multiple initiators to the initiator group in a single API call.
        <br/>
        ```
        # The API:
        POST /api/protocols/san/igroups/{igroup.uuid}/initiators
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072/initiators' -H 'accept: application/hal+json' -d '{ "records": [ { "name": "iqn.1991-05.com.ms:host3" }, { "name": "iqn.1991-05.com.ms:host4" } ] }'
        ```
        ---
        ### Removing an initiator from an initiator group
        ```
        # The API:
        DELETE /api/protocols/san/igroups/{igroup.uuid}/initiators/iqn.1991-05.com.ms:host3
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072/initiators/iqn.1991-05.com.ms:host3' -H 'accept: application/hal+json'
        ```
        ---
        ### Removing an initiator from a mapped initiator group
        Normally, removing an initiator from an initiator group that is mapped to a LUN is not allowed. The removal can be forced using the `allow_delete_while_mapped` query parameter.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/san/igroups/{igroup.uuid}/initiators/iqn.1991-05.com.ms:host4
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/igroups/8f249e7d-ab9f-11e8-b8a3-005056bb7072/initiators/iqn.1991-05.com.ms:host4?allow_delete_while_mapped=true' -H 'accept: application/hal+json'
        ```
        ---
        ### Deleting an initiator group
        ```
        # The API:
        DELETE /api/protocols/san/igroups/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072' -H 'accept: application/hal+json'
        ```
        ---
        ### Deleting a mapped initiator group
        Normally, deleting an initiator group that is mapped to a LUN is not allowed. The deletion can be forced using the `allow_delete_while_mapped` query parameter.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/san/igroups/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/igroups/abf9c39d-ab9f-11e8-b8a3-005056bb7072?allow_delete_while_mapped=true' -H 'accept: application/hal+json'
        ```
      tags:
      - SAN
  /protocols/san/igroups/{igroup.uuid}/initiators:
    get:
      description: |
        Retrieves initiators of an initiator group.
        ### Related ONTAP commands
        * `lun igroup show`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_initiator_collection_get
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: igroup.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup_initiator_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374852 | The initiator group specified in the URI does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Adds one or more initiators to an initiator group.
        ### Required properties
        * `name` or `records.name` - Initiator name(s) to add to the initiator group.
        ### Related ONTAP commands
        * `lun igroup add`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_initiator_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: igroup.uuid
        required: true
        type: string
      - description: |
          The properties of the initiator to add to the initiator group.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/igroup_initiator'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/igroup_initiator_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254193 | Adding an initiator would cause the initiator to be mapped to the same LUN more than once. |
            | 1254324 | Adding an initiator would cause the initiator to have the same logical unit identifier for multiple LUN maps. |
            | 5373969 | A supplied initiator name looks like an iSCSI IQN initiator, but the portions after the prefix are missing. |
            | 5373971 | A supplied initiator name looks like an iSCSI IQN initiator, but the date portion is invalid. |
            | 5373972 | A supplied initiator name looks like an iSCSI IQN initiator, but the naming authority portion is invalid. |
            | 5373977 | A supplied initiator name looks like an iSCSI EUI initiator, but the length is invalid. |
            | 5373978 | A supplied initiator name looks like an iSCSI EUI initiator, but the format is invalid. |
            | 5373992 | A supplied initiator name was too long to be valid. |
            | 5373993 | A supplied initiator name did not match any valid format. |
            | 5374033 | Initiators must be supplied. |
            | 5374035 | A supplied initiator is already in the initiator group. |
            | 5374038 | An invalid Fibre Channel WWPN was supplied. |
            | 5374039 | An invalid iSCSI initiator name was supplied. |
            | 5374734 | An initiator is already in another initiator group with a conflicting operating system type. |
            | 5374852 | The initiator group specified in the URI does not exist. |
            | 5374853 | You can add initiators to an initiator group using the `records` property, or the `name` property, but you cannot use both in the same request. |
            | 5374854 | Only `records` property elements should be populated with the `name` property values. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/igroups/{igroup.uuid}/initiators/{name}:
    delete:
      description: |
        Deletes an initiator from an initiator group.
        ### Related ONTAP commands
        * `lun igroup remove`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_initiator_delete
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: igroup.uuid
        required: true
        type: string
      - description: "The initiator name.\n"
        in: path
        name: name
        required: true
        type: string
      - default: false
        description: |
          Allows deletion of an initiator from of a mapped initiator group.<br/>
          Deleting an initiator from a mapped initiator group makes the LUNs to which the initiator group is mapped no longer available to the initiator. This might cause a disruption in the availability of data.<br/>
          <b>This parameter should be used with caution.</b>
        in: query
        name: allow_delete_while_mapped
        required: false
        type: boolean
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254213 | The initiator group is mapped to one or more LUNs and `allow_delete_while_mapped` has not been specified. |
            | 5374034 | The initiator is not a member of the group. |
            | 5374852 | The initiator group specified in the URI does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves an initiator of an initiator group.
        ### Related ONTAP commands
        * `lun igroup show`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_initiator_get
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: igroup.uuid
        required: true
        type: string
      - description: "Initiator name\n"
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup_initiator'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4 | The initiator is not a member of the initiator group. |
            | 5374852 | The initiator group specified in the URI does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/igroups/{uuid}:
    delete:
      description: |
        Deletes an initiator group.
        ### Related ONTAP commands
        * `lun igroup delete`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_delete
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: uuid
        required: true
        type: string
      - default: false
        description: |
          Allows deletion of a mapped initiator group.<br/>
          Deleting a mapped initiator group makes the LUNs to which the initiator group is mapped no longer available. This might cause a disruption in the availability of data.<br/>
          <b>This parameter should be used with caution.</b>
        in: query
        name: allow_delete_while_mapped
        required: false
        type: boolean
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254213 | The initiator group is mapped to one or more LUNs and `allow_delete_while_mapped` has not been specified. |
            | 5374852 | The initiator group does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves an initiator group.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `lun_maps.*`
        ### Related ONTAP commands
        * `lun igroup show`
        * `lun mapping show`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_get
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/igroup'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374852 | The initiator group does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    patch:
      description: |
        Updates an initiator group.
        ### Related ONTAP commands
        * `lun igroup modify`
        * `lun igroup rename`
        ### Learn more
        * [`DOC /protocols/san/igroups`](#docs-SAN-protocols_san_igroups)
      operationId: igroup_modify
      parameters:
      - description: |
          The unique identifier of the initiator group.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the initiator group.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/igroup'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5373958 | An invalid initiator group name was supplied for a rename operation. |
            | 5374023 | A rename operation failed because an initiator group with the same name already exists. |
            | 5374733 | An initiator is already in another initiator group with a conflicting operating system type. |
            | 5374852 | The initiator group does not exist. |
            | 5374868 | The initiator group was partially modified before an error was encountered while renaming the initiator group. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/iscsi/credentials:
    get:
      description: |
        Retrieves iSCSI credentials.
        ### Related ONTAP commands
        * `vserver iscsi security show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/credentials`](#docs-SAN-protocols_san_iscsi_credentials)
      operationId: iscsi_credentials_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by initiator_address.masks.netmask
        in: query
        name: initiator_address.masks.netmask
        type: string
      - description: Filter by initiator_address.masks.address
        in: query
        name: initiator_address.masks.address
        type: string
      - description: Filter by initiator_address.masks.family
        in: query
        name: initiator_address.masks.family
        type: string
      - description: Filter by initiator_address.ranges.end
        in: query
        name: initiator_address.ranges.end
        type: string
      - description: Filter by initiator_address.ranges.start
        in: query
        name: initiator_address.ranges.start
        type: string
      - description: Filter by initiator_address.ranges.family
        in: query
        name: initiator_address.ranges.family
        type: string
      - description: Filter by authentication_type
        in: query
        name: authentication_type
        type: string
      - description: Filter by initiator
        in: query
        name: initiator
        type: string
      - description: Filter by chap.outbound.user
        in: query
        name: chap.outbound.user
        type: string
      - description: Filter by chap.inbound.user
        in: query
        name: chap.inbound.user
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_credentials_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates iSCSI credentials.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the iSCSI credentials.
        * `initiator` - Initiator for which the iSCSI credentials are to be created.
        * `authentication_type` - Type of authentication to use for the credentials.
        ### Recommended optional properties
        * `chap.inbound.user` - In-bound CHAP authentication user name.
        * `chap.inbound.password` - In-bound CHAP authentication password.
        * `chap.outbound.user` - Out-bound CHAP authentication user name.
        * `chap.outbound.password` - Out-bound CHAP authentication password.
        ### Related ONTAP commands
        * `vserver iscsi security create`
        ### Learn more
        * [`DOC /protocols/san/iscsi/credentials`](#docs-SAN-protocols_san_iscsi_credentials)
      operationId: iscsi_credentials_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new iSCSI credentials object.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/iscsi_credentials'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/iscsi_credentials_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 2621706 | Both the SVM UUID and SVM name were supplied, but they do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5373969 | A non-empty qualifier is required after the prefix. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
            | 5373970 | The IQN prefix is invalid. The correct IQN prefix is _iqn_. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
            | 5373971 | The date field is invalid. A valid date field is _yyyy-mm_. An example of a valid IQN is _iqn.1995-08.com.example:string_. |
            | 5373972 | The naming authority and string fields can contain only the characters _a-z_, _0-9_, _._, _:_, and _-_. |
            | 5373977 | The EUI-64 identifier field must be exactly 16 hexadecimal digits. |
            | 5373978 | The EUI formatted initiator name supplied is invalid. A valid EUI format is _eui.XXXXXXXXXXXXXXXX_, where X is a hexadecimal digit. |
            | 5373997 | The initiator name supplied in invalid. The valid initiator name formats are _iqn.1995-08.com.example:string_ or _eui.0123456789abcdef_. |
            | 5374078 | The iSCSI service does not exist. |
            | 5374142 | An iSCSI security credential already exists for the specified initiator. |
            | 5374145 | The iSCSI security password must contain an even number of valid hex digits. |
            | 5374147 | The CHAP inbound and outbound passwords must be different. |
            | 5374149 | The inbound user and password properties are required for CHAP authentication. |
            | 5374150 | Outbound CHAP authentication requires an outbound password. |
            | 5374855 | The value for property `initiator_address.ranges.start` is greater than the value for property `initiator_address.ranges.end`. |
            | 5374856 | The value for property `initiator_address.ranges.start` does not belong to the same IP address family as the value for property `initiator_address.ranges.end`. |
            | 5374900 | Setting the CHAP authentication properties are not supported with authentication types _none_ or _deny_. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        An iSCSI credentials object defines authentication credentials to be used between an initiator and ONTAP. It identifies an authentication type, user names, and passwords that must be used to authenticate a specific initiator.<br/>
        The iSCSI credentials REST API allows you to create, update, delete, and discover iSCSI credentials.<br/>
        ## How iSCSI authentication works
        An iSCSI credentials object defines the authentication credentials to be used between an initiator and ONTAP. While establishing an iSCSI connection, the initiator sends a login request to ONTAP to begin an iSCSI session. ONTAP then either permits or denies the login request, or determines that a login is not required.<p/>
        For an initiator, you can specify an authentication type, user names and passwords, and a whitelist of optional network addresses from which the initiator is allowed to connect.
        ## iSCSI authentication methods
          - Challenge-Handshake Authentication Protocol (CHAP) - The initiator logs in using a CHAP user name and password. There are two types of CHAP user names and passwords:
            - Inbound - ONTAP authenticates the initiator. Inbound settings are required if you are using CHAP authentication.
            - Outbound - These are optional credentials to enable the initiator to authenticate ONTAP. You can use credentials only if inbound credentials are also being used.
          - deny - The initiator is denied access to ONTAP.
          - none - ONTAP does not require authentication for the initiator.
        The CHAP inbound/outbound password can be any valid string or an even number of valid hexidecimal digits preceded by '0X' or '0x'.
        ## Initiator address list
        The initiator address list is a way to specify valid IP addresses from which the initiator is allowed to connect. If the list is specified and the source address of an iSCSI connection is not in the list, the connection is rejected. Initiator addresses can be specified in either IPv4 or IPv6 format and in one of two forms:
        - Range
          ```
          {
            "start": "192.168.0.0",
            "end": "192.168.0.255"
          }
          ```
        - Mask
          ```
          {
            "address": "192.168.0.0",
            "netmask": "24"
          }
          ```
        ## Initiator "default"
        The default iSCSI authentication definition is created when the iSCSI service is created. An iSCSI credentials object with _default_ as the initiator name identifies the default authentication for an SVM. The default credentials are used for any initiator that does not have specific iSCSI credentials. The default iSCSI authentication method is _none_, but can be changed to _deny_ or _CHAP_. The default credentials object does not support an initiator address list.
        ## Examples
        ### Creating iSCSI credentials requiring no authentication
        ```
        # The API:
        POST /api/protocols/san/iscsi/credentials
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "initiator": "iqn.1992-08.com.netapp:initiator1", "authentication_type": "none" }'
        ```
        ---
        ### Creating iSCSI credentials using CHAP inbound authentication
        ```
        # The API:
        POST /api/protocols/san/iscsi/credentials
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "initiator": "iqn.1992-08.com.netapp:initiator2", "authentication_type": "CHAP", "chap": { "inbound": { "user": "user1", "password": "password1" } } }'
        ```
        ---
        ### Retrieving all properties of all iSCSI credentials
        The `fields` query parameter is used to request all iSCSI credentials properties.<br/>
        Passwords are not included in the GET output.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/iscsi/credentials
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "default",
              "authentication_type": "none",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/19d04b8e-94d7-11e8-8370-005056b48fd2/default"
                }
              }
            },
            {
              "svm": {
                "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "iqn.1992-08.com.netapp:initiator1",
              "authentication_type": "none",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/19d04b8e-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator1"
                }
              }
            },
            {
              "svm": {
                "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "iqn.1992-08.com.netapp:initiator2",
              "authentication_type": "chap",
              "chap": {
                "inbound": {
                  "user": "user1"
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/19d04b8e-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2"
                }
              }
            },
            {
              "svm": {
                "uuid": "25f617cf-94d7-11e8-8370-005056b48fd2",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/25f617cf-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "default",
              "authentication_type": "none",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/default"
                }
              }
            },
            {
              "svm": {
                "uuid": "25f617cf-94d7-11e8-8370-005056b48fd2",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/25f617cf-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "iqn.1992-08.com.netapp:initiator2",
              "authentication_type": "none",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2"
                }
              }
            },
            {
              "svm": {
                "uuid": "25f617cf-94d7-11e8-8370-005056b48fd2",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/25f617cf-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "initiator": "iqn.1992-08.com.netapp:initiator3",
              "authentication_type": "deny",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator3"
                }
              }
            }
          ],
          "num_records": 6,
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/credentials?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving specific iSCSI credentials
        ```
        # The API:
        GET /api/protocols/san/iscsi/credentials/{svm.uuid}/{initiator}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "25f617cf-94d7-11e8-8370-005056b48fd2",
            "name": "svm2",
            "_links": {
              "self": {
                "href": "/api/svm/svms/25f617cf-94d7-11e8-8370-005056b48fd2"
              }
            }
          },
          "initiator": "iqn.1992-08.com.netapp:initiator2",
          "authentication_type": "chap",
          "chap": {
            "inbound": {
              "user": "user1"
            }
          },
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2"
            }
          }
        }
        ```
        ---
        ### Updating the authentication type of iSCSI credentials
        ```
        # The API:
        PATCH /api/protocols/san/iscsi/credentials/{svm.uuid}/{initiator}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2' -H 'accept: application/hal+json' -d '{ "authentication_type": "chap", "chap": { "inbound": { "user": "user1", "password": "password1" } } }'
        ```
        ---
        ### Updating the initiator address list of iSCSI credentials
        ```
        # The API:
        PATCH /api/protocols/san/iscsi/credentials/{svm.uuid}/{initiator}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2' -H 'accept: application/hal+json' -d '{ "initiator_address": { "ranges": [ { "start": "192.168.0.0", "end": "192.168.255.255" } ] } }'
        ```
        ---
        ### Deleting iSCSI credentials
        ```
        # The API:
        DELETE /api/protocols/san/iscsi/credentials/{svm.uuid}/{initiator}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/iscsi/credentials/25f617cf-94d7-11e8-8370-005056b48fd2/iqn.1992-08.com.netapp:initiator2' -H 'accept: application/hal+json'
        ```
      tags:
      - SAN
  /protocols/san/iscsi/credentials/{svm.uuid}/{initiator}:
    delete:
      description: |
        Deletes specified iSCSI credentials.
        ### Related ONTAP commands
        * `vserver iscsi security delete`
        ### Learn more
        * [`DOC /protocols/san/iscsi/credentials`](#docs-SAN-protocols_san_iscsi_credentials)
      operationId: iscsi_credentials_delete
      parameters:
      - description: |
          The unique identifier of an SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The iSCSI initiator of the credentials object.
        in: path
        name: initiator
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 2621706 | Both the SVM UUID and SVM name were supplied, but they do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5374148 | The default security credential cannot be deleted for an SVM. |
            | 5374895 | The iSCSI security credential does not exist on the specified SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves specified iSCSI credentials.
        ### Related ONTAP commands
        * `vserver iscsi security show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/credentials`](#docs-SAN-protocols_san_iscsi_credentials)
      operationId: iscsi_credentials_get
      parameters:
      - description: |
          The unique identifier of an SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The iSCSI initiator of the credentials object.
        in: path
        name: initiator
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_credentials'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    patch:
      description: |
        Updates specified iSCSI credentials.
        ### Related ONTAP commands
        * `vserver iscsi security add-initiator-address-ranges`
        * `vserver iscsi security default`
        * `vserver iscsi security modify`
        * `vserver iscsi security remove-initiator-address-ranges`
        ### Learn more
        * [`DOC /protocols/san/iscsi/credentials`](#docs-SAN-protocols_san_iscsi_credentials)
      operationId: iscsi_credentials_modify
      parameters:
      - description: |
          The unique identifier of an SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The iSCSI initiator of the credentials object.
        in: path
        name: initiator
        required: true
        type: string
      - default: false
        description: |
          If _true_, the initiator addresses in the body merge into the existing addresses in the iSCSI security object rather than replace the existing addresses.
        in: query
        name: add_initiator_addresses
        type: boolean
      - default: false
        description: |
          If _true_, the initiator addresses in the body are removed from the existing addresses in the iSCSI security object rather than replace the existing addresses.
        in: query
        name: remove_initiator_addresses
        type: boolean
      - description: |
          The new property values for the iSCSI credentials object.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/iscsi_credentials'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 2621706 | Both the SVM UUID and SVM name were supplied, but they do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5374145 | The iSCSI security password must contain an even number of valid hex digits. |
            | 5374147 | The CHAP inbound and outbound passwords must be different. |
            | 5374149 | The inbound user and password properties are required for CHAP authentication. |
            | 5374150 | Outbound CHAP authentication requires an outbound password. |
            | 5374155 | The functionality is not supported for the default security credential. |
            | 5374855 | The value for property `initiator_address.ranges.start` is greater than the value for property `initiator_address.ranges.end`. |
            | 5374856 | The value for property `initiator_address.ranges.start` does not belong to the same IP address family as the value for property `initiator_address.ranges.end`. |
            | 5374895 | The iSCSI security credential does not exist on the specified SVM. |
            | 5374900 | Setting the CHAP authentication properties are not supported with authentication types _none_ or _deny_. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/iscsi/services:
    get:
      description: |
        Retrieves iSCSI services.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `statistics.*`
        * `metric.*`
        ### Related ONTAP commands
        * `vserver iscsi show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/services`](#docs-SAN-protocols_san_iscsi_services)
      operationId: iscsi_service_collection_get
      parameters:
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by target.name
        in: query
        name: target.name
        type: string
      - description: Filter by target.alias
        in: query
        name: target.alias
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_service_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates an iSCSI service.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the iSCSI service.
        ### Related ONTAP commands
        * `vserver iscsi create`
        ### Learn more
        * [`DOC /protocols/san/iscsi/services`](#docs-SAN-protocols_san_iscsi_services)
      operationId: iscsi_service_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new iSCSI service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/iscsi_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/iscsi_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1115127 | The cluster lacks a valid iSCSI license. |
            | 2621462 | The supplied SVM does not exist. |
            | 2621507 | The iSCSI protocol is not allowed for the specified SVM. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5373966 | An iSCSI service cannot be created in an SVM that is configured for NVMe. |
            | 5374077 | An iSCSI service already exists for the specified SVM. |
            | 5374893 | The SVM is stopped. The SVM must be running to create an iSCSI service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        An iSCSI service defines the properties of the iSCSI target for an SVM. There can be at most one iSCSI service for an SVM. An SVM's iSCSI service must be created before iSCSI initiators can log in to the SVM.<br/>
        The iSCSI service REST API allows you to create, update, delete, and discover iSCSI services for SVMs.
        ## Performance monitoring
        Performance of the SVM can be monitored by the `metric.*` and `statistics.*` properties. These show the performance of the SVM in terms of IOPS, latency and throughput. The `metric.*` properties denote an average whereas `statistics.*` properties denote a real-time monotonically increasing value aggregated across all nodes.
        ## Examples
        ### Creating an iSCSI service for an SVM
        The simplest way to create an iSCSI service is to specify only the SVM, either by name or UUID. By default, the new iSCSI service is enabled and uses the SVM name as its target alias.<br/>
        In this example, the `return_records` query parameter is used to retrieve the new iSCSI service object in the REST response.
        <br/>
        ```
        # The API:
        POST /api/protocols/san/iscsi/services
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/iscsi/services?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" } }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "enabled": true,
              "target": {
                "name": "iqn.1992-08.com.netapp:sn.19d04b8e94d711e88370005056b48fd2:vs.4",
                "alias": "svm1"
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving the iSCSI services for all SVMs in the cluster
        ```
        # The API:
        GET /api/protocols/san/iscsi/services
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/iscsi/services' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2"
                }
              }
            },
            {
              "svm": {
                "uuid": "25f617cf-94d7-11e8-8370-005056b48fd2",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/25f617cf-94d7-11e8-8370-005056b48fd2"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/services/25f617cf-94d7-11e8-8370-005056b48fd2"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/services"
            }
          }
        }
        ```
        ---
        ### Retrieving details for a specific iSCSI service
        The iSCSI service is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/iscsi/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
              }
            }
          },
          "enabled": true,
          "target": {
            "name": "iqn.1992-08.com.netapp:sn.19d04b8e94d711e88370005056b48fd2:vs.4",
            "alias": "svm1"
          },
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2"
            }
          }
        }
        ```
        ---
        ### Disabling an iSCSI service
        Disabling an iSCSI service shuts down all active iSCSI sessions for the SVM and prevents the creation of new iSCSI sessions.<br/>
        The iSCSI service to update is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        PATCH /api/protocols/san/iscsi/services/{svm.uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2' -H 'accept: application/hal+json' -d '{ "enabled": "false" }'
        ```
        <br/>
        You can retrieve the iSCSI service to confirm the change.<br/>
        In this example, the `fields` query parameter is used to limit the response to the `enabled` property and iSCSI service identifiers.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/iscsi/services/{svm.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2?fields=enabled' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "19d04b8e-94d7-11e8-8370-005056b48fd2",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/19d04b8e-94d7-11e8-8370-005056b48fd2"
              }
            }
          },
          "enabled": false,
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2"
            }
          }
        }
        ```
        ---
        ### Deleting an iSCSI service
        The iSCSI service must be disabled before it can be deleted.<br/>
        The iSCSI service to be deleted is identified by the UUID of its SVM.
        <br/>
        ```
        # The API:
        DELETE /api/protocols/san/iscsi/services/{svm.uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/iscsi/services/19d04b8e-94d7-11e8-8370-005056b48fd2' -H 'accept: application/hal+json'
        ```
      tags:
      - SAN
  /protocols/san/iscsi/services/{svm.uuid}:
    delete:
      description: |
        Deletes an iSCSI service. An iSCSI service must be disabled before it can be deleted.
        ### Related ONTAP commands
        * `vserver iscsi delete`
        ### Learn more
        * [`DOC /protocols/san/iscsi/services`](#docs-SAN-protocols_san_iscsi_services)
      operationId: iscsi_service_delete
      parameters:
      - description: |
          The unique identifier of the SVM for which to delete the iSCSI service.
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5373960 | The iSCSI service is enabled. The iSCSI service must be disabled before it can be deleted. |
            | 5374078 | The SVM does not have an iSCSI service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves an iSCSI service.
        ### Related ONTAP commands
        * `vserver iscsi show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/services`](#docs-SAN-protocols_san_iscsi_services)
      operationId: iscsi_service_get
      parameters:
      - description: |
          The unique identifier of the SVM for which to retrieve the iSCSI service.
        in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_service'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5374078 | The SVM does not have an iSCSI service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    patch:
      description: |
        Updates an iSCSI service.
        ### Related ONTAP commands
        * `vserver iscsi modify`
        * `vserver iscsi start`
        * `vserver iscsi stop`
        ### Learn more
        * [`DOC /protocols/san/iscsi/services`](#docs-SAN-protocols_san_iscsi_services)
      operationId: iscsi_service_modify
      parameters:
      - description: |
          The unique identifier of the SVM for which to update the iSCSI service.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The new property values for the iSCSI service.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/iscsi_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
            | 5374078 | The SVM does not have an iSCSI service. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/iscsi/services/{svm.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for the iSCSI protocol
        of an SVM.
      operationId: iscsi_collection_performance_metrics_get
      parameters:
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: The unique identifier of the SVM.
        in: path
        name: svm.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_iscsi_metric_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/iscsi/sessions:
    get:
      description: |
        Retrieves iSCSI sessions.
        ### Related ONTAP commands
        * `vserver iscsi connection show`
        * `vserver iscsi session parameter show`
        * `vserver iscsi session show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/sessions`](#docs-SAN-protocols_san_iscsi_sessions)
      operationId: iscsi_session_collection_get
      parameters:
      - description: Filter by tsih
        in: query
        name: tsih
        type: integer
      - description: Filter by initiator.alias
        in: query
        name: initiator.alias
        type: string
      - description: Filter by initiator.name
        in: query
        name: initiator.name
        type: string
      - description: Filter by isid
        in: query
        name: isid
        type: string
      - description: Filter by igroups.uuid
        in: query
        name: igroups.uuid
        type: string
      - description: Filter by igroups.name
        in: query
        name: igroups.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by target_portal_group_tag
        in: query
        name: target_portal_group_tag
        type: integer
      - description: Filter by connections.authentication_type
        in: query
        name: connections.authentication_type
        type: string
      - description: Filter by connections.initiator_address.port
        in: query
        name: connections.initiator_address.port
        type: integer
      - description: Filter by connections.initiator_address.address
        in: query
        name: connections.initiator_address.address
        type: string
      - description: Filter by connections.cid
        in: query
        name: connections.cid
        type: integer
      - description: Filter by connections.interface.name
        in: query
        name: connections.interface.name
        type: string
      - description: Filter by connections.interface.uuid
        in: query
        name: connections.interface.uuid
        type: string
      - description: Filter by connections.interface.ip.address
        in: query
        name: connections.interface.ip.address
        type: string
      - description: Filter by connections.interface.ip.port
        in: query
        name: connections.interface.ip.port
        type: integer
      - description: Filter by target_portal_group
        in: query
        name: target_portal_group
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_session_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        An iSCSI session is one or more TCP connections that link an iSCSI initiator with an iSCSI target. TCP connections can be added and removed from an iSCSI session by the iSCSI initiator. Across all TCP connections within an iSCSI session, an initiator sees one and the same target. After the connection is established, iSCSI control, data, and status messages are communicated over the session.<br/>
        The iSCSI sessions REST API provides information about iSCSI initiators that have successfully logged in to ONTAP.
        ## Examples
        ### Retrieving all iSCSI sessions
        ```
        # The API:
        GET /api/protocols/san/iscsi/sessions
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/san/iscsi/sessions" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/a009a9e7-4081-b576-7575-ada21efcaf16"
                  }
                }
              },
              "target_portal_group": "iscsi_lif1",
              "tsih": 10,
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/sessions/a009a9e7-4081-b576-7575-ada21efcaf16/iscsi_lif1/10"
                }
              }
            },
            {
              "svm": {
                "uuid": "b009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm2",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/b009a9e7-4081-b576-7575-ada21efcaf16"
                  }
                }
              },
              "target_portal_group": "iscsi_lif2",
              "tsih": 11,
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/sessions/b009a9e7-4081-b576-7575-ada21efcaf16/iscsi_lif2/11"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/sessions"
            }
          }
        }
        ```
        ---
        ### Retrieving all of the iSCSI sessions under the target portal group _iscsi_lif1_
        The `tpgroup` query parameter is used to perform the query.
        <br/>
        ```
        # The API:
        GET /api/protocols/san/iscsi/sessions
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/san/iscsi/sessions?tpgroup=iscsi_lif1" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/a009a9e7-4081-b576-7575-ada21efcaf16"
                  }
                }
              },
              "target_portal_group": "iscsi_lif1",
              "tsih": 10,
              "_links": {
                "self": {
                  "href": "/api/protocols/san/iscsi/sessions/a009a9e7-4081-b576-7575-ada21efcaf16/iscsi_lif1/10"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/sessions"
            }
          }
        }
        ```
        ---
        ### Retrieving an iSCSI session
        ```
        # The API:
        GET /api/protocols/san/iscsi/sessions/{svm.uuid}/{target_portal_group}/{tsih}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/san/iscsi/sessions/a009a9e7-4081-b576-7575-ada21efcaf16/iscsi_lif1/10" -H "accept: application/hal+json"
        # The response:
        {
          "svm": {
            "uuid": "a009a9e7-4081-b576-7575-ada21efcaf16",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/a009a9e7-4081-b576-7575-ada21efcaf16"
              }
            }
          },
          "target_portal_group": "iscsi_lif1",
          "tsih": 10,
          "initiator": {
            "name": "iqn.1994-05.com.example:string"
          },
          "isid": "61:62:63:64:65:00",
          "target_portal_group_tag": 1027,
          "connections": [
            {
              "cid": 1,
              "authentication_type": "chap",
              "initiator_address": {
                "address": "10.224.123.85",
                "port": 43827
              },
              "interface": {
                "name": "iscsi_lif1",
                "uuid": "c15439b4-dbb4-11e8-90ac-005056bba882",
                "ip": {
                  "address": "192.168.0.1",
                  "port": 3260
                },
                "_links": {
                  "self": {
                    "href": "/api/network/ip/interfaces/c15439b4-dbb4-11e8-90ac-005056bba882"
                  }
                }
              }
            }
          ],
          "igroups": [
            {
              "uuid": "af7838cd-f993-4faf-90b7-5524787ae1e8",
              "name": "igroup1",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/af7838cd-f993-4faf-90b7-5524787ae1e8"
                }
              }
            },
            {
              "uuid": "bf7838cd-f993-4faf-90b7-5524787ae1e8",
              "name": "igroup2",
              "_links": {
                "self": {
                  "href": "/api/protocols/san/igroups/bf7838cd-f993-4faf-90b7-5524787ae1e8"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/protocols/san/iscsi/sessions/a009a9e7-4081-b576-7575-ada21efcaf16/iscsi_lif1/10"
            }
          }
        }
        ```
      tags:
      - SAN
  /protocols/san/iscsi/sessions/{svm.uuid}/{tpgroup}/{tsih}:
    get:
      description: |
        Retrieves an iSCSI session.
        ### Related ONTAP commands
        * `vserver iscsi connection show`
        * `vserver iscsi session parameter show`
        * `vserver iscsi session show`
        ### Learn more
        * [`DOC /protocols/san/iscsi/sessions`](#docs-SAN-protocols_san_iscsi_sessions)
      operationId: iscsi_session_get
      parameters:
      - description: |
          The unique identifier of the SVM of the iSCSI session.
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: |
          The target portal group of the iSCSI session.
        in: path
        name: tpgroup
        required: true
        type: string
      - description: |
          The target session identifying handle.
        in: path
        name: tsih
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/iscsi_session'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621462 | An SVM with the specified UUID does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/san/lun-maps:
    get:
      description: |-
        Retrieves LUN maps.
        ### Related ONTAP commands
        * `lun mapping show`
        * [`DOC /protocols/san/lun-maps`](#docs-SAN-protocols_san_lun-maps)

        ### Learn more
        * [`DOC /protocols/san/lun-maps`](#docs-SAN-protocols_san_lun-maps)
      operationId: lun_map_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by igroup.name
        in: query
        name: igroup.name
        type: string
      - description: Filter by igroup.os_type
        in: query
        name: igroup.os_type
        type: string
      - description: Filter by igroup.initiators
        in: query
        name: igroup.initiators
        type: string
      - description: Filter by igroup.protocol
        in: query
        name: igroup.protocol
        type: string
      - description: Filter by igroup.uuid
        in: query
        name: igroup.uuid
        type: string
      - description: Filter by lun.node.name
        in: query
        name: lun.node.name
        type: string
      - description: Filter by lun.node.uuid
        in: query
        name: lun.node.uuid
        type: string
      - description: Filter by lun.uuid
        in: query
        name: lun.uuid
        type: string
      - description: Filter by lun.name
        in: query
        name: lun.name
        type: string
      - description: Filter by logical_unit_number
        in: query
        name: logical_unit_number
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_map_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates a LUN map.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the LUN map.
        * `igroup.uuid` or `igroup.name` - Existing initiator group to map to the specified LUN.
        * `lun.uuid` or `lun.name` - Existing LUN to map to the specified initiator group.
        ### Default property values
        If not specified in POST, the following default property values are assigned.
        * `logical_unit_number` - If no value is provided, ONTAP assigns the lowest available value.
        ### Related ONTAP commands
        * `lun mapping create`
        ### Learn more
        * [`DOC /protocols/san/lun-maps`](#docs-SAN-protocols_san_lun-maps)
      operationId: lun_map_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new LUN map.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/lun_map'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/lun_map_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254207 | The LUN is already mapped to the same initiator group. |
            | 2621462 | The specific SVM does not exist. |
            | 2621706 | Both the SVM UUID and SVM name were supplied, but don't refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5374053 | The LUN is the destination of an ongoing restore operation and is inaccessible for I/O and management. Wait for the restore to complete and try the command again. |
            | 5374238 | The operation is not allowed on a LUN in a Snapshot copy. |
            | 5374316 | A LUN move operation is in progress on the source LUN. |
            | 5374329 | A LUN of class `vvol` cannot be mapped. |
            | 5374573 | A node has no interface configured with the iSCSI or Fibre Channel protocols for the specified SVM. |
            | 5374574 | Multiple nodes have no interface configured with the iSCSI or Fibre Channel protocols for the specified SVM. |
            | 5374581 | A node has no interface configured with the iSCSI protocol for the specified SVM. |
            | 5374582 | Multiple nodes have no interface configured with the iSCSI protocol for the specified SVM. |
            | 5374583 | A node has no interface configured with the Fibre Channel protocol for the specified SVM. |
            | 5374584 | Multiple nodes have no interface configured with the Fibre Channel protocol for the specified SVM. |
            | 5374901 | Either `lun.uuid` or `lun.name` must be provided to create a LUN map. |
            | 5374902 | Either `igroup.uuid` or `igroup.name` must be provided to create a LUN map. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        A LUN map is an association between a LUN and an initiator group. When a LUN is mapped to an initiator group, the initiator group's initiators are granted access to the LUN. The relationship between an initiator group and a LUN is many initiator groups to many LUNs.<br/>
        The LUN map REST API allows you to create, delete, and discover LUN maps.
        ## Examples
        ### Creating a LUN map
        ```
        # The API:
        POST /api/protocols/san/lun-maps
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/protocols/san/lun-maps' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "igroup": { "name": "igroup1" }, "lun": { "name": "/vol/vol1/lun1" } }'
        ```
        ---
        ### Retrieving all of the LUN maps
        ```
        # The API:
        GET /api/protocols/san/lun-maps
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/lun-maps' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "03157e81-24c5-11e9-9ec1-005056bba643",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/03157e81-24c5-11e9-9ec1-005056bba643"
                  }
                }
              },
              "lun": {
                "uuid": "a60d9862-9bee-49a6-8162-20d2421bb1a6",
                "name": "/vol/vol1/lun1",
                "_links": {
                  "self": {
                    "href": "/api/storage/luns/a60d9862-9bee-49a6-8162-20d2421bb1a6"
                  }
                }
              },
              "igroup": {
                "uuid": "40d98b2c-24c5-11e9-9ec1-005056bba643",
                "name": "ig1",
                "_links": {
                  "self": {
                    "href": "/api/protocols/san/igroups/40d98b2c-24c5-11e9-9ec1-005056bba643"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/lun-maps/a60d9862-9bee-49a6-8162-20d2421bb1a6/40d98b2c-24c5-11e9-9ec1-005056bba643"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/protocols/san/lun-maps"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific LUN map
        ```
        # The API:
        GET /api/protocols/san/lun-maps/{lun.uuid}/{igroup.uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/protocols/san/lun-maps/a60d9862-9bee-49a6-8162-20d2421bb1a6/40d98b2c-24c5-11e9-9ec1-005056bba643' -H 'accept: application/hal+json'
        # The response:
        {
          "svm": {
            "uuid": "03157e81-24c5-11e9-9ec1-005056bba643",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/03157e81-24c5-11e9-9ec1-005056bba643"
              }
            }
          },
          "lun": {
            "uuid": "a60d9862-9bee-49a6-8162-20d2421bb1a6",
            "name": "/vol/vol1/lun1",
            "node": {
              "uuid": "7d8607ea-24c1-11e9-9ec1-005056bba643",
              "name": "node1",
              "_links": {
                "self": {
                  "href": "/api/cluster/nodes/7d8607ea-24c1-11e9-9ec1-005056bba643"
                }
              }
            },
            "_links": {
              "self": {
                "href": "/api/storage/luns/a60d9862-9bee-49a6-8162-20d2421bb1a6"
              }
            }
          },
          "igroup": {
            "uuid": "40d98b2c-24c5-11e9-9ec1-005056bba643",
            "name": "ig1",
            "os_type": "linux",
            "protocol": "mixed",
            "_links": {
              "self": {
                "href": "/api/protocols/san/igroups/40d98b2c-24c5-11e9-9ec1-005056bba643"
              }
            }
          },
          "logical_unit_number": 0,
          "_links": {
            "self": {
              "href": "/api/protocols/san/lun-maps/a60d9862-9bee-49a6-8162-20d2421bb1a6/40d98b2c-24c5-11e9-9ec1-005056bba643"
            }
          }
        }
        ```
        ---
        ### Deleting a LUN map
        ```
        # The API:
        DELETE /api/protocols/san/lun-maps/{lun.uuid}/{igroup.uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/protocols/san/lun-maps/a60d9862-9bee-49a6-8162-20d2421bb1a6/40d98b2c-24c5-11e9-9ec1-005056bba643' -H 'accept: application/hal+json'
        ```
      tags:
      - SAN
  /protocols/san/lun-maps/{lun.uuid}/{igroup.uuid}:
    delete:
      description: |
        Deletes a LUN map.
        ### Related ONTAP commands
        * `lun mapping delete`
        ### Learn more
        * [`DOC /protocols/san/lun-maps`](#docs-SAN-protocols_san_lun-maps)
      operationId: lun_map_delete
      parameters:
      - description: |
          The unique identifier of the LUN.
        in: path
        name: lun.uuid
        required: true
        type: string
      - description: |
          The unique identifier of the igroup.
        in: path
        name: igroup.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374875 | The LUN was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves a LUN map.
        ### Related ONTAP commands
        * `lun mapping show`
        ### Learn more
        * [`DOC /protocols/san/lun-maps`](#docs-SAN-protocols_san_lun-maps)
      operationId: lun_map_get
      parameters:
      - description: |
          The unique identifier of the LUN.
        in: path
        name: lun.uuid
        required: true
        type: string
      - description: |
          The unique identifier of the igroup.
        in: path
        name: igroup.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_map'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374852 | The initiator group was not found. |
            | 5374875 | The LUN was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /protocols/vscan:
    get:
      description: |
        Retrieves the Vscan configuration.
        This includes scanner-pools, On-Access policies, On-Demand policies, and information about whether a Vscan is enabled or disabled on an SVM.<br/>
        Important notes:
        * You can enable only one Vscan configuration at a time for an SVM.
        * You can only query using `svm.uuid` or `svm.name`.
        ### Related ONTAP commands
        * `vserver vscan show`
        * `vserver vscan scanner-pool show`
        * `vserver vscan scanner-pool servers show`
        * `vserver vscan scanner-pool privileged-users show`
        * `vserver vscan scanner-pool show-active`
        * `vserver vscan on-access-policy show`
        * `vserver vscan on-access-policy file-ext-to-exclude show`
        * `vserver vscan on-access-policy file-ext-to-include show`
        * `vserver vscan on-access-policy paths-to-exclude show`
        * `vserver vscan on-demand-task show`
        ### Learn more
        * [`DOC /protocols/vscan`](#docs-NAS-protocols_vscan)
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by on_demand_policies.scope.include_extensions
        in: query
        name: on_demand_policies.scope.include_extensions
        type: string
      - description: Filter by on_demand_policies.scope.max_file_size
        in: query
        name: on_demand_policies.scope.max_file_size
        type: integer
      - description: Filter by on_demand_policies.scope.exclude_extensions
        in: query
        name: on_demand_policies.scope.exclude_extensions
        type: string
      - description: Filter by on_demand_policies.scope.exclude_paths
        in: query
        name: on_demand_policies.scope.exclude_paths
        type: string
      - description: Filter by on_demand_policies.scope.scan_without_extension
        in: query
        name: on_demand_policies.scope.scan_without_extension
        type: boolean
      - description: Filter by on_demand_policies.log_path
        in: query
        name: on_demand_policies.log_path
        type: string
      - description: Filter by on_demand_policies.scan_paths
        in: query
        name: on_demand_policies.scan_paths
        type: string
      - description: Filter by on_demand_policies.name
        in: query
        name: on_demand_policies.name
        type: string
      - description: Filter by on_demand_policies.schedule.uuid
        in: query
        name: on_demand_policies.schedule.uuid
        type: string
      - description: Filter by on_demand_policies.schedule.name
        in: query
        name: on_demand_policies.schedule.name
        type: string
      - description: Filter by scanner_pools.name
        in: query
        name: scanner_pools.name
        type: string
      - description: Filter by scanner_pools.servers
        in: query
        name: scanner_pools.servers
        type: string
      - description: Filter by scanner_pools.cluster.name
        in: query
        name: scanner_pools.cluster.name
        type: string
      - description: Filter by scanner_pools.cluster.uuid
        in: query
        name: scanner_pools.cluster.uuid
        type: string
      - description: Filter by scanner_pools.role
        in: query
        name: scanner_pools.role
        type: string
      - description: Filter by scanner_pools.privileged_users
        in: query
        name: scanner_pools.privileged_users
        type: string
      - description: Filter by on_access_policies.mandatory
        in: query
        name: on_access_policies.mandatory
        type: boolean
      - description: Filter by on_access_policies.name
        in: query
        name: on_access_policies.name
        type: string
      - description: Filter by on_access_policies.scope.scan_without_extension
        in: query
        name: on_access_policies.scope.scan_without_extension
        type: boolean
      - description: Filter by on_access_policies.scope.only_execute_access
        in: query
        name: on_access_policies.scope.only_execute_access
        type: boolean
      - description: Filter by on_access_policies.scope.exclude_paths
        in: query
        name: on_access_policies.scope.exclude_paths
        type: string
      - description: Filter by on_access_policies.scope.scan_readonly_volumes
        in: query
        name: on_access_policies.scope.scan_readonly_volumes
        type: boolean
      - description: Filter by on_access_policies.scope.exclude_extensions
        in: query
        name: on_access_policies.scope.exclude_extensions
        type: string
      - description: Filter by on_access_policies.scope.max_file_size
        in: query
        name: on_access_policies.scope.max_file_size
        type: integer
      - description: Filter by on_access_policies.scope.include_extensions
        in: query
        name: on_access_policies.scope.include_extensions
        type: string
      - description: Filter by on_access_policies.enabled
        in: query
        name: on_access_policies.enabled
        type: boolean
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a Vscan configuration, which includes a list of scanner-pools, Vscan On-Access policies and Vscan On-Demand policies. Defines whether the Vscan configuration you create is enabled or disabled for a specified SVM.<br/>
        Important notes:
        * You can enable only one Vscan configuration at a time for an SVM.
        * There needs to be at least one active scanner-pool and one enabled On-Access policy to enable Vscan successfully.
        * By default, a Vscan is enabled when it’s created.
        * By default, the Vscan On-Access policies created from this endpoint are in the disabled state. You can use the On-Access policy PATCH endpoint to enable a particular On-Access policy. In ONTAP 9.6, only one Vscan On-Access policy can be enabled and only one Vscan On-Demand policy can be scheduled on an SVM.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the Vscan configuration.
        ### Recommended optional properties
        * `scanner_pools` - There must be at least one active scanner-pool for Vscan configuration. Created either through Vscan POST operation or scanner-pools POST operation.
        ### Default property values
        If not specified in POST, the following default property value is assigned:
        * `enabled` - _true_
        ### Related ONTAP commands
        * `vserver vscan enable`
        * `vserver vscan scanner-pool create`
        * `vserver vscan scanner-pool apply-policy`
        * `vserver vscan scanner-pool servers add`
        * `vserver vscan scanner-pool privileged-users add`
        * `vserver vscan on-access-policy create`
        * `vserver vscan on-access-policy file-ext-to-exclude add`
        * `vserver vscan on-access-policy file-ext-to-include add`
        * `vserver vscan on-access-policy paths-to-exclude add`
        * `vserver vscan on-demand-task create`
        ### Learn more
        * [`DOC /protocols/vscan`](#docs-NAS-protocols_vscan)
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/vscan_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027259   | A scanner-pool, an On-Access policy, or an On-Demand policy might fail to get created due to either a systematic error or some hardware failure. The error code returned details the failure along with the reason for the failure. For example, if a scanner-pool fails due to an incorrect cluster name, then the error might read: \"Failed to create scanner-pool \"scanner-1\". Reason: \"Cluster uuid points to different cluster name instead of the cluster-name supplied.\". Retry the operation.\"
            | 10027260   | If a scanner-pool, an On-Access policy or an On-Demand policy specified in the input already exists, then a duplicate error is returned. For example, if a scanner-pool \"scanner-1\" already exists for an SVM and is again specified in the input, the error message will read: \" Failed to create scanner-pool \"scanner-1\" as the specified entry already exists. Delete the entry and retry the POST operation.\"
            | 2621462    | The specified SVM name is invalid
            | 2621706    | The specified svm.uuid is either invalid or belongs to a different SVM
            | 10027015   | Attempting to enable a Vscan but no active scanner-pool exists for the specified SVM
            | 10027011   | Attempting to enable a Vscan for an SVM for which no CIFS server exists
            | 10027023   | Attempting to enable a Vscan for an SVM for which no active Vscan On-Access policy exist
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Use Vscan to protect data from being compromised by viruses or other malicious code. Vscan combines best-in-class third party antivirus software with ONTAP features that give you the flexibility you need to control which files get scanned and when. Storage systems offload scanning operations to external servers hosting antivirus software from third party vendors. An Antivirus Connector on the external server handles communications between the storage system and the antivirus software.
        ## Examples
        ### Retrieving all of the Vscan configurations
        ```
        # The API:
        /api/protocols/vscan
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "03ce5c36-f269-11e8-8852-0050568e5298",
                "name": "vs1"
              },
              "enabled": true,
              "scanner_pools": [
                {
                  "name": "scanner-1",
                  "servers": [
                    "1.1.1.1",
                    "10.72.204.27"
                  ],
                  "privileged_users": [
                    "cifs\\u1",
                    "cifs\\u2"
                  ],
                  "role": "primary",
                  "cluster": {
                    "name": "Cluster1",
                    "uuid": "0228714d-f268-11e8-8851-0050568e5298"
                  }
                },
                {
                  "name": "scanner-2",
                  "servers": [
                    "1.1.1.1",
                    "10.72.204.27"
                  ],
                  "privileged_users": [
                    "cifs\\u1",
                    "cifs\\u2"
                  ],
                  "role": "primary",
                  "cluster": {
                    "name": "Cluster1",
                    "uuid": "0228714d-f268-11e8-8851-0050568e5298"
                  }
                }
              ],
              "on_access_policies": [
                {
                  "name": "default_CIFS",
                  "vsName": "vs1",
                  "enabled": true,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 2147483648,
                    "include_extensions": [
                      "*"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                },
                {
                  "name": "on-access-test1",
                  "vsName": "vs1",
                  "enabled": false,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 10000,
                    "exclude_paths": [
                      "\dir"
                    ],
                    "include_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "exclude_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                },
                {
                  "name": "on-access-test2",
                  "vsName": "vs1",
                  "enabled": false,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 10000,
                    "exclude_paths": [
                      "\dir"
                    ],
                    "include_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "exclude_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                }
              ],
              "on_demand_policies": [
                {
                  "name": "task-1",
                  "scan_paths": [
                    "/vol1"
                  ],
                  "log_path": "/vol1",
                  "scope": {
                    "max_file_size": 10000,
                    "exclude_paths": [
                      "/vol1"
                    ],
                    "include_extensions": [
                      "vmdk",
                      "mp*"
                    ],
                    "exclude_extensions": [
                      "mp3",
                      "mp4"
                    ],
                    "scan_without_extension": true
                  }
                },
                {
                  "name": "task-2",
                  "scan_paths": [
                    "/vol1"
                  ],
                  "log_path": "/vol2",
                  "scope": {
                    "max_file_size": 10000,
                    "exclude_paths": [
                      "/vol2"
                    ],
                    "include_extensions": [
                      "vmdk",
                      "mp*"
                    ],
                    "exclude_extensions": [
                      "mp3",
                      "mp4"
                    ],
                    "scan_without_extension": true
                  }
                }
              ]
            },
            {
              "svm": {
                "uuid": "24c2567a-f269-11e8-8852-0050568e5298",
                "name": "vs2"
              },
              "enabled": false,
              "scanner_pools": [
                {
                  "name": "sp2",
                  "servers": [
                    "1.1.1.1"
                  ],
                  "privileged_users": [
                    "cifs\\u1"
                  ],
                  "role": "idle"
                }
              ],
              "on_access_policies": [
                {
                  "name": "default_CIFS",
                  "vsName": "vs2",
                  "enabled": true,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 2147483648,
                    "include_extensions": [
                      "*"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                },
                {
                  "name": "ap1",
                  "vsName": "vs2",
                  "enabled": false,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 2147483648,
                    "include_extensions": [
                      "*"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                }
              ],
              "on_demand_policies": [
                {
                  "name": "t1",
                  "scan_paths": [
                    "/vol1"
                  ],
                  "log_path": "/vol1",
                  "scope": {
                    "max_file_size": 10737418240,
                    "include_extensions": [
                      "*"
                    ],
                    "scan_without_extension": true
                  }
                }
              ]
            }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving all Vscan configurations for a particular SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/24c2567a-f269-11e8-8852-0050568e5298?fields=*" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "24c2567a-f269-11e8-8852-0050568e5298",
            "name": "vs2"
          },
          "enabled": false,
          "scanner_pools": [
            {
              "name": "sp2",
              "servers": [
                "1.1.1.1"
              ],
              "privileged_users": [
                "cifs\\u1"
              ],
              "role": "idle"
            }
          ],
          "on_access_policies": [
            {
              "name": "default_CIFS",
              "vsName": "vs2",
              "enabled": true,
              "mandatory": true,
              "scope": {
                "max_file_size": 2147483648,
                "include_extensions": [
                  "*"
                ],
                "scan_without_extension": true,
                "scan_readonly_volumes": false,
                "only_execute_access": false
              }
            },
            {
              "name": "ap1",
              "vsName": "vs2",
              "enabled": false,
              "mandatory": true,
              "scope": {
                "max_file_size": 2147483648,
                "include_extensions": [
                  "*"
                ],
                "scan_without_extension": true,
                "scan_readonly_volumes": false,
                "only_execute_access": false
              }
            }
          ],
          "on_demand_policies": [
            {
              "name": "t1",
              "scan_paths": [
                "/vol1"
              ],
              "log_path": "/vol1",
              "scope": {
                "max_file_size": 10737418240,
                "include_extensions": [
                  "*"
                ],
                "scan_without_extension": true
              }
            }
          ]
        }
        ```
        ### Creating a Vscan configuration
        ```
        # The API:
        /api/protocols/vscan
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan?return_records=true" -H "accept: appication/json" -H "Content-Type: application/json" -d "{ \"enabled\": true, \"on_access_policies\": [ { \"enabled\": true, \"mandatory\": true, \"name\": \"on-access-test\", \"scope\": { \"exclude_extensions\": [ \"mp*\", \"txt\" ], \"exclude_paths\": [ \"\\vol\" ], \"include_extensions\": [ \"mp*\", \"txt\" ], \"max_file_size\": 21474, \"only_execute_access\": false, \"scan_readonly_volumes\": false, \"scan_without_extension\": true } } ], \"on_demand_policies\": [ { \"log_path\": \"/vol\", \"name\": \"task-1\", \"scan_paths\": [ \"/vol\" ], \"schedule\": { \"name\": \"daily\", \"uuid\": \"d4984822-17b7-11e9-b450-0050568ecd85\" }, \"scope\": { \"exclude_extensions\": [ \"mp3\", \"mp4\" ], \"exclude_paths\": [ \"/vol\" ], \"include_extensions\": [ \"vmdk\", \"mp*\" ], \"max_file_size\": 10737, \"scan_without_extension\": true } } ], \"scanner_pools\": [ { \"cluster\": { \"name\": \"Cluster1\", \"uuid\": \"ab746d77-17b7-11e9-b450-0050568ecd85\" }, \"name\": \"scanner-1\", \"privileged_users\": [ \"cifs\\\\u1\", \"cifs\\\\u2\" ], \"role\": \"primary\", \"servers\": [ \"1.1.1.1\", \"10.72.204.27\" ] } ], \"svm\": { \"name\": \"vs1\", \"uuid\": \"b103be27-17b8-11e9-b451-0050568ecd85\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
              "uuid": "b103be27-17b8-11e9-b451-0050568ecd85",
              "name": "vs1"
              },
              "enabled": true,
              "scanner_pools": [
                {
                  "name": "scanner-1",
                  "servers": [
                    "1.1.1.1",
                    "10.72.204.27"
                  ],
                  "privileged_users": [
                    "cifs\\u1",
                    "cifs\\u2"
                  ],
                  "role": "primary",
                  "cluster": {
                    "name": "Cluster1",
                    "uuid": "ab746d77-17b7-11e9-b450-0050568ecd85"
                  }
                }
              ],
              "on_access_policies": [
                {
                  "name": "on-access-test",
                  "enabled": true,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 21474,
                    "exclude_paths": [
                      "\\vol"
                    ],
                    "include_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "exclude_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                }
              ],
              "on_demand_policies": [
                {
                  "name": "task-1",
                  "scan_paths": [
                    "/vol"
                  ],
                  "log_path": "/vol",
                  "schedule": {
                    "uuid": "d4984822-17b7-11e9-b450-0050568ecd85",
                    "name": "daily"
                  },
                  "scope": {
                    "max_file_size": 10737,
                    "exclude_paths": [
                      "//"
                    ],
                    "include_extensions": [
                      "vmdk",
                      "mp*"
                    ],
                    "exclude_extensions": [
                      "mp3",
                      "mp4"
                    ],
                    "scan_without_extension": true
                  }
                }
              ]
            }
          ]
        }
        ```
        ### Creating multiple Vscan scanner-pools for the specified SVM
        ```
        # The API:
        /api/protocols/vscan
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan?return_records=true" -H "accept: appication/json" -H "Content-Type: application/json" -d "{ \"scanner_pools\": [ { \"cluster\": { \"name\": \"Cluster1\", \"uuid\": \"ab746d77-17b7-11e9-b450-0050568ecd85\" }, \"name\": \"scanner-1\", \"privileged_users\": [ \"cifs\\\\u1\", \"cifs\\\\u2\" ], \"role\": \"primary\", \"servers\": [ \"1.1.1.1\", \"10.72.204.27\" ] }, { \"cluster\": { \"name\": \"Cluster1\", \"uuid\": \"ab746d77-17b7-11e9-b450-0050568ecd85\" }, \"name\": \"scanner-2\", \"privileged_users\": [ \"cifs\\\\u3\", \"cifs\\\\u4\" ], \"role\": \"primary\", \"servers\": [ \"1.1.1.5\", \"10.72.3.27\" ] } ], \"svm\": { \"name\": \"vs1\", \"uuid\": \"b103be27-17b8-11e9-b451-0050568ecd85\" }}"
        # The response:
        {
        "num_records": 1,
        "records": [
            {
              "svm": {
              "uuid": "b103be27-17b8-11e9-b451-0050568ecd85",
              "name": "vs1"
              },
              "scanner_pools": [
                {
                  "name": "scanner-1",
                  "servers": [
                    "1.1.1.1",
                    "10.72.204.27"
                  ],
                  "privileged_users": [
                    "cifs\\u1",
                    "cifs\\u2"
                  ],
                  "role": "primary",
                  "cluster": {
                    "name": "Cluster1",
                    "uuid": "ab746d77-17b7-11e9-b450-0050568ecd85"
                  }
                },
                {
                  "name": "scanner-2",
                  "servers": [
                    "1.1.1.5",
                    "10.72.3.27"
                  ],
                  "privileged_users": [
                    "cifs\\u3",
                    "cifs\\u4"
                  ],
                  "role": "primary",
                  "cluster": {
                    "name": "Cluster1",
                    "uuid": "ab746d77-17b7-11e9-b450-0050568ecd85"
                  }
                }
              ]
            }
          ]
        }
        ```
        ### Creating multiple Vscan On-access policies for a specified SVM
        ```
        # The API:
        /api/protocols/vscan
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"on_access_policies\": [ { \"enabled\": false, \"mandatory\": true, \"name\": \"on-access-test11\", \"scope\": { \"exclude_extensions\": [ \"mp*\", \"txt\" ], \"exclude_paths\": [ \"\\\\vol\" ], \"include_extensions\": [ \"mp*\", \"txt\" ], \"max_file_size\": 214748, \"only_execute_access\": false, \"scan_readonly_volumes\": false, \"scan_without_extension\": true } }, { \"enabled\": false, \"mandatory\": true, \"name\": \"on-access-test10\", \"scope\": { \"exclude_extensions\": [ \"mp*\", \"txt\" ], \"exclude_paths\": [ \"\\\\vol\" ], \"include_extensions\": [ \"mp*\", \"txt\" ], \"max_file_size\": 21474, \"only_execute_access\": false, \"scan_readonly_volumes\": false, \"scan_without_extension\": true } } ], \"svm\": { \"name\": \"vs1\", \"uuid\": \"b103be27-17b8-11e9-b451-0050568ecd85\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "b103be27-17b8-11e9-b451-0050568ecd85",
                "name": "vs1"
              },
              "on_access_policies": [
                {
                  "name": "on-access-test11",
                  "enabled": false,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 214748,
                    "exclude_paths": [
                      "\\vol"
                    ],
                    "include_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "exclude_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                },
                {
                  "name": "on-access-test10",
                  "enabled": false,
                  "mandatory": true,
                  "scope": {
                    "max_file_size": 21474,
                    "exclude_paths": [
                      "\\vol"
                    ],
                    "include_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "exclude_extensions": [
                      "mp*",
                      "txt"
                    ],
                    "scan_without_extension": true,
                    "scan_readonly_volumes": false,
                    "only_execute_access": false
                  }
                }
              ]
            }
          ]
        }
        ```
        ### Creating multiple Vscan On-demand policies for a specified SVM
        ```
        # The API:
        /api/protocols/vscan
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"on_demand_policies\": [ { \"log_path\": \"/vol\", \"name\": \"task-1\", \"scan_paths\": [ \"/vol\" ], \"schedule\": { \"name\": \"daily\", \"uuid\": \"d4984822-17b7-11e9-b450-0050568ecd85\" }, \"scope\": { \"exclude_extensions\": [ \"mp3\", \"mp4\" ], \"exclude_paths\": [ \"/vol1\" ], \"include_extensions\": [ \"vmdk\", \"mp*\" ], \"max_file_size\": 107374, \"scan_without_extension\": true } }, { \"log_path\": \"/vol\", \"name\": \"task-2\", \"scan_paths\": [ \"/vol\" ], \"scope\": { \"exclude_extensions\": [ \"mp3\", \"mp4\" ], \"exclude_paths\": [ \"/vol1\" ], \"include_extensions\": [ \"vmdk\", \"mp*\" ], \"max_file_size\": 107374, \"scan_without_extension\": true } } ], \"svm\": { \"name\": \"vs1\", \"uuid\": \"b103be27-17b8-11e9-b451-0050568ecd85\" }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "uuid": "b103be27-17b8-11e9-b451-0050568ecd85",
                "name": "vs1"
              },
              "on_demand_policies": [
                {
                  "name": "task-1",
                  "scan_paths": [
                    "/vol"
                  ],
                  "log_path": "/vol",
                  "schedule": {
                    "uuid": "d4984822-17b7-11e9-b450-0050568ecd85",
                    "name": "daily"
                  },
                  "scope": {
                    "max_file_size": 107374,
                    "exclude_paths": [
                      "/vol1"
                    ],
                    "include_extensions": [
                      "vmdk",
                      "mp*"
                    ],
                    "exclude_extensions": [
                      "mp3",
                      "mp4"
                    ],
                    "scan_without_extension": true
                  }
                },
                {
                  "name": "task-2",
                  "scan_paths": [
                    "/vol"
                  ],
                  "log_path": "/vol",
                  "scope": {
                    "max_file_size": 107374,
                    "exclude_paths": [
                      "/vol1"
                    ],
                    "include_extensions": [
                      "vmdk",
                      "mp*"
                    ],
                    "exclude_extensions": [
                      "mp3",
                      "mp4"
                    ],
                    "scan_without_extension": true
                  }
                }
              ]
            }
          ]
        }
        ```
        ### Enabling Vscan for a specified SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/03ce5c36-f269-11e8-8852-0050568e5298" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": true}"
        ```
        ### Clearing the Vscan cache for the specified SVM
        ```
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/03ce5c36-f269-11e8-8852-0050568e5298" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"cache_clear\": true}"
        ```
        ### Deleting the Vscan configuration for a specified SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/vscan/03ce5c36-f269-11e8-8852-0050568e5298" -H "accept: application/json"
        ```
      tags:
      - NAS
  /protocols/vscan/server-status:
    get:
      description: |
        Retrieves a Vscan server status.
        ### Related ONTAP commands
        * `vserver vscan connection-status show-all`
        ### Learn more
        * [`DOC /protocols/vscan/server-status`](#docs-NAS-protocols_vscan_server-status)
      operationId: vscan_server_status_get
      parameters:
      - description: Filter by vendor
        in: query
        name: vendor
        type: string
      - description: Filter by version
        in: query
        name: version
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by ip
        in: query
        name: ip
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by disconnected_reason
        in: query
        name: disconnected_reason
        type: string
      - description: Filter by update_time
        in: query
        name: update_time
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_server_status_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        This API is used to display connection status information for the external virus-scanning servers or \"Vscan servers\".
        ## Examples
        ### Retrieving all fields for the Vscan server status
        ---
        ```
        # The API:
        /api/protocols/vscan/server_status/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/server_status?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
                  }
                }
              },
              "node": {
                "uuid": "fe696362-f138-11e8-8e22-0050568e0945",
                "name": "Cluster-01",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/fe696362-f138-11e8-8e22-0050568e0945"
                  }
                }
              },
              "ip": "10.141.46.173",
              "type": "primary",
              "state": "disconnected",
              "disconnected_reason": "unknown",
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/server_status/86fbc414-f140-11e8-8e22-0050568e0945/Cluster-01/10.141.46.173"
                }
              }
            },
            {
              "svm": {
                "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
                  }
                }
              },
              "node": {
                "uuid": "fe696362-f138-11e8-8e22-0050568e0945",
                "name": "Cluster-01",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/fe696362-f138-11e8-8e22-0050568e0945"
                  }
                }
              },
              "ip": "fd20:8b1e:b255:5053::46:173",
              "type": "primary",
              "state": "disconnected",
              "disconnected_reason": "remote_closed",
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/server_status/86fbc414-f140-11e8-8e22-0050568e0945/Cluster-01/fd20%3A8b1e%3Ab255%3A5053%3A%3A46%3A173"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/server_status?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the server status information for the server with IP address 10.141.46.173
        ---
        ```
        # The API:
        /api/protocols/vscan/server_status
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/server_status?ip=10.141.46.173&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
                  }
                }
              },
              "node": {
                "uuid": "fe696362-f138-11e8-8e22-0050568e0945",
                "name": "Cluster-01",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/fe696362-f138-11e8-8e22-0050568e0945"
                  }
                }
              },
              "ip": "10.141.46.173",
              "type": "primary",
              "state": "connected",
              "update_time": "2018-12-19T08:03:40.988Z",
              "vendor": "XYZ",
              "version": "1.12.2",
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/server_status/86fbc414-f140-11e8-8e22-0050568e0945/Cluster-01/10.141.46.173"
                }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/server_status?ip=10.141.46.173&fields=*"
            }
          }
        }
        ```
        ---
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}:
    delete:
      description: |
        Deletes a Vscan configuration.<br/>
        Important notes:
        * The Vscan DELETE endpoint deletes all of the Vscan configuration of an SVM. It first disables the Vscan and then deletes all of the SVM scanner-pools, On-Access policies, and On-Demand policies.
        * Disable the active Vscan On-Access policy on an SVM before performing the Vscan delete operation on that SVM.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool delete`
        * `vserver vscan on-access-policy delete`
        * `vserver vscan on-demand-policy delete`
        ### Learn more
        * [`DOC /protocols/vscan`](#docs-NAS-protocols_vscan)
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_config_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027259   | A scanner-pool, an On-Access policy, or an On-Demand policy might fail to get deleted due to either a systematic error or some hardware failure. The error code returned details the failure along with the reason for the failure. For example, \"Failed to delete On-Access policy \"sp1\". Reason: \"Failed to delete policy. Reason: policy must be disabled before being deleted.\". Retry the operation.\"
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the Vscan configuration for a specified SVM.
        This includes scanner-pools, On-Access policies, On-Demand policies, and information about whether a Vscan is enabled or disabled on an SVM.<br/>
        Important note:
        * You can enable only one Vscan configuration at a time for an SVM.
        ### Related ONTAP commands
        * `vserver vscan show`
        * `vserver vscan scanner-pool show`
        * `vserver vscan scanner-pool servers show`
        * `vserver vscan scanner-pool privileged-users show`
        * `vserver vscan scanner-pool show-active`
        * `vserver vscan on-access-policy show`
        * `vserver vscan on-access-policy file-ext-to-exclude show`
        * `vserver vscan on-access-policy file-ext-to-include show`
        * `vserver vscan on-access-policy paths-to-exclude show`
        * `vserver vscan on-demand-task show`
        ### Learn more
        * [`DOC /protocols/vscan`](#docs-NAS-protocols_vscan)
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the Vscan configuration of an SVM. Allows you to either enable or disable a Vscan, and allows you to clear the Vscan cache that stores the past scanning data for an SVM.<br/>
        Important note:
        * The Vscan PATCH endpoint does not allow you to modify scanner-pools, On-Demand policies or On-Access policies. Those modifications can only be done through their respective endpoints.
        ### Related ONTAP commands
        * `vserver vscan enable`
        * `vserver vscan disable`
        * `vserver vscan reset`
        ### Learn more
        * [`DOC /protocols/vscan`](#docs-NAS-protocols_vscan)
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027015   | Attempting to enable a Vscan but no active scanner-pool exists for the specified SVM
            | 10027011   | Attempting to enable a Vscan for an SVM for which no CIFS server exists
            | 10027023   | Attempting to enable a Vscan for an SVM for which no active Vscan On-Access policy exists
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/on-access-policies:
    get:
      description: |
        Retrieves the Vscan On-Access policy.
        ### Related ONTAP commands
        * `vserver vscan on-access-policy show`
        * `vserver vscan on-access-policy file-ext-to-include show`
        * `vserver vscan on-access-policy file-ext-to-exclude show`
        * `vserver vscan on-access-policy paths-to-exclude show`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-access-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-access-policies)
      operationId: vscan_on_access_policy_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by mandatory
        in: query
        name: mandatory
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by scope.scan_without_extension
        in: query
        name: scope.scan_without_extension
        type: boolean
      - description: Filter by scope.only_execute_access
        in: query
        name: scope.only_execute_access
        type: boolean
      - description: Filter by scope.exclude_paths
        in: query
        name: scope.exclude_paths
        type: string
      - description: Filter by scope.scan_readonly_volumes
        in: query
        name: scope.scan_readonly_volumes
        type: boolean
      - description: Filter by scope.exclude_extensions
        in: query
        name: scope.exclude_extensions
        type: string
      - description: Filter by scope.max_file_size
        in: query
        name: scope.max_file_size
        type: integer
      - description: Filter by scope.include_extensions
        in: query
        name: scope.include_extensions
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_on_access_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a Vscan On-Access policy. Created only on a data SVM.
        </b>Important notes:
        * You must enable the policy on an SVM before its files can be scanned.
        * You can enable only one On-Access policy at a time on an SVM. By default, the policy is enabled on creation. * If the Vscan On-Access policy has been created successfully on an SVM but cannot be enabled due to an error, the Vscan On-Access policy configurations are saved. The Vscan On-Access policy is then enabled using the PATCH operation.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the Vscan On-Access policy.
        * `name` - Name of the Vscan On-Access policy. Maximum length is 256 characters.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `enabled` - _true_
        * `mandatory` - _true_
        * `include_extensions` - _*_
        * `max_file_size` - _2147483648_
        * `only_execute_access` - _false_
        * `scan_readonly_volumes` - _false_
        * `scan_without_extension` - _true_
        ### Related ONTAP commands
        * `vserver vscan on-access-policy create`
        * `vserver vscan on-access-policy enable`
        * `vserver vscan on-access-policy disable`
        * `vserver vscan on-access-policy file-ext-to-include add`
        * `vserver vscan on-access-policy file-ext-to-exclude add`
        * `vserver vscan on-access-policy paths-to-exclude add`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-access-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-access-policies)
      operationId: vscan_on_access_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_on_access'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/vscan_on_access_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027043   | The new On-Access policy cannot be created as the SVM has reached the maximum number of On-Access policies allowed. Delete an existing policy in order to create a new policy |
            | 10027101   | The file size must be in the range 1KB to 1TB |
            | 10027107   | The include extensions list cannot be empty. Specify at least one extension for inclusion |
            | 10027109   | The specified CIFS path is invalid. It must be in the form \"\\dir1\\dir2\" or \"\\dir1\\dir2\\\" |
            | 10027249   | The On-Access policy created successfully but failed to enable the policy. The reason for enable policy operation failure might be that another policy is enabled. Disable the enabled policy and then enable the newly created policy using the PATCH operation |
            | 10027253   | The number of paths specified exceeds the configured number of maximum paths. You cannot specify more than the maximum number of configured paths |
            | 10027254   | The number of extensions specified exceeds the configured maximum number of extensions. You cannot specify more than the maximum number of configured extensions |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Use Vscan On-Access scanning to actively scan file objects for viruses when clients access files over SMB. To control which file operations trigger a vscan, use Vscan File-Operations Profile (vscan-fileop-profile) option in the CIFS share. The Vscan On-Access policy configuration defines the scope and status of On-Access scanning on file objects. Use this API to retrieve and manage Vscan On-Access policy configurations and Vscan On-Access policy statuses for the SVM.
        ## Examples
        ### Retrieving all fields for all policies of an SVM
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/{svm.uuid}/on_access_policies?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "name": "default_CIFS",
              "enabled": true,
              "mandatory": true,
              "scope": {
                "max_file_size": 2147483648,
                "include_extensions": [
                  "*"
                ],
                "scan_without_extension": true,
                "scan_readonly_volumes": false,
                "only_execute_access": false
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/179d3c85-7053-11e8-b9b8-005056b41bd1/on_access_policies/default_CIFS"
                }
              }
            },
            {
              "svm": {
                "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
                "name": "vs1"
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
                  }
                }
              },
              "name": "on-access-policy",
              "enabled": false,
              "mandatory": true,
              "scope": {
                "max_file_size": 3221225472,
                "exclude_paths": [
                  "\\vol\\a b\\",
                  "\\vol\\a,b\\"
                ],
                "include_extensions": [
                  "mp*",
                  "tx*"
                ],
                "exclude_extensions": [
                  "mp3",
                  "txt"
                ],
                "scan_without_extension": true,
                "scan_readonly_volumes": false,
                "only_execute_access": true
              }
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/179d3c85-7053-11e8-b9b8-005056b41bd1/on_access_policies/on-access-policy"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/179d3c85-7053-11e8-b9b8-005056b41bd1/on_access_policies?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the specific On-Access policy associated with the specified SVM
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/179d3c85-7053-11e8-b9b8-005056b41bd1/on_access_policies/on-access-policy" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "179d3c85-7053-11e8-b9b8-005056b41bd1",
            "name": "vs1"
            "_links": {
              "self": {
                "href": "/api/svm/svms/179d3c85-7053-11e8-b9b8-005056b41bd1"
              }
            }
          },
          "name": "on-access-policy",
          "enabled": true,
          "mandatory": true,
          "scope": {
            "max_file_size": 3221225472,
            "exclude_paths": [
              "\\vol\\a b\\",
              "\\vol\\a,b\\"
            ],
            "include_extensions": [
              "mp*",
              "tx*"
            ],
            "exclude_extensions": [
              "mp3",
              "txt"
            ],
            "scan_without_extension": true,
            "scan_readonly_volumes": false,
            "only_execute_access": true
          }
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/179d3c85-7053-11e8-b9b8-005056b41bd1/on_access_policies/task1"
            }
          }
        }
        ```
        ---
        ### Creating a Vscan On-Access policy
        The Vscan On-Access policy POST endpoint creates an On-Access policy for the specified SVM. Set enabled to "true" to enable scanning on the created policy.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_access_policies?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": false, \"mandatory\": true, \"name\": \"on-access-policy\", \"scope\": { \"exclude_extensions\": [ \"txt\", \"mp3\" ], \"exclude_paths\": [ \"\\\\dir1\\\\dir2\\\\ame\", \"\\\\vol\\\\a b\" ], \"include_extensions\": [  \"mp*\", \"txt\" ], \"max_file_size\": 3221225472, \"only_execute_access\": true, \"scan_readonly_volumes\": false, \"scan_without_extension\": true }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "name": "vs1"
              },
              "name": "on-access-policy",
              "enabled": false,
              "mandatory": true,
              "scope": {
                "max_file_size": 3221225472,
                "exclude_paths": [
                  "\\dir1\\dir2\\ame",
                  "\\vol\\a b"
                ],
                "include_extensions": [
                  "mp*",
                  "txt"
                ],
                "exclude_extensions": [
                  "txt",
                  "mp3"
                ],
                "scan_without_extension": true,
                "scan_readonly_volumes": false,
                "only_execute_access": true
              }
            }
          ]
        }
        ```
        ---
        ### Creating a Vscan On-Access policy where a number of optional fields are not specified
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_access_policies?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"enabled\": false, \"mandatory\": true, \"name\": \"on-access-policy\", \"scope\": { \"exclude_paths\": [ \"\\\\vol\\\\a b\", \"\\\\vol\\\\a,b\\\\\" ], \"max_file_size\": 1073741824, \"scan_without_extension\": true }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "name": "vs1"
              },
              "name": "on-access-policy",
              "enabled": false,
              "mandatory": true,
              "scope": {
                "max_file_size": 1073741824,
                "exclude_paths": [
                  "\\vol\\a b",
                  "\\vol\\a,b\\"
                ],
                "scan_without_extension": true
              }
            }
          ]
        }
        ```
        ---
        ### Updating a Vscan On-Access policy
        The policy being modified is identified by the UUID of the SVM and the policy name.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_access_policies/on-access-policy" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"scope\": { \"include_extensions\": [ \"txt\" ], \"only_execute_access\": true, \"scan_readonly_volumes\": false, \"scan_without_extension\": true }}"
        ```
        ---
        ### Deleting a Vscan On-Access policy
        The policy to be deleted is identified by the UUID of the SVM and the policy name.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_access_policies/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_access_policies/on-access-policy" -H "accept: application/hal+json"
        ```
        ---
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/on-access-policies/{name}:
    delete:
      description: |
        Deletes the anti-virus On-Access policy configuration.
        ### Related ONTAP commands
        * `vserver vscan on-access-policy delete`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-access-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-access-policies)
      operationId: vscan_on_access_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027034   | An On-Access policy associated with an administrative SVM cannot be deleted. |
            | 10027040   | An On-Access policy with a status enabled cannot be deleted. Disable the policy and then delete the policy. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the Vscan On-Access policy configuration of an SVM.
        ### Related ONTAP commands
        * `vserver vscan on-access-policy show`
        * `vserver vscan on-access-policy file-ext-to-include show`
        * `vserver vscan on-access-policy file-ext-to-exclude show`
        * `vserver vscan on-access-policy paths-to-exclude show`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-access-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-access-policies)
      operationId: vscan_on_access_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_on_access'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the Vscan On-Access policy configuration and/or enables/disables the Vscan On-Access policy of an SVM. You cannot modify the configurations for an On-Access policy associated with an administrative SVM, although you can encable and disable the policy associated with an administrative SVM.
        ### Related ONTAP commands
        * `vserver vscan on-access-policy modify`
        * `vserver vscan on-access-policy enable`
        * `vserver vscan on-access-policy disable`
        * `vserver vscan on-access-policy file-ext-to-include add`
        * `vserver vscan on-access-policy file-ext-to-exclude add`
        * `vserver vscan on-access-policy paths-to-exclude add`
        * `vserver vscan on-access-policy file-ext-to-include remove`
        * `vserver vscan on-access-policy file-ext-to-exclude remove`
        * `vserver vscan on-access-policy paths-to-exclude remove`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-access-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-access-policies)
      operationId: vscan_on_access_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_on_access'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027033   | Configurations for an On-Access policy associated with an administrative SVM cannot be modified. However, the policy can be enabled or disabled. |
            | 10027046   | The specified SVM is not the owner of the specified policy. Check for the correct SVM who owns the policy. |
            | 10027101   | The file size must be in the range 1KB to 1TB |
            | 10027107   | The include extensions list cannot be empty. Specify at least one extension for inclusion. |
            | 10027109   | The specified CIFS path is invalid. It must be in the form \"\\dir1\\dir2\" or \"\\dir1\\dir2\\\". |
            | 10027249   | The On-Access policy updated successfully but failed to enable/disable the policy. The reason for an enable policy operation failure might be that another policy is enabled. Disable the already enabled policy and then enable the policy. The reason for a disable policy operation failure might be that Vscan is enabled on the SVM. Disable the Vscan first and then disable the policy. |
            | 10027250   | The On-Access policy cannot be enabled/disabled. The reason for an enable policy operation failure might be that another policy is enabled. Disable the already enabled policy and then enable the policy. The reason for a disable policy operation failure might be that Vscan is enabled on the SVM. Disable the Vscan and then disable the policy. |
            | 10027253   | The number of paths specified exceeds the configured maximum number of paths. You cannot specify more than the maximum number of configured paths. |
            | 10027254   | The number of extensions specified exceeds the configured maximum number of extensions. You cannot specify more than the maximum number of configured extensions. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/on-demand-policies:
    get:
      description: |
        Retrieves the Vscan On-Demand policy.
        ### Related ONTAP commands
        * `vserver vscan on-demand-task show`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-demand-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-demand-policies)
      operationId: vscan_on_demand_policy_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by scope.include_extensions
        in: query
        name: scope.include_extensions
        type: string
      - description: Filter by scope.max_file_size
        in: query
        name: scope.max_file_size
        type: integer
      - description: Filter by scope.exclude_extensions
        in: query
        name: scope.exclude_extensions
        type: string
      - description: Filter by scope.exclude_paths
        in: query
        name: scope.exclude_paths
        type: string
      - description: Filter by scope.scan_without_extension
        in: query
        name: scope.scan_without_extension
        type: boolean
      - description: Filter by log_path
        in: query
        name: log_path
        type: string
      - description: Filter by scan_paths
        in: query
        name: scan_paths
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by schedule.uuid
        in: query
        name: schedule.uuid
        type: string
      - description: Filter by schedule.name
        in: query
        name: schedule.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_on_demand_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a Vscan On-Demand policy. Created only on a data SVM.
        </br> Important notes:
          * Only one policy can be scheduled at a time on an SVM. Use schedule name or schedule uuid to schedule an On-Demand policy.
          * Scanning must be enabled on the SVM before the policy is scheduled to run.
          * The exclude_extensions setting overrides the include_extensions setting. Set scan_without_extension to true to scan files without extensions.
        ### Required properties
        * `svm.uuid` - Existing SVM in which to create the Vscan On-Demand policy.
        * `name` - Name of the Vscan On-Demand policy. Maximum length is 256 characters.
        * `log_path` - Path from the Vserver root where the On-Demand policy report is created.
        * `scan_paths` - List of paths that need to be scanned.
        ### Recommended optional properties
        * `schedule` - Scan schedule. It is recommended to set the schedule property, as it dictates when to scan for viruses.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `include_extensions` - _*_
        * `max_file_size` - _10737418240_
        * `scan_without_extension` - _true_
        ### Related ONTAP commands
        * `vserver vscan on-demand-task create`
        * `vserver vscan on-demand-task schedule`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-demand-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-demand-policies)
      operationId: vscan_on_demand_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_on_demand'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/vscan_on_demand_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027101   | The file size must be in the range 1KB to 1TB |
            | 10027107   | The include extensions list cannot be empty. Specify at least one extension for inclusion. |
            | 10027164   | An On-Demand policy cannot be scheduled, as the Vscan is disabled. Enable the Vscan and retry the operation. |
            | 10027167   | The specified schedule does not exist. Create the schedule or create a policy without specifying the schedule. |
            | 10027168   | The specified scan path does not exist. The scan path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use “/” not “\\”) |
            | 10027169   | The specified scan path is not supported for scanning. |
            | 10027173   | The new On-Demand policy cannot be created as the SVM has reached the maximum number of On-Demand policies allowed. Delete an existing policy in order to create a new policy. |
            | 10027174   | The specified exclude path is invalid. The path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use "/" not "\\") |
            | 10027175   | An On-Demand policy cannot be scheduled as the Vserver is not in an operational state. |
            | 10027176   | The log-path specified does not exist. The log path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use “/” not “\”). |
            | 10027177   | The log path specified is not supported. |
            | 10027253   | The number of paths specified exceeds the configured maximum number of paths. You cannot specify more than the maximum number of configured paths. |
            | 10027254   | The number of extensions specified exceeds the configured maximum number of extensions. You cannot specify more than the maximum number of configured extensions. |
            | 10027255   | Another policy is already scheduled. Only one policy per SVM is allowed to be scheduled at any one time. Create a policy without specifying a schedule. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        Vscan On-Demand scanning is used to check files for viruses on a schedule. For example, it can be used to run scans only in off-peak hours, or to scan very large files that are excluded from an on-access scan. Vscan On-Demand scanning can be used for any path in the SVM namespace.<p/>
        Vscan On-Demand policy configurations define the scope of a Vscan On-Demand scan. The schedule parameter in the On-Demand policy configuration decides when to execute the task. Schedule can be created using the /api/clusters/schedule endpoint and can be assigned on policy create or policy modify. This API is used to retrieve and manage Vscan On-Demand policy configurations. It is also used to schedule the Vscan On-Demand scan.
        ## Examples
        ### Retrieving all fields for all policies of an SVM
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/{svm.uuid}/on_demand_policies?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
                  }
                }
              },
              "name": "on-demand-policy1",
              "scan_paths": [
                "/vol1/",
                "/vol2/cifs/"
              ],
              "log_path": "/vol0/report_dir",
              "schedule": {
                "uuid": "f6d0843e-f159-11e8-8e22-0050568e0945",
                "name": "schedule",
                "_links": {
                  "self": {
                    "href": "/api/cluster/schedules/f6d0843e-f159-11e8-8e22-0050568e0945"
                  }
                }
              },
              "scope": {
                "max_file_size": 10737418240,
                "exclude_paths": [
                  "/vol1/cold-files/",
                  "/vol1/cifs/names"
                ],
                "include_extensions": [
                  "vmdk",
                  "mp*"
                ],
                "exclude_extensions": [
                  "mp3",
                  "mp4"
                ],
                "scan_without_extension": false
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/policy1"
                }
              }
            },
            {
              "svm": {
                "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
                "name": "vs1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
                  }
                }
              },
              "name": "on-demand-policy2",
              "scan_paths": [
                "/vol1/",
                "/vol2/cifs/"
              ],
              "log_path": "/report",
              "scope": {
                "max_file_size": 10737418240,
                "include_extensions": [
                  "mp*"
                ],
                "scan_without_extension": true
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/policy2"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific On-Demand policy associated with a specified SVM
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/on-demand-task" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "86fbc414-f140-11e8-8e22-0050568e0945",
            "name": "vs1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/86fbc414-f140-11e8-8e22-0050568e0945"
              }
            }
          },
          "name": "on-demand-policy",
          "scan_paths": [
            "/vol1/cifs"
          ],
          "log_path": "/report",
          "scope": {
            "max_file_size": 10737418240,
            "include_extensions": [
              "vmdk",
              "mp*"
            ],
            "scan_without_extension": true
          },
          "_links": {
            "self": {
              "href": "/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/policy2"
            }
          }
        }
        ```
        ---
        ### Creating a Vscan On-Demand policy
        The Vscan On-Demand policy POST endpoint creates an On-Demand policy for the specified SVM. Specify the schedule parameter to schedule an On-Demand scan.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"log_path\": \"/vol0/report_dir\", \"name\": \"on-demand-policy\", \"scan_paths\": [ \"/vol1/\", \"/vol2/cifs/\" ], \"schedule\": { \"name\": \"weekly\", \"uuid\": \"1cd8a442-86d1-11e0-ae1c-123478563412\" }, \"scope\": { \"exclude_extensions\": [ \"mp3\" ], \"exclude_paths\": [ \"/vol/cold-files/\" ], \"include_extensions\": [ \"vmdk\", \"mp*\" ], \"max_file_size\": 1073741824, \"scan_without_extension\": true }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "name": "vs1"
              },
              "name": "on-demand-policy",
              "scan_paths": [
                "/vol1/",
                "/vol2/cifs/"
              ],
              "log_path": "/vol0/report_dir",
              "schedule": {
                "name": "weekly"
              },
              "scope": {
                "max_file_size": 1073741824,
                "exclude_paths": [
                  "/vol/cold-files/"
                ],
                "include_extensions": [
                  "vmdk",
                  "mp*"
                ],
                "exclude_extensions": [
                  "mp3"
                ],
                "scan_without_extension": true
              }
            }
          ]
        }
        ```
        ---
        ### Creating a Vscan On-Demand policy where a number of optional fields are not specified
        ---
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"log_path\": \"/report\", \"name\": \"on-demand-policy\", \"scan_paths\": [ \"/vol1/cifs/\" ], \"scope\": { \"include_extensions\": [ \"mp*\" ], \"scan_without_extension\": true }}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "svm": {
                "name": "vs1"
              },
              "name": "on-demand-policy",
              "scan_paths": [
                "vol1/cifs/"
              ],
              "log_path": "/report",
              "scope": {
                "max_file_size": 10737418240,
                "include_extensions": [
                  "vmdk",
                  "mp*"
                ],
                "scan_without_extension": true
              }
            }
          ]
        }
        ```
        ---
        ### Updating a Vscan On-Demand policy
        The policy being modified is identified by the UUID of the SVM and the policy name.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/on-demand-policy" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"schedule\": { \"name\": \"weekly\" }, \"scope\": { \"exclude_extensions\": [ \"mp3\" ], \"exclude_paths\": [ \"/vol/\" ], \"include_extensions\": [ \"vmdk\", \"mp3\" ], \"scan_without_extension\": true }}"
        ```
        ---
        ### Deleting a Vscan On-Demand policy
        The policy to be deleted is identified by the UUID of the SVM and the policy name.
        <br/>
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/on_demand_policies/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/vscan/86fbc414-f140-11e8-8e22-0050568e0945/on_demand_policies/on-demand-policy" -H "accept: application/hal+json"
        ```
        ---
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/on-demand-policies/{name}:
    delete:
      description: |
        Deletes the Vscan On-Demand configuration.
        ### Related ONTAP commands
        * `vserver vscan on-demand-task delete`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-demand-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-demand-policies)
      operationId: vscan_on_demand_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the Vscan On-Demand configuration of an SVM.
        ### Related ONTAP commands
        * `vserver vscan on-demand-task show`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-demand-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-demand-policies)
      operationId: vscan_on_demand_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_on_demand'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the Vscan On-Demand policy configuration of an SVM. Use schedule name or schedule UUID to schedule an On-Demand scan.
        ### Related ONTAP commands
        * `vserver vscan on-demand-task modify`
        * `vserver vscan on-demand-task schedule`
        * `vserver vscan on-demand-task unschedule`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/on-demand-policies`](#docs-NAS-protocols_vscan_{svm.uuid}_on-demand-policies)
      operationId: vscan_on_demand_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_on_demand'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027101   | The file size must be in the range 1KB to 1TB |
            | 10027107   | The include extensions list cannot be empty. Specify at least one extension for inclusion. |
            | 10027164   | An On-Demand policy cannot be scheduled, as the Vscan is disabled. Enable the Vscan and retry the operation. |
            | 10027167   | The specified schedule does not exist. Create the schedule or create a policy without specifying the schedule. |
            | 10027168   | The specified scan path does not exist. The scan path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use “/” not “\\”) |
            | 10027169   | The specified scan path is not supported for scanning. |
            | 10027174   | The specified exclude path is invalid. The path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use "/" not "\\") |
            | 10027175   | An On-Demand policy cannot be scheduled as the SVM is not in an operational state. |
            | 10027176   | The log-path specified does not exist. The log path must be specified from the root of the SVM, and must begin with UNIX path delimiters (use “/” not “\\”) |
            | 10027177   | The log path specified is not supported. |
            | 10027253   | The number of paths specified exceeds the configured maximum number of paths. You cannot specify more than the maximum number of configured paths. |
            | 10027254   | The number of extensions specified exceeds the configured maximum number of extensions. You cannot specify more than the maximum number of configured extensions. |
            | 10027255   | Another policy is already scheduled. Only one policy per SVM is allowed to be scheduled at any one time. Update a policy without specifying a schedule. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/scanner-pools:
    get:
      description: |
        Retrieves the Vscan scanner-pool configuration of an SVM.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool show`
        * `vserver vscan scanner-pool privileged-users show`
        * `vserver vscan scanner-pool servers show`
        * `vserver vscan scanner-pool show-active`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_scanner_collection_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by servers
        in: query
        name: servers
        type: string
      - description: Filter by cluster.name
        in: query
        name: cluster.name
        type: string
      - description: Filter by cluster.uuid
        in: query
        name: cluster.uuid
        type: string
      - description: Filter by role
        in: query
        name: role
        type: string
      - description: Filter by privileged_users
        in: query
        name: privileged_users
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_scanner_pool_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    post:
      description: |
        Creates a Vscan scanner-pool configuration for a specified SVM. You can create a scanner-pool with all fields specified or only mandatory fields specified.<br/>
        Important notes:
        * A scanner-pool must have servers and privileged users specified.
        * If the role or cluster is not specified, the scanner-pool is created on the local cluster with the role set as primary.
        *`Only one of the fields cluster-uuid or cluster-name is required.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the Vscan configuration.
        * `name` - Scanner-pool name.
        * `privileged_users` - List of privileged users.
        * `servers` - List of server IP addresses or FQDNs.
        ### Recommended optional properties
        * `role` - Setting a role for a scanner-pool is recommended.
        * `cluster` - Passing the cluster name or UUID (or both) in a multi-cluster environment is recommended.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `role` - _primary_
        * `cluster.name` - Local cluster name.
        * `cluster.uuid` - Local cluster UUID.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool create`
        * `vserver vscan scanner-pool apply-policy`
        * `vserver vscan scanner-pool privileged-users add`
        * `vserver vscan scanner-pool servers add`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_scanner_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/svm_path_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_scanner_pool'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/vscan_scanner_pool_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027086   | The specified list of servers contain one or more entries that cannot be resolved
            | 10027258   | The specified cluster_name does not exist
            | 10027256   | The specified cluster_uuid does not exist
            | 10027257   | The specified cluster_name and cluster_uuid are valid but belong to different clusters
            | 10027248   | Scanner-pool created successfully but failed to activate
            | 10027107   | The list of privileged users or list of servers specified is empty
            | 10027108   | The list of privileged users specified contains an invalid entry
            | 10027063   | Attempting to modify a scanner-pool on an administrative SVM with a data SVM
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    x-ntap-long-description:
      description: |
        ## Overview
        A scanner-pool defines the Vscan servers and privileged users that can connect to SVMs and a scanner policy or role determines whether a scanner-pool is active. You can configure a scanner-pool to be used on the local cluster or any other cluster in an MCC/DR setup.
        ## Examples
        ### Retrieving all fields for all scanner-pools of an SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/<svm-uuid>/scanner-pools?fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "0e2f7c91-f227-11e8-9601-0050568ecc06"
              },
              "name": "scanner-1",
              "servers": [
                "1.1.1.1",
                "10.72.204.27"
              ],
              "privileged_users": [
                "cifs\\u1",
                "cifs\\u2"
              ],
              "role": "primary"
            },
            {
              "svm": {
                "uuid": "0e2f7c91-f227-11e8-9601-0050568ecc06"
              },
              "name": "scanner-2",
              "servers": [
                "1.1.1.1",
                "10.72.204.27"
              ],
              "privileged_users": [
                "cifs\\u1",
                "cifs\\u2"
              ],
              "role": "secondary"
            }
          ],
          "num_records": 2
        }
        ```
        ### Retrieving all scanner-pools with *role* set as *secondary*
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/<svm-uuid>/scanner-pools?role=secondary&fields=*&return_records=true&return_timeout=15" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "uuid": "0e2f7c91-f227-11e8-9601-0050568ecc06",
                "name": "vs1"
              },
              "name": "scanner-2",
              "servers": [
                "1.1.1.1",
                "10.72.204.27"
              ],
              "privileged_users": [
                "cifs\\u1",
                "cifs\\u2"
              ],
              "role": "secondary",
              "cluster": {
                "uuid": "0933f9b5-f226-11e8-9601-0050568ecc06",
                "name": "Cluster3"
              }
            }
          ],
          "num_records": 1
        }
        ```
        ### Retrieving the specified scanner-pool associated with an SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/protocols/vscan/0e2f7c91-f227-11e8-9601-0050568ecc06/scanner-pools/scanner-1?fields=*" -H "accept: application/json"
        # The response:
        {
          "svm": {
            "uuid": "0e2f7c91-f227-11e8-9601-0050568ecc06",
            "name": "vs1"
          },
          "name": "scanner-1",
          "servers": [
            "1.1.1.1",
            "10.72.204.27"
          ],
          "privileged_users": [
            "cifs\\u1",
            "cifs\\u2"
          ],
          "role": "primary",
          "cluster": {
            "uuid": "0933f9b5-f226-11e8-9601-0050568ecc06",
            "name": "Cluster3"
          }
        }
        ```
        ### Creating a scanner-pool for an SVM with all fields specified
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/b103be27-17b8-11e9-b451-0050568ecd85/scanner-pools?return_records=true" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"cluster\": { \"name\": \"Cluster1\", \"uuid\": \"ab746d77-17b7-11e9-b450-0050568ecd85\" }, \"name\": \"test-scanner\", \"privileged_users\": [ \"cifs\\\\u1\", \"cifs\\\\u2\" ], \"role\": \"primary\", \"servers\": [ \"1.1.1.1\", \"10.72.204.27\" ]}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "test-scanner",
              "servers": [
                "1.1.1.1",
                "10.72.204.27"
              ],
              "privileged_users": [
                "cifs\\u1",
                "cifs\\u2"
              ],
              "role": "primary",
              "cluster": {
                "uuid": "ab746d77-17b7-11e9-b450-0050568ecd85",
                "name": "Cluster1"
              }
            }
          ]
        }
        ```
        ### Creating a scanner-pool for an SVM with an unspecified role and cluster
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/
        # The call:
        curl -X POST "https://<mgmt-ip>/api/protocols/vscan/b103be27-17b8-11e9-b451-0050568ecd85/scanner-pools" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"name\": \"test-scanner-1\", \"privileged_users\": [ \"cifs\\\\u1\", \"cifs\\\\u2\" ], \"servers\": [ \"1.1.1.1\", \"10.72.204.27\" ]}"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "name": "test-scanner-1",
              "servers": [
                "1.1.1.1",
                "10.72.204.27"
              ],
              "privileged_users": [
                "cifs\\u1",
                "cifs\\u2"
              ]
            }
          ]
        }
        ```
        ### Updating a scanner-pool for an SVM with all of the fields specified
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/0e2f7c91-f227-11e8-9601-0050568ecc06/scanner-pools/test-scanner-1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"cluster\": { \"name\": \"Cluster3\", \"uuid\": \"0933f9b5-f226-11e8-9601-0050568ecc06\" }, \"privileged_users\": [ \"cifs\\\\u1\", \"cifs\\\\u2\" ], \"role\": \"secondary\", \"servers\": [ \"1.1.1.1\", \"10.72.204.27\" ]}"
        ```
        ### Updating the "role" of a scanner-pool for an SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/{name}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/protocols/vscan/0e2f7c91-f227-11e8-9601-0050568ecc06/scanner-pools/test-scanner-1" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"cluster\": { \"name\": \"Cluster3\", \"uuid\": \"0933f9b5-f226-11e8-9601-0050568ecc06\" }, \"role\": \"primary\"}"
        ```
        ### Deleting a scanner-pool for a specified SVM
        ```
        # The API:
        /api/protocols/vscan/{svm.uuid}/scanner-pools/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/protocols/vscan/0e2f7c91-f227-11e8-9601-0050568ecc06/scanner-pools/test-scanner-1" -H "accept: application/json"
        ```
      tags:
      - NAS
  /protocols/vscan/{svm.uuid}/scanner-pools/{name}:
    delete:
      description: |
        Deletes a Vscan scanner-pool configuration.<br/>
        Important notes:
        * The Vscan scanner-pool DELETE endpoint deletes all of the Vscan scanner-pools for a specified SVM.
        * If a Vscan is enabled, it requires at least one scanner-pool to be in the active state. Therefore, disable Vscan on the specified SVM so all the scanner-pools configured on that SVM can be deleted.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool delete`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_scanner_delete
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027070   | Attempting to delete a scanner-pool but it is the only active scanner-pool for a Vscan enabled on the SVM
            | 10027064   | Attempting to delete a scanner-pool with a data SVM which was created with an administrative SVM
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    get:
      description: |
        Retrieves the configuration of a specified scanner-pool of an SVM.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool show`
        * `vserver vscan scanner-pool privileged-users show`
        * `vserver vscan scanner-pool servers show`
        * `vserver vscan scanner-pool show-active`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_scanner_pool_get
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vscan_scanner_pool'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
    patch:
      description: |
        Updates the Vscan scanner-pool configuration of an SVM.<br/>
        Important notes:
        * Along with servers and privileged-users, the role of a scanner-pool can also be updated with the cluster on which a scanner-pool is allowed.
        * If role is specified and cluster isn't, then role is applied to the local cluster.
        ### Related ONTAP commands
        * `vserver vscan scanner-pool modify`
        * `vserver vscan scanner-pool apply-policy`
        * `vserver vscan scanner-pool privileged-users add`
        * `vserver vscan scanner-pool privileged-users remove`
        * `vserver vscan scanner-pool servers remove`
        * `vserver vscan scanner-pool servers add`
        ### Learn more
        * [`DOC /protocols/vscan/{svm.uuid}/scanner-pools`](#docs-NAS-protocols_vscan_{svm.uuid}_scanner-pools)
      operationId: vscan_scanner_modify
      parameters:
      - $ref: '#/parameters/svm_path_param'
      - in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/vscan_scanner_pool'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10027258   | The specified cluster_name does not exist
            | 10027256   | The specified cluster_uuid does not exist
            | 10027257   | The specified cluster_name and cluster_uuid are valid but belong to different clusters
            | 10027248   | Scanner-pool updated successfully but failed to apply the specified role
            | 10027107   | The list of privileged users or list of servers specified is empty
            | 10027108   | The list of privileged users specified contains an invalid entry
            | 10027063   | Attempting to modify a scanner-pool on an administrative SVM with a data SVM
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NAS
  /security:
    get:
      description: |-
        Retrieves information about the security configured on the cluster.

        ### Learn more
        * [`DOC /security`](#docs-security-security)
      operationId: security_config_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_config'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API returns an object 'onboard_key_manager_configurable_status' which details whether the Onboard Key Manager can be configured on the cluster or not.
        ## Examples
        ### Retrieving information about the security configured on the cluster
        The following example shows how to retrieve the key manager configiration of the cluster.
        ```
        # The API:
        GET /api/security:
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          {
            "onboard_key_manager_configurable_status": {
              "supported": "false",
              "message": "Onboard Key Manager cannot be configured on the cluster. There are no self-encrypting disks in the cluster, and the following nodes do not support volume granular encryption: ntap-vsim2.",
              "code": 65537300
            },
          },
        }
        ```
        ---
        ```
        ---
      tags:
      - security
  /security/accounts:
    get:
      description: |
        Retrieves a list of user accounts in the cluster.
        ### Related ONTAP commands
        * `security login show`
        ### Learn more
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_collection_get
      parameters:
      - description: Filter by owner.uuid
        in: query
        name: owner.uuid
        type: string
      - description: Filter by owner.name
        in: query
        name: owner.name
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by role.name
        in: query
        name: role.name
        type: string
      - description: Filter by applications.authentication_methods
        in: query
        name: applications.authentication_methods
        type: string
      - description: Filter by applications.application
        in: query
        name: applications.application
        type: string
      - description: Filter by applications.second_authentication_method
        in: query
        name: applications.second_authentication_method
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by locked
        in: query
        name: locked
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/account_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |
        Creates a new user account.
        ### Required parameters
        * `name` - Account name to be created.
        * `applications` - Array of one or more application tuples (of application and authentication methods).
        ### Optional parameters
        * `owner.name` or `owner.uuid`  - Name or UUID of the SVM for an SVM-scoped user account. If not supplied, a cluster-scoped user account is created.
        * `role` - RBAC role for the user account. Defaulted to `admin` for cluster user account and to `vsadmin` for SVM-scoped account.
        * `password` - Password for the user account (if the authentication method is opted as password for one or more of applications).
        * `second_authentication_method` - Needed for MFA and only supported for ssh application. Defaults to `none` if not supplied.
        * `comment` - Comment for the user account (e.g purpose of this account).
        * `locked` - Locks the account after creation. Defaults to `false` if not supplied.
        ### Related ONTAP commands
        * `security login create`
        ### Learn more
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Details for the user account to be created.
        in: body
        name: info
        schema:
          $ref: '#/definitions/account'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1261215 | The role was not found. |
            | 1263343 | Cannot lock user with password not set or non-password authentication method. |
            | 5636099 | User creation with a non-admin role is not supported for service-processor application. |
            | 5636121 | The user account name is reserved for use by the system. |
            | 5636126 | Cannot create a user with the username or role as AutoSupport because it is reserved by the system. |
            | 5636140 | Creating a login with application console for a data Vserver is not supported. |
            | 5636141 | Creating a login with application service-processor for a data Vserver is not supported. |
            | 5636154 | The second-authentication-method parameter is supported for ssh application. |
            | 5636155 | The second-authentication-method parameter can be specified only if the authentication-method password or public key nsswitch. |
            | 5636156 | The same value cannot be specified for the second-authentication-method and the authentication-method. |
            | 5636157 | If the authentication-method is domain, the second-authentication-method cannot be specified. |
            | 5636164 | If the value for either the authentication-method second-authentication-method is nsswitch or password, the other parameter must differ. |
            | 7077897 | Invalid character in username. |
            | 7077898 | The username must contain both letters and numbers. |
            | 7077899 | The username does not meet length requirements. |
            | 7077906 | A role with that name has not been defined for the Vserver. |
            | 7077918 | The password cannot contain the username. |
            | 7077919 | The minimum length for new password does not meet the policy. |
            | 7077920 | A new password must have both letters and numbers. |
            | 7077921 | The minimum number of special characters required do not meet the policy. |
            | 7077929 | Cannot lock user with password not set or non-password authentication method. |
            | 7077940 | The password exceeds the maximum supported length. |
            | 7077941 | The defined password composition exceeds the maximum password length of 128 characters. |
            | 7078900 | An admin password is not set. Set the password by including it in the request. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        A valid user account is required to login to and provision, monitor, and manage the cluster. The scope of the management operation can be at the cluster level or at an individual SVM level. There is a need to create user accounts with specific privileges apart from the default user accounts, "admin", for cluster and "vsadmin" for SVM. Custom user accounts can be configured to perform specific (scoped) operations. User accounts can either be created locally (on the Netapp system) or referenced from an external directory server (NIS, LDAP, or Active Directory).
        Apart from creation, modification, and deletion of a user account, locking and unlocking of a user account or resetting the password (for local accounts only) is possible.<br/>
        A user account must be associated with the following before it can become operational:<p/>
        1. A management appplication (SSH, HTTP, console, shelf-processor, and such like) for user login. HTTP enables REST API access.
        2. Scope - either cluster or SVM.
        3. Authentication source - password (local, NIS/LDAP, Active Directory), public/private key pair-based, certificate based.
        4. RBAC role - determines what operations are permitted for the user account.<p/>
        ### Restrictions
        A number of internal/restricted account names, such as admin, diag, autosupport, and root cannot be used.<p/>
        There must be at least one console cluster administrator account. Any attempt to delete the last remaining administrator account fails.<p/>
        Multi-factor authentication is only possible for SSH application and the only combination possible is password (local or NIS/LDAP) and public key.<p/>
        All authentication sources are not supported by all applications. You must select a compatible authentication method based on the application. The following types of authentications methods are supported:<p/>
        | Application       | Supported Authentication Methods |
        | ----------------- | -------------------------------- |
        | console           | password |
        | service-processor | password |
        | HTTP              | password, domain, nsswitch, certificate |
        | ONTAPI            | password, domain, nsswitch, certificate |
        | SSH               | password, publickey (key pair), domain, nsswitch |
        <br/>
        Note: In this table, "certificate" means security certificate, "domain" means that the user directory server is an external Active Directory, "nsswitch" means the directory server is an external NIS or LDAP server. At login time, the user is authenticated with these external directory servers which must be provisioned separately.<p/>
        ## Examples
        ### Creating a cluster-scoped user account
        Specify the user account name, role name, and the tuples (of application and authentication methods) in the body of the POST request. The owner.uuid or owner.name are not required to be specified for a cluster-scoped user account.<br/>
        Note: Each entry in the applications array must be for a different application.
        ```
        # The API:
        POST "/api/security/accounts"
        # The call to create a cluster user account with applications ssh, http and password authentication scheme:
        curl -X POST "https://<mgmt-ip>/api/security/accounts" -d '{"name":"cluster_user1","applications":[{"application":"ssh","authentication_methods":["password"],"second_authentication_method":"none"},{"application":"http","authentication_methods":["password"]}],"role":"admin","password":"p@ssw@rd123"}'
        Note: The password is an optional parameter for creation and can be set later using a PATCH request. See the examples for modification of user account or password.
        ```
        ### Creating an SVM-scoped user account
        For an SVM-scoped account, specify either the SVM name as the owner.name or SVM uuid as the owner.uuid along with other parameters for the user account. These indicate the SVM for which the user account is being created and can be obtained from the response body of GET performed on the <i>/api/svm/svms</i> API.
        ```
        # The API:
        POST "/api/security/accounts"
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/accounts" -d '{"owner":{"uuid":"aaef7c38-4bd3-11e9-b238-0050568e2e25"},"name":"svm_user1","applications":[{"application":"ssh","authentication_methods":["password"],"second_authentication_method":"none"}],"role":"vsadmin","password":"p@ssw@rd123"}'
        ```
        ### Retrieving the configured user accounts
        Use the following API to retrieve all of the user accounts or a filtered list of user accounts (by name, for a specific SVM, and so on).
        ```
        # The API:
        GET "/api/security/accounts"
        # The call to retrieve all the user accounts configured in the cluster:
        curl -X GET "https://<mgmt-ip>/api/security/accounts"
        # The response:
        {
          "records": [
            {
              "owner": {
                "uuid": "2903de6f-4bd2-11e9-b238-0050568e2e25",
                "name": "cluster1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/2903de6f-4bd2-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "admin",
              "_links": {
                "self": {
                  "href": "/api/security/accounts/2903de6f-4bd2-11e9-b238-0050568e2e25/admin"
                }
              }
            },
            {
              "owner": {
                "uuid": "2903de6f-4bd2-11e9-b238-0050568e2e25",
                "name": "cluster1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/2903de6f-4bd2-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "autosupport",
              "_links": {
                "self": {
                  "href": "/api/security/accounts/2903de6f-4bd2-11e9-b238-0050568e2e25/autosupport"
                      }
              }
            },
            {
              "owner": {
                "uuid": "2903de6f-4bd2-11e9-b238-0050568e2e25",
                "name": "cluster1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/2903de6f-4bd2-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "cluster_user1",
              "_links": {
                "self": {
                  "href": "/api/security/accounts/2903de6f-4bd2-11e9-b238-0050568e2e25/cluster_user1"
                }
              }
            },
            {
              "owner": {
                "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "svm_user1",
              "_links": {
                "self": {
                  "href": "/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1"
                }
              }
            },
            {
              "owner": {
                "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "vsadmin",
              "_links": {
                "self": {
                  "href": "/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin"
                }
              }
            }
          ],
          "num_records": 5,
          "_links": {
            "self": {
              "href": "/api/security/accounts"
            }
          }
        }
        # The scoped call to retrieve the configured cluster-scoped user accounts:
        curl -X GET "https://<mgmt-ip>/api/security/accounts/?scope=cluster"
        # The scoped call to retrieve the configured SVM-scoped user accounts:
        curl -X GET "https://<mgmt-ip>/api/security/accounts/?scope=svm"
        # The scoped call to retrieve the user accounts configured for the SVM "svm1":
        curl -X GET "https://<mgmt-ip>/api/security/accounts/?owner.name=svm1"
        # The scoped call to retrieve the user accounts configured with the "admin" role:
        curl -X GET "https://<mgmt-ip>/api/security/accounts/?role=admin"
        ```
      tags:
      - security
  /security/accounts/{owner.uuid}/{name}:
    delete:
      description: |
        Deletes a user account.
        ### Required parameters
        * `name` - Account name to be deleted.
        * `owner.uuid`  - UUID of the SVM housing the user account to be deleted.
        ### Related ONTAP commands
        * `security login delete`
        ### Learn more
        * [`DOC /security/accounts/{owner.uuid}/{name}`](#docs-security-security_accounts_{owner.uuid}_{name})
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_delete
      parameters:
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5636098 | Last unlocked account that has an admin role cannot be deleted. |
            | 5636125 | The operation is not supported on system accounts. |
            | 5636146 | Cannot delete the last console account with admin role. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |
        Retrieves a specific user account.
        ### Related ONTAP commands
        * `security login show`
        ### Learn more
        * [`DOC /security/accounts/{owner.uuid}/{name}`](#docs-security-security_accounts_{owner.uuid}_{name})
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/account_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |
        Updates a user account. Locks or unlocks a user account and/or updates the role, applications, and/or password for the user account.
        ### Required parameters
        * `name` - Account name to be updated.
        * `owner.uuid`  - UUID of the SVM housing the user account to be updated.
        ### Optional parameters
        * `applications` - Array of one or more tuples (of application and authentication methods).
        * `role` - RBAC role for the user account.
        * `password` - Password for the user account (if the authentication method is opted as password for one or more of applications).
        * `second_authentication_method` - Needed for MFA and only supported for ssh application. Defaults to `none` if not supplied.
        * `comment` - Comment for the user account (e.g purpose of this account).
        * `locked` - Set to true/false to lock/unlock the account.
        ### Related ONTAP commands
        * `security login create`
        * `security login modify`
        * `security login password`
        * `security login lock`
        * `security login unlock`
        ### Learn more
        * [`DOC /security/accounts/{owner.uuid}/{name}`](#docs-security-security_accounts_{owner.uuid}_{name})
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_modify
      parameters:
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: name
        required: true
        type: string
      - description: User account details
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/account'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1261215 | The role was not found. |
            | 1261218 | The user was not found. |
            | 1263343 | Cannot lock user with password not set or non-password authentication method. |
            | 5636096 | Cannot perform the operation for this user account since the password is not set. |
            | 5636097 | The operation for user account failed since user password is not set. |
            | 5636100 | User modification is not supported for service-processor application. |
            | 5636125 | The operation not supported on AutoSupport user account which is reserved. |
            | 5636129 | The role does not exist. |
            | 5636154 | The second-authentication-method parameter is supported for ssh application. |
            | 5636155 | The second-authentication-method parameter can be specified only if the authentication-method password or public key nsswitch. |
            | 5636156 | Same value cannot be specified for the second-authentication-method and the authentication-method. |
            | 5636157 | If the authentication-method is domain, the second-authentication-method cannot be specified. |
            | 5636159 | For a given user and application, if the second-authentication-method is specified, only one such login entry is supported. |
            | 5636164 | If the value for either the authentication-method second-authentication-method is nsswitch or password, the other parameter must differ. |
            | 5636174 | You are not authorized to change the password for other users. |
            | 7077896 | Cannot lock the account of the last console admin user. |
            | 7077906 | A role with that name has not been defined for the Vserver. |
            | 7077911 | The user is not configured to use the password authentication method. |
            | 7077918 | The password cannot contain the username. |
            | 7077919 | The minimum length for new password does not meet the policy. |
            | 7077920 | The new password must have both letters and numbers. |
            | 7077921 | The minimum number of special characters required do not meet the policy. |
            | 7077924 | The new password must be different than last N passwords. |
            | 7077925 | The new password must be different to the old password. |
            | 7077929 | Cannot lock user with password not set or non-password authentication method. |
            | 7077940 | The password exceeds maximum supported length. |
            | 7077941 | Defined password composition exceeds the maximum password length of 128 characters. |
            | 7078900 | An aAdmin password is not set. Set the password by including it in the request. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API displays and manages the configuration of scoped user accounts.<p/>
        Newly created user accounts might need to be updated for many reasons. For example, a user account might need to use a different application or its role might need to be modified. According to a policy, the password or authentication source of a user account might need to be changed, or a user account might need to be locked or deleted from the system. This API allows you to make these changes to user accounts.<p/>
        Specify the owner UUID and the user account name in the URI path. The owner UUID corresponds to the UUID of the SVM for which the user account has been created and can be obtained from the response body of the GET request performed on one of the following APIs:
        <i>/api/security/accounts</i> for all user accounts
        <i>/api/security/accounts/?scope=cluster</i> for cluster-scoped user accounts
        <i>/api/security/accounts/?scope=svm</i> for SVM-scoped accounts
        <i>/api/security/accounts/?owner.name={svm-name}</i> for a specific SVM
        This API response contains the complete URI for each user account that can be used.
        ## Examples
        ### Retrieving the user account details
        ```
        # The API:
        GET "/api/security/accounts/{owner.uuid}/{name}"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/accounts/aef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1"
        # The response:
        {
          "owner": {
            "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25"
              }
                  }
          },
          "name": "svm_user1",
          "applications": [
            {
              "application": "ssh",
              "authentication_methods": [
                "password"
              ],
              "second_authentication_method": "none"
            }
          ],
          "role": {
            "name": "vsadmin",
            "_links": {
              "self": {
                "href": "/api/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25/admin/roles/vsadmin"
              }
            }
          },
          "locked": false,
          "scope": "svm",
          "_links": {
            "self": {
              "href": "/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1"
            }
          }
        }
        ```
        ### Updating the applications and role in a user account
        Specify the desired configuration in the form of tuples (of applications and authentication methods) and the role. All other previously configured applications that are not specified in the "applications" parameter of the PATCH request will be de-provisioned for the user account.<p/>
        ```
        # The API:
        PATCH "/api/security/accounts/{owner.uuid}/{name}"
        # The call to update the applications and role:
        curl -X PATCH "https://<mgmt-ip>/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1" -d '{"applications":[{"application":"http","authentication_methods":["domain"]},{"application":"ontapi","authentication_methods":["password"]}],"role":"vsadmin-backup"}'
        # The call to update only the role:
        curl -X PATCH "https://<mgmt-ip>/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1" -d '{"role":"vsadmin-protocol"}'
        ```
        ### Updating the password for a user account
        ```
        # The API:
        PATCH "/api/security/accounts/{owner.uuid}/{name}"
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1" -d '{"password":"newp@ssw@rd2"}'
        ```
        ### Locking a user account
        ```
        The API:
        PATCH "/api/security/accounts/{owner.uuid}/{name}"
        The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1" -d '{"locked":"true"}'
        ```
        ### Deleting a user account
        ```
        # The API:
        DELETE "/api/security/accounts/{owner.uuid}/{name}"
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/accounts/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_user1"
        ```
      tags:
      - security
  /security/audit:
    get:
      description: |-
        Retrieves administrative audit settings for GET requests.
        ### Learn more
        * [`DOC /security/audit`](#docs-security-security_audit)
      operationId: security_audit_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_audit'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates administrative audit settings for GET requests.
        All of the fields are optional. An empty body will make no changes.

        ### Learn more
        * [`DOC /security/audit`](#docs-security-security_audit)
      operationId: security_audit_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_audit'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/security_audit'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API controls what is logged to the audit log files. All operations that make changes are always logged and cannot be disabled. The PATCH request updates administrative audit settings for GET requests. All fields are optional for a PATCH request. A GET request retrieves administrative audit settings for GET requests.
        <br />
        ---
        ## Examples
        ### Retrieving administrative audit settings for GET requests
        The following example shows the administrative audit settings for GET requests.
        <br />
        ---
        ```
        # The API:
        /api/security/audit
        # The call:
        curl -X GET "https://<cluster-ip>/api/security/audit"
        # The response:
        {
          "cli": false,
          "http": false,
          "ontapi": false,
          "_links": {
              "self": {
                  "href": "/api/security/audit"
              }
          }
        }
        ```
        ---
        ### Updating administrative audit settings for GET requests
        The following example updates the administrative audit settings for GET requests
        <br />
        ---
        ```
        # The API:
        /api/security/audit
        # The call:
        curl -X PATCH "https://<cluster-ip>/api/security/audit" -d '{"cli":"false", "http": "true", "ontapi": "true"}'
        ```
        ---
      tags:
      - security
  /security/audit/destinations:
    get:
      description: |-
        Defines a remote syslog/splunk server for sending audit information to.
        ### Learn more
        * [`DOC /security/audit/destinations`](#docs-security-security_audit_destinations)
      operationId: audit_log_forwarding_get
      parameters:
      - $ref: '#/parameters/order_by_param'
      - description: Filter by facility
        in: query
        name: facility
        type: string
      - description: Filter by address
        in: query
        name: address
        type: string
      - description: Filter by port
        in: query
        name: port
        type: integer
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - description: Filter by verify_server
        in: query
        name: verify_server
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_audit_log_forward_response'
        default:
          description: error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Configures remote syslog/splunk server information.
        ### Required properties
        All of the following fields are required for creating a remote syslog/splunk destination
        * `address`
        ### Optional properties
        All of the following fields are optional for creating a remote syslog/splunk destination
        * `port`
        * `protocol`
        * `facility`
        * `verify_server` (Can only be "true" when protocol is "tcp_encrypted")

        ### Learn more
        * [`DOC /security/audit/destinations`](#docs-security-security_audit_destinations)
      operationId: security_log_forwarding_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - default: false
        description: Skip the Connectivity Test
        in: query
        name: force
        type: boolean
      - description: Remote syslog/splunk server information
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/security_audit_log_forward'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/security_audit_log_forward_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 15661      | The object specified could not be found |
            | 13114      | Internal error |
            | 13115      | Invalid input |
            | 4522285    | Server verification cannot be enabled because it requires a protocol with encryption. Encryption can be selected using the protocol field.|
            | 9240603    | Cannot ping destination host. Verify connectivity to desired host or skip the connectivity check with the -force parameter. |
            | 327698     | Failed to create RPC client to destination host |
            | 9240609    | Cannot connect to destination host. |
            | 9240604    | Cannot resolve the destination host. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API controls the forwarding of audit log information to remote syslog/splunk servers. Multiple destinations can be configured and all audit records are forwarded to all destinations.</br>
        A GET operation retrieves information about remote syslog/splunk server destinations.
        A POST operation creates a remote syslog/splunk server destination.
        A GET operation on /security/audit/destinations/{address}/{port} retrieves information about the syslog/splunk server destination given its address and port number.
        A PATCH operation on /security/audit/destinations/{address}/{port} updates information about the syslog/splunk server destination given its address and port number.
        A DELETE operation on /security/audit/destinations/{address}/{port} deletes a syslog/splunk server destination given its address and port number.
        ### Overview of fields used for creating a remote syslog/splunk destination
        The fields used for creating a remote syslog/splunk destination fall into the following categories
        #### Required properties
        All of the following fields are required for creating a remote syslog/splunk destination
        * `address`
        #### Optional properties
        All of the following fields are optional for creating a remote syslog/splunk destination
        * `port`
        * `protocol`
        * `facility`
        * `verify_server`
        <br />
        ---
        ## Examples
        ### Retrieving remote syslog/splunk server destinations
        The following example shows remote syslog/splunk server destinations
        <br />
        ---
        ```
        # The API:
        /api/security/audit/destinations
        # The call:
        curl -X GET "https://<cluster-ip>/api/security/audit/destinations"
        # The response:
        {
          "records": [
            {
              "address": "1.1.1.1",
              "port": 514,
              "_links": {
                "self": {
                  "href": "/api/security/audit/destinations/1.1.1.1/514"
                }
            }
          }
         ],
         "num_records": 1,
           "_links": {
             "self": {
               "href": "/api/security/audit/destinations"
             }
           }
        }
        ```
        ---
        ### Creating remote syslog/splunk server destinations
        The following example creates remote syslog/splunk server destinations.
        <br />
        ---
        ```
        # The API:
        /api/security/audit/destinations
        # The call:
        curl -X POST "https://<cluster-ip>/api/security/audit/destinations?force=true -d '{ "address": "<destination-address>", "port": <destination-port>, "protocol": "udp_unencrypted", "facility": "kern"}'"
        ```
        ---
        ### Retrieving a remote syslog/splunk server destination given its destination address and port number
        The following example retrieves a remote syslog/splunk server destination given its destination address and port number.
        <br />
        ---
        ```
        # The API:
        /api/security/audit/destinations/{address}/{port}
        # The call:
        curl -X GET "https://<cluster-ip>/api/security/audit/destinations/<destination-address>/<destination-port>"
        # The response:
        {
          "address": "1.1.1.1",
          "port": 514,
          "protocol": "udp_unencrypted",
          "facility": "kern",
          "verify_server": false,
          "_links": {
            "self": {
              "href": "/api/security/audit/destinations/1.1.1.1/514"
            }
          }
        }
        ```
        ---
        ### Updating a remote syslog/splunk server destination given its destination address and port number
        The following example updates a remote syslog/splunk server destination configuration given its destination address and port number.
        <br />
        ---
        ```
        # The API:
        /api/security/audit/destinations/{address}/{port}
        # The call:
        curl -X PATCH "https://<cluster-ip>/api/security/audit/destinations/<destination-address>/<destination-port> -d '{"facility":  "kern"}'"
        ```
        ---
        ### Deleting a remote syslog/splunk server destination given its destination address and port number
        The following example deletes a remote syslog/splunk server destination configuration given its destination address and port number.
        <br />
        ---
        ```
        # The API:
        /api/security/audit/destinations/{address}/{port}
        # The call:
        curl -X DELETE "https://<cluster-ip>/api/security/audit/destinations/<destination-address>/<destination-port>"
        ```
        ---
      tags:
      - security
  /security/audit/destinations/{address}/{port}:
    delete:
      description: |-
        Deletes remote syslog/splunk server information.
        ### Learn more
        * [`DOC /security/audit/destinations`](#docs-security-security_audit_destinations)
      operationId: security_log_forwarding_delete
      parameters:
      - description: IP address of remote syslog/splunk server.
        in: path
        name: address
        required: true
        type: string
      - description: Port number of remote syslog/splunk server.
        in: path
        name: port
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Defines a remote syslog/splunk server for sending audit information to.
        ### Learn more
        * [`DOC /security/audit/destinations`](#docs-security-security_audit_destinations)
      operationId: security_log_forwarding_get
      parameters:
      - description: IP address of remote syslog/splunk server.
        in: path
        name: address
        required: true
        type: string
      - description: Port number of remote syslog/splunk server.
        in: path
        name: port
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_audit_log_forward'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates remote syslog/splunk server information.
        ### Learn more
        * [`DOC /security/audit/destinations`](#docs-security-security_audit_destinations)
      operationId: security_log_forwarding_modify
      parameters:
      - description: IP address of remote syslog/splunk server.
        in: path
        name: address
        required: true
        type: string
      - description: Port number of remote syslog/splunk server.
        in: path
        name: port
        required: true
        type: integer
      - description: Modify remote syslog/splunk server information.
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_audit_log_forward'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_audit_log_forward'
        default:
          description: Default
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/audit/messages:
    get:
      description: |-
        Retrieves the administrative audit log viewer.
        ### Learn more
        * [`DOC /security/audit/messages`](#docs-security-security_audit_messages)
      operationId: security_audit_log_collection_get
      parameters:
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by application
        in: query
        name: application
        type: string
      - description: Filter by user
        in: query
        name: user
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by location
        in: query
        name: location
        type: string
      - description: Filter by session_id
        in: query
        name: session_id
        type: string
      - description: Filter by command_id
        in: query
        name: command_id
        type: string
      - description: Filter by message
        in: query
        name: message
        type: string
      - description: Filter by input
        in: query
        name: input
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_audit_log_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        These APIs return audit log records. The GET requests retrieves all audit log records. An audit log record contains information such as timestamp, node name, index and so on.
        <br />
        ---
        ## Example
        ### Retrieving audit log records
        The following example shows the audit log records.
        <br />
        ---
        ```
        # The API:
        /api/security/audit/messages
        # The call:
        curl -X GET "https://<cluster-ip>/api/security/audit/messages"
        # The response:
        {
          "records": [
            {
              "timestamp": "2019-03-08T11:03:32-05:00",
              "node": {
                "name": "node1",
                "uuid": "bc9af9da-41bb-11e9-a3db-005056bb27cf",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/bc9af9da-41bb-11e9-a3db-005056bb27cf"
                  }
                }
              },
              "index": 4294967299,
              "application": "http",
              "location": "172.21.16.89",
              "user": "admin",
              "input": "GET /api/security/audit/destinations/",
              "state": "pending",
              "scope": "cluster"
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/audit/messages"
            }
          }
        }
        ```
        ---
      tags:
      - security
  /security/authentication/cluster/ad-proxy:
    delete:
      description: |-
        Deletes the data SVM configured as a tunnel for Active Directory-based authentication for cluster user accounts.
        ### Learn more
        * [`DOC /security/authentication/cluster/ad-proxy`](#docs-security-security_authentication_cluster_ad-proxy)
      operationId: cluster_account_ad_proxy_delete
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves SVM information configured as an Active Directory domain-tunnel.
        ### Learn more
        * [`DOC /security/authentication/cluster/ad-proxy`](#docs-security-security_authentication_cluster_ad-proxy)
      operationId: cluster_account_ad_proxy_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_ad_proxy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates the data SVM configured as a tunnel for Active Directory-based authentication for cluster user accounts.
        ### Learn more
        * [`DOC /security/authentication/cluster/ad-proxy`](#docs-security-security_authentication_cluster_ad-proxy)
      operationId: cluster_account_ad_proxy_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: The data SVM that tunnels the Active Directory authentication
          requests.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster_ad_proxy'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Configures a data SVM as a proxy for Active Directory-based authentication for cluster user accounts.
        ### Learn more
        * [`DOC /security/authentication/cluster/ad-proxy`](#docs-security-security_authentication_cluster_ad-proxy)
      operationId: cluster_account_ad_proxy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: The data SVM that tunnels the Active Directory authentication
          requests.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster_ad_proxy'
      responses:
        '201':
          description: Created
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API configures data SVM account information at the Active Directory. For Active Directory domain-based authentication for cluster accounts, a data SVM must be configured and registered as a machine account at the Active Directory. All authentication requests are proxied through this SVM.
        ## Examples
        ### Creating a data SVM proxy for domain-based authentication for cluster accounts
        ```
        # The API:
        POST  "/api/security/authentication/cluster/ad-proxy"
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/cluster/ad-proxy" -d '{"svm.uuid":"13f87d78-70c7-11e9-b722-0050568ec89f"}'
        ```
        ### Updating a data SVM proxy for domain-based authentication for cluster accounts
        ```
        # The API:
        PATCH "/api/security/authentication/cluster/ad-proxy"
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/authentication/cluster/ad-proxy" -d '{"svm.uuid":"13f87d78-70c7-11e9-b722-0050568ec89f"}'
        ```
        ### Retrieving a data SVM proxy for domain-based authentication for cluster accounts
        ```
        # The API:
        GET "/api/security/authentication/cluster/ad-proxy"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/authentication/cluster/ad-proxy"
        # The response:
        {
          "svm": {
            "uuid": "512eab7a-6bf9-11e9-a896-005056bb9ce1",
            "name": "vs2",
            "_links": {
              "self": {
                "href": "/api/svm/svms/512eab7a-6bf9-11e9-a896-005056bb9ce1"
              }
            }
          },
          "_links": {
            "self": {
              "href": "/api/security/authentication/cluster/ad-proxy"
            }
          }
        }
        ```
      tags:
      - security
  /security/authentication/cluster/ldap:
    delete:
      description: |-
        Deletes the LDAP configuration of the cluster.

        ### Learn more
        * [`DOC /security/authentication/cluster/ldap`](#docs-security-security_authentication_cluster_ldap)
      operationId: cluster_ldap_delete
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves the cluster LDAP configuration.

        ### Learn more
        * [`DOC /security/authentication/cluster/ldap`](#docs-security-security_authentication_cluster_ldap)
      operationId: cluster_ldap_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_ldap'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Both mandatory and optional parameters of the LDAP configuration can be updated.
        IPv6 must be enabled if IPv6 family addresses are specified. Configuring more than one LDAP server is recommended to avoid a single point of failure. Both FQDNs and IP addresses are supported for the `servers` property.
        The LDAP servers are validated as part of this operation. LDAP validation fails in the following scenarios:<br/>
        1. The server does not have LDAP installed.
        2. The server is invalid.
        3. The server is unreachable. <br/>

        ### Learn more
        * [`DOC /security/authentication/cluster/ldap`](#docs-security-security_authentication_cluster_ldap)
      operationId: cluster_ldap_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_ldap'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4915203    | The specified LDAP schema does not exist. |
            | 4915208    | The specified LDAP servers contain duplicate server entries. |
            | 4915229    | DNS resolution failed due to an internal error. Contact technical support if this issue persists. |
            | 4915231    | DNS resolution failed for one or more of the specified LDAP servers. Verify that a valid DNS server is configured. |
            | 23724132   | DNS resolution failed for all the specified LDAP servers. Verify that a valid DNS server is configured. |
            | 4915234    | Specified LDAP server is not supported because it is one of the following: multicast, loopback, 0.0.0.0, or broadcast. |
            | 4915248    | LDAP servers cannot be empty or "-". Specified FQDN is not valid because it is empty or "-" or it contains either special characters or "-" at the start or end of the domain. |
            | 4915251    | STARTTLS and LDAPS cannot be used together |
            | 4915257    | The LDAP configuration is not valid. Verify that the Distinguished Names and bind password are correct. |
            | 4915258    | The LDAP configuration is not valid. Verify that the servers are reachable and that the network configuration is correct. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        A cluster can have only one LDAP configuration. IPv6 must be enabled if IPv6 family addresses are specified.
        ### Required properties
        * `servers` - List of LDAP servers used for this client configuration.
        * `bind_dn` - Specifies the user that binds to the LDAP servers.
        * `base_dn` - Specifies the default base DN for all searches.
        ### Recommended optional properties
        * `schema` - Schema template name.
        * `port` - Port used to connect to the LDAP Servers.
        * `min_bind_level` - Minimum bind authentication level.
        * `bind_password` - Specifies the bind password for the LDAP servers.
        * `base_scope` - Specifies the default search scope for LDAP queries.
        * `use_start_tls` - Specifies whether or not to use Start TLS over LDAP connections.
        * `session_security` - Specifies the level of security to be used for LDAP communications.
        ### Default property values
        * `schema` - _RFC-2307_
        * `port` - _389_
        * `min_bind_level` - _simple_
        * `base_scope` - _subtree_
        * `use_start_tls` - _false_
        * `session_security` - _none_
        <br/>
        Configuring more than one LDAP server is recommended to avoid a single point of failure. Both FQDNs and IP addresses are supported for the `servers` property.
        The LDAP servers are validated as part of this operation. LDAP validation fails in the following scenarios:<br/>
        1. The server does not have LDAP installed.
        2. The server is invalid.
        3. The server is unreachable.<br/>

        ### Learn more
        * [`DOC /security/authentication/cluster/ldap`](#docs-security-security_authentication_cluster_ldap)
      operationId: cluster_ldap_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_ldap'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ldap_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 4915203    | The specified LDAP schema does not exist. |
            | 4915207    | The specified LDAP servers contain duplicate server entries. |
            | 4915229    | DNS resolution failed due to an internal error. Contact technical support if this issue persists. |
            | 4915231    | DNS resolution failed for one or more of the specified LDAP servers. Verify that a valid DNS server is configured. |
            | 23724132   | DNS resolution failed for all the specified LDAP servers. Verify that a valid DNS server is configured. |
            | 4915234    | The specified LDAP server is not supported because it is one of the following: multicast, loopback, 0.0.0.0, or broadcast. |
            | 4915248    | LDAP servers cannot be empty or "-". Specified FQDN is invalid because it is empty or "-" or it contains either special characters or "-" at the start or end of the domain.  |
            | 4915251    | STARTTLS and LDAPS cannot be used together. |
            | 4915257    | The LDAP configuration is invalid. Verify that bind-dn and bind password are correct. |
            | 4915258    | The LDAP configuration is invalid. Verify that the servers are reachable and that the network configuration is correct. |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        LDAP servers are used to centrally maintain user information. LDAP configurations must be set up
        to look up information stored in the LDAP directory on the external LDAP servers. This API is used to retrieve and manage
        cluster LDAP server configurations.<br>
        ## Examples
        ### Retrieving the cluster LDAP information
        The cluster LDAP GET request retrieves the LDAP configuration of the cluster.<br>
        The following example shows how a GET request is used to retrieve the cluster LDAP information:
        ```
        # The API:
        /api/security/authentication/cluster/ldap
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/authentication/cluster/ldap" -H "accept: application/hal+json"
        # The response:
        {
          "servers": [
            "10.10.10.10",
            "domainB.example.com"
          ],
          "schema": "ad_idmu",
          "port": 389,
          "min_bind_level": "anonymous",
          "bind_dn": "cn=Administrators,cn=users,dc=domainA,dc=example,dc=com",
          "base_dn": "dc=domainA,dc=example,dc=com",
          "base_scope": "subtree",
          "use_start_tls": true,
          "session_security": "none",
          "_links": {
            "self": {
              "href": "/api/security/authentication/cluster/ldap"
            }
          }
        }
        ```
        ### Creating the cluster LDAP configuration
        The cluster LDAP POST operation creates an LDAP configuration for the cluster.<br>
        The following example shows how to issue a POST request with all of the fields specified:
        ```
        # The API:
        /api/security/authentication/cluster/ldap
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/cluster/ldap" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"10.10.10.10\"\, \"domainB.example.com\" ], \"schema\": \"ad_idmu\", \"port\": 389, \"min_bind_level\": \"anonymous\", \"bind_dn\": \"cn=Administrators,cn=users,dc=domainA,dc=example,dc=com\", \"bind_password\": \"abc\", \"base_dn\": \"dc=domainA,dc=example,dc=com\", \"base_scope\": \"subtree\", \"use_start_tls\": false, \"session_security\": \"none\"}"
        ```
        The following example shows how to issue a POST request with a number of optional fields not specified:
        ```
        # The API:
        /api/security/authentication/cluster/ldap
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/cluster/ldap" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"port\": 389, \"bind_dn\": \"cn=Administrators,cn=users,dc=domainA,dc=example,dc=com\", \"bind_password\": \"abc\", \"base_dn\": \"dc=domainA,dc=example,dc=com\", \"session_security\": \"none\"}"
        ```
        ### Updating the cluster LDAP configuration
        The cluster LDAP PATCH request updates the LDAP configuration of the cluster.<br>
        The following example shows how a PATCH request is used to update the cluster LDAP configuration:
        ```
        # The API:
        /api/security/authentication/cluster/ldap
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/authentication/cluster/ldap" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"55.55.55.55\" ], \"schema\": \"ad_idmu\", \"port\": 636, \"use_start_tls\": false }"
        ```
        ### Deleting the cluster LDAP configuration
        The cluster LDAP DELETE request deletes the LDAP configuration of the cluster.<br>
        The following example shows how a DELETE request is used to delete the cluster LDAP configuration:
        ```
        # The API:
        /api/security/authentication/cluster/ldap
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/authentication/cluster/ldap" -H "accept: application/hal+json"
        ```
      tags:
      - security
  /security/authentication/cluster/nis:
    delete:
      description: |-
        Deletes the NIS configuration of the cluster. NIS can be removed as a source from ns-switch if NIS is not used for lookups.

        ### Learn more
        * [`DOC /security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis)
      operationId: cluster_nis_delete
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves the NIS configuration of the cluster. Both NIS domain and servers are displayed by default.
        The `bound_servers` property indicates the successfully bound NIS servers.

        ### Learn more
        * [`DOC /security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis)
      operationId: cluster_nis_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_nis_service'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Both NIS domain and servers can be updated. Domains and servers cannot be empty. Both FQDNs and IP addresses are supported for the 'servers' field. If the domain is updated, NIS servers must also be specified. IPv6 must be enabled if IPv6 family addresses are specified for the `servers` property.<br/>

        ### Learn more
        * [`DOC /security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis)
      operationId: cluster_nis_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_nis_service'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966253    | IPv6 is not enabled in the cluster .|
            | 3276964    | The NIS domain name or NIS server domain is too long. The maximum supported for domain name is 64 characters and the maximum supported for NIS server domain is 255 characters. |
            | 3276933    | A maximum of 10 NIS servers can be configured per SVM. |
            | 23724109   | DNS resolution failed for one or more specified servers.  |
            | 23724112   | DNS resolution failed due to an internal error. Contact technical support if this issue persists. |
            | 23724132   | DNS resolution failed for all the specified servers.  |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        The cluster can have one NIS server configuration. Specify the NIS domain and NIS servers as input. Domain name and servers fields cannot be empty.
        Both FQDNs and IP addresses are supported for the `server` property. IPv6 must be enabled if IPv6 family addresses are specified in the `server` property. A maximum of ten NIS servers are supported.
        ### Required properties
        * `domain` - NIS domain to which this configuration belongs.
        * `servers` - List of hostnames or IP addresses of NIS servers used by the NIS domain configuration.

        ### Learn more
        * [`DOC /security/authentication/cluster/nis`](#docs-security-security_authentication_cluster_nis)
      operationId: cluster_nis_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cluster_nis_service'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/cluster_nis_service_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1966253    | IPv6 is not enabled in the cluster. |
            | 3276964    | The NIS domain name or NIS server domain is too long. The maximum supported for domain name is 64 characters and the maximum supported for NIS server domain is 255 characters. |
            | 3276933    | A maximum of 10 NIS servers can be configured per SVM. |
            | 23724109   | DNS resolution failed for one or more specified servers.  |
            | 23724112   | DNS resolution failed due to an internal error. Contact technical support if this issue persists.  |
            | 23724132   | DNS resolution failed for all the specified servers.  |
            | 23724130   | Cannot use an IPv6 name server address because there are no IPv6 interfaces. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        NIS servers are used to authenticate user and client computers. NIS domain name and NIS server information is required to configure NIS. This API retrieves and manages NIS server configurations.
        ## Examples
        ### Retrieving cluster NIS information
        The cluster NIS GET request retrieves the NIS configuration of the cluster.<br>
        The following example shows how a GET request is used to retrieve the cluster NIS configuration:
        ```
        # The API:
        /security/authentication/cluster/nis
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/authentication/cluster/nis" -H "accept: application/hal+json"
        # The response:
        {
          "domain": "domainA.example.com",
          "servers": [
            "10.10.10.10",
            "example.com"
          ]
          "bound_servers": [
            "10.10.10.10"
          ]
        }
        ```
        ### Creating the cluster NIS configuration
        The cluster NIS POST request creates a NIS configuration for the cluster.<br>
        The following example shows how a POST request is used to create a cluster NIS configuration:
        ```
        # The API:
        /security/authentication/cluster/nis
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/cluster/nis" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"domain\": \"domainA.example.com\", \"servers\": [ \"10.10.10.10\",\"example.com\" ]}"
        ```
        ### Updating the cluster NIS configuration
        The cluster NIS PATCH request updates the NIS configuration of the cluster.<br>
        The following example shows how to update the domain:
        ```
        # The API:
        /security/authentication/cluster/nis
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/authentication/cluster/nis" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"domain\": \"domainC.example.com\", \"servers\": [ \"13.13.13.13\" ]}"
        ```
        The following example shows how to update the server:
        ```
        # The API:
        /security/authentication/cluster/nis
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/authentication/cluster/nis" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"servers\": [ \"14.14.14.14\" ]}"
        ```
        ## Deleting the cluster NIS configuration
        The cluster NIS DELETE request deletes the NIS configuration of the cluster.<br>
        The following example shows how a DELETE request is used to delete the cluster NIS configuration:
        ```
        # The API:
        /security/authentication/cluster/nis
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/authentication/cluster/nis" -H "accept: application/hal+json"
        ```
        ---
      tags:
      - security
  /security/authentication/cluster/saml-sp:
    delete:
      description: |-
        Deletes a SAML service provider configuration.
        ### Learn more
        * [`DOC /security/authentication/cluster/saml-sp`](#docs-security-security_authentication_cluster_saml-sp)
      operationId: security_saml_sp_delete
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 12320803 | SAML must be disabled before the configuration can be removed. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves a SAML service provider configuration.
        ### Learn more
        * [`DOC /security/authentication/cluster/saml-sp`](#docs-security-security_authentication_cluster_saml-sp)
      operationId: security_saml_sp_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by certificate.common_name
        in: query
        name: certificate.common_name
        type: string
      - description: Filter by certificate.serial_number
        in: query
        name: certificate.serial_number
        type: string
      - description: Filter by certificate.ca
        in: query
        name: certificate.ca
        type: string
      - description: Filter by idp_uri
        in: query
        name: idp_uri
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by host
        in: query
        name: host
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_saml_sp'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates a SAML service provider configuration.
        ### Learn more
        * [`DOC /security/authentication/cluster/saml-sp`](#docs-security-security_authentication_cluster_saml-sp)
      operationId: security_saml_sp_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_saml_sp'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 12320791 | SAML can only be disabled using the console or a SAML-authenticated application. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Creates a SAML service provider configuration. Note that "common_name" is mutually exclusive with "serial_number" and "ca" in POST. SAML will initially be disabled, requiring a patch to set "enabled" to "true", so that the user has time to complete the setup of the IdP.
        ### Required properties
        * `idp_uri`
        ### Optional properties
        * `certificate`
        * `enabled`
        * `host`

        ### Learn more
        * [`DOC /security/authentication/cluster/saml-sp`](#docs-security-security_authentication_cluster_saml-sp)
      operationId: security_saml_sp_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - default: true
        description: Verify IdP metadata server identity.
        in: query
        name: verify_metadata_server
        type: boolean
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_saml_sp'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 12320789 | Failed to download data file from specified URI. |
            | 12320794 | The host parameter provided must be the cluster management interface's IP address.  If the cluster management interface is not available, the node management interface's IP address must be used. |
            | 12320795 | A valid cluster or node management interface IP address must be provided. |
            | 12320805 | The certificate information provided does not match any installed certificates. |
            | 12320806 | The certificate information entered does not match any installed certificates. |
            | 12320814 | An invalid IDP URI has been entered. |
            | 12320815 | An IDP URI must be an HTTPS or FTPS URI. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API is used to retrieve and display relevant information pertaining to the SAML service provider configuration in the cluster. The POST request creates a SAML service provider configuration if there is none present.  The DELETE request removes the SAML service provider configuration.  The PATCH request enables and disables SAML in the cluster.  Various responses are shown in the examples below.
        <br />
        ---
        ## Examples
        ### Retrieving the SAML service provider configuration in the cluster
        The following output shows the SAML service provider configuration in the cluster.
        <br />
        ---
        ```
        # The API:
        /api/security/authentication/cluster/saml-sp
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/authentication/cluster/saml-sp" -H "accept: application/hal+json"
        # The response:
        {
          "idp_uri": "https://examplelab.customer.com/idp/Metadata",
          "enabled": true,
          "host": "172.21.74.181",
          "certificate": {
            "ca": "cluster1",
            "serial_number": "156F10C3EB4C51C1",
            "common_name": "cluster1"
          },
          "_links": {
            "self": {
              "href": "/api/security/authentication/cluster/saml-sp"
            }
          }
        }
        ```
        ---
        ### Creating the SAML service provider configuration
        The following output shows how to create a SAML service provider configuration in the cluster.
        <br />
        ---
        ```
        # The API:
        /api/security/authentication/cluster/saml-sp
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/cluster/saml-sp?return_records=true" -H "accept: application/hal+json" -d '{ "idp_uri": "https://examplelab.customer.com/idp/Metadata", "host": "172.21.74.181", "certificate": { "ca": "cluster1", "serial_number": "156F10C3EB4C51C1" }}'
        ```
        ---
        ### Updating the SAML service provider configuration
        The following output shows how to enable a SAML service provider configuration in the cluster.
        <br/>Disabling the configuration requires the client to be authenticated through SAML prior to performing the operation.
        <br />
        ---
        ```
        # The API:
        /api/security/authentication/cluster/saml-sp
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/authentication/cluster/saml-sp/" -d '{ "enabled": true }'
        ```
        ---
        ### Deleting the SAML service provider configuration
        ---
        ```
        # The API:
        /api/security/authentication/cluster/saml-sp
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/authentication/cluster/saml-sp/"
        ```
        ---
      tags:
      - security
  /security/authentication/password:
    post:
      description: |
        Updates the password for a user account.
        ### Required parameters
        * `name` - User account name.
        * `password` - New password for the user account.
        ### Optional parameters
        * `owner.name` or `owner.uuid` - Name or UUID of the SVM for an SVM-scoped user account.
        ### Related ONTAP commands
        * `security login password`
        ### Learn more
        * [`DOC /security/authentication/password`](#docs-security-security_authentication_password)
        * [`DOC /security/accounts`](#docs-security-security_accounts)
      operationId: account_password_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: New password for the user account.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/account_password'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 7077918 | The password cannot contain the username. |
            | 7077919 | The minimum length for new password does not meet the policy. |
            | 7077920 | The new password must have both letters and numbers. |
            | 7077921 | The minimum number of special characters required do not meet the policy. |
            | 7077924 | The new password must be different than last N passwords. |
            | 7077925 | The new password must be different to the old password. |
            | 7077940 | The password exceeds maximum supported length. |
            | 7077941 | Defined password composition exceeds the maximum password length of 128 characters. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API changes the password for a local user account.<p/>
        Only cluster administrators with the <i>"admin"</i> role can change the password for other cluster or SVM user accounts. If you are not a cluster administrator, you can only change your own password.
        ## Examples
        ### Changing the password of another cluster or SVM user account by a cluster administrator
        Specify the user account name and the new password in the body of the POST request. The owner.uuid or owner.name are not required to be specified for a cluster-scoped user account.<p/>
        For an SVM-scoped account, along with new password and user account name, specify either the SVM name as the owner.name or SVM uuid as the owner.uuid in the body of the POST request. These indicate the SVM for which the user account is created and can be obtained from the response body of a GET request performed on the <i>/api/svm/svms</i> API.
        ```
        # The API:
        POST "/api/security/authentication/password"
        # The call to change the password of another cluster user:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/password" -d '{"name":"cluster_user1","password":"hello@1234"}'
        # The call to change the password of another SVM user:
        curl -X POST "https://<mgmt-ip>/api/security/authentication/password" -d '{"owner.name":"svm1","name":"svm_user1","password":"hello@1234"}'
        ```
        ### Changing the password of an SVM-scoped user
        Note: The IP address in the URI must be same as one of the interfaces owned by the SVM.
        ```
        # The API:
        POST "/api/security/authentication/password"
        # The call:
        curl -X POST "https://<SVM-ip>/api/security/authentication/password" -d '{"name":"svm_user1","password":"new1@1234"}'
        ```
        ---
      tags:
      - security
  /security/authentication/publickeys:
    get:
      description: |-
        Retrieves the public keys configured for user accounts.
        ### Learn more
        * [`DOC /security/authentication/publickeys`](#docs-security-security_authentication_publickeys)
      operationId: publickey_collection_get
      parameters:
      - description: Filter by sha_fingerprint
        in: query
        name: sha_fingerprint
        type: string
      - description: Filter by obfuscated_fingerprint
        in: query
        name: obfuscated_fingerprint
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by public_key
        in: query
        name: public_key
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by account.name
        in: query
        name: account.name
        type: string
      - description: Filter by owner.uuid
        in: query
        name: owner.uuid
        type: string
      - description: Filter by owner.name
        in: query
        name: owner.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/publickey_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Creates a public key for a user account.
        ### Learn more
        * [`DOC /security/authentication/publickeys`](#docs-security-security_authentication_publickeys)
      operationId: publickey_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: The public key details for the user account.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/publickey'
      responses:
        '201':
          description: Created
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API configures the public keys for user accounts.<br/>For secure shell (SSH) access, public-private key pair based authentication is possible by associating the public key with a user account.
        Prerequisites:
          You must have generated the SSH key.
          You must be a cluster or SVM administrator to perform the user's public key.
        ## Examples
        ### Creating a public key for cluster-scoped user accounts
        Specify the user account name, public key, index, and comment in the body of the POST request. The owner.uuid or owner.name are not required for a cluster-scoped user account.
        ```
        # The API:
        POST "/api/security/authentication/publickey"
        # The call
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys --request POST --data '{ "account": "pubuser2","comment": "Cserver-Creation","index": 0, "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWJTerk2xXi3Lkrqrm6Q67aNmNDNKgpezwzl9Ap+DxtMxmocHC52CuwEcJjIUe121uAi0myscaJmC5Y0BzSnYuwcJ3/82kconFUwtK0h6QUTGqbc0vb4MZ39yIiiItCObWTot3msJYfZB+dgcCxMZ+0bl9YwZXrWMWP6XDJw/ai/EfWTZHC7e8Xe1mfp+C0cGMhlxRvgfeGjhZqU85DBfdGD5Tu/67vD13Q+817Jf8iBxgrEFiqirnkWNX5dj+jkMlEVC3s6dYciJNBEiMxNkSFGTnkG74S61pvZNFD6mSznV/28hl3zSjwWiuacsP3Be1ydeG8nEcCRN5Ap7vMdVd" }'
        ```
        ### Creating a public key for SVM-scoped user accounts
        For a SVM-scoped account, specify either the SVM name as the owner.name or the SVM UUID as the owner.uuid along with other parameters for the user account. These parameters indicate the SVM that contains the user account for the public key being created and can be obtained from the response body of the GET request performed on the API"/api/svm/svms".
        ```
        # The API:
        POST "/api/security/authentication/publickey"
        # The call
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys --request POST --data '{ "account": "pubuser4","comment": "Vserver-Creation","index": 0,"owner.uuid":"513a78c7-8c13-11e9-8f78-005056bbf6ac","owner.name":"vs0","public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWJTerk2xXi3Lkrqrm6Q67aNmNDNKgpezwzl9Ap+DxtMxmocHC52CuwEcJjIUe121uAi0myscaJmC5Y0BzSnYuwcJ3/82kconFUwtK0h6QUTGqbc0vb4MZ39yIiiItCObWTot3msJYfZB+dgcCxMZ+0bl9YwZXrWMWP6XDJw/ai/EfWTZHC7e8Xe1mfp+C0cGMhlxRvgfeGjhZqU85DBfdGD5Tu/67vD13Q+817Jf8iBxgrEFiqirnkWNX5dj+jkMlEVC3s6dYciJNBEiMxNkSFGTnkG74S61pvZNFD6mSznV/28hl3zSjwWiuacsP3Be1ydeG8nEcCRN5Ap7vMdVd" }'
        ```
        ### Retrieving the configured public key for user accounts
        Retrieves all public keys associated with the user accounts or a filtered list (for a specific user account name, a specific SVM and so on) of public keys.
        ```
        # The API:
        GET "/api/security/authentication/publickeys"
        # The call to retrieve all the user accounts configured in the cluster:
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys
        ```
      tags:
      - security
  /security/authentication/publickeys/{owner.uuid}/{account.name}/{index}:
    delete:
      description: |-
        Deletes the public key for a user account.
        ### Learn more
        * [`DOC /security/authentication/publickeys/{owner.uuid}/{account.name}/{index}`](#docs-security-security_authentication_publickeys_{owner.uuid}_{account.name}_{index})
      operationId: account_publickey_delete
      parameters:
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: account.name
        required: true
        type: string
      - description: Index number for the public key (where there are multiple keys
          for the same account).
        in: path
        maximum: 99
        minimum: 0
        name: index
        required: true
        type: integer
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves the public keys configured for a user account.
        ### Learn more
        * [`DOC /security/authentication/publickeys/{owner.uuid}/{account.name}/{index}`](#docs-security-security_authentication_publickeys_{owner.uuid}_{account.name}_{index})
      operationId: publickey_get
      parameters:
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: account.name
        required: true
        type: string
      - description: Index number for the public key (where there are multiple keys
          for the same account).
        in: path
        maximum: 99
        minimum: 0
        name: index
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/publickey'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates the public key for a user account.
        ### Learn more
        * [`DOC /security/authentication/publickeys/{owner.uuid}/{account.name}/{index}`](#docs-security-security_authentication_publickeys_{owner.uuid}_{account.name}_{index})
      operationId: publickey_modify
      parameters:
      - description: Account owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: User account name
        in: path
        name: account.name
        required: true
        type: string
      - description: Index number for the public key (where there are multiple keys
          for the same account).
        in: path
        maximum: 99
        minimum: 0
        name: index
        required: true
        type: integer
      - description: Public key modification details.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/publickey'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API configures the public keys for end-user (non-cluster admin) accounts.
        Specify the owner UUID, the user account name, and the index in the URI path. The owner UUID corresponds to the UUID of the SVM containing the user account associated with the public key and can be obtained from the response body of the GET request performed on the API \"/api/svm/svms\.<br/> The index value corresponds to the public key that needs to be modified or deleted (it is possible to create more than one public key for the same user account).
        ## Examples
        ### Retrieving the specific configured public key for user accounts
        ```
        # The API:
        GET "/api/security/authentication/publickeys/{owner.uuid}/{account.name}/{index}"
        # The call:
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys/513a78c7-8c13-11e9-8f78-005056bbf6ac/pubuser4/0
        ```
        ### Updating the public key and comment for user accounts
        ```
        # The API:
        PATCH "/api/security/authentication/publickeys/{owner.uuid}/{account.name}/{index}"
        # The call:
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys/d49de271-8c11-11e9-8f78-005056bbf6ac/pubuser1/0 --request PATCH --data '{ "comment": "Cserver-modification","public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmSLP/FeiT1J4Fb4GNVO4ioa1NIUHWeG08+anDbFke3JcFT5JqBn0QZiG0uF0bqepken/moVKZg8iQng1arjP4ULhhje/LwDuUbaB7kvtPL2gyzAX1qFYnBJ5R1LXja25Z4xeeaXUBJjhUmvpfque0TxbvpaG5V9rFTzVg9ccjBnkBchg3EkhF4VtHmrZNpTDAUOBAz69FRYXYz2ExoCHWqElHBJep9D0DLN0XtzQA0IF9hJck6xja5RcAQ6f9pLMCol9vJiqpcBAjkUmg1qH5ZNHsgDQ7dtGNGJw45zqXHPAy9z8yKJuIsdK2/4iVYLDL8mlHFElgeADn6OSxuij1" }'
        ```
        ### Deleting the public key for user accounts
        ```
        # The API:
        DELETE "/api/security/authentication/publickeys/{owner.uuid}/{account.name}/{index}"
        # The call:
        curl -k https://<mgmt-ip>/api/security/authentication/publickeys/d49de271-8c11-11e9-8f78-005056bbf6ac/pubuser1/0 --request DELETE
        ```
      tags:
      - security
  /security/azure-key-vaults:
    get:
      description: |-
        Retrieves AKVs configured for all clusters and SVMs.
        ### Related ONTAP commands
        * `security key-manager external azure show`

        ### Learn more
        * [`DOC /security/azure-key-vaults`](#docs-security-security_azure-key-vaults)
      operationId: azure_key_vault_collection_get
      parameters:
      - description: Filter by key_id
        in: query
        name: key_id
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by client_id
        in: query
        name: client_id
        type: string
      - description: Filter by tenant_id
        in: query
        name: tenant_id
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by state.message
        in: query
        name: state.message
        type: string
      - description: Filter by state.cluster_state
        in: query
        name: state.cluster_state
        type: boolean
      - description: Filter by state.code
        in: query
        name: state.code
        type: integer
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/azure_key_vault_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Configures the AKV configuration for all clusters and SVMs.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create a AKV.
        * `client_id` - Application (client) ID of the deployed Azure application with appropriate access to an AKV.
        * `tenant_id` - Directory (tenant) ID of the deployed Azure application with appropriate access to an AKV.
        * `client_secret` - Password used by the application to prove its identity to AKV.
        * `key_id`- Key Identifier of AKV encryption key.
        * `name` - Name of the deployed AKV used by ONTAP for storing keys.
        ### Related ONTAP commands
        * `security key-manager external azure enable`

        ### Learn more
        * [`DOC /security/azure-key-vaults`](#docs-security-security_azure-key-vaults)
      operationId: azure_key_vault_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/azure_key_vault'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/azure_key_vault_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3735553 | Failed to create self-signed certificate. |
            | 3735664 | The specified key size is not supported in FIPS mode. |
            | 3735665 | The specified hash function is not supported in FIPS mode. |
            | 3735700 | The specified key size is not supported. |
            | 52559972 | The certificates start date is later than the current date. |
            | 65537500 | A key manager has already been configured for this SVM. |
            | 65537503 | Passwords do not match. |
            | 65537504 | Internal error. Failed to store configuration in internal database. |
            | 65537505 | One or more volume encryption keys of the given SVM are stored on a key manager configured for the admin SVM. |
            | 65537506 | AKV is not supported in MetroCluster configurations. |
            | 65537512 | AKV cannot be configured for the given SVM as not all nodes in the cluster have the azure.key.vault capability needed to enable the feature. |
            | 65537514 | Failed to check or update the azure.key.vault feature capability. |
            | 65537518 | Failed to find an interface with Cluster role. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        Azure Key Vault (AKV) is a cloud key management service (KMS) that provides a secure store for secrets. This feature
        allows ONTAP to securely store its encryption keys using AKV.
        In order to use AKV with ONTAP, you must first deploy an Azure application with the appropriate access to an AKV and then provide
        ONTAP with the necessary details, such as key vault name, application ID so that ONTAP can communicate with the deployed Azure application.
        ## Examples
        ### Creating an AKV for a cluster
        The example AKV is configured at the cluster-scope. Note the <i>return_records=true</i> query parameter is used to obtain the newly created key manager configuration.<br/>
        ```
        # The API:
        POST /api/security/azure-key-vaults
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/azure-key-vaults?return_records=true' -H 'accept: application/hal+json' -d "{ \"client_id\": \"client1\", \"tenant_id\": \"tenant1\", \"name\": \"https:://mykeyvault.azure.vault.net/\", \"key_id\": \"https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74\", \"client_secret\" : \"myclientPwd\" }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "85619643-9a06-11ea-8d52-005056bbeba5",
              "client_id": "client1",
              "tenant_id": "tenant1",
              "name": "https:://mykeyvault.azure.vault.net/",
              "key_id": "https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74",
              "_links": {
                "self": {
                  "href": "/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an AKV for an SVM
        The example AKV is configured for a specific SVM. Note the <i>return_records=true</i> query parameter is used to obtain the newly created key manager configuration.<br/>
        ```
        # The API:
        POST /api/security/azure-key-vaults
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/azure-key-vaults?return_records=true' -H 'accept: application/hal+json' -d "{ \"svm\": { \"uuid\": \"4f7abf4c-9a07-11ea-8d52-005056bbeba5\" }, \"client_id\": \"client1\", \"tenant_id\": \"tenant1\", \"name\": \"https:://mykeyvault.azre.vault.net/\", \"key_id\": \"https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74\", \"client_secret\" : \"myclientPwd\" }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "024cd3cf-9a08-11ea-8d52-005056bbeba5",
              "svm": {
                "uuid": "4f7abf4c-9a07-11ea-8d52-005056bbeba5",
                "name": "vs0"
              },
              "client_id": "client1",
              "tenant_id": "tenant1",
              "name": "https:://mykeyvault.azure.vault.net/",
              "key_id": "https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74",
              "_links": {
                "self": {
                  "href": "/api/security/azure-key-vaults/024cd3cf-9a08-11ea-8d52-005056bbeba5"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving the AKVs configured for all clusters and SVMs
        The following example shows how to retrieve all configured AKVs along with their configurations.
        ```
        # The API:
        GET /api/security/azure-key-vaults
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/azure-key-vaults?fields=*'
        # The response:
        {
          "records": [
            {
              "uuid": "024cd3cf-9a08-11ea-8d52-005056bbeba5",
              "scope": "svm",
              "svm": {
                "uuid": "4f7abf4c-9a07-11ea-8d52-005056bbeba5",
                "name": "vs0"
              },
              "client_id": "client1",
              "tenant_id": "tenant1",
              "name": "https:://mykeyvault.azure.vault.net/",
              "key_id": "https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74",
              "state": {
                "cluster_state": true,
                "message": "",
                "code": 0
              },
              "_links": {
                "self": {
                  "href": "/api/security/azure-key-vaults/024cd3cf-9a08-11ea-8d52-005056bbeba5"
                }
              }
            },
            {
              "uuid": "85619643-9a06-11ea-8d52-005056bbeba5",
              "scope": "cluster",
              "client_id": "client1",
              "tenant_id": "tenant1",
              "name": "https:://mykeyvault.azure.vault.net/",
              "key_id": "https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74",
              "state": {
                "cluster_state": true,
                "message": "",
                "code": 0
              },
              "_links": {
                "self": {
                  "href": "/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/azure-key-vaults?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the AKV configured for a specific SVM
        The following example retrieves a configured AKV for a specific SVM.
        ```
        # The API:
        GET /api/security/azure-key-vaults
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5?fields=*'
        # The response:
        {
          "uuid": "85619643-9a06-11ea-8d52-005056bbeba5",
          "scope": "cluster",
          "client_id": "client1",
          "tenant_id": "tenant1",
          "name": "https:://mykeyvault.azure.vault.net/",
          "key_id": "https://keyvault-test.vault.azure.net/keys/key1/a8e619fd8f234db3b0b95c59540e2a74",
          "state": {
            "cluster_state": true,
            "message": "",
            "code": 0
          },
          "_links": {
            "self": {
              "href": "/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5"
            }
          }
        }
        ```
        ---
        ### Updating the client password of a specific SVM
        The following example updates the client password of a configured AKV for a specific SVM.
        ```
        # The API:
        PATCH /api/security/azure-key-vaults
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5' -d "{ \"client_secret\": \"newSecret\" }"
        ```
        ---
        ### Deleting an AKV configuration for a specific SVM
        The following example deletes a configured AKV for a specific SVM.
        ```
        # The API:
        DELETE /api/security/azure-key-vaults
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5'
        ```
        ---
        ### Restoring the keys for a specific SVM configured with an AKV
        The following example restores all the keys of a specific SVM configured with an AKV.
        ```
        # The API:
        POST security/azure-key-vaults/{azure_key_vault.uuid}/restore
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/azure-key-vaults/85619643-9a06-11ea-8d52-005056bbeba5/restore'
        # The response:
        {
          "job": {
            "uuid": "6ab6946f-9a0c-11ea-8d52-005056bbeba5",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6ab6946f-9a0c-11ea-8d52-005056bbeba5"
              }
            }
          }
        }
        ```
        ---
      tags:
      - security
  /security/azure-key-vaults/{azure_key_vault.uuid}/restore:
    post:
      description: |
        Restore the keys for an SVM from a configured AKV.
        ### Related ONTAP commands
        * `security key-manager external azure restore`
      operationId: azure_key_vault_restore_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: UUID of the existing AKV configuration.
        in: path
        name: azure_key_vault.uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65537511 | AKV is not configured for the given SVM. |
            | 65537515 | Failed to restore keys on some nodes in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/azure-key-vaults/{uuid}:
    delete:
      description: |-
        Deletes an AKV configuration.
        ### Related ONTAP commands
        * `security key-manager external azure disable`

        ### Learn more
        * [`DOC /security/azure-key-vaults`](#docs-security-security_azure-key-vaults)
      operationId: azure_key_vault_delete
      parameters:
      - description: AKV UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536242 | One or more Storage Encryption devices are assigned an authentication key. |
            | 65536817 | Internal error. Failed to determine if key manager is safe to disable. |
            | 65536827 | Internal error. Failed to determine if the given SVM has any encrypted volumes. |
            | 65536834 | Internal error. Failed to get existing key-server details for the given SVM. |
            | 65536867 | Volume encryption keys (VEK) for one or more encrypted volumes are stored on the key manager configured for the given SVM. |
            | 65536883 | Internal error. Volume encryption key is missing for a volume. |
            | 65536884 | Internal error. Volume encryption key is invalid for a volume. |
            | 65536924 | Cannot remove key manager that still contains one or more NSE authentication keys. |
            | 65537511 | AKV is not configured for the given SVM. |
            | 196608301 | Internal error. Failed to get encryption type. |
            | 196608305 | NAE aggregates found in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves the AKV configuration for the SVM specified by the UUID.
        ### Related ONTAP commands
        * `security key-manager external azure show`

        ### Learn more
        * [`DOC /security/azure-key-vaults`](#docs-security-security_azure-key-vaults)
      operationId: azure_key_vault_get
      parameters:
      - description: AKV UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/azure_key_vault'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates the AKV configuration.
        ### Required properties
        * `client_secret` - New password used to prove the application's identity to the AKV.
        ### Related ONTAP commands
        * `security key-manager external azure modify`

        ### Learn more
        * [`DOC /security/azure-key-vaults`](#docs-security-security_azure-key-vaults)
      operationId: azure_key_vault_modify
      parameters:
      - description: AKV UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: AKV information
        in: body
        name: info
        schema:
          $ref: '#/definitions/azure_key_vault'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65537503 | Passwords do not match. |
            | 65537504 | Internal error. Failed to store configuration in internal database. |
            | 65537511 | AKV is not configured for the given SVM. |
            | 65537517 | The field \"new_client_secret\" must be specified. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/certificates:
    get:
      description: |-
        Retrieves security certificates.
        ### Related ONTAP commands
        * `security certificate show`

        ### Learn more
        * [`DOC /security/certificates`](#docs-security-security_certificates)
      operationId: security_certificate_collection_get
      parameters:
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by common_name
        in: query
        name: common_name
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by CA
        in: query
        name: ca
        type: string
      - description: Filter by certificate type
        in: query
        name: type
        type: string
      - description: Filter by key_size
        in: query
        name: key_size
        type: string
      - description: Filter by expiry_time
        in: query
        name: expiry_time
        type: string
      - description: Filter by hash_function
        in: query
        name: hash_function
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_certificate_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Creates or installs a certificate.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create or install the certificate.
        * `common_name` - Common name of the certificate. Required when creating a certificate.
        * `type` - Type of certificate.
        * `public_certificate` - Public key certificate in PEM format. Required when installing a certificate.
        * `private_key` - Private key certificate in PEM format. Required when installing a CA-signed certificate.
        ### Recommended optional properties
        * `expiry_time` - Certificate expiration time. Specifying an expiration time is recommended when creating a certificate.
        * `key_size` - Key size of the certificate in bits. Specifying a strong key size is recommended when creating a certificate.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `key_size` - _2048_
        * `expiry_time` - _P365DT_
        * `hash_function` - _sha256_
        ### Related ONTAP commands
        * `security certificate create`
        * `security certificate install`

        ### Learn more
        * [`DOC /security/certificates`](#docs-security-security_certificates)
      operationId: security_certificate_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_certificate'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/security_certificate_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3735645    |  Cannot specify a value for serial. It is generated automatically. |
            | 3735622    |  The certificate type is not supported. |
            | 3735664    |  The specified key size is not supported in FIPS mode. |
            | 3735665    |  The specified hash function is not supported in FIPS mode. |
            | 3735553    |  Failed to create self-signed Certificate. |
            | 3735646    |  Failed to store the certificates. |
            | 3735693    |  The certificate installation failed as private key was empty. |
            | 3735618    |  Cannot accept private key for server-ca or client-ca. |
            | 52363365   |  Failed to allocate memory. |
            | 52559975   |  Failed to read the certificate due to incorrect formatting. |
            | 52363366   |  Unsupported key type. |
            | 52560123   |  Failed to read the key due to incorrect formatting. |
            | 52559972   |  The certificates start date is later than the current date. |
            | 52559976   |  The certificate and private key do not match. |
            | 52559973   |  The certificate has expired. |
            | 52363366   |  Logic error: use of a dead object. |
            | 3735696    |  Intermediate certificates are not supported with client-ca and server-ca type certificates. |
            | 52559974   |  The certificate is not supported in FIPS mode. |
            | 3735676    |  Cannot continue the installation without a value for the common name. Since the subject field in the certificate is empty, the field "common_name" must have a value to continue with the installation. |
            | 3735558    |  Failed to extract information about Common Name from the certificate. |
            | 3735588    |  The common name (CN) extracted from the certificate is not valid. |
            | 3735632    |  Failed to extract Certificate Authority Information from the certificate. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API displays security certificate information and manages the certificates in ONTAP.
        ## Installing certificates in ONTAP
        The security certificates GET request retrieves all of the certificates in the cluster.
        ## Examples
        ### Retrieving all certificates installed in the cluster with their common-names
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/certificates?fields=common_name" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "name": "vs0"
              },
              "uuid": "dad2363b-8ac0-11e8-9058-005056b482fc",
              "common_name": "vs0",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/dad2363b-8ac0-11e8-9058-005056b482fc"
                }
              }
            },
            {
              "uuid": "1941e048-8ac1-11e8-9058-005056b482fc",
              "common_name": "ROOT",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/1941e048-8ac1-11e8-9058-005056b482fc"
                }
              }
            },
            {
              "uuid": "5a3a77a8-892d-11e8-b7da-005056b482fc",
              "common_name": "gshancluster-4",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/5a3a77a8-892d-11e8-b7da-005056b482fc"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/security/certificates?fields=common_name"
            }
          }
        }
        ```
        ---
        ### Retrieving all certificates installed at cluster-scope with their common-names
        ---
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/certificates?scope=cluster&fields=common_name" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "1941e048-8ac1-11e8-9058-005056b482fc",
              "scope": "cluster",
              "common_name": "ROOT",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/1941e048-8ac1-11e8-9058-005056b482fc"
                }
              }
            },
            {
              "uuid": "5a3a77a8-892d-11e8-b7da-005056b482fc",
              "scope": "cluster",
              "common_name": "gshancluster-4",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/5a3a77a8-892d-11e8-b7da-005056b482fc"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/certificates?scope=cluster&fields=common_name"
            }
          }
        }
        ```
        ---
        ### Retrieving all certificates installed on a specific SVM with their common-names
        ---
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/certificates?svm.name=vs0&fields=common_name" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "svm": {
                "name": "vs0"
              },
              "uuid": "dad2363b-8ac0-11e8-9058-005056b482fc",
              "common_name": "vs0",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/dad2363b-8ac0-11e8-9058-005056b482fc"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/certificates?svm.name=vs0&fields=common_name"
            }
          }
        }
        ```
        ---
        ### Retrieving a certificate using its UUID for all fields
        ---
        ```
        # The API:
        /api/security/certificates/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/certificates/dad2363b-8ac0-11e8-9058-005056b482fc?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "svm": {
            "uuid": "d817293c-8ac0-11e8-9058-005056b482fc",
            "name": "vs0"
          },
          "uuid": "dad2363b-8ac0-11e8-9058-005056b482fc",
          "scope": "svm",
          "type": "server",
          "common_name": "vs0",
          "serial_number": "15428D45CF81CF56",
          "ca": "vs0",
          "hash_function": "sha256",
          "key_size": 2048,
          "expiry_time": "2019-07-18T15:29:14-04:00",
          "public_certificate": "-----BEGIN CERTIFICATE-----\nMIIDQjCCAiqgAwIBAgIIFUKNRc+Bz1YwDQYJKoZIhvcNAQELBQAwGzEMMAoGA1UE\nAxMDdnMwMQswCQYDVQQGEwJVUzAeFw0xODA3MTgxOTI5MTRaFw0xOTA3MTgxOTI5\nMTRaMBsxDDAKBgNVBAMTA3ZzMDELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEB\nAQUAA4IBDwAwggEKAoIBAQCqFQb27th2ACOmJvWgLh1xRzobSb2ZTQfO561faXQ3\nIbiT+rnRWXetd/s2+iCv91d9LW0NOmP3MN2f3SFbyze3dl7WrnVbjLmYuI9MfOxs\nfmA+Bh6gpap5Yn2YddqoV6rfNGAuUveNLArNl8wODk/mpawpEQ93QSa1Zfg1gnoH\nRFrYqiSYT06X5g6RbUuEl4LTGXspz+plU46Za0i6QyxtvZ4bneibffXN3IigpqI6\nTGUV8R/J3Ps338VxVmSO9ZXBZmvbcJVoysYNICl/oi3fgPZlnBv0tbswqg4FoZO/\nWT+XHGhLep6cr/Aqg7u6C4RfqbCwzB/XFKDIqnmAQkDBAgMBAAGjgYkwgYYwDAYD\nVR0TBAUwAwEB/zALBgNVHQ8EBAMCAQYwHQYDVR0OBBYEFN/AnH8qLxocTtumNHIn\nEN4IFIDBMEoGA1UdIwRDMEGAFN/AnH8qLxocTtumNHInEN4IFIDBoR+kHTAbMQww\nCgYDVQQDEwN2czAxCzAJBgNVBAYTAlVTgggVQo1Fz4HPVjANBgkqhkiG9w0BAQsF\nAAOCAQEAa0pUEepdeQnd2Amwg8UFyxayb8eu3E6dlptvtyp+xtjhIC7Dh95CVXhy\nkJS3Tsu60PGR/b2vc3MZtAUpcL4ceD8XntKPQgBlqoB4bRogCe1TnlGswRXDX5TS\ngMVrRjaWTBF7ikT4UjR05rSxcDGplQRqjnOthqi+yPT+29+8a4Uu6J+3Kdrflj4p\n1nSWpuB9EyxtuCILNqXA2ncH7YKtoeNtChKCchhvPcoTy6Opma6UQn5UMxstkvGT\nVGaN5TlRWv0yiqPXIQblSqXi/uQsuRPcHDu7+KWRFn08USa6QVo2mDs9P7R9dd0K\n9QAsTjTOF9PlAKgNxGoOJl2y0+48AA==\n-----END CERTIFICATE-----\n",
          "_links": {
            "self": {
              "href": "/api/security/certificates/dad2363b-8ac0-11e8-9058-005056b482fc"
            }
          }
        }
        ```
        ### Creating a certificate in a cluster
        These certificates can be used to help administrators enable certificate-based authentication and to enable SSL-based communication to the cluster.
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/certificates" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{  \"common_name\": \"TEST-SERVER\",  \"type\": \"server\"  }"
        ```
        ### Installing a certificate in a cluster
        These certificates can be used to help administrators enable certificate-based authentication and to enable-SSL based communication to the cluster.
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/certificates" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{ \"type\": \"server-ca\", \"public_certificate\": \"-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBKMQswCQYDVQQG\nEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBS\nb290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQwMTE2MTgxMjIzWjBKMQswCQYDVQQGEwJVUzES\nMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBSb290IENB\nIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k91DNG8W9RYYKyqU+PZ4ld\nhNlT3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1ehm7zCYofWjK9ouuU+ehcCuz/\nmNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQfYo3fw7gpS0l4PJNgiCL8mdo2yMKi\n1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1bVoE/c40yiTcdCMbXTMTEl3EASX2MN0C\nXZ/g1Ue9tOsbobtJSdifWwLziuQkkORiT0/Br4sOdBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl\n3ZBWzvurpWCdxJ35UrCLvYf5jysjCiN2O/cz4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzy\nNeVJSQjKVsk9+w8YfYs7wRPCTY/JTw436R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZKdHzV\nWYfCP04MXFL0PfdSgvHqo6z9STQaKPNBiDoT7uje/5kdX7rL6B7yuVBgwDHTc+XvvqDtMwt0viAg\nxGds8AgDelWAf0ZOlqf0Hj7h9tgJ4TNkK2PXMl6f+cB7D3hvl7yTmvmcEpB4eoCHFddydJxVdHix\nuuFucAS6T6C6aMN7/zHwcz09lCqxC0EOoP5NiGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMC\nAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZI\nhvcNAQELBQADggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH\n6oi6mYtQlNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwtLRvM7Kqas6pg\nghstO8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93nAbowacYXVKV7cndJZ5t+qnt\nozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gjmmmV\nYjzlVYA211QC//G5Xc7UI2/YRYRKW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l2xPE4iUX\nfeu+h1sXIFRRk0pTAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lzzY9GvlU47/ro\nkTLql1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2gXjtw+hG4iZZRHUe\n2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZmUlO+KWA2yUPHGNiiskz\nZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A7/qxXDgGpRtK4dw4LTzcqx+QGtVKnO7R\ncGzM7vRX+Bi6hG6H\n-----END CERTIFICATE-----\n\"  }"
        ```
        ---
        ### Installing a certificate on a specific SVM
        ---
        ```
        # The API:
        /api/security/certificates
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/certificates" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{   \"svm\" : { \"name\" : \"vs0\" }, \"type\": \"server-ca\", \"public_certificate\": \"-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIQCgFCgAAAAUUjyES1AAAAAjANBgkqhkiG9w0BAQsFADBKMQswCQYDVQQG\nEwJVUzESMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBS\nb290IENBIDEwHhcNMTQwMTE2MTgxMjIzWhcNMzQwMTE2MTgxMjIzWjBKMQswCQYDVQQGEwJVUzES\nMBAGA1UEChMJSWRlblRydXN0MScwJQYDVQQDEx5JZGVuVHJ1c3QgQ29tbWVyY2lhbCBSb290IENB\nIDEwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCnUBneP5k91DNG8W9RYYKyqU+PZ4ld\nhNlT3Qwo2dfw/66VQ3KZ+bVdfIrBQuExUHTRgQ18zZshq0PirK1ehm7zCYofWjK9ouuU+ehcCuz/\nmNKvcbO0U59Oh++SvL3sTzIwiEsXXlfEU8L2ApeN2WIrvyQfYo3fw7gpS0l4PJNgiCL8mdo2yMKi\n1CxUAGc1bnO/AljwpN3lsKImesrgNqUZFvX9t++uP0D1bVoE/c40yiTcdCMbXTMTEl3EASX2MN0C\nXZ/g1Ue9tOsbobtJSdifWwLziuQkkORiT0/Br4sOdBeo0XKIanoBScy0RnnGF7HamB4HWfp1IYVl\n3ZBWzvurpWCdxJ35UrCLvYf5jysjCiN2O/cz4ckA82n5S6LgTrx+kzmEB/dEcH7+B1rlsazRGMzy\nNeVJSQjKVsk9+w8YfYs7wRPCTY/JTw436R+hDmrfYi7LNQZReSzIJTj0+kuniVyc0uMNOYZKdHzV\nWYfCP04MXFL0PfdSgvHqo6z9STQaKPNBiDoT7uje/5kdX7rL6B7yuVBgwDHTc+XvvqDtMwt0viAg\nxGds8AgDelWAf0ZOlqf0Hj7h9tgJ4TNkK2PXMl6f+cB7D3hvl7yTmvmcEpB4eoCHFddydJxVdHix\nuuFucAS6T6C6aMN7/zHwcz09lCqxC0EOoP5NiGVreTO01wIDAQABo0IwQDAOBgNVHQ8BAf8EBAMC\nAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU7UQZwNPwBovupHu+QucmVMiONnYwDQYJKoZI\nhvcNAQELBQADggIBAA2ukDL2pkt8RHYZYR4nKM1eVO8lvOMIkPkp165oCOGUAFjvLi5+U1KMtlwH\n6oi6mYtQlNeCgN9hCQCTrQ0U5s7B8jeUeLBfnLOic7iPBZM4zY0+sLj7wM+x8uwtLRvM7Kqas6pg\nghstO8OEPVeKlh6cdbjTMM1gCIOQ045U8U1mwF10A0Cj7oV+wh93nAbowacYXVKV7cndJZ5t+qnt\nozo00Fl72u1Q8zW/7esUTTHHYPTa8Yec4kjixsU3+wYQ+nVZZjFHKdp2mhzpgq7vmrlR94gjmmmV\nYjzlVYA211QC//G5Xc7UI2/YRYRKW2XviQzdFKcgyxilJbQN+QHwotL0AMh0jqEqSI5l2xPE4iUX\nfeu+h1sXIFRRk0pTAwvsXcoz7WL9RccvW9xYoIA55vrX/hMUpu09lEpCdNTDd1lzzY9GvlU47/ro\nkTLql1gEIt44w8y8bckzOmoKaT+gyOpyj4xjhiO9bTyWnpXgSUyqorkqG5w2gXjtw+hG4iZZRHUe\n2XWJUc0QhJ1hYMtd+ZciTY6Y5uN/9lu7rs3KSoFrXgvzUeF0K+l+J6fZmUlO+KWA2yUPHGNiiskz\nZ2s8EIPGrd6ozRaOjfAHN3Gf8qv8QfXBi+wAN10J5U6A7/qxXDgGpRtK4dw4LTzcqx+QGtVKnO7R\ncGzM7vRX+Bi6hG6H\n-----END CERTIFICATE-----\n\"  }"
        ```
        ---
        ### Deleting a certificate using its UUID
        ---
        ```
        # The API:
        /api/security/certificates/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/certificates/dad2363b-8ac0-11e8-9058-005056b482fc?fields=*" -H "accept: application/hal+json"
        ```
        ### Signing a new certificate signing request using an existing CA certificate UUID
        Once you have created a certificate of type "root_ca", you can use that certificate to act as a local Certificate Authority to sign new certificate signing requests. The following example signs a new certificate signing request using an existing CA certificate UUID. If successful, the API returns a signed certificate.
        ```
        # The API:
        /api/security/certificates/{ca.uuid}/sign
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/certificates/253add53-8ac9-11e8-9058-005056b482fc/sign" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{ \"signing_request\": \"-----BEGIN CERTIFICATE REQUEST-----\nMIICYTCCAUkCAQAwHDENMAsGA1UEAxMEVEVTVDELMAkGA1UEBhMCVVMwggEiMA0G\nCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCiBCuVfbYHNdOO7vjRQja4JqL2cHqK\ndrlTj5hz9RVqFKZ7VPh8DSP9LoTbYWsvrTkbuD0Wi715MVQCsbkq/mHos+Y5lfqs\nNP5K92fc6EhBzBDYFgZGFntZYJjEG5MPerIUE7CfVy7o6sjWOlxeY33pjefObyvP\nBcJkBHg6SFJK/TDLvIYJkonLkJEOJoTI6++a3I/1bCMfUeuRtLU9ThWlna1kMMYK\n4T16/Bxgm4bha2U2jtosc0Wltnld/capc+eqRV07WVbMmEOTtop3cv0h3N0S6lbn\nFkd96DXzeGWbSHFHckeCZ9bOHhnVbfEa/efkPLx7ziMC8GtRHHlwbnK7AgMBAAGg\nADANBgkqhkiG9w0BAQsFAAOCAQEAf+rs1i5PHaOSI2HtTM+Hcv/p71yzgoLL+aeU\ntB0V4iuoXdqY8oQeWoPI92ci0K08JuSpu6D0DwCKlstfwuGkAA2b0Wr7ZDRonTUq\nmJ4j3O47MLysW4Db2LbGws/AuDsCIrBJDWHMpHaqsvRbpMx2xQ/V5oagUw5eGGpN\ne4fg/E2k9mGkpxwkUzT7w1RZirpND4xL+XTzpzeZqgalpXug4yjIXlI5hpRESZ9/\nAkGJSCWxI15IZdxxFVXlBcmm6WpJnnboqkcKeXz95GM6Re+oBy9tlgvwvlVd5s8uHX+bycFiZp09Wsm8Ev727MziZ+0II9nxwkDKsdPvam+KLI9hLQ==\n-----END CERTIFICATE REQUEST-----\n\",  \"hash_function\": \"sha256\"}"
        # The response:
        {
          "public_certificate": "-----BEGIN CERTIFICATE-----\nMIIDBzCCAe+gAwIBAgIIFUKQpcqeaUAwDQYJKoZIhvcNAQELBQAwHDENMAsGA1UE\nAxMEUkFDWDELMAkGA1UEBhMCVVMwHhcNMTgwNzE4MjAzMTA1WhcNMTkwNzE4MjAz\nMTA1WjAcMQ0wCwYDVQQDEwRURVNUMQswCQYDVQQGEwJVUzCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBAKIEK5V9tgc1047u+NFCNrgmovZweop2uVOPmHP1\nFWoUpntU+HwNI/0uhNthay+tORu4PRaLvXkxVAKxuSr+Yeiz5jmV+qw0/kr3Z9zo\nSEHMENgWBkYWe1lgmMQbkw96shQTsJ9XLujqyNY6XF5jfemN585vK88FwmQEeDpI\nUkr9MMu8hgmSicuQkQ4mhMjr75rcj/VsIx9R65G0tT1OFaWdrWQwxgrhPXr8HGCb\nhuFrZTaO2ixzRaW2eV39xqlz56pFXTtZVsyYQ5O2indy/SHc3RLqVucWR33oNfN4\nZZtIcUdyR4Jn1s4eGdVt8Rr95+Q8vHvOIwLwa1EceXBucrsCAwEAAaNNMEswCQYD\nVR0TBAIwADAdBgNVHQ4EFgQUJMPxjeW1G76TbbD2tXB8dwSpI3MwHwYDVR0jBBgw\nFoAUu5aH0mWR4cFoN9i7k96d2op3sPwwDQYJKoZIhvcNAQELBQADggEBAI5ai+Zi\nFQZUXRTqJCgHsgBThARneVWQYkYpyAXmTR7QeLf1d4ZHL33i4xWCqX3uvW7SFJLe\nZajT2AVmgiDbaWIHtDtvqz1BY78PSgUwPH/IyARTEOBeikp6KdwMPraehDIBMAcc\nANY58wXiTBbsl8UMD6tGecgnzw6sxlMmadGvrfJeJmgY4zert6NNvgtTPhcZQdLS\nE0fGzHS6+3ajCCfEEhPNPeR9D0e5Me81i9EsQGENrnJzTci8rzXPuF4bC3gghrK1\nI1+kmJQ1kLYVUcsntcrIiHmNvtPFJY6stjDgQKS9aDd/THhPpokPtZoCmE6PDxh6\nR+dO6C0hcDKHFzA=\n-----END CERTIFICATE-----\n"
        }
        ```
        ---
      tags:
      - security
  /security/certificates/{ca.uuid}/sign:
    post:
      description: |
        Signs a certificate.
        ### Required properties
        * `signing_request` - Certificate signing request to be signed by the given certificate authority.
        ### Recommended optional properties
        * `expiry_time` - Certificate expiration time. Specifying an expiration time for a signed certificate is recommended.
        * `hash_function` - Hashing function. Specifying a strong hashing function is recommended when signing a certificate.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `expiry_time` - _P365DT_
        * `hash_function` - _sha256_
        ### Related ONTAP commands
        * `security certificate sign`
        This API is used to sign a certificate request using a pre-existing self-signed root certificate. The self-signed root certificate acts as a certificate authority within its scope and maintains the records of its signed certificates. <br/>
        The root certificate can be created for a given SVM or for the cluster using [`POST security/certificates`].<br/>
      operationId: security_certificate_sign
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: UUID of the existing certificate authority certificate
        in: path
        name: ca.uuid
        required: true
        type: string
      - description: Certificate sign information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_certificate_sign'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_certificate_sign_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3735628    | Failed to use CA certificate for signing. |
            | 3735665    | The specified hash function is not supported in FIPS mode. |
            | 52559974   | The certificate is not supported in FIPS mode. |
            | 3735626    | Failed to generate signed Certificate. |
            | 3735558    | Failed to extract information about Common Name from the certificate. |
            | 3735588    | The common name (CN) extracted from the certificate is not valid. |
            | 3735632    | Failed to extract Certificate Authority Information from the certificate. |
            | 3735629    | Failed to sign the certificate because Common Name of signing certificate and Common Name of CA certificate are same. |
            | 3735630    | Failed to sign the certificate because expiry date of signing certificate exceeds the expiry date of CA certificate. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/certificates/{uuid}:
    delete:
      description: |-
        Deletes a security certificate.
        ### Related ONTAP commands
        * `security certificate delete`

        ### Learn more
        * [`DOC /security/certificates`](#docs-security-security_certificates)
      operationId: security_certificate_delete
      parameters:
      - description: Certificate UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 3735644    | Cannot delete server-chain certificate. Reason: There is a corresponding server certificate for it. |
            | 3735679    | Cannot delete pre-installed server-ca certificates through REST. Use CLI or ZAPI. |
            | 3735650    | Deleting this client-ca certificate directly is not supported. Delete the corresponding root-ca certificate using type `root_ca` to delete the root, client, and server certificates. |
            | 3735627    | Deleting this server-ca certificate directly is not supported. Delete the corresponding root-ca certificate using type `root_ca` to delete the root, client, and server certificates. |
            | 3735589    | Cannot delete certificate. |
            | 3735590    | Cannot delete certificate. Failed to remove SSL configuration for the certificate. |
            | 3735683    | Cannot remove this certificate while external key manager is configured. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves security certificates.
        ### Related ONTAP commands
        * `security certificate show`

        ### Learn more
        * [`DOC /security/certificates`](#docs-security-security_certificates)
      operationId: security_certificate_get
      parameters:
      - description: Certificate UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_certificate'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/ipsec:
    get:
      description: |-
        Retrieves IPsec configuration via REST APIs.
        ### Related ONTAP commands
        * 'security ipsec config show'

        ### Learn more
        * [`DOC /security/ipsec`](#docs-security-security_ipsec)
      operationId: ipsec_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ipsec'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates IPsec configuration via REST APIs.
        ### Related ONTAP commands
        * 'security ipsec config modify'

        ### Learn more
        * [`DOC /security/ipsec`](#docs-security-security_ipsec)
      operationId: ipsec_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ipsec'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66256898 | Internal error. Failed to enable IPsec. |
            | 66256899 | Internal error. Failed to disable IPsec. |
            | 66257199 | IPsec is not supported in the current cluster version. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        The following operations are supported:
        * GET to retrieve the IPsec status: GET security/ipsec
        * Patch to update IPsec status: PATCH security/ipsec
      tags:
      - security
  /security/ipsec/policies:
    get:
      description: |-
        Retrieves the collection of IPsec policies.
        ### Related ONTAP commands
        * `security ipsec policy show`

        ### Learn more
        * [`DOC /security/ipsec/policies`](#docs-security-security_ipsec_policies)
      operationId: ipsec_policy_collection_get
      parameters:
      - description: Filter by local_endpoint.family
        in: query
        name: local_endpoint.family
        type: string
      - description: Filter by local_endpoint.port
        in: query
        name: local_endpoint.port
        type: string
      - description: Filter by local_endpoint.netmask
        in: query
        name: local_endpoint.netmask
        type: string
      - description: Filter by local_endpoint.address
        in: query
        name: local_endpoint.address
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by remote_endpoint.family
        in: query
        name: remote_endpoint.family
        type: string
      - description: Filter by remote_endpoint.port
        in: query
        name: remote_endpoint.port
        type: string
      - description: Filter by remote_endpoint.netmask
        in: query
        name: remote_endpoint.netmask
        type: string
      - description: Filter by remote_endpoint.address
        in: query
        name: remote_endpoint.address
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by protocol
        in: query
        name: protocol
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ipsec_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Creates an IPsec policy.
        ### Related ONTAP commands
        * `security ipsec policy create`

        ### Learn more
        * [`DOC /security/ipsec/policies`](#docs-security-security_ipsec_policies)
      operationId: ipsec_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: IPsec policy parameters
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ipsec_policy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ipsec_policy_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66257099 | Only one protocol can be specified. |
            | 66257100 | Only one local port can be specified. |
            | 66257101 | Only one remote port can be specified. |
            | 66257103 | IPsec policy with same name already exists in this SVM. |
            | 66257107 | The specified pre-shared key is not a valid hexadecimal string. |
            | 66257109 | The specified pre-shared key is not a valid Base64 encoded binary string. |
            | 66257110 | Failed to a create policy sequencing value. |
            | 66257111 | The IPsec policy with action ESP TRANSPORT provides packet protection and requires a secret key for authentication. |
            | 66257112 | The IPsec policy with the action specified does not provide packet protection and the authentication method provided for the policy will be ignored. |
            | 66257113 | Only one local IP subnet can be specified. |
            | 66257114 | Only one remote IP subnet can be specified. |
            | 66257115 | Port ranges containing more than one port are not supported. |
            | 66257117 | IPsec is not supported on the SVM specified in the policy, IPsec is supported on data SVMs only. |
            | 66257120 | The subnet selector must be a host address (An IPv4 address with a 32-bit netmask or an IPv6 address with a 128-bit netmask). |
            | 66257121 | The maximum limit of IPsec Policies has reached for the specified SVM. |
            | 66257125 | The local_endpoint.address must be specified with local_endpoint.netmask. |
            | 66257126 | The remote_endpoint.address must be specified with remote_endpoint.netmask. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        The following operations are supported:
        * Collection Get: GET security/ipsec/policies
        * Creation Post: POST security/ipsec/policies
        * Instance Get: GET security/ipsec/policies/uuid
        * Instance Patch: PATCH security/ipsec/policies/uuid
        * Instance Delete: DELETE security/ipsec/policies/uuid
      tags:
      - security
  /security/ipsec/policies/{uuid}:
    delete:
      description: |-
        Deletes a specific IPsec policy.
        ### Related ONTAP commands
        * `security ipsec policy delete`

        ### Learn more
        * [`DOC /security/ipsec/policies`](#docs-security-security_ipsec_policies)
      operationId: ipsec_policy_delete
      parameters:
      - description: IPsec policy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66257096 | Internal error. Failed to purge connections associated with the IPsec policy. |
            | 66257116 | IPsec policy with the specified UUID was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves a specific IPsec policy.
        ### Related ONTAP commands
        * `security ipsec policy show`

        ### Learn more
        * [`DOC /security/ipsec/policies`](#docs-security-security_ipsec_policies)
      operationId: ipsec_policy_get
      parameters:
      - description: IPsec policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ipsec_policy'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66257116 | IPsec policy with the specified UUID was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates a specific IPsec policy.
        ### Related ONTAP commands
        * `security ipsec policy modify`

        ### Learn more
        * [`DOC /security/ipsec/policies`](#docs-security-security_ipsec_policies)
      operationId: ipsec_policy_modify
      parameters:
      - description: IPsec policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/ipsec_policy'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66257097 | Internal error. Failed to update the IPsec policy. |
            | 66257099 | Only one protocol can be specified. |
            | 66257100 | Only one local port can be specified. |
            | 66257101 | Only one remote port can be specified. |
            | 66257110 | Failed to create a policy sequencing value. |
            | 66257113 | Only one local IP subnet can be specified. |
            | 66257114 | Only one remote IP subnet can be specified. |
            | 66257115 | Port ranges containing more than one port are not supported. |
            | 66257116 | IPsec policy with the specified UUID was not found. |
            | 66257120 | The subnet selector must be a host address (An IPv4 address with a 32-bit netmask or an IPv6 address with a 128-bit netmask). |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/ipsec/security-associations:
    get:
      description: |-
        Retrieves the IPsec and IKE (Internet Key Exchange) security associations.
        ### Related ONTAP commands
        * `security ipsec show-ipsecsa`
        * `security ipsec show-ikesa`

        ### Learn more
        * [`DOC /security/ipsec/security-associations`](#docs-security-security_ipsec_security-associations)
      operationId: security_association_collection_get
      parameters:
      - description: Filter by local_address
        in: query
        name: local_address
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by ike.responder_security_parameter_index
        in: query
        name: ike.responder_security_parameter_index
        type: integer
      - description: Filter by ike.state
        in: query
        name: ike.state
        type: string
      - description: Filter by ike.authentication
        in: query
        name: ike.authentication
        type: string
      - description: Filter by ike.initiator_security_parameter_index
        in: query
        name: ike.initiator_security_parameter_index
        type: integer
      - description: Filter by ike.version
        in: query
        name: ike.version
        type: string
      - description: Filter by remote_address
        in: query
        name: remote_address
        type: string
      - description: Filter by ipsec.outbound.security_parameter_index
        in: query
        name: ipsec.outbound.security_parameter_index
        type: integer
      - description: Filter by ipsec.outbound.bytes
        in: query
        name: ipsec.outbound.bytes
        type: integer
      - description: Filter by ipsec.outbound.packets
        in: query
        name: ipsec.outbound.packets
        type: integer
      - description: Filter by ipsec.inbound.security_parameter_index
        in: query
        name: ipsec.inbound.security_parameter_index
        type: integer
      - description: Filter by ipsec.inbound.bytes
        in: query
        name: ipsec.inbound.bytes
        type: integer
      - description: Filter by ipsec.inbound.packets
        in: query
        name: ipsec.inbound.packets
        type: integer
      - description: Filter by ipsec.action
        in: query
        name: ipsec.action
        type: string
      - description: Filter by ipsec.state
        in: query
        name: ipsec.state
        type: string
      - description: Filter by lifetime
        in: query
        name: lifetime
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by cipher_suite
        in: query
        name: cipher_suite
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_association_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        * Collection Get: GET security/ipsec/security-associatios
        * Instance Get: GET security/ipsec/security-associations/uuid
      tags:
      - security
  /security/ipsec/security-associations/{uuid}:
    get:
      description: |-
        Retrieves a specific IPsec or IKE (Internet Key Exchange) security association.
        ### Related ONTAP commands
        * `security ipsec show-ipsecsa`
        * `security ipsec show-ikesa`

        ### Learn more
        * [`DOC /security/ipsec/security-associations`](#docs-security-security_ipsec_security-associations)
      operationId: security_association_get
      parameters:
      - description: UUID of IPsec or IKE security association.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_association'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66257118 | IPsec SA with the specified UUID was not found. |
            | 66257119 | IPsec SA with the specified UUID was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/key-managers:
    get:
      description: |-
        Retrieves key managers.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `connectivity`
        * `status.message`
        * `status.code`
        ### Related ONTAP commands
        * `security key-manager show-keystore`
        * `security key-manager external show`
        * `security key-manager external show-status`
        * `security key-manager onboard show-backup`

        ### Learn more
        * [`DOC /security/key-managers`](#docs-security-security_key-managers)
      operationId: security_key_manager_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by volume_encryption.code
        in: query
        name: volume_encryption.code
        type: integer
      - description: Filter by volume_encryption.supported
        in: query
        name: volume_encryption.supported
        type: boolean
      - description: Filter by volume_encryption.message
        in: query
        name: volume_encryption.message
        type: string
      - description: Filter by is_default_data_at_rest_encryption_disabled
        in: query
        name: is_default_data_at_rest_encryption_disabled
        type: boolean
      - description: Filter by external.servers.username
        in: query
        name: external.servers.username
        type: string
      - description: Filter by external.servers.server
        in: query
        name: external.servers.server
        type: string
      - description: Filter by external.servers.connectivity.cluster_availability
        in: query
        name: external.servers.connectivity.cluster_availability
        type: boolean
      - description: Filter by external.servers.connectivity.records.state
        in: query
        name: external.servers.connectivity.records.state
        type: string
      - description: Filter by external.servers.connectivity.records.node.uuid
        in: query
        name: external.servers.connectivity.records.node.uuid
        type: string
      - description: Filter by external.servers.connectivity.records.node.name
        in: query
        name: external.servers.connectivity.records.node.name
        type: string
      - description: Filter by external.servers.timeout
        in: query
        name: external.servers.timeout
        type: integer
      - description: Filter by external.server_ca_certificates.uuid
        in: query
        name: external.server_ca_certificates.uuid
        type: string
      - description: Filter by external.client_certificate.uuid
        in: query
        name: external.client_certificate.uuid
        type: string
      - description: Filter by onboard.enabled
        in: query
        name: onboard.enabled
        type: boolean
      - description: Filter by onboard.key_backup
        in: query
        name: onboard.key_backup
        type: string
      - description: Filter by status.message
        in: query
        name: status.message
        type: string
      - description: Filter by status.code
        in: query
        name: status.code
        type: integer
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_key_manager_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |-
        Creates a key manager.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create a key manager.
        * `external.client_certificate` - Client certificate. Required only when creating an external key manager.
        * `external.server_ca_certificates` - Server CA certificates. Required only when creating an external key manager.
        * `external.servers.server` - Key servers. Required only when creating an external key manager.
        * `onboard.passphrase` - Cluster-wide passphrase. Required only when creating an Onboard Key Manager.
        * `synchronize` - Synchronizes missing onboard keys on any node in the cluster. Required only when creating an Onboard Key Manager at the partner site of a MetroCluster configuration.
        ### Related ONTAP commands
        * `security key-manager external enable`
        * `security key-manager onboard enable`
        * `security key-manager onboard sync`

        ### Learn more
        * [`DOC /security/key-managers`](#docs-security-security_key-managers)
      operationId: security_key_manager_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_key_manager'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/security_key_manager_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536038 | A maximum of 4 active key servers are allowed. |
            | 65536214 | Failed to generate cluster key encryption key. |
            | 65536216 | Failed to add cluster key encryption key. |
            | 65536310 | Failed to setup onboard key management because the MetroCluster peer is unhealthy. |
            | 65536508 | The platform does not support data at rest encryption. |
            | 65536821 | The certificate is not installed. |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536823 | The SVM has key manager already configured. |
            | 65536824 | Multitenant key management is not supported in MetroCluster configurations. |
            | 65536834 | Failed to get existing key-server details for the SVM. |
            | 65536852 | Failed to query supported KMIP protocol versions. |
            | 65536870 | Key management servers already configured. |
            | 65536871 | Duplicate key management servers exist. |
            | 65536876 | External key management requires client and server CA certificates installed and with one or more key servers provided. |
            | 65536878 | External key management cannot be configured as one or more volume encryption keys of the SVM are stored in cluster key management server. |
            | 65536895 | External key manager cannnot be configured since this cluster is part of a MetroCluster configuration and the partner site of this MetroCluster configuration has Onboard Key Manager configured. |
            | 65536900 | Onboard key management cannot be configured because this cluster is part of a MetroCluster configuration and the partner site has the external key manager configured. |
            | 65536903 | Onboard key management has failed to configure on some nodes in the cluster. Use the CLI to sync the onboard key management configuration on failed nodes. |
            | 65536906 | Onboard key management has already been configured at the partner site. Use the CLI to sync the onboard key management with the same passphrase. |
            | 65536907 | Onboard key management is already configured. Use the CLI to sync any nodes with onboard key management configuration. |
            | 65536916 | Onboard key management is only supported for an admin SVM. |
            | 65536920 | The Onboard Key Manager passphrase length is incorrect. |
            | 65537240 | The Onboard Key Manager passphrase must be provided when performing a POST/synchronize operation. |
            | 65537241 | The Onboard Key Manager existing_passphrase must not be provided when performing a POST/synchronize operation. |
            | 65537244 | Unable to sync/create Onboard Key Manager on the local cluster; Onboard Key Manager is already configured on the cluster. |
            | 65537245 | Unable to sync/create Onboard Key Manager on the local cluster; Onboard Key Manager is not configured on the partner cluster. |
            | 65537246 | Unable to sync/create Onboard Key Manager on local cluster. This cluster is not part of a MetroCluster configuration. |
            | 66060338 | Failed to establish secure connection for a key management server due to incorrect server_ca certificates. |
            | 66060339 | Failed to establish secure connection for a key management server due to incorrect client certificates. |
            | 66060340 | Failed to establish secure connection for a key management server due to Cryptsoft error. |
            | 66060341 | Failed to establish secure connection for a key management server due to network configuration issues. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        A key manager is a key management solution (software or dedicated hardware) that enables other ONTAP client modules to securely and persistently store keys for various uses. For example, WAFL uses the key management framework to store and retrieve the volume encryption keys that it uses to encrypt/decrypt data on NVE volumes. A key manager can be configured at both cluster scope and SVM, with one key manager allowed per SVM. The key management framework in ONTAP supports two mutually exclusive modes for persisting keys: external and onboard.<p/>
        When an SVM is configured with external key management, the keys are stored on up to four key servers that are external to the system.<p/>
        Once external key management is enabled for an SVM, key servers can be added or removed using the <i>/api/security/key-managers/{uuid}/key-servers</i> endpoint. See [`POST /security/key-managers/{uuid}/key-servers`] and [`DELETE /security/key-managers/{uuid}/key-servers/{server}`] for more details.<p/>
        Setting up external key management dictates that the required certificates for securely communicating with the key server are installed prior to configuring the key manager. To install the required client and server_ca certificates, use the <i>/api/security/certificates/</i> endpoint. <p/>
        See [`POST /security/certificates`], [`GET /security/certificates/uuid`] and [`DELETE /security/certificates/{uuid}`] for more details.<p/>
        When an SVM is configured with onboard key management, the keys are stored in ONTAP in wrapped format using a key hierarchy created using the salted hash of the passphrase entered when configuring onboard key management. This model fits well for customers who use ONTAP to store their own data. <p/>
        ## Examples
        ### Creating an external key manager with 1 key server for a cluster
        The example key manager is configured at the cluster-scope with one key server. Note that the UUIDs of the certificates are those that are already installed at the cluster-scope. Note the <i>return_records=true</i> query parameter is used to obtain the newly created key manager configuration<br/>
        ```
        # The API:
        POST /api/security/key-managers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers?return_records=true' -H 'accept: application/hal+json' -d "{ \"external\": { \"client_certificate\": { \"uuid\": \"5fb1701a-d922-11e8-bfe8-005056bb017d\" }, \"server_ca_certificates\": [ { \"uuid\": \"827d7d31-d6c8-11e8-b5bf-005056bb017d\" }],\"servers\": [ { \"server\": \"10.225.89.33:5696\" } ] } }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "815e9462-dc57-11e8-9b2c-005056bb017d",
              "external": {
                "client_certificate": {
                  "uuid": "5fb1701a-d922-11e8-bfe8-005056bb017d"
                },
                "server_ca_certificates": [
                  {
                    "uuid": "827d7d31-d6c8-11e8-b5bf-005056bb017d"
                  }
                ],
                "servers": [
                  {
                    "server": "10.225.89.33:5696"
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/815e9462-dc57-11e8-9b2c-005056bb017d"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an external key manager with 1 key server for an SVM
        The example key manager is configured at the SVM-scope with one key server. Note that the UUIDs of the certificates are those that are already installed in that SVM. Note the <i>return_records=true</i> query parameter is used to obtain the newly created key manager configuration<br/>
        ```
        # The API:
        POST /api/security/key-managers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers?return_records=true' -H 'accept: application/hal+json' -d "{ \"svm\": { \"uuid\": \"216e6c26-d6c6-11e8-b5bf-005056bb017d\" }, \"external\": { \"client_certificate\": { \"uuid\": \"91dcaf7c-dbbd-11e8-9b2c-005056bb017d\" }, \"server_ca_certificates\": [ { \"uuid\": \"a4d4b8ba-dbbd-11e8-9b2c-005056bb017d\" }],\"servers\": [ { \"server\": \"10.225.89.34:5696\" } ] } }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "80af63f2-dbbf-11e8-9b2c-005056bb017d",
              "svm": {
                "uuid": "216e6c26-d6c6-11e8-b5bf-005056bb017d"
              },
              "external": {
                "client_certificate": {
                "uuid": "91dcaf7c-dbbd-11e8-9b2c-005056bb017d"
                },
                "server_ca_certificates": [
                  {
                    "uuid": "a4d4b8ba-dbbd-11e8-9b2c-005056bb017d"
                  }
                ],
                "servers": [
                  {
                    "server": "10.225.89.34:5696"
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/80af63f2-dbbf-11e8-9b2c-005056bb017d"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Creating an onboard key manager for a cluster
        The following example shows how to create an onboard key manager for a cluster with the onboard key manager configured at the cluster-scope.<br/>
        ```
        # The API:
        POST /api/security/key-managers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers' -H 'accept: application/hal+json' -d '{ "onboard": { "passphrase": "passphrase" } }'
        ```
        ---
        ### Retrieving the key manager configurations for all clusters and SVMs
        The following example shows how to retrieve all configured key managers along with their configurations.
        ```
        # The API:
        GET /api/security/key-managers
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/key-managers?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "uuid": "2345f09c-d6c9-11e8-b5bf-005056bb017d",
              "scope": "svm",
              "svm": {
                "uuid": "0f22f8f3-d6c6-11e8-b5bf-005056bb017d",
                "name": "vs0"
              },
              "external": {
                "client_certificate": {
                  "uuid": "4cb15482-d6c8-11e8-b5bf-005056bb017d",
                  "_links": {
                    "self": {
                      "href": "/api/security/certificates/4cb15482-d6c8-11e8-b5bf-005056bb017d/"
                    }
                  }
                },
                "server_ca_certificates": [
                  {
                    "uuid": "8a17c858-d6c8-11e8-b5bf-005056bb017d",
                    "_links": {
                      "self": {
                        "href": "/api/security/certificates/8a17c858-d6c8-11e8-b5bf-005056bb017d/"
                      }
                    }
                  }
                ],
                "servers": [
                  {
                    "server": "10.2.30.4:5696",
                    "timeout": 25,
                    "username": "",
                    "_links": {
                      "self": {
                        "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d/key-servers/10.2.30.4:5696/"
                      }
                    }
                  },
                  {
                    "server": "vs0.local1:3678",
                    "timeout": 25,
                    "username": "",
                    "_links": {
                      "self": {
                        "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d/key-servers/vs0.local1:3678/"
                      }
                    }
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d"
                }
              }
            },
            {
              "uuid": "815e9462-dc57-11e8-9b2c-005056bb017d",
              "scope": "cluster",
              "external": {
                "client_certificate": {
                  "uuid": "5fb1701a-d922-11e8-bfe8-005056bb017d",
                  "_links": {
                    "self": {
                      "href": "/api/security/certificates/5fb1701a-d922-11e8-bfe8-005056bb017d/"
                    }
                  }
                },
                "server_ca_certificates": [
                  {
                    "uuid": "827d7d31-d6c8-11e8-b5bf-005056bb017d",
                    "_links": {
                      "self": {
                        "href": "/api/security/certificates/827d7d31-d6c8-11e8-b5bf-005056bb017d/"
                      }
                    }
                  }
                ],
                "servers": [
                  {
                    "server": "10.225.89.33:5696",
                    "timeout": 25,
                    "username": "",
                    "_links": {
                      "self": {
                        "href": "/api/security/key-managers/815e9462-dc57-11e8-9b2c-005056bb017d/key-servers/10.225.89.33:5696/"
                      }
                    }
                  }
                ]
              },
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/815e9462-dc57-11e8-9b2c-005056bb017d"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/key-managers?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the key manager configurations for all clusters and SVMs (showing Onboard Key Manager)
        The following example shows how to retrieve all configured key managers along with their configurations.
        ```
        # The API:
        GET /api/security/key-managers
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/key-managers?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "uuid": "8ba52e0f-ae22-11e9-b747-005056bb7636",
              "scope": "cluster",
              "onboard": {
                "enabled": true,
                "key_backup": "--------------------------BEGIN BACKUP--------------------------\n <Backup Data> \n---------------------------END BACKUP---------------------------\n"
              },
              "volume_encryption": {
                "supported": false,
                "message": "The following nodes do not support volume granular encryption: ntap-vsim2.",
                "code": 65536935
              },
              "is_default_data_at_rest_encryption_disabled": false
            }
          ],
          "num_records": 1
        }
        ```
        ---
        ### Retrieving expensive fields such as, status.code and status.message, associated with a key manager.
        These values are not retreived by default with the 'fields=*' option.
        The following example shows how to retrieve the expensive objects associated with a key manager.
        ```
        # The API:
        GET /api/security/key-managers
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/key-managers?fields=status.message",status.code" -H 'accpt: application/hal+jon'
        # The response:
        {
          "records": [
            {
              "uuid": "ac305d46-aef4-11e9-ad3c-005056bb7636",
              "status": {
                "message": "No action needed at this time.",
                "code": 65537200
              },
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/ac305d46-aef4-11e9-ad3c-005056bb7636"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/key-managers?fields=status.message,status.code"
            }
          }
        ```
        ---
        ### Retrieving a specific key manager configuration
        The following example shows how to retrieve a specific key manager configuration.
        ```
        # The API:
        GET /api/security/key-managers/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/key-managers/<uuid>?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "uuid": "2345f09c-d6c9-11e8-b5bf-005056bb017d",
          "scope": "svm",
          "svm": {
            "uuid": "0f22f8f3-d6c6-11e8-b5bf-005056bb017d",
            "name": "vs0"
          },
          "external": {
            "client_certificate": {
              "uuid": "4cb15482-d6c8-11e8-b5bf-005056bb017d",
              "_links": {
                "self": {
                  "href": "/api/security/certificates/4cb15482-d6c8-11e8-b5bf-005056bb017d/"
                }
              }
            },
            "server_ca_certificates": [
              {
                "uuid": "8a17c858-d6c8-11e8-b5bf-005056bb017d",
                "_links": {
                  "self": {
                    "href": "/api/security/certificates/8a17c858-d6c8-11e8-b5bf-005056bb017d/"
                  }
                }
              }
            ],
            "servers": [
              {
                "server": "10.2.30.4:5696",
                "timeout": 25,
                "username": "",
                "_links": {
                  "self": {
                    "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d/key-servers/10.2.30.4:5696/"
                  }
                }
              },
              {
                "server": "vs0.local1:3678",
                "timeout": 25,
                "username": "",
                "_links": {
                  "self": {
                    "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d/key-servers/vs0.local1:3678/"
                  }
                }
              }
            ]
          },
          "_links": {
            "self": {
              "href": "/api/security/key-managers/2345f09c-d6c9-11e8-b5bf-005056bb017d"
            }
          }
        }
        ```
        ---
        ### Updating the configuration of an external key manager
        The following example shows how to update the server-ca configuration of an external key manager.
        ```
        # The API:
        PATCH /api/security/key-managers/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/security/key-managers/<uuid>?' -H 'accept: application/hal+json' -d "{ \"external\": { \"server_ca_certificates\": [ { \"uuid\": \"23b05c58-d790-11e8-b5bf-005056bb017d\" }] } }"
        ```
        ---
        ### Updating the passphrase of an Onboard Key Manager
        The following example shows how to update the passphrase of a given key manager.
        ```
        # The API:
        PATCH /api/security/key-managers/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/security/key-managers/<uuid>?' -H 'accept: application/hal+json' -d "{ \"onboard\": { \"existing_passphrase\": \"existing_passphrase\", \"passphrase\": \"new_passphrase\" } }"
        ```
        ---
        ### Synchronizing the passphrase of the Onboard Key Manager on a cluster
        The following example shows how to synchronize the passphrase on a cluster where the Onboard Key Manager is already configured.
        ```
        # The API:
        PATCH /api/security/key-managers/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/security/key-managers/<uuid>?' -H 'accept: application/hal+json' -d "{  \"onboard\": {    \"existing_passphrase\": \"existing_passphrase\",    \"synchronize\": true  }}"
        ```
        ---
        ### Configuring the Onboard Key Manager on a cluster
        The following example shows how to configure the Onboard Key Manager on a cluster where the Onboard Key Manager is not configured, but is configured on an MetroCluster partner cluster.
        ```
        # The API:
        POST /api/security/key-managers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers?return_records=false' -H  'accept: application/hal+json' -H  "Content-Type: application/json" -d "{  \"onboard\": {    \"passphrase\": \"passphrase\",    \"synchronize\": true  }}"
        ```
        ---
        ### Deleting a configured key manager
        The following example shows how to delete a key manager given its UUID.
        ```
        # The API:
        DELETE /api/security/key-managers/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/security/key-managers/<uuid>?' -H 'accept: application/hal+json'
        ```
        ---
        ### Adding a key server to an external key manager
        The following example shows how to add a key server to an external key manager.
        ```
        # The API:
        POST /api/security/key-managers/{uuid}/key-servers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers?return_records=true' -H 'accept: application/hal+json' -d "{ \"server\": \"10.225.89.34:5696\" }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "server": "10.225.89.34:5696",
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers/10.225.89.34%3A5696"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Adding 2 key servers to an external key manager
        The following example shows how to add 2 key servers to an external key manager. Note that the <i>records</i> property is used to add multiple key servers to the key manager in a single API call.
        ```
        # The API:
        POST /api/security/key-managers/{uuid}/key-servers
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers?return_records=true' -H 'accept: application/hal+json' -d "{ \"records\": [ { \"server\": \"10.225.89.34:5696\" }, { \"server\": \"10.225.89.33:5696\" } ] }"
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers/"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Retrieving all the key servers configured in an external key manager
        The following example shows how to retrieve all key servers configured in an external key manager.
        ```
        # The API:
        GET /api/security/key-managers/{uuid}/key-servers
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "uuid": "43e0c191-dc5c-11e8-9b2c-005056bb017d",
              "server": "10.225.89.33:5696",
              "timeout": 25,
              "username": "",
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers/10.225.89.33%3A5696"
                }
              }
            },
            {
              "uuid": "43e0c191-dc5c-11e8-9b2c-005056bb017d",
              "server": "10.225.89.34:5696",
              "timeout": 25,
              "username": "",
              "_links": {
                "self": {
                  "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers/10.225.89.34%3A5696"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving a specific key server configured in an external key manager
        The following example shows how to retrieve a specific key server configured in an external key manager.
        ```
        # The API:
        GET /api/security/key-managers/{uuid}/key-servers/{server}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers/{server}?fields=*' -H 'accept: application/hal+json'
        # The response:
        {
          "uuid": "43e0c191-dc5c-11e8-9b2c-005056bb017d",
          "server": "10.225.89.34:5696",
          "timeout": 25,
          "username": "",
          "_links": {
            "self": {
              "href": "/api/security/key-managers/43e0c191-dc5c-11e8-9b2c-005056bb017d/key-servers/10.225.89.34:5696"
            }
          }
        }
        ```
        ---
        ### Updating a specific key server configuration configured in an external key manager
        The following example shows how to update a specific key server configured in an external key manager.
        ```
        # The API:
        PATCH /api/security/key-managers/{uuid}/key-servers/{server}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers/{server}' -H 'accept: application/hal+json' -d "{ \"timeout\": 45 }"
        ```
        ---
        ### Deleting a key server from an external key manager
        The following example shows how to delete a key server from an external key manager.
        ```
        # The API:
        DELETE /api/security/key-managers/{uuid}/key-servers/{server}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/security/key-managers/<uuid>/key-servers/{server}' -H 'accept: application/hal+json'
        ```
        ---
      tags:
      - security
  /security/key-managers/{source.uuid}/migrate:
    post:
      description: |
        Migrates the keys belonging to an SVM between the cluster's key manager and the SVM's key manager. This operation can run for several minutes.
        ### Required properties
        * `source.uuid` - UUID of the source key manager.
        * `uuid` - UUID of the destination key manager.
        ### Related ONTAP commands
        * `security key-manager migrate`
      operationId: security_key_manager_migrate
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Migration source key manager UUID
        in: path
        name: source.uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          description: Migration destination key manager UUID
          properties:
            _links:
              properties:
                self:
                  $ref: '#/definitions/href'
              readOnly: true
              type: object
            uuid:
              description: Key manager UUID
              example: 1cd8a442-86d1-11e0-ae1c-123478563434
              type: string
          type: object
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/key-managers/{uuid}:
    delete:
      description: |-
        Deletes a key manager.
        ### Related ONTAP commands
        * `security key-manager external disable`
        * `security key-manager onboard disable`

        ### Learn more
        * [`DOC /security/key-managers`](#docs-security-security_key-managers)
      operationId: security_key_manager_delete
      parameters:
      - description: Key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536208 | Failed to delete the SVM Key ID. |
            | 65536233 | Internal error. Deletion of km_wrapped_kdb key database has failed for onboard key management. |
            | 65536234 | Internal error. Deletion of cluster_kdb key database has failed for onboard key management. |
            | 65536239 | Encrypted volumes are found for the SVM. |
            | 65536242 | One or more Storage Encryption devices are assigned an authentication key. |
            | 65536242 | One or more Storage Encryption devices are assigned an authentication key. |
            | 65536800 | Failed to lookup onboard keys. |
            | 65536813 | Encrypted kernel core files found. |
            | 65536817 | Failed to determine if key manager is safe to disable. |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536827 | Failed to determine if the SVM has any encrypted volumes. |
            | 65536828 | External key management is not enabled for the SVM. |
            | 65536867 | Encrypted volumes are found for the SVM. |
            | 196608301 | Failed to determine the type of encryption. |
            | 196608305 | NAE aggregates are found in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |-
        Retrieves key managers.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `connectivity`
        * `status.message`
        * `status.code`
        ### Related ONTAP commands
        * `security key-manager show-keystore`
        * `security key-manager external show`
        * `security key-manager external show-status`
        * `security key-manager onboard show-backup`

        ### Learn more
        * [`DOC /security/key-managers`](#docs-security-security_key-managers)
      operationId: security_key_manager_get
      parameters:
      - description: Key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/security_key_manager'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates a key manager.
        ### Required properties
        * `onboard.existing_passphrase` - Cluster-wide passphrase. Required only when synchronizing the passphrase of the Onboard Key Manager.
        * `synchronize` - Synchronizes missing Onboard Key Manager keys on any node in the cluster. Required only when synchronizing the Onboard Key Manager keys in a local cluster.
        ### Related ONTAP commands
        * `security key-manager external modify`
        * `security key-manager onboard sync`
        * `security key-manager onboard update-passphrase`

        ### Learn more
        * [`DOC /security/key-managers`](#docs-security-security_key-managers)
      operationId: security_key_manager_modify
      parameters:
      - description: Key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Key manager information
        in: body
        name: info
        schema:
          $ref: '#/definitions/security_key_manager'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536139 | The existing passphrase value provided does not match the configured passphrase. |
            | 65536150 | The new passphrase is same as old passphrase. |
            | 65536404 | The passphrase does not match the accepted length. |
            | 65536406 | The change of passphrase failed. |
            | 65536407 | The passphrase update failed on some nodes. |
            | 65536408 | The passphrase update failed on some nodes. |
            | 65536802 | The passphrase does not match the accepted length in common criteria mode. |
            | 65536821 | The certificate is not installed. |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536828 | External key management is not enabled for the SVM. |
            | 65536850 | New client certificate public or private keys are different from the existing client certificate. |
            | 65536852 | Failed to query supported KMIP protocol versions. |
            | 65536917 | Updating an onboard passhrase requires both new and existing cluster passphrase. |
            | 65537242 | The Onboard Key Manager existing_passphrase must be provided when performing a PATCH/synchronize operation. |
            | 65537243 | The Onboard Key Manager passphrase must not be provided when performing a PATCH/synchronize operation. |
            | 66060338 | Failed to establish secure connection for a key management server due to incorrect server_ca certificates. |
            | 66060339 | Failed to establish secure connection for a key management server due to incorrect client certificates. |
            | 66060340 | Failed to establish secure connection for a key management server due to Cryptsoft error. |
            | 66060341 | Failed to establish secure connection for a key management server due to network configuration issues. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/key-managers/{uuid}/key-servers:
    get:
      description: Retrieves the list of key servers configured in an external key
        manager.
      operationId: security_key_manager_key_servers_collection_get
      parameters:
      - description: External key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Filter by server
        in: query
        name: server
        type: string
      - description: Filter by connectivity.cluster_availability
        in: query
        name: connectivity.cluster_availability
        type: boolean
      - description: Filter by connectivity.records.state
        in: query
        name: connectivity.records.state
        type: string
      - description: Filter by connectivity.records.node.uuid
        in: query
        name: connectivity.records.node.uuid
        type: string
      - description: Filter by connectivity.records.node.name
        in: query
        name: connectivity.records.node.name
        type: string
      - description: Filter by username
        in: query
        name: username
        type: string
      - description: Filter by timeout
        in: query
        name: timeout
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/key_server_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |
        Adds key servers to a configured external key manager.
        ### Required properties
        * `uuid` - UUID of the external key manager.
        * `server` - Key server name.
        ### Related ONTAP commands
        * `security key-manager external add-servers`
      operationId: security_key_manager_key_servers_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: External key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/key_server'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/key_server_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536038 | A maximum of 4 active key servers are allowed. |
            | 65536821 | The certificate is not installed. |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536824 | Multitenant key management is not supported in MetroCluster configurations. |
            | 65536828 | External key management is not enabled for the SVM. |
            | 65536834 | Failed to get existing key-server details for the SVM. |
            | 65536852 | Failed to query supported KMIP protocol versions. |
            | 65536870 | Key management servers are already configured. |
            | 65536871 | Duplicate key management servers exist. |
            | 65536921 | The following issues were found. Unable to execute command on KMIP server. |
            | 66060338 | Unable to establish secure connection to KMIP server due to incorrect server_ca certificates. |
            | 66060339 | Unable to establish secure connection to KMIP server due to incorrect client certificates. |
            | 66060340 | Unable to establish secure connection to KMIP server due to Cryptsoft error. |
            | 66060341 | Unable to establish secure connection to KMIP server due to network configuration issues. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/key-managers/{uuid}/key-servers/{server}:
    delete:
      description: |
        Deletes a key server.
        ### Related ONTAP commands
        * `security key-manager external remove-servers`
      operationId: security_key_manager_key_servers_delete
      parameters:
      - description: External key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Key server configured in the external key manager.
        in: path
        name: server
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536700 | The key server contains keys that are currently in use and not available from any other configured key server in the SVM. |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536824 | Multitenant key management is not supported in MetroCluster configurations. |
            | 65536828 | External key management is not enabled for the SVM. |
            | 65536843 | The key management server is not configured for the SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |
        Retrieves key servers configured in an external key manager.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `connectivity`
        ### Related ONTAP commands
        * `security key-manager external show`
        * `security key-manager external show-status`
      operationId: security_key_manager_key_servers_get
      parameters:
      - description: External key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Key server configured in the key manager.
        in: path
        name: server
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/key_server'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |
        Updates a key server.
        ### Related ONTAP commands
        * `security key-manager external modify-server`
      operationId: security_key_manager_key_servers_modify
      parameters:
      - description: External key manager UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Key server configured in the external key manager.
        in: path
        name: server
        required: true
        type: string
      - description: Key server information
        in: body
        name: info
        schema:
          $ref: '#/definitions/key_server'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 65536822 | Multitenant key management is not supported in the current cluster version. |
            | 65536824 | Multitenant key management is not supported in MetroCluster configurations. |
            | 65536828 | External key management is not enabled for the SVM. |
            | 65536843 | The key management server is not configured for the SVM. |
            | 65536845 | Missing username. |
            | 65536846 | Missing password. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/login/messages:
    get:
      description: |-
        Retrieves the login banner and messages of the day (MOTD) configured in the cluster
        and in specific SVMs.

        ### Learn more
        * [`DOC /security/login/messages`](#docs-security-security_login_messages)
      operationId: login_messages_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by show_cluster_message
        in: query
        name: show_cluster_message
        type: boolean
      - description: Filter by banner
        in: query
        name: banner
        type: string
      - description: Filter by message
        in: query
        name: message
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/login_messages_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        You can use this API to display and manage the login messages configuration. The GET request retrieves all of the login messages in the cluster. GET operations on /security/login/messages/{uuid} retrieve the login messages configuration by UUID. PATCH operations on /security/login/messages/{uuid} update the login messages configuration by UUID.
        <br />
        ---
        ## Examples
        ### Retrieving all of the login messages in the cluster
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/login/messages?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2581e5aa-9fe3-11e8-b309-005056bbef18",
              "scope": "cluster",
              "banner": "*** WARNING: DO NOT PROCEED IF YOU ARE NOT AUTHORIZED! ****\n",
              "message": "#### Welcome to Cluster X ####\n",
              "show_cluster_message": true,
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/2581e5aa-9fe3-11e8-b309-005056bbef18"
                }
              }
            },
            {
              "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
              "scope": "svm",
              "svm": {
                "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
                "name": "svm1"
              },
              "message": "#### Welcome to SVM1 ####\n",
              "show_cluster_message": true,
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18"
                }
              }
            },
            {
              "uuid": "8ddee11e-a58c-11e8-85e0-005056bbef18",
              "scope": "svm",
              "svm": {
                "uuid": "8ddee11e-a58c-11e8-85e0-005056bbef18",
                "name": "svm3"
              },
              "banner": "*** WARNING: This system is for the use of authorized users only. ****\n",
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/8ddee11e-a58c-11e8-85e0-005056bbef18"
                }
              }
            },
            {
              "uuid": "f7e41c99-9ffa-11e8-a5dd-005056bbef18",
              "scope": "svm",
              "svm": {
                "uuid": "f7e41c99-9ffa-11e8-a5dd-005056bbef18",
                "name": "svm2"
              },
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/f7e41c99-9ffa-11e8-a5dd-005056bbef18"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/security/login/messages?fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the login messages configuration at the cluster scope
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/login/messages?scope=cluster&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2581e5aa-9fe3-11e8-b309-005056bbef18",
              "scope": "cluster",
              "banner": "*** WARNING: DO NOT PROCEED IF YOU ARE NOT AUTHORIZED! ****\n",
              "message": "#### Welcome to Cluster X ####\n",
              "show_cluster_message": true,
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/2581e5aa-9fe3-11e8-b309-005056bbef18"
                }
              }
            ],
          "num_records": 1,
            "_links": {
              "self": {
                "href": "/api/security/login/messages?scope=cluster&fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the login banner configured at the cluster scope
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/login/messages?scope=cluster&fields=banner" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2581e5aa-9fe3-11e8-b309-005056bbef18",
              "scope": "cluster",
              "banner": "*** WARNING: DO NOT PROCEED IF YOU ARE NOT AUTHORIZED! ****\n",
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/2581e5aa-9fe3-11e8-b309-005056bbef18"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/login/messages?scope=cluster&fields=banner"
            }
          }
        }
        ```
        ---
        ### Retrieving the login messages configuration of a specific SVM
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/login/messages?svm.name=svm1&fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
              "scope": "svm",
              "svm": {
                "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
                "name": "svm1"
              },
              "message": "#### Welcome to SVM1 ####\n",
              "show_cluster_message": true,
              "_links": {
                "self": {
                  "href": "/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/login/messages?svm.name=svm1&fields=*"
            }
          }
        }
        ```
        ---
        ### Retrieving the login messages configuration by UUID, including all fields
        ---
        ```
        # The API:
        /api/security/login/messages/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18?fields=*" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
          "scope": "svm",
          "svm": {
            "uuid": "7b1b3715-9ffa-11e8-a5dd-005056bbef18",
            "name": "svm1"
          },
          "message": "#### Welcome to SVM1 ####\n",
          "show_cluster_message": true,
          "_links": {
          "self": {
            "href": "/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18"
          }
        }
        ```
        ---
        ### Configuring the login banner in a cluster
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages?scope=cluster" -H "accept: application/hal+json" -H "Content-Type: appplication/json" -d "{ \"banner\": \"You are entering secure area.\" }"
        # The response:
        {
          "num_records": 1,
          "_links": {
          "self": {
            "href": "/api/security/login/messages?scope=cluster"
          }
        }
        ```
        ---
        ### Configuring the message of the day (MOTD) in a cluster
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages?scope=cluster" -H "accept: application/hal+json" -H "Content-Type: appplication/json" -d "{ \"message\": \"Welcome to Cluster X\",  \"show_cluster_message\": true }"
        # The response:
        {
          "num_records": 1,
          "_links": {
          "self": {
            "href": "/api/security/login/messages?scope=cluster"
          }
        }
        ```
        ---
        ### Clearing the login banner and message of the day (MOTD) in a cluster
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages?scope=cluster" -H "accept: application/hal+json" -H "Content-Type: appplication/json" -d "{ \"banner\": \"\", \"message\": \"\" }"
        # The response:
        {
          "num_records": 1,
          "_links": {
          "self": {
            "href": "/api/security/login/messages?scope=cluster"
          }
        }
        ```
        ---
        ### Configuring the login messages for a specific SVM
        ---
        ```
        # The API:
        /api/security/login/messages
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages?svm.name=svm1" -H  "accept: application/hal+json" -H  "Content-Type: application/json" -d "{ \"banner\" : \"AUTHORIZED ACCESS ONLY\" }, \"message\": \"WELCOME!\" }"
        # The response:
        {
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/security/login/messages?svm.name=svm1"
            }
          }
        }
        ```
        ---
        ### Configuring the login messages by UUID
        ---
        ```
        # The API:
        /api/security/login/messages/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18" -H  "accept: application/hal+json" -H  "Content-Type: application/json" -d "{ \"banner\" : \"AUTHORIZED ACCESS ONLY\" }, \"message\": \"WELCOME!\" }"
        ```
        ---
        ### Clearing the login messages configuration by UUID
        ---
        ```
        # The API:
        /api/security/login/messages/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/login/messages/7b1b3715-9ffa-11e8-a5dd-005056bbef18" -H "accept: application/hal+json" -H "Content-Type: appplication/json" -d "{ \"banner\": \"\", \"message\": \"\" }"
        ```
        ---
      tags:
      - security
  /security/login/messages/{uuid}:
    get:
      description: |-
        Retrieves the login messages configuration by UUID.
        ### Learn more
        * [`DOC /security/login/messages`](#docs-security-security_login_messages)
      operationId: login_messages_get
      parameters:
      - description: Login messages configuration UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/login_messages'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates the login messages configuration.
        There are no required fields. An empty body makes no modifications.

        ### Learn more
        * [`DOC /security/login/messages`](#docs-security-security_login_messages)
      operationId: login_messages_modify
      parameters:
      - description: Login messages configuration UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/login_messages'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error codes | Description |
            | ----------- | ----------- |
            | 10225636    | Only a cluster administrator can modify the `show_cluster_message` property. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
  /security/roles:
    get:
      description: |
        Retrieves a list of roles configured in the cluster.
        ### Related ONTAP commands
        * `security login rest-role show`
        ### Learn more
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_collection_get
      parameters:
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by owner.uuid
        in: query
        name: owner.uuid
        type: string
      - description: Filter by owner.name
        in: query
        name: owner.name
        type: string
      - description: Filter by builtin
        in: query
        name: builtin
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by privileges.path
        in: query
        name: privileges.path
        type: string
      - description: Filter by privileges.access
        in: query
        name: privileges.access
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/role_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |
        Creates a new cluster-scoped role or an SVM-scoped role. For an SVM-scoped role, specify either the SVM name as the owner.name or SVM UUID as the owner.uuid in the request body along with other parameters for the role. The owner.uuid or owner.name are not required to be specified for a cluster-scoped role.
        ### Required parameters
        * `name` - Name of the role to be created.
        * `privileges` - Array of privilege tuples. Each tuple consists of a REST API path and its desired access level.
        ### Optional parameters
        * `owner.name` or `owner.uuid`  - Name or UUID of the SVM for an SVM-scoped role.
        ### Related ONTAP commands
        * `security login rest-role create`
        ### Learn more
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Role specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/role'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5636129 | Role with given name has not been defined. |
            | 5636143 | Vserver admin cannot use the API with this access level. |
            | 5636144 | Invalid value specified for access level. |
            | 5636169 | Invalid character in URI. |
            | 5636170 | URI does not exist. |
            | 5636171 | Role already exists in legacy role table. |
            | 13434890 | Vserver-ID failed for Vserver roles. |
            | 13434891 | UUID lookup failed for Vserver roles. |
            | 13434892 | Roles is a required field. |
            | 13434893 | SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP supports Role Based Access Control (RBAC) wherein a user account must be associated with a role and the role defines the privileges and rights for that user account. A privilege defines the access level of the API as either "none", "readonly", or "all". This specifies whether the user account can perform only a GET operation or POST, PATCH, and DELETE operations as well. A role can comprise of multiple tuples and each tuple consists of the REST API and its access level.
        For example, "role1" might be a role that has a tuple {"access":"all","path":"/api/storage/volume"}, which means that a user account with "role1" can perform all GET, POST, PATCH, and DELETE requests on the <i>api/storage/volume</i> API or derived APIs which have <i>api/storage/volume</i> as the prefix.<p/>
        In cases where a role has tuples with multiple APIs having the same prefix, the highest match wins out.
        For example, if "role1" has the following tuples: {"access":"readonly","path":"/api/cluster"} and {"access":"all","path":"/api/cluster/schedules"}, then only a GET request is allowed on APIs with <i>api/cluster</i> as the prefix; while POST, PATCH and DELETE requests are possible on the <i>api/cluster/schedules</i> API.
        ### Predefined (built-in) roles
        Related REST APIs are used to form predefined cluster-scoped and SVM-scoped roles, such as: "admin", "backup", "readonly" for cluster and "vsadmin", "vsadmin-backup", "vsadmin-protocol" for SVMs.
        These can be retrieved by calling a GET request on <i>/api/security/roles</i> API and can be assigned to user accounts. See the examples for <i>api/security/accounts</i>.<br/>
        These predefined roles cannot be modified or deleted.
        ### Mapped roles
        Before REST APIs, the RBAC roles (legacy roles) were defined to contain the CLI commands and their access levels. Now, almost all REST APIs map to one or more CLI commands. When a role is created using a POST request on <i>/api/security/roles</i>, a mapped legacy role is created. This legacy role has the same access level (as that of the REST API) for the mapped CLI commands. However, if a legacy role with the same name already exists, the POST operation fails and you need to choose a unique name for the role. The legacy roles cannot be managed using the REST endpoint <i>/api/security/roles</i> or its derivatives. Legacy roles are managed using the CLI commands "security login role <create | modify | delete> -role <rolename>".<p/>
        Note that the mapped legacy role (for the REST API role created) cannot be manipulated using the CLI.<br/>
        The reverse case is not true; the creation of a legacy role will not create a mapped role with equivalent REST APIs.<p/>
        ### API restrictions
        Numerous APIs are scoped for the cluster level only. This results in an access error if assigned to an SVM-scoped role. For example, <i>api/cluster/nodes</i> does not work when added as a tuple entry for an SVM-scoped role.<p/>
        A number of APIs allowed for an SVM-scoped role might have restrictions on the access level. For example, <i>/api/network/ethernet/ports</i> cannot have an access level of "all" for an SVM-scoped role; this results in an access error when a POST or PATCH request is made.<p/>
        Roles created with a REST API path prefix which is common to many APIs might have restrictions based on the scope of the role; cluster or SVM.
        For example, {"access":"all","path":"/api/security"} might be a tuple entry for an SVM role. Any GET, POST, PATCH, or DELETE operation fails on API <i>/api/security/accounts</i> while the same on <i>/api/security/login/messages</i> succeeds. However, a role with exactly the same tuple when created at the cluster-scope level allows the operations.<p/>
        Numerous APIs have restrictions on the objects that can be operated on based on the context of the SVM or cluster. For example, a POST request on <i>/api/security/authentication/password</i> API changes the password for a user account. If executed in the context of an SVM (POST request on an SVM interface), only the password of the user executing the POST can be modified, and attempts to modify the password of any other user results in an access error. However, if a POST request is performed by a cluster administrator account, the password for any user account (cluster or SVM) can be modified.<p/>
        ## Examples
        ### Creating a cluster-scoped custom role
        Specify the role name and the tuples (of REST APIs and their access level) in the body of the POST request. The owner.uuid or owner.name are not required to be specified for a cluster-scoped role.<br/>
        ```
        # The API:
        POST "/api/security/roles"
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/roles" -d '{"name":"cluster_role", "privileges" : [{"access":"readonly","path":"/api/cluster/jobs"},{"access":"all","path":"/api/application/applications"},{"access":"readonly","path":"/api/application/templates"}]}'
        ```
        ### Creating an SVM-scoped custom role
        For an SVM-scoped role, specify either owner.name or owner.uuid in the request body along with other parameters for the role. These correspond to the name or UUID of the SVM for which the role is being created and can be obtained from the response body of the GET request performed on the <i>/api/svm/svms</i> API.<br/>
        ```
        # The API:
        POST "/api/security/roles"
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/roles" -d '{"owner": {"uuid" : "9f93e553-4b02-11e9-a3f9-005056bb7acd"},"name":"svm_role", "privileges" : [{"access":"readonly","path":"/api/cluster/jobs"},{"access":"all","path":"/api/application/applications"},{"access":"readonly","path":"/api/application/templates"}]}'
        ```
        ### Retrieving the configured roles
        All of the roles or a filtered list of roles (for example by name, predefined, and so on) can be retrieved.<br/>
        ```
        # The API:
        GET "/api/security/roles"
        # The call to retrieve all the roles configured in the cluster:
        curl -X GET "https://<mgmt-ip>/api/security/roles"
        # The response:
        {
          "records": [
            {
              "owner": {
                "uuid": "2903de6f-4bd2-11e9-b238-0050568e2e25",
                "name": "cluster1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/2903de6f-4bd2-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "admin",
              "privileges": [
                {
                  "path": "/api",
                  "access": "all",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/2903de6f-4bd2-11e9-b238-0050568e2e25/admin/privileges/%2Fapi"
                    }
                  }
                }
              ],
              "builtin": true,
              "scope": "cluster",
              "_links": {
                "self": {
                  "href": "/api/security/roles/2903de6f-4bd2-11e9-b238-0050568e2e25/admin"
                }
              }
            },
            {
              "owner": {
                "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25"
                  }
                }
              },
              "name": "vsadmin",
              "privileges": [
                {
                  "path": "/api/application/applications",
                  "access": "all",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin/privileges/%2Fapi%2Fapplication%2Fapplications"
                    }
                  }
                },
                {
                  "path": "/api/application/templates",
                  "access": "readonly",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin/privileges/%2Fapi%2Fapplication%2Ftemplates"
                    }
                  }
                },
                {
                  "path": "/api/cluster",
                  "access": "readonly",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin/privileges/%2Fapi%2Fcluster"
                    }
                  }
                },
                {
                  "path": "/api/svm/svms",
                  "access": "readonly",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin/privileges/%2Fapi%2Fsvm%2Fsvms"
                    }
                  }
                },
                {
                  "path": "/api/svms",
                  "access": "readonly",
                  "_links": {
                    "self": {
                      "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin/privileges/%2Fapi%2Fsvms"
                    }
                  }
                }
              ],
              "builtin": true,
              "scope": "svm",
              "_links": {
                "self": {
                  "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/vsadmin"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/roles"
            }
          }
        }
        ```
        ### Using a scoped call to retrieve the configured roles
        ```
        # Scoped call to retrieve all the roles for a particular SVM using owner.uuid:
        curl -X GET "https://<mgmt-ip>/api/security/roles/?owner.uuid=aaef7c38-4bd3-11e9-b238-0050568e2e25"
        # Scoped call to retrieve all the roles for a particular SVM using owner.name:
        curl -X GET "https://<mgmt-ip>/api/security/roles/?owner.name=svm1"
        # Scoped call to retrieve the roles having vsadmin as the prefix in the role name:
        curl -X GET "https://<mgmt-ip>/api/security/roles/?name=vsadmin*"
        # Scoped call to retrieve the predefined roles:
        curl -X GET "https://<mgmt-ip>/api/security/roles/?builtin=true"
        # Scoped call to retrieve the custom roles:
        curl -X GET "https://<mgmt-ip>/api/security/roles/?builtin=false"
        ```
      tags:
      - security
  /security/roles/{owner.uuid}/{name}:
    delete:
      description: |
        Deletes the specified role.
        ### Required parameters
        * `name` - Name of the role to be deleted.
        * `owner.uuid` - UUID of the SVM housing the role.
        ### Related ONTAP commands
        * `security login rest-role delete`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}`](#docs-security-security_roles_{owner.uuid}_{name})
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_delete
      parameters:
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name to be deleted.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5636172 | User accounts detected with this role assigned. Update or delete those accounts before deleting this role. |
            | 5636173 | Features require an effective cluster version of 9.6 or later. |
            | 13434890 | Vserver-ID failed for Vserver roles. |
            | 13434893 | The SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |
        Retrieves the details of the specified role.
        ### Related ONTAP commands
        * `security login rest-role show`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}`](#docs-security-security_roles_{owner.uuid}_{name})
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/role_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This APi is used to retrieve or delete a role. The role can be SVM-scoped or cluster-scoped.<p/>
        Specify the owner UUID and the role name in the URI path. The owner UUID corresponds to the UUID of the SVM for which the role has been created and can be obtained from the response body of a GET call performed on one of the following APIs:
        <i>/api/security/roles</i> for all roles
        <i>/api/security/roles/?scope=svm</i> for SVM-scoped roles
        <i>/api/security/roles/?owner.name={svm-name}</i> for roles in a specific SVM
        This API response contains the complete URI for each role that can be used for retrieving or deleting a role.<p/>
        Note: The pre-defined roles can be retrieved but cannot be deleted.
        ## Examples
        ### Retrieving a role configuration
        ```
        # The API:
        GET "/api/security/roles/{owner.uuid}/{name}"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/secure_role"
        # The response:
        {
          "owner": {
            "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/aaef7c38-4bd3-11e9-b238-0050568e2e25"
              }
            }
          },
          "name": "secure_role",
          "privileges": [
            {
              "path": "/api/security",
              "access": "all",
              "_links": {
                "self": {
                  "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/secure_role/privileges/%2Fapi%2Fsecurity"
                }
              }
            }
          ],
          "builtin": false,
          "scope": "svm",
          "_links": {
            "self": {
              "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/secure_role"
            }
          }
        }
        ```
        ### Deleting a custom role
        ```
        # The API:
        DELETE "/api/security/roles/{owner.uuid}/{name}"
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1"
        ```
      tags:
      - security
  /security/roles/{owner.uuid}/{name}/privileges:
    get:
      description: |
        Retrieves privilege details of the specified role.
        ### Related ONTAP commands
        * `security login rest-role show`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}/privileges`](#docs-security-security_roles_{owner.uuid}_{name}_privileges)
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_privilege_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/role_privilege_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    post:
      description: |
        Adds a privilege tuple (of REST URI and its access level) to an existing role.
        ### Required parameters
        * `owner.uuid` - UUID of the SVM that houses this role.
        * `name` - Name of the role to be updated.
        * `path` - REST URI path (example: "/api/storage/volumes").
        * `access` - Desired access level for the REST URI path (one of "all", "readonly" or "none").
        ### Related ONTAP commands
        * `security login rest-role create`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}/privileges`](#docs-security-security_roles_{owner.uuid}_{name}_privileges)
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_privilege_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: Role privilege specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/role_privilege'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5636129 | A role with given name has not been defined. |
            | 5636143 | A Vserver admin cannot use the API with this access level. |
            | 5636144 | The value specified for the access level is not valid. |
            | 5636169 | A character in the URI is not valid. |
            | 5636170 | The URI does not exist. |
            | 5636173 | This feature requires an effective cluster version of 9.6 or later. |
            | 5636175 | Vserver admin cannot have access to given API. |
            | 13434890 | Vserver-ID failed for Vserver roles. |
            | 13434891 | UUID LookUp failed for Vserver roles. |
            | 13434892 | Roles is a required field. |
            | 13434893 | The SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        This API is used to configure the role privileges (tuples of REST URI path and its access levels). It also retrieves all of the privilege tuples for a role and can add a tuple to an existing role.<p/>
        The role can be SVM-scoped or cluster-scoped.<p/>
        Specify the owner UUID and the role name in the URI path. The owner UUID corresponds to the UUID of the SVM for which the role has been created and can be obtained from the response body of a GET request performed on one of the following APIs:
        <i>/api/security/roles</i> for all the roles
        <i>/api/security/roles/?scope=svm</i> for SVM-scoped roles
        <i>/api/security/roles/?owner.name=<svm-name></i> for roles in a specific SVM
        This API response contains the complete URI for each role and can be used after suffixing it with <i>"privileges"</i>.<p/>
        Note: The pre-defined roles can be retrieved but cannot be updated.
        <br/>
        ## Examples
        ### Adding a privilege tuple for an existing custom role
        ```
        # The API:
        POST "/security/roles/{owner.uuid}/{name}/privileges"
        # The call:
        curl -X POST "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges" -d '{"access":"readonly","path":"/api/protocols"}'
        ```
        ### Retrieving all the privilege tuples for a role
        ```
        # The API:
        GET "/api/security/roles/{owner.uuid}/{name}/privileges"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges"
        # The response:
        {
          "records": [
            {
              "path": "/api/application",
              "access": "all",
              "_links": {
                "self": {
                  "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fapplication"
                }
              }
            },
            {
              "path": "/api/protocols",
              "access": "readonly",
              "_links": {
                "self": {
                  "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fprotocols"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges"
            }
          }
        }
        ```
      tags:
      - security
  /security/roles/{owner.uuid}/{name}/privileges/{path}:
    delete:
      description: |
        Deletes a privilege tuple (of REST URI and its access level) from the role.
        ### Required parameters
        * `owner.uuid` - UUID of the SVM which houses this role.
        * `name` - Name of the role to be updated.
        * `path` - Constituent REST API path to be deleted from this role.
        ### Related ONTAP commands
        * `security login rest-role delete`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}/privileges/{path}`](#docs-security-security_roles_{owner.uuid}_{name}_privileges_{path})
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_privilege_delete
      parameters:
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: REST API path
        in: path
        name: path
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5636172 | User accounts detected with this role assigned. Update or delete those accounts before deleting this role. |
            | 5636173 | This feature requires an effective cluster version of 9.6 or later. |
            | 13434890 | Vserver-ID failed for Vserver roles. |
            | 13434893 | The SVM does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    get:
      description: |
        Retrieves the privilege level for a REST API path for the specified role.
        ### Related ONTAP commands
        * `security login rest-role show`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}/privileges/{path}`](#docs-security-security_roles_{owner.uuid}_{name}_privileges_{path})
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_privilege_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: REST API path
        in: path
        name: path
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/role_privilege'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |
        Updates the privilege level for a REST API path.
        ### Required parameters
        * `owner.uuid` - UUID of the SVM that houses this role.
        * `name` - Name of the role to be updated.
        * `path` - Constituent REST API path whose access level has to be updated.
        * `access` - Access level for the path (one of "all", "readonly", or "none")
        ### Related ONTAP commands
        * `security login rest-role modify`
        ### Learn more
        * [`DOC /security/roles/{owner.uuid}/{name}/privileges/{path}`](#docs-security-security_roles_{owner.uuid}_{name}_privileges_{path})
        * [`DOC /security/roles`](#docs-security-security_roles)
      operationId: role_privilege_modify
      parameters:
      - description: Role owner UUID
        in: path
        name: owner.uuid
        required: true
        type: string
      - description: Role name
        in: path
        name: name
        required: true
        type: string
      - description: REST API path
        in: path
        name: path
        required: true
        type: string
      - in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/role_privilege'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        A role can comprise of multiple tuples and each tuple consists of the REST API path and its access level. These APIs can be used to retrieve and modify the access level or delete one of the constituent REST API paths within a role.<p/>
        The role can be SVM-scoped or cluster-scoped.<p/>
        Specify the owner UUID and the role name in the URI path. The owner UUID corresponds to the UUID of the SVM for which the role has been created and can be obtained from the response body of a GET request performed on one of the following APIs:
        <i>/api/security/roles</i> for all roles
        <i>/api/security/roles/?scope=svm</i> for SVM-scoped roles
        <i>/api/security/roles/?owner.name=<svm-name></i> for roles in a specific SVM
        This API response contains the complete URI for each tuple of the role and can be used for GET, PATCH, or DELETE operations.<p/>
        Note: The access level for paths in pre-defined roles cannot be updated.
        <br/>
        ## Examples
        ### Updating the access level for a path in the privilege tuple of an existing role
        ```
        # The API:
        PATCH "/api/security/roles/{owner.uuid}/{name}/privileges/{path}"
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fprotocols" -d '{"access":"all"}'
        ```
        ### Retrieving the access level for a path in the privilege tuple of an existing role
        ```
        # The API:
        GET "/api/security/roles/{owner.uuid}/{name}/privileges/{path}"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fprotocols"
        # The response:
        {
          "owner": {
            "uuid": "aaef7c38-4bd3-11e9-b238-0050568e2e25"
          },
          "name": "svm_role1",
          "path": "/api/protocols",
          "access": "all",
          "_links": {
            "self": {
              "href": "/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fprotocols"
            }
          }
        }
        ```
        ### Deleting a privilege tuple from an existing role
        ```
        # The API:
        DELETE "/api/security/roles/{owner.uuid}/{name}/privileges/{path}"
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/security/roles/aaef7c38-4bd3-11e9-b238-0050568e2e25/svm_role1/privileges/%2Fapi%2Fprotocols"
        ```
      tags:
      - security
  /security/ssh:
    get:
      description: |-
        Retrieves the cluster SSH server ciphers, MAC algorithms, key exchange algorithms, and connection limits.
        ### Related ONTAP commands
        * `security ssh`
        * `security protocol ssh`

        ### Learn more
        * [`DOC /security/ssh`](#docs-security-security_ssh)
      operationId: ssh_get
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_ssh_server'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    patch:
      description: |-
        Updates the SSH server setting for a cluster.
        ### Optional parameters
        * `ciphers` - Encryption algorithms for the payload
        * `key_exchange_algorithms` - SSH key exchange algorithms
        * `mac_algorithms` - MAC algorithms
        * `max_authentication_retry_count` - Maximum authentication retries allowed before closing the connection
        * `connections_per_second` - Maximum allowed connections per second
        * `max_instances` - Maximum allowed connections per node
        * `per_source_limit` - Maximum allowed connections from the same client host
        ### Related ONTAP commands
        * `security ssh`
        * `security protocol ssh`

        ### Learn more
        * [`DOC /security/ssh`](#docs-security-security_ssh)
      operationId: ssh_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: SSH server algorithms and limits configuration details.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/cluster_ssh_server'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 10682372 | There must be at least one key exchange algorithm associated with the SSH configuration. |
            | 10682373 | There must be at least one cipher associated with the SSH configuration. |
            | 10682375 | Failed to modify SSH key exchange algorithms. |
            | 10682378 | Failed to modify SSH ciphers. |
            | 10682399 | Key exchange algorithm not supported in FIPS enabled mode. |
            | 10682400 | Failed to modify SSH MAC algorithms. |
            | 10682401 | MAC algorithm not supported in FIPS enabled mode. |
            | 10682403 | There must be at least one MAC algorithm with the SSH configuration. |
            | 10682413 | Failed to modify maximum authentication retry attempts. |
            | 10682413 | Failed to modify maximum authentication retry attempts. |
            | 10682418 | Cipher not supported in FIPS enabled mode. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - security
    x-ntap-long-description:
      description: |
        ## Overview
        ONTAP supports SSH server that can be accessed from any standard SSH client. A user account needs to be associated with SSH as the application (refer the documentation for <i>api/security/accounts</i> [`DOC /security/accounts`](#docs-security-security_accounts)). Upon connecting from a client, the user is authenticated and a command line shell is presented.<br/>
        This endpoint is used to retrieve or modify the SSH configuration at the cluster level. The configuration consists of SSH security parameters (security algorithms and maximum authentication retry attempts allowed before closing the connection) and SSH connection limits.<br/>
        The security algorithms include SSH key exchange algorithms, ciphers for payload encryption, and MAC algorithms. This configuration is the default for all newly created SVMs; existing SVM configurations are not impacted.
        The SSH connection limits include maximum connections per second, maximum simultaneous sessions from the same client host, and overall maximum SSH connections at any given point in time. The connection limits are per node and will be the same for all nodes in the cluster.
        ## Examples
        ### Updating the SSH security parameters
        Specify the algorithms in the body of the PATCH request.
        ```
        # The API:
        PATCH "/api/security/ssh"
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/ssh" -d '{ "ciphers": [ "aes256_ctr", "aes192_ctr" ], "key_exchange_algorithms": [ "diffie_hellman_group_exchange_sha256", "diffie_hellman_group14_sha1" ], "mac_algorithms": [ "hmac_sha2_512_etm", "umac_128_etm" ], "max_authentication_retry_count": 3 }'
        ```
        ### Updating the SSH connection limits
        Specify the connection limits in the body of the PATCH request.
        ```
        # The API:
        PATCH "/api/security/ssh"
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/security/ssh" -d '{ "connections_per_second": 8, "max_instances": 10, "per_source_limit": 5 }'
        ```
        ### Retrieving the cluster SSH server configuration
        ```
        # The API:
        GET "/api/security/ssh"
        # The call:
        curl -X GET "https://<mgmt-ip>/api/security/ssh"
        # The response:
        {
          "ciphers": [
            "aes256_ctr",
            "aes192_ctr"
          ],
          "key_exchange_algorithms": [
            "diffie_hellman_group_exchange_sha256",
            "diffie_hellman_group14_sha1"
          ],
          "mac_algorithms": [
            "hmac_sha2_512_etm",
            "umac_128_etm"
          ],
          "max_authentication_retry_count": 3,
          "connections_per_second": 8,
          "max_instances": 10,
          "per_source_limit": 5,
          "_links": {
            "self": {
              "href": "/api/security/ssh"
            }
          }
        }
        ```
      tags:
      - security
  /snapmirror/policies:
    get:
      description: |
        Retrieves SnapMirror policies of type "mirror-vault", "sync-mirror" and "strict-sync-mirror".
        ### Related ONTAP commands
        * `snapmirror policy show`
        ### Example
        The following example shows how to retrieve a collection of SnapMirror policies.
        <br/>
        ```
        GET "/api/storage/snapmirror/policies"
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/policies`](#docs-snapmirror-snapmirror_policies)
      operationId: snapmirror_policies_get
      parameters:
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by transfer_schedule.uuid
        in: query
        name: transfer_schedule.uuid
        type: string
      - description: Filter by transfer_schedule.name
        in: query
        name: transfer_schedule.name
        type: string
      - description: Filter by sync_common_snapshot_schedule.uuid
        in: query
        name: sync_common_snapshot_schedule.uuid
        type: string
      - description: Filter by sync_common_snapshot_schedule.name
        in: query
        name: sync_common_snapshot_schedule.name
        type: string
      - description: Filter by identity_preservation
        in: query
        name: identity_preservation
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by retention.count
        in: query
        name: retention.count
        type: integer
      - description: Filter by retention.prefix
        in: query
        name: retention.prefix
        type: string
      - description: Filter by retention.label
        in: query
        name: retention.label
        type: string
      - description: Filter by retention.creation_schedule.uuid
        in: query
        name: retention.creation_schedule.uuid
        type: string
      - description: Filter by retention.creation_schedule.name
        in: query
        name: retention.creation_schedule.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by sync_type
        in: query
        name: sync_type
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by network_compression_enabled
        in: query
        name: network_compression_enabled
        type: boolean
      - description: Filter by throttle
        in: query
        name: throttle
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_policy_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303842    | SnapMirror policy is not supported.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    post:
      description: |
        Creates a SnapMirror policy. The property "identity_preservation" is applicable to only SnapMirror relationships with SVM endpoints and it indicates which configuration of the source SVM is replicated to the destination SVM.</br>
        It takes the following values:
        - `full` - indicates that the source SVM configuration is replicated to the destination SVM endpoint.
        - `exclude_network_config` - indicates that the source SVM configuration other than network configuration is replicated to the destination SVM endpoint.
        - `exclude_network_and_protocol_config` - indicates that the source SVM configuration is not replicated to the destination SVM endpoint.<br/>
        ### Important note
        - The property "identity_preservation" is applicable to only SnapMirror relationships with SVM endpoints and it indicates which configuration of the source SVM is replicated to the destination SVM.
        - The properties "identity_preservation", "retention" and "transfer_schedule" are not applicable for "sync" type policies.
        - The property "sync_common_snapshot_schedule" is not applicable for an "async" type policy.
        - The property "retention.count" specifies the maximum number of Snapshot copies that are retained on the SnapMirror destination volume.
        - When the property "retention.label" is specified, the Snapshot copies that have a SnapMirror label matching this property is transferred to the SnapMirror destination.
        - When the property "retention.creation_schedule" is specified, Snapshot copies are directly created on the SnapMirror destination. The Snapshot copies created have the same content as the latest Snapshot copy already present on the SnapMirror destination.
        ### Required properties
        * `name` - Name of the new SnapMirror policy.
        ### Recommended optional properties
        * `svm.name` or `svm.uuid` - Name or UUID of the SVM that owns the SnapMirror policy.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `type` - _async_
        * `sync_type` - _sync_ (when `type` is _sync_)
        * `network_compression_enabled` - _false_
        * `throttle` - _0_
        * `identity_preservation` - `_exclude_network_and_protocol_config_`
        ### Related ONTAP commands
        * `snapmirror policy create`
        ### Examples
          Creating a SnapMirror policy of type "sync"
           <br/>
           ```
           POST "/api/snapmirror/policies/" '{"name": "policy1", "svm.name": "VS0", "type": "sync", "sync_type": "sync"}'
           ```
           <br/>
          Creating a SnapMirror policy of type "async" with retention values
           <br/>
           ```
           POST "/api/snapmirror/policies" '{"name": "policy_ret", "svm": {"name": "vs1"}, "retention": {"label": ["smcreate"], "count": ["2"], "creation_schedule": ["weekly"]}}'
           ```
           <br/>
          Creating a SnapMirror policy of type "async"
           ```
           POST "/api/snapmirror/policies" '{"name": "newPolicy", "svm":{"name" : "vs1"}, "type": "async"}'
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/policies`](#docs-snapmirror-snapmirror_policies)
      operationId: snapmirror_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Information on the SnapMirror policy
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snapmirror_policy'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303850    | Invalid input parameter|
            | 13303887    | Maximum number of allowed retention rules reached |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    x-ntap-long-description:
      description: |
        ## Managing SnapMirror policies
        This API is used to manage SnapMirror policies of type "mirror-vault", "sync-mirror" and "strict-sync-mirror". When applied to a SnapMirror relationship, the SnapMirror policy controls the behavior of the relationship and specifies the configuration attributes for that relationship.<br/>
        Mapping of SnapMirror policies from CLI to REST
        | CLI                | REST                |
        |--------------------|---------------------|
        |mirror-vault        | async               |
        
        |     CLI            | REST  |  sync_type  |
        |-------------|-----|-------------|
        |sync-mirror         | sync  |  sync       |
        |strict-sync-mirror  | sync  | strict_sync |
      tags:
      - SnapMirror 
  /snapmirror/policies/{uuid}:
    delete:
      description: |
        Deletes a SnapMirror policy.
        ### Related ONTAP commands
        * `snapmirror policy delete`
        ### Example
        <br/>
        ```
        DELETE "/api/snapmirror/policies/510c15d4-f9e6-11e8-bdb5-0050568e12c2"
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/policies`](#docs-snapmirror-snapmirror_policies)
      operationId: snapmirror_policy_delete
      parameters:
      - description: Policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    get:
      description: |
        Retrieves a specific SnapMirror policy.
        ### Example
        <br/>
        ```
        GET "/api/snapmirror/policies/567aaac0-f863-11e8-a666-0050568e12c2"
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/policies`](#docs-snapmirror-snapmirror_policies)
      operationId: snapmirror_policy_get
      parameters:
      - description: Policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_policy'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303842    | SnapMirror policy is not supported.|
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    patch:
      description: |
        Updates the SnapMirror policy.
        ### Important notes
        * The properties "transfer_schedule" and "throttle" can be modified only if all the SnapMirror relationships associated with the specified SnapMirror policy have the same values.
        * The properties "retention.label" and "retention.count" are mandatory if "retention" is provided in the input. The provided "retention.label" is the final list and is replaced with the existing values.
        * The value of the "identity_preservation" property cannot be changed if the SnapMirror relationships associated with the policy have different identity_preservation configurations.
        * If the SnapMirror policy "identity_preservation" value matches the "identity_preservation" value of the associated SnapMirror relationships, then the "identity_preservation" value can be changed from a higher "identity_preservation" threshold value to a lower "identity_preservation" threshold value but not vice-versa. For example, the threshold value of the "identity_preservation" property can be changed from "full" to "exclude_network_config" to "exclude_network_and_protocol_config", but could not be increased from "exclude_network_and_protocol_config" to "exclude_network_config" to "full".<br/>
        ### Related ONTAP commands
        * `snapmirror policy modify`
        ### Example
          Updating the "retention" property
           <br/>
           ```
           PATCH "/api/snapmirror/policies/fe65686d-00dc-11e9-b5fb-0050568e3f83" '{"retention" : {"label" : ["sm_created", "lab2"], "count": ["1","2"], "creation_schedule": {"name": ["weekly"]}}}'
           ```
           <br/>
          Updating "transfer_schedule", "throttle", and "identity_preservation" properties
           <br/>
           ```
           PATCH "/api/snapmirror/policies/8aef950b-3bef-11e9-80ac-0050568ea591" '{"transfer_schedule.name" : "weekly", "throttle" : "100", "identity_preservation":"exclude_network_and_protocol_config"}'
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/policies`](#docs-snapmirror-snapmirror_policies)
      operationId: snapmirror_policy_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Information on the SnapMirror policy
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snapmirror_policy'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303842    | SnapMirror policy is not supported.|
            | 13303843    | Conflicting values between SnapMirror policy and SnapMirror relationships for either 'transfer_schedule, throttle or identity_preservation' properties |
            | 13303850    | Invalid input parameter |
            | 13303887    | Maximum number of allowed retention rules reached |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
  /snapmirror/relationships:
    get:
      description: |
        Retrieves information for SnapMirror relationships whose destination endpoints are in the current SVM or the current cluster, depending on the cluster context.
        ### Related ONTAP commands
        * `snapmirror show`
        * `snapmirror list-destinations`
        ### Examples
        The following examples show how to retrieve the list of SnapMirror relationships and the list of SnapMirror destinations.
           1. Retrieving the list of SnapMirror relationships. This API must be run on the cluster containing the destination endpoint.
           <br/>
           ```
           GET "/api/snapmirror/relationships/"
           ```
           <br/>
          2.  Retrieving the list of SnapMirror destinations on source. This must be run on the cluster containing the source endpoint.
           <br/>
           ```
           GET "/api/snapmirror/relationships/?list_destinations_only=true"
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships`](#docs-snapmirror-snapmirror_relationships)
      operationId: snapmirror_relationships_get
      parameters:
      - description: Set to true to show relationships from the source only.
        in: query
        name: list_destinations_only
        type: boolean
      - description: Filter by exported_snapshot
        in: query
        name: exported_snapshot
        type: string
      - description: Filter by source.path
        in: query
        name: source.path
        type: string
      - description: Filter by source.cluster.name
        in: query
        name: source.cluster.name
        type: string
      - description: Filter by source.cluster.uuid
        in: query
        name: source.cluster.uuid
        type: string
      - description: Filter by source.svm.uuid
        in: query
        name: source.svm.uuid
        type: string
      - description: Filter by source.svm.name
        in: query
        name: source.svm.name
        type: string
      - description: Filter by lag_time
        in: query
        name: lag_time
        type: string
      - description: Filter by transfer.bytes_transferred
        in: query
        name: transfer.bytes_transferred
        type: integer
      - description: Filter by transfer.uuid
        in: query
        name: transfer.uuid
        type: string
      - description: Filter by transfer.state
        in: query
        name: transfer.state
        type: string
      - description: Filter by healthy
        in: query
        name: healthy
        type: boolean
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by restore
        in: query
        name: restore
        type: boolean
      - description: Filter by policy.type
        in: query
        name: policy.type
        type: string
      - description: Filter by policy.name
        in: query
        name: policy.name
        type: string
      - description: Filter by policy.uuid
        in: query
        name: policy.uuid
        type: string
      - description: Filter by destination.path
        in: query
        name: destination.path
        type: string
      - description: Filter by destination.cluster.name
        in: query
        name: destination.cluster.name
        type: string
      - description: Filter by destination.cluster.uuid
        in: query
        name: destination.cluster.uuid
        type: string
      - description: Filter by destination.svm.uuid
        in: query
        name: destination.svm.uuid
        type: string
      - description: Filter by destination.svm.name
        in: query
        name: destination.svm.name
        type: string
      - description: Filter by unhealthy_reason.code
        in: query
        name: unhealthy_reason.code
        type: integer
      - description: Filter by unhealthy_reason.parameters
        in: query
        name: unhealthy_reason.parameters
        type: string
      - description: Filter by unhealthy_reason.message
        in: query
        name: unhealthy_reason.message
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_relationship_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303825    | Could not retrieve information for the SnapMirror policy type |
            | 13303817    | Unknown value for the Snapmirror State |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    post:
      description: |
        Creates a SnapMirror relationship. This API can optionally provision the destination endpoint when it does not exist. This API must be executed on the cluster containing the destination endpoint unless the destination endpoint is being provisioned. When the destination endpoint is being provisioned, this API can also be executed from the cluster containing the source endpoint.
        ### Required properties
        * `source.path` - Path to the source endpoint of the SnapMirror relationship.
        * `destination.path` - Path to the destination endpoint of the SnapMirror relationship.
        ### Recommended optional properties
        * `policy.name` or `policy.uuid` - Policy governing the SnapMirror relationship.
        * `state` - Set the state to "snapmirrored" to automatically initialize the relationship.
        * `create_destination.enabled` - Enable this property to provision the destination endpoint.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `policy.name` - _Asynchronous_
        * `restore` - _false_
        * `create_destination.tiering.policy` - `_snapshot_only_` (when `create_destination.tiering.supported` is _true_ for FlexVol volume)
        * `create_destination.tiering.policy` - `_none_` (when `create_destination.tiering.supported` is _true_ for FlexGroup volume)
        * `create_destination.storage_service.enforce_performance` - `_false_`
        * `source.ipspace` - `_Default_`
        * `destination.ipspace` - `_Default_`
        ### Related ONTAP commands
        * `snapmirror create`
        * `snapmirror protect`
        ### Examples
        The following examples show how to create FlexVol, FlexGroup and SVM SnapMirror relationships. Note that the source SVM name should be the local name of the peer SVM.</br>
           Creating a FlexVol SnapMirror relationship of type XDP.
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:src_vol_rw"}, "destination": { "path": "test_vserv_dst:dst_vol_rw"}}'
           ```
           <br/>
           Creating a FlexGroup SnapMirror relationship of type XDP.
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:source_flexgrp"}, "destination": { "path": "test_vserv_dst:dest_flexgrp"}}'
           ```
           <br/>
           Creating a SVM SnapMirror relationship of type XDP.
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": { "path": "src_svm:"}, "destination": { "path": "dst_svm:"}}'
           ```
           <br/>
           Creating a SnapMirror relationship in order to restore from a destination.
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:src_vol_rw"}, "destination": { "path": "test_vserv_dst:dst_vol_rw"}, "restore": "true"}'
           ```
           <br/>
           Creating a FlexVol SnapMirror relationship of type XDP.
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:src_vol_rw"}, "destination": { "path": "test_vserv_dst:dst_vol_rw"}, "create_destination": { "enable": "true" }}'
           ```
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:src_vol_rw"}, "destination": { "path": "test_vserv_dst:dst_vol_rw"}, "create_destination": { "enable": "true", "tiering": { "supported": "true", "policy": "auto" } } }'
           ```
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "test_vserv_src:src_vol_rw"}, "destination": { "path": "test_vserv_dst:dst_vol_rw"}, "create_destination": { "enable": "true", "storage_service": { "enabled": "true", "name": "extreme", "enforce_performance": "true" } } }'
           ```
           <br/>
           ```
           POST "/api/snapmirror/relationships/" '{"source": {"path": "src_svm:", "cluster": { "name": "cluster_src" }}, "destination": { "path": "dst_svm:"}, "create_destination": { "enable": "true" }}'
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships`](#docs-snapmirror-snapmirror_relationships)
      operationId: snapmirror_relationship_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Information on the SnapMirror relationship
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snapmirror_relationship'
      - $ref: '#/parameters/validate_only_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 6620374 | Internal error. Failed to get SVM information. |
            | 6620478 | Internal error. Failed to check SnapMirror capability. |
            | 13303819 | Could not retrieve SnapMirror policy information. |
            | 13303821 | Invalid SnapMirror policy UUID. |
            | 13303841 | This operation is not supported for SnapMirror relationships between these endpoints. |
            | 13303852 | destination.path provided does not contain \\\":\\\". |
            | 13303853 | Restore relationships are not supported for SVM-DR endpoints. |
            | 13303868 | Create of destination endpoint and SnapMirror relationship failed. |
            | 13303869 | Creating a destination endpoint is not supported for restore relationships. |
            | 13303870 | A tiering policy cannot be specified if tiering is not being set to supported. |
            | 13303871 | Storage service properties cannot be specified if the storage service is not being enabled. |
            | 13303872 | Specified property requires a later effective cluster version. |
            | 13303873 | Specifying a state when creating a relationship is only supported when creating a destination endpoint. |
            | 13303874 | Specified state is not supported when creating this relationship. |
            | 13303875 | Destination aggregates do not have sufficient space for hosting copies of source volumes. |
            | 13303876 | Destination cluster does not have composite aggregates. |
            | 13303877 | Source or destination cluster must be specified. |
            | 13303878 | The specified fields do not match. |
            | 13303879 | Source cluster name or UUID is needed to provision a destination SVM on the local cluster. |
            | 13303880 | Source cluster must be remote for provisioning a destination SVM on the local cluster. |
            | 13303881 | Network validation failed. |
            | 13303882 | SVM validation failed. |
            | 13303883 | Encryption is not enabled on the destination cluster. |
            | 13303887 | Synchronous SnapMirror relationships between FlexGroup volumes are not supported. |
            | 13303888 | Synchronous SnapMirror relationships require an effective cluster version of 9.5 or later on both the source and destination clusters. |
            | 13303889 | Asynchronous SnapMirror relationships between FlexGroup volumes require an effective cluster version of 9.5 or later on both the source and destination clusters. |
            | 13303890 | Asynchronous SnapMirror relationships between FlexVol volumes require an effective cluster version of 9.3, 9.5, or later on both the source and destination clusters. |
            | 13303891 | Creating a destination endpoint with storage service requires an effective cluster version of 9.7 or later. |
            | 13303892 | Fetching remote information from the destination cluster failed. |
            | 13303893 | Updating job description failed. |
            | 13303894 | Destination volume name is invalid. It must contain the source volume name and have a suffix when creating a destination endpoint on a cluster with an effective cluster version of 9.6 or earlier. |
            | 13303895 | Operation on the remote destination cluster is not supported. |
            | 13303916 | FlexGroup volumes are not supported on SnapLock aggregates. |
            | 13303918 | No suitable destination aggregate type is available. |
            | 13303919 | Only FabricPool enabled aggregates are available on the destination. |
            | 13303920 | Only SnapLock aggregates are available on the destination. FlexGroup volumes are not supported on SnapLock aggregates. |
            | 13303921 | Unable to retrieve the SnapMirror capabilities of the destination cluster. |
            | 13303922 | Specified source SVM is not a data SVM. |
            | 13303923 | Specified destination SVM is not a data SVM. |
            | 13303924 | Source SVM has an invalid Snapshot copy policy. |
            | 13303925 | SnapMirror validation has failed. |
            | 13303930 | The specified tiering policy is not supported for destination volumes of Synchronous relationships. |
            | 13303938 | Fetching information from the local cluster failed. |
            | 13303939 | Could not create an SVM peer relationship. |
            | 13303944 | An SVM-DR relationship is not supported because the source SVM has CIFS configured and the associated SnapMirror policy has either the identity_preservation property not set or set to exclude_network_and_protocol_config. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    x-ntap-long-description:
      description: |
        ## Overview
        This API manages asynchronous extended data protection (XDP) relationships for FlexVols, FlexGroups, or SVMs. It is also used to create a synchronous relationship between FlexVol volumes, which provides zero RPO data protection. It supports the SnapMirror policy types "mirror-vault", "sync-mirror", and "strict-sync-mirror". You can create a relationship between the source and destination which can be used to transfer APIs to perform SnapMirror "restore" operations.<br/>
        To create FlexVol or FlexGroup SnapMirror relationships, the source volume must be in the "online" state and be a read-write type; the destination volume must be in the "online" state and be a data protection type.
        To create SnapMirror relationships between SVMs, the source SVM must be of subtype "default" and the destination SVM of subtype "dp_destination". Additionally, SVMs must be peered before a relationship can be established between them.
        The SnapMirror functionality is subdivided into relationship APIs and transfer APIs:
        - SnapMirror relationship APIs are used to create and manage the SnapMirror relationships.
        - SnapMirror transfer APIs are used to manage data transfers.
      tags:
      - SnapMirror 
  /snapmirror/relationships/{relationship.uuid}/transfers:
    get:
      description: |
        Retrieves the list of ongoing SnapMirror transfers for the specified relationship.
        ### Related ONTAP commands
        * `snapmirror show`
        ### Example
        <br/>
        ```
        GET "/api/snapmirror/relationships/293baa53-e63d-11e8-bff1-005056a793dd/transfers"
        ```
        ### Learn more
        * [`DOC /snapmirror/relationships/{relationship.uuid}/transfers`](#docs-snapmirror-snapmirror_relationships_{relationship.uuid}_transfers)
        <br/>
      operationId: snapmirror_relationship_transfers_get
      parameters:
      - description: Relationship UUID
        in: path
        name: relationship.uuid
        required: true
        type: string
      - description: Filter by snapshot
        in: query
        name: snapshot
        type: string
      - description: Filter by checkpoint_size
        in: query
        name: checkpoint_size
        type: integer
      - description: Filter by relationship.destination.path
        in: query
        name: relationship.destination.path
        type: string
      - description: Filter by relationship.destination.cluster.name
        in: query
        name: relationship.destination.cluster.name
        type: string
      - description: Filter by relationship.destination.cluster.uuid
        in: query
        name: relationship.destination.cluster.uuid
        type: string
      - description: Filter by relationship.destination.svm.uuid
        in: query
        name: relationship.destination.svm.uuid
        type: string
      - description: Filter by relationship.destination.svm.name
        in: query
        name: relationship.destination.svm.name
        type: string
      - description: Filter by relationship.uuid
        in: query
        name: relationship.uuid
        type: string
      - description: Filter by relationship.restore
        in: query
        name: relationship.restore
        type: boolean
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by bytes_transferred
        in: query
        name: bytes_transferred
        type: integer
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_transfer_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    post:
      description: |
        Starts a SnapMirror transfer operation. This API initiates a restore operation if the SnapMirror relationship is of type "restore". Otherwise, it intiates a SnapMirror "initialize" operation or "update" operation based on the current SnapMirror state.
        ### Default property values
        * `storage_efficiency_enabled` - _true_
        ### Related ONTAP commands
        * `snapmirror update`
        * `snapmirror initialize`
        * `snapmirror restore`
        ### Examples
        The following examples show how to perform SnapMirror "initialize", "update", and "restore" operations.
        <br/>
           Performing a SnapMirror initialize or update
           <br/>
           ```
           POST "/api/snapmirror/relationships/e4e7e130-0279-11e9-b566-0050568e9909/transfers" '{}'
           ```
           <br/>
           Performing a SnapMirror restore transfer
           <br/>
           ```
           POST "/api/snapmirror/relationships/c8c62a90-0fef-11e9-b09e-0050568e7067/transfers" '{"source-snapshot": "src", "files": {"source_path": ["/a1.txt.0"], "destination_path": ["/a1-renamed.txt.0"]}}'
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships/{relationship.uuid}/transfers`](#docs-snapmirror-snapmirror_relationships_{relationship.uuid}_transfers)
      operationId: snapmirror_relationship_transfer_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Relationship UUID
        in: path
        name: relationship.uuid
        required: true
        type: string
      - description: Information on the SnapMirror transfer
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapmirror_transfer'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303845    | Restore operation failed |
            | 13303812    | Initialize operation failed |
            | 13303844    | Update operation failed |
            | 13303846    | Empty source path file list |
            | 13303847    | Invalid arguments |
            | 6620237     | SnapMirror relationship database write failed |
            | 6620238     | SnapMirror relationship database read failed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    x-ntap-long-description:
      description: |
        ## Overview
        This API is used to manage transfers on an existing SnapMirror relationship.</br>
        You can initiate SnapMirror operations such as "initialize", "update", "restore-transfer", and "abort" using this API and it only manages the active transfers on the specified relationship. For the restore relationships, the POST on transfers API triggers "restore-transfer". Successful completion of "restore"  also deletes the restore relationship. If the "restore" fails, DELETE on relationships must be called to delete the restore relationship.
      tags:
      - SnapMirror 
  /snapmirror/relationships/{relationship.uuid}/transfers/{uuid}:
    get:
      description: |
        Retrieves the attributes of a specific ongoing SnapMirror transfer.
        ### Related ONTAP commands
        * `snapmirror show`
        ### Example
        <br/>
        ```
        GET "/api/snapmirror/relationships/293baa53-e63d-11e8-bff1-005056a793dd/transfers/293baa53-e63d-11e8-bff1-005056a793dd"
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships/{relationship.uuid}/transfers`](#docs-snapmirror-snapmirror_relationships_{relationship.uuid}_transfers)
      operationId: snapmirror_relationship_transfer_get
      parameters:
      - description: Relationship UUID
        in: path
        name: relationship.uuid
        required: true
        type: string
      - description: Transfer UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_transfer'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    patch:
      description: |
        Aborts an ongoing SnapMirror transfer.
        ### Related ONTAP commands
        * `snapmirror abort`
        ### Example
        <br/>
        ```
        PATCH "/api/snapmirror/relationships/293baa53-e63d-11e8-bff1-005056a793dd/transfers/293baa53-e63d-11e8-bff1-005056a793dd" '{"state":"aborted"}'
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships/{relationship.uuid}/transfers`](#docs-snapmirror-snapmirror_relationships_{relationship.uuid}_transfers)
      operationId: snapmirror_relationship_transfer_modify
      parameters:
      - description: Relationship UUID
        in: path
        name: relationship.uuid
        required: true
        type: string
      - description: Transfer UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Information on the SnapMirror transfer
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snapmirror_transfer'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303848    | Abort of sync SnapMirror is not allowed |
            | 13303849    | SnapMirror transfer state is invalid |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
  /snapmirror/relationships/{uuid}:
    delete:
      description: |
        Deletes a SnapMirror relationship.
        ### Important notes
        * The "destination_only", "source_only", and "source_info_only" flags are mutually exclusive. If no flag is specified, the relationship is deleted from both the source and destination and all common Snapshot copies between the source and destination are also deleted.
        * For a restore relationship, the call must be executed on the cluster containing the destination endpoint without specifying the destination_only, source_only, or source_info_only parameters.
        * Additionally, ensure that there are no ongoing transfers on a restore relationship before calling this API.
        ### Related ONTAP commands
        * `snapmirror delete`
        * `snapmirror release`
        ### Examples
        The following examples show how to delete the relationship from both the source and destination, the destination only, and the source only.
        <br/>
           Deleting the relationship from both the source and destination. This API must be run on the cluster containing the destination endpoint.
           <br/>
           ```
           DELETE "/api/snapmirror/relationships/4512b2d2-fd60-11e8-8929-005056bbfe52"
           ```
           <br/>
           Deleting the relationship on the destination only. This API must be run on the cluster containing the destination endpoint.
           <br/>
           ```
           DELETE "/api/snapmirror/relationships/fd1e0697-02ba-11e9-acc7-005056a7697f/?destination_only=true"
           ```
           <br/>
           Deleting the relationship on the source only. This API must be run on the cluster containing the source endpoint.
           <br/>
           ```
           DELETE "/api/snapmirror/relationships/93e828ba-02bc-11e9-acc7-005056a7697f/?source_only=true"
           ```
           <br/>
           Deleting the source information only. This API must be run on the cluster containing the source endpoint. This does not delete the common Snapshot copies between the source and destination.
           <br/>
           ```
           DELETE "/api/snapmirror/relationships/caf545a2-fc60-11e8-aa13-005056a707ff/?source_info_only=true"
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships`](#docs-snapmirror-snapmirror_relationships)
      operationId: snapmirror_relationship_delete
      parameters:
      - description: Relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Deletes a relationship on the destination only. This parameter
          is applicable only when the call is executed on the cluster that contains
          the destination endpoint.
        in: query
        name: destination_only
        type: boolean
      - description: Deletes a relationship on the source only. This parameter is
          applicable only when the call is executed on the cluster that contains the
          source endpoint.
        in: query
        name: source_only
        type: boolean
      - description: Deletes relationship information on the source only. This parameter
          is applicable only when the call is executed on the cluster that contains
          the source endpoint.
        in: query
        name: source_info_only
        type: boolean
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303825    | Could not retrieve information for the SnapMirror policy type |
            | 13303814    | Could not retrieve the source or destination SVM UUID |
            | 13303815    | Could not retrieve information for the peer cluster |
            | 13303822    | SnapMirror release has failed |
            | 13303813    | SnapMirror release was successful but delete has failed |
            | 13303854    | Cleanup of restore relationship failed |
            | 13303855    | DELETE call on a restore relationship does not support the given flags |
            | 13303865    | Deleting the specified SnapMirror policy is not supported. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    get:
      description: |
        Retrieves a SnapMirror relationship.
        ### Related ONTAP commands
        * `snapmirror show`
        * `snapmirror list-destinations`
        ### Example
        <br/>
        ```
        GET "/api/snapmirror/relationships/caf545a2-fc60-11e8-aa13-005056a707ff/"
        ```
        <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships`](#docs-snapmirror-snapmirror_relationships)
      operationId: snapmirror_relationship_get
      parameters:
      - description: Relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Set to true to show relationships from the source only.
        in: query
        name: list_destinations_only
        type: boolean
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapmirror_relationship'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303825    | Could not retrieve information for the SnapMirror policy type |
            | 13303817    | Unknown value for the Snapmirror State |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
    patch:
      description: |
        Updates a SnapMirror relationship. This API is used to initiate SnapMirror operations such as "initialize", "resync", "break", "quiesce", and "resume" by specifying the appropriate value for the "state" field. It is also used to modify the SnapMirror policy associated with the specified relationship.
        ### Related ONTAP commands
        * `snapmirror modify`
        * `snapmirror initialize`
        * `snapmirror resync`
        * `snapmirror break`
        * `snapmirror quiesce`
        * `snapmirror resume`
        ### Examples
        The following examples show how to perform the SnapMirror "resync", "initialize", "resume", "quiesce", and "break" operations.
        <br/>
           Performing a SnapMirror "resync"
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/98bb2608-fc60-11e8-aa13-005056a707ff/" '{"state":"snapmirrored"}'
           ```
           <br/>
           Performing a SnapMirror "initialize"
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/98bb2608-fc60-11e8-aa13-005056a707ff/" '{"state":"snapmirrored"}'
           ```
           <br/>
           Performing a SnapMirror "resume"
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/98bb2608-fc60-11e8-aa13-005056a707ff/" '{"state":"snapmirrored"}'
           ```
           <br/>
           Performing a SnapMirror "quiesce"
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/98bb2608-fc60-11e8-aa13-005056a707ff" '{"state":"paused"}'
           ```
           <br/>
           Performing a SnapMirror "break"
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/98bb2608-fc60-11e8-aa13-005056a707ff" '{"state":"broken_off"}'
           ```
           <br/>
           Updating an associated SnapMirror policy
           <br/>
           ```
           PATCH "/api/snapmirror/relationships/9e922e65-1818-11e9-8b22-005056bbee73/" '{"policy": { "name" : "MirrorAndVaultDiscardNetwork"}}'
           ```
           <br/>
        ### Learn more
        * [`DOC /snapmirror/relationships`](#docs-snapmirror-snapmirror_relationships)
      operationId: snapmirror_relationship_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: If this parameter is set, validation and failover will occur
          to the Snapmirror relationship destination endpoint. Any other fields specified
          with this parameter will be ignored.
        in: query
        name: failover
        type: boolean
      - $ref: '#/parameters/validate_only_param'
      - description: If this parameter is set, failover will occur to the SVM DR relationship
          endpoint, overriding the validation errors.
        in: query
        name: force-failover
        type: boolean
      - description: Information on the SnapMirror relationship
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snapmirror_relationship'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 13303825    | Could not retrieve information for the SnapMirror policy type |
            | 13303817    | Unknown value for the SnapMirror state |
            | 13303829    | Invalid state |
            | 13303830    | Transient state |
            | 13303831    | Invalid state for async SnapMirror relationship |
            | 13303834    | Given input valid only for FlexGroup SnapMirror relationship |
            | 13303835    | Given flag is valid only when PATCH state is broken_off |
            | 13303836    | Given flag is valid only when PATCH state is snapmirrored or in_sync |
            | 13303818    | Invalid state transition requested |
            | 13303828    | Given state change is not possible for SVM SnapMirror relationship |
            | 13303833    | Requested state change is not possible |
            | 13303832    | SnapMirror relationship is already initialized |
            | 13303824    | Quiescing the SnapMirror relationship has failed |
            | 13303826    | Required environment variables are not set |
            | 13303827    | Internal Error |
            | 13303823    | Quiesce operation timed out |
            | 13303821    | Invalid SnapMirror policy name/UUID |
            | 13303819    | Could not retrieve SnapMirror policy information |
            | 13303851    | Cannot modify attributes of SnapMirror restore relationship |
            | 13303816    | Could not retrieve state or status values |
            | 13303837    | Given flags are valid only if SnapMirror state change is requested |
            | 6619546     | Destination must be a dp volume |
            | 13303808    | Transition to broken_off state failed |
            | 13303809    | Transition to paused state failed |
            | 13303810    | Transition to snapmirrored state failed |
            | 13303811    | Transition from paused state failed |
            | 13303820    | SnapMirror policy was successfully updated, state transition failed |
            | 13303856    | SVM is not configured with any data protocol |
            | 13303857    | SVM is not configured with any network interface |
            | 13303858    | Internal error. Failed to check LIF and protocols details for SVM |
            | 13303859    | Internal error. SVM Failover operation failed. SVM operational state is unavailable. |
            | 13303865    | Modifying the specified SnapMirror policy is not supported. |
            | 13303866    | Cannot use the specified policy to modify the policy of the relationship. |
            | 13303867    | Modifying the policy of an async-mirror or a vault relationship is not supported. |
            | 13303884    | LIF and protocols details are configured incorrectly for SVM. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapMirror 
  /storage/aggregates:
    get:
      description: |-
        Retrieves the collection of aggregates for the entire cluster.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `metrics.*`
        * `space.block_storage.inactive_user_data`
        * `space.footprint`
        * `statistics.*`
        ### Related ONTAP commands
        * `storage aggregate show`

        ### Learn more
        * [`DOC /storage/aggregates`](#docs-storage-storage_aggregates)
      operationId: aggregate_collection_get
      parameters:
      - description: If set to 'true', it queries the system for the recommended optimal
          layout for creating new aggregates. The default setting is 'false'.
        in: query
        name: recommend
        type: boolean
      - description: If set to 'true', the spares object is returned instead of records
          to show the spare groups in the cluster. The default setting is 'false'.
        in: query
        name: show_spares
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by block_storage.primary.raid_type
        in: query
        name: block_storage.primary.raid_type
        type: string
      - description: Filter by block_storage.primary.disk_class
        in: query
        name: block_storage.primary.disk_class
        type: string
      - description: Filter by block_storage.primary.checksum_style
        in: query
        name: block_storage.primary.checksum_style
        type: string
      - description: Filter by block_storage.primary.raid_size
        in: query
        name: block_storage.primary.raid_size
        type: integer
      - description: Filter by block_storage.primary.disk_count
        in: query
        name: block_storage.primary.disk_count
        type: integer
      - description: Filter by block_storage.primary.disk_type
        in: query
        name: block_storage.primary.disk_type
        type: enum
      - description: Filter by block_storage.hybrid_cache.raid_type
        in: query
        name: block_storage.hybrid_cache.raid_type
        type: string
      - description: Filter by block_storage.hybrid_cache.size
        in: query
        name: block_storage.hybrid_cache.size
        type: integer
      - description: Filter by block_storage.hybrid_cache.disk_count
        in: query
        name: block_storage.hybrid_cache.disk_count
        type: integer
      - description: Filter by block_storage.hybrid_cache.enabled
        in: query
        name: block_storage.hybrid_cache.enabled
        type: boolean
      - description: Filter by block_storage.hybrid_cache.used
        in: query
        name: block_storage.hybrid_cache.used
        type: integer
      - description: Filter by block_storage.plexes.name
        in: query
        name: block_storage.plexes.name
        type: string
      - description: Filter by block_storage.mirror.enabled
        in: query
        name: block_storage.mirror.enabled
        type: boolean
      - description: Filter by block_storage.mirror.state
        in: query
        name: block_storage.mirror.state
        type: string
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.other
        in: query
        name: metric.throughput.other
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by space.cloud_storage.used
        in: query
        name: space.cloud_storage.used
        type: integer
      - description: Filter by space.block_storage.inactive_user_data
        in: query
        name: space.block_storage.inactive_user_data
        type: integer
      - description: Filter by space.block_storage.size
        in: query
        name: space.block_storage.size
        type: integer
      - description: Filter by space.block_storage.available
        in: query
        name: space.block_storage.available
        type: integer
      - description: Filter by space.block_storage.full_threshold_percent
        in: query
        name: space.block_storage.full_threshold_percent
        type: integer
      - description: Filter by space.block_storage.used
        in: query
        name: space.block_storage.used
        type: integer
      - description: Filter by space.efficiency_without_snapshots.ratio
        in: query
        name: space.efficiency_without_snapshots.ratio
        type: number
      - description: Filter by space.efficiency_without_snapshots.logical_used
        in: query
        name: space.efficiency_without_snapshots.logical_used
        type: integer
      - description: Filter by space.efficiency_without_snapshots.savings
        in: query
        name: space.efficiency_without_snapshots.savings
        type: integer
      - description: Filter by space.efficiency.ratio
        in: query
        name: space.efficiency.ratio
        type: number
      - description: Filter by space.efficiency.logical_used
        in: query
        name: space.efficiency.logical_used
        type: integer
      - description: Filter by space.efficiency.savings
        in: query
        name: space.efficiency.savings
        type: integer
      - description: Filter by space.footprint
        in: query
        name: space.footprint
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.other
        in: query
        name: statistics.throughput_raw.other
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by snaplock_type
        in: query
        name: snaplock_type
        type: string
      - description: Filter by data_encryption.drive_protection_enabled
        in: query
        name: data_encryption.drive_protection_enabled
        type: boolean
      - description: Filter by data_encryption.software_encryption_enabled
        in: query
        name: data_encryption.software_encryption_enabled
        type: boolean
      - description: Filter by home_node.uuid
        in: query
        name: home_node.uuid
        type: string
      - description: Filter by home_node.name
        in: query
        name: home_node.name
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by dr_home_node.uuid
        in: query
        name: dr_home_node.uuid
        type: string
      - description: Filter by dr_home_node.name
        in: query
        name: dr_home_node.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787092 | The target field cannot be specified for this operation. |
            | 8586225 | Encountered unexpected error in retrieving metrics and statistics for an aggregate. |
            | 19726341 | Not enough eligible spare disks are available on the node. |
            | 19726344 | No recommendation can be made for this cluster. |
            | 19726357 | Aggregate recommendations are not supported on MetroCluster. |
            | 19726358 | Aggregate recommendations are not supported on ONTAP Cloud. |
            | 19726382 | Another provisioning operation is in progress on this cluster. Wait a few minutes, and try the operation again. |
            | 19726386 | Encountered an error when retrieving licensing information on this cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Automatically creates aggregates based on an optimal layout recommended by the system. Alternatively, properties can be provided to create an aggregate according to the requested specification. This request starts a job and returns a link to that job.
        ### Required properties
        Properties are not required for this API. The following properties are only required if you want to specify properties for aggregate creation:
        * `name` - Name of the aggregate.
        * `node.name` or `node.uuid` - Node on which the aggregate will be created.
        * `block_storage.primary.disk_count` - Number of disks to be used to create the aggregate.
        ### Default values
        If not specified in POST, the following default values are assigned. The remaining unspecified properties will receive system dependent default values.
        * `block_storage.mirror.enabled` - _false_
        * `snaplock_type` - _non_snaplock_
        ### Related ONTAP commands
        * `storage aggregate auto-provision`
        * `storage aggregate create`
        ### Example:
        ```
        POST /api/storage/aggregates {"node": {"name": "node1"}, "name": "test", "block_storage": {"primary": {"disk_count": "10"}}}
        ```

        ### Learn more
        * [`DOC /storage/aggregates`](#docs-storage-storage_aggregates)
      operationId: aggregate_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: If set, POST only selects disks of the specified size.
        in: query
        name: disk_size
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/aggregate'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 460770 | The aggregate create job failed to create the aggregate. |
            | 786438 | Failed to create an aggregate on the node. |
            | 786439 | An aggregate already uses the specified name. |
            | 786446 | The node is not in cluster. |
            | 786468 | VLDB is offline. |
            | 786819 | The value is invalid for the specified option at the current privilege level. |
            | 786902 | RAID-TEC aggregate is not fully supported. |
            | 786911 | Not every node in the cluster has the Data ONTAP version required for the feature. |
            | 787069 | Node is setup for MetroCluster over IP configuration; creating an unmirrored aggregate is not supported in this configuration. |
            | 787092 | The target field cannot be specified for this operation. |
            | 1114292 | The required SnapLock license is not installed. |
            | 2425736 | No matching node found for the target UUID. |
            | 19726341 | Not enough eligible spare disks are available on the node. |
            | 19726344 | No recommendation can be made for this cluster. |
            | 19726357 | Automatic aggregate creation is not supported on MetroCluster. |
            | 19726358 | Automatic aggregate creation is not supported on ONTAP Cloud. |
            | 19726373 | Recommendation specified for creating aggregates is not current. |
            | 19726382 | Another provisioning operation is in progress on this cluster. Wait a few minutes, and try the operation again. |
            | 19726386 | Encountered an error when retrieving licensing information on this cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Retrieving storage aggregate information
        The Storage Aggregate GET API retrieves all data aggregates in the cluster. System owned root aggregates are not included in the output.
        This API also supports specific queries, in addition to queries on aggregate body properties, which affect the output of the API. The parameters
        for these queries are "recommend" and "show_spares". Using the "recommend" query returns the list of aggregates that are
        recommended for creation in the cluster. The "show_spares" query returns a response outside of the records body, which includes the groups
        of usable spares in the cluster.</br>
        The collection GET returns the aggregate identifiers, UUID and name, and the node on which the aggregate resides. The instance GET, by default, returns all of the properties defined in the aggregates object, except advanced properties.
        The properties "space.footprint" and "space.block_storage.inactive_user_data" are considered advanced properties and only returned when requested
        using the "fields" query parameter. Performance "metric" and "statistics" for aggregates are also only returned when requested. The "statistics" property accounts for the cumulative raw values collected by ONTAP for an aggregate, while the "metric" property displays the incremental average for latency and incremental changes in IOPs and throughput over the last 15 seconds. Any external application can use the raw statistics to derive its own incremental performance metrics.
        ## Creating storage aggregates
        When the POST command is issued with no properties, the system evaluates the cluster attached storage, determines the optimal aggregate layout and configures the aggregates. This layout is completely controlled by the system.
        To view the recommended optimal layout rather than creating it, use the GET endpoint, setting the "recommend" query to 'true'.
        Alternatively, POST can be used with specific properties to create an aggregate as requested. At a minimum, the
        aggregate name, disk count, and the node where it should reside are required if any properties are provided.</br>
        When using POST with input properties, three properties are required. These are:
        - name
        - node.name or node.uuid
        - block_storage.primary.disk_count
        ### Remaining properties are optional
        The following properties can be specified in POST:
        * name - Name of the aggregate.
        * node.name and node.uuid - Node on which the aggregate will be created.
        * block_storage.primary.disk_count - Number of disks to be used to create the aggregate.
        * block_storage.mirror.enabled - Specifies whether or not the aggregate should be created using SyncMirror.
        * block_storage.primary.checksum_style - Checksum style of the disks to be use for the aggregate.
        * block_storage.primary.disk_class - Class of disks to be use to for the aggregate.
        * block_storage.primary.raid_size - Desired RAID size of the aggregate.
        * block_storage.primary.raid_type - Desired RAID type of the aggregate.
        * snaplock_type - SnapLock type to use on the aggregate.
        ## Updating storage aggregates
        The PATCH operation is used to modify properties of the aggregate. There are several properties that can be modified on an aggregate. Only one property can be modified for each PATCH request. </br>
        The list of patchable properties with a brief description for each is as follows:
        * name - This property can be changed to rename the aggregate.
        * node.name and node.uuid - Either property can be updated in order to relocate the aggregate to a different node in the cluster.
        * block_storage.mirror.enabled - This property can be changed from 'false' to 'true' in order to mirror the aggregate, if the system is capable of doing so.
        * block_storage.primary.disk_count - This property can be updated to increase the number of disks in an aggregate.
        * block_storage.primary.raid_size - This property can be updated to set the desired RAID size.
        * block_storage.primary.raid_type - This property can be updated to set the desired RAID type.
        * cloud_storage.tiering_fullness_threshold - This property can be updated to set the desired tiering fullness threshold if using FabricPool.
        ## Deleting storage aggregates
        If volumes exist on an aggregate, they must be deleted or moved before the aggregate can be deleted.
        See the /storage/volumes API for details on moving or deleting volumes.
        ---
        ## Examples
        ### Retrieving a list of aggregates from the cluster
        The following example shows the response with a list of data aggregates in the cluster:
        ```
        # The API:
        /api/storage/aggregates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "uuid": "19425837-f2fa-4a9f-8f01-712f626c983c",
              "name": "test1",
              "node": {
                "uuid": "caf95bec-f801-11e8-8af9-005056bbe5c1",
                "name": "node-1",
              },
            },
            {
              "uuid": "4a7e4139-ca7a-420b-9a11-3f040d2189fd",
              "name": "test4",
              "node": {
                "uuid": "4046dda8-f802-11e8-8f6d-005056bb2030",
                "name": "node-2",
              },
            }
          ],
          "num_records": 2,
        }
        ```
        ### Retrieving a specific aggregate from the cluster
        The following example shows the response of the requested aggregate. If there is no aggregate with the requested UUID, an error is returned.
        ```
        # The API:
        /api/storage/aggregates/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/870dd9f2-bdfa-4167-b692-57d1cec874d4" -H "accept: application/json"
        # The response:
        {
          "uuid": "19425837-f2fa-4a9f-8f01-712f626c983c",
          "name": "test1",
          "node": {
            "uuid": "caf95bec-f801-11e8-8af9-005056bbe5c1",
            "name": "node-1",
          },
          "home_node": {
            "uuid": "caf95bec-f801-11e8-8af9-005056bbe5c1",
            "name": "node-1",
          },
          "space": {
            "block_storage": {
              "size": 235003904,
              "available": 191942656,
              "used": 43061248,
              "full_threshold_percent": 98
            },
            "cloud_storage": {
              "used": 0
            },
            "efficiency": {
              "savings": 1408029,
              "ratio": 6.908119720880661,
              "logical_used": 1646350
            },
            "efficiency_without_snapshots": {
              "savings": 0,
              "ratio": 1,
              "logical_used": 737280
            }
          },
          "state": "online",
          "snaplock_type": "non_snaplock",
          "create_time": "2018-12-04T15:40:38-05:00",
          "data_encryption": {
            "software_encryption_enabled": false,
            "drive_protection_enabled": false
          },
          "block_storage": {
            "primary": {
              "disk_count": 6,
              "disk_class": "solid_state",
              "raid_type": "raid_dp",
              "raid_size": 24,
              "checksum_style": "block",
              "disk_type": "ssd"
            },
            "hybrid_cache": {
              "enabled": false
            },
            "mirror": {
              "enabled": false,
              "state": "unmirrored"
            }
          },
          "plexes": [
            {
              "name": "plex0",
            }
          ],
          "cloud_storage": {
            "attach_eligible": false
          },
        }
        ```
        ### Retrieving statistics and metric for an aggregate
        In this example, the API returns the "statistics" and "metric" properties for the aggregate requested.
        ```
        #The API:
        /api/storage/aggregates/{uuid}?fields=statistics,metric
        #The call:
            curl -X GET "https://<mgmt-ip>/api/storage/aggregates/538bf337-1b2c-11e8-bad0-005056b48388?fields=statistics,metric" -H "accept: application/json"
        #The response:
        {
          "uuid": "538bf337-1b2c-11e8-bad0-005056b48388",
          "name": "aggr4",
          "metric": {
               "timestamp": "2019-07-08T22:16:45Z",
               "duration": "PT15S",
               "status": "ok",
               "throughput": {
                 "read": 7099,
                 "write": 840226,
                 "other": 193293789,
                 "total": 194141115
                 }
               "latency": {
                 "read": 149,
                 "write": 230,
                 "other": 123,
                 "total": 124
               },
               "iops": {
                 "read": 1,
                 "write": 17,
                 "other": 11663,
                 "total": 11682
               },
           },
            "statistics": {
               "timestamp": "2019-07-08T22:17:09Z",
               "status": "ok",
               "throughput_raw": {
                 "read": 3106045952,
                 "write": 63771742208,
                 "other": 146185560064,
                 "total": 213063348224
               },
               "latency_raw": {
                 "read": 54072313,
                 "write": 313354426,
                 "other": 477201985,
                 "total": 844628724
               },
               "iops_raw": {
                 "read": 328267,
                 "write": 1137230,
                 "other": 1586535,
                 "total": 3052032
               }
            },
        }
        ```
        For more information and examples on viewing historical performance metrics for any given aggregate, see [`DOC /storage/aggregates/{uuid}/metrics`](#docs-storage-storage_aggregates_{uuid}_metrics)
        ### Retrieving a list of aggregates recommended for creation from the cluster
        The following example shows the response with a list of recommended data aggregates in the cluster. Note: Each aggregate UUID provided in this response is not guaranteed to be the same UUID for the aggregate if it is created.
        ```
        # The API:
        /api/storage/aggregates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates?recommend=true&fields=*" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "uuid": "795bf7c2-fa4b-11e8-ba65-005056bbe5c1",
              "name": "node_2_SSD_1",
              "node": {
                "uuid": "4046dda8-f802-11e8-8f6d-005056bb2030",
                "name": "node-2",
              },
              "space": {
                "block_storage": {
                  "size": 1116180480
                }
              },
              "block_storage": {
                "primary": {
                  "disk_count": 23,
                  "disk_class": "solid_state",
                  "raid_type": "raid_dp",
                  "disk_type": "ssd"
                },
                "hybrid_cache": {
                  "enabled": false
                },
                "mirror": {
                  "enabled": false
                }
              },
            },
            {
              "uuid": "795c0a15-fa4b-11e8-ba65-005056bbe5c1",
              "name": "node_1_SSD_1",
              "node": {
                "uuid": "caf95bec-f801-11e8-8af9-005056bbe5c1",
                "name": "node-1",
              },
              "space": {
                "block_storage": {
                  "size": 176238592
                }
              },
              "block_storage": {
                "primary": {
                  "disk_count": 5,
                  "disk_class": "solid_state",
                  "raid_type": "raid_dp",
                  "disk_type": "ssd"
                },
                "hybrid_cache": {
                  "enabled": false
                },
                "mirror": {
                  "enabled": false
                }
              },
            }
          ],
          "num_records": 2,
        }
        ```
        ### Updating an aggregate in the cluster
        The following example shows the workflow of adding disks to the aggregate.<br>
        Step 1: Check the current disk count on the aggregate.
        ```
        # The API:
        /api/storage/aggregates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c?fields=block_storage.primary.disk_count" -H "accept: application/json"
        # The response:
        {
          "uuid": "19425837-f2fa-4a9f-8f01-712f626c983c",
          "name": "test1",
          "block_storage": {
            "primary": {
              "disk_count": 6
            }
          },
        }
        ```
        Step 2: Update the aggregate with the new disk count in 'block_storage.primary.disk_count'. The response to PATCH is a job unless the request is invalid.
        ```
        # The API:
        /api/storage/aggregates
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c" -H "accept: application/hal+json" -d "{\"block_storage\": {\"primary\": {\"disk_count\": 8}}}"
        # The response:
        {
          "job": {
            "uuid": "c103d15e-730b-11e8-a57f-005056b465d6",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/c103d15e-730b-11e8-a57f-005056b465d6"
              }
            }
          }
        }
        ```
        Step 3: Wait for the job to finish, then call GET to see the reflected change.
        ```
        # The API:
        /api/storage/aggregates
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c?fields=block_storage.primary.disk_count" -H "accept: application/json"
        # The response:
        {
          "uuid": "19425837-f2fa-4a9f-8f01-712f626c983c",
          "name": "test1",
          "block_storage": {
            "primary": {
              "disk_count": 8
            }
          },
        }
        ```
      tags:
      - storage
  /storage/aggregates/{aggregate.uuid}/cloud-stores:
    get:
      description: |
        Retrieves the collection of cloud stores used by an aggregate.
        ### Related ONTAP commands
        * `storage aggregate object-store show`
      operationId: cloud_store_collection_get
      parameters:
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Filter by availability
        in: query
        name: availability
        type: string
      - description: Filter by mirror_degraded
        in: query
        name: mirror_degraded
        type: boolean
      - description: Filter by unavailable_reason.message
        in: query
        name: unavailable_reason.message
        type: string
      - description: Filter by used
        in: query
        name: used
        type: integer
      - description: Filter by primary
        in: query
        name: primary
        type: boolean
      - description: Filter by unreclaimed_space_threshold
        in: query
        name: unreclaimed_space_threshold
        type: integer
      - description: Filter by target.uuid
        in: query
        name: target.uuid
        type: string
      - description: Filter by target.name
        in: query
        name: target.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cloud_store_response'
        default:
          description: ~
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Attaches an object store to an aggregate, or adds a second object store as a mirror.
        ### Required properties
        * `target.uuid` or `target.name` - UUID or name of the cloud target.
        ### Recommended optional properties
        * `primary` - _true_ if the object store is primary or _false_ if it is a mirror.
        * `allow_flexgroups` - Allow attaching object store to an aggregate containing FlexGroup constituents.
        * `check_only` - Validate only and do not add the cloud store.
        ### Default property values
        * `primary` - _true_
        * `allow_flexgroups` - _false_
        * `check_only` - _false_
        ### Related ONTAP commands
        * `storage aggregate object-store attach`
        * `storage aggregate object-store mirror`
      operationId: cloud_store_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: This optional parameter allows attaching object store to an aggregate
          containing FlexGroup constituents. The default value is false. Mixing FabricPools
          and non-FabricPools within a FlexGroup is not recommended. All aggregates
          hosting constituents of a FlexGroup should be attached to the object store.
        in: query
        name: allow_flexgroups
        type: boolean
      - description: Validate only and do not add the cloud store.
        in: query
        name: check_only
        type: boolean
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cloud_store'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: ~
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/aggregates/{aggregate.uuid}/cloud-stores/{target.uuid}:
    delete:
      description: |
        Removes the specified cloud target from the aggregate. Only removal of a mirror is allowed. The primary cannot be removed. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate object-store unmirror`
      operationId: cloud_store_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Cloud target UUID
        in: path
        name: target.uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves the cloud store for the aggregate using the specified cloud target UUID.
        ### Related ONTAP commands
        * `storage aggregate object-store show`
      operationId: cloud_store_get
      parameters:
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Cloud target UUID
        in: path
        name: target.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cloud_store_response'
        default:
          description: ~
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates the cloud store specified by the UUID with the fields in the body. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate object-store modify`
      operationId: cloud_store_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Cloud target UUID
        in: path
        name: target.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/cloud_store'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/aggregates/{aggregate.uuid}/plexes:
    get:
      description: |-
        Retrieves the collection of plexes for the specified aggregate.
        ### Related ONTAP commands
        * `storage aggregate plex show`

        ### Learn more
        * [`DOC /storage/aggregates/{aggregate.uuid}/plexes`](#docs-storage-storage_aggregates_{aggregate.uuid}_plexes)
      operationId: plex_collection_get
      parameters:
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Filter by online
        in: query
        name: online
        type: boolean
      - description: Filter by raid_groups.degraded
        in: query
        name: raid_groups.degraded
        type: boolean
      - description: Filter by raid_groups.recomputing_parity.percent
        in: query
        name: raid_groups.recomputing_parity.percent
        type: integer
      - description: Filter by raid_groups.recomputing_parity.active
        in: query
        name: raid_groups.recomputing_parity.active
        type: boolean
      - description: Filter by raid_groups.name
        in: query
        name: raid_groups.name
        type: string
      - description: Filter by raid_groups.disks.position
        in: query
        name: raid_groups.disks.position
        type: string
      - description: Filter by raid_groups.disks.disk.name
        in: query
        name: raid_groups.disks.disk.name
        type: string
      - description: Filter by raid_groups.disks.state
        in: query
        name: raid_groups.disks.state
        type: string
      - description: Filter by raid_groups.disks.usable_size
        in: query
        name: raid_groups.disks.usable_size
        type: integer
      - description: Filter by raid_groups.disks.type
        in: query
        name: raid_groups.disks.type
        type: string
      - description: Filter by raid_groups.reconstruct.percent
        in: query
        name: raid_groups.reconstruct.percent
        type: integer
      - description: Filter by raid_groups.reconstruct.active
        in: query
        name: raid_groups.reconstruct.active
        type: boolean
      - description: Filter by raid_groups.cache_tier
        in: query
        name: raid_groups.cache_tier
        type: boolean
      - description: Filter by resync.level
        in: query
        name: resync.level
        type: string
      - description: Filter by resync.active
        in: query
        name: resync.active
        type: boolean
      - description: Filter by resync.percent
        in: query
        name: resync.percent
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by pool
        in: query
        name: pool
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by aggregate.name
        in: query
        name: aggregate.name
        type: string
      - description: Filter by aggregate.uuid
        in: query
        name: aggregate.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/plex_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        The Storage Aggregate Plex API provides relevant state information for each plex in the aggregate.
        For each plex, details are provided for the RAID groups in the plex and the disks that make up each RAID group.<br>
        ## Examples
        ### Retrieving the list of plexes in an aggregate
        The following example shows the response with the list of plexes in an aggregate:<br>
        ```
        # The API:
        /api/storage/aggregates/{uuid}/plexes
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c/plexes" -H "accept: application/json"
        # The response:
        {
          "records": [
            {
              "name": "plex0",
            },
            {
              "name": "plex4",
            }
          ],
          "num_records": 2,
        }
        ```
        ### Retrieving a specific plex in an aggregate
        The following example shows the response when requesting a specific plex of an aggregate:<br>
        ```
        # The API:
        /api/storage/aggregates/{uuid}/plexes/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/19425837-f2fa-4a9f-8f01-712f626c983c/plexes/plex0" -H "accept: application/json"
        # The response:
        {
          "aggregate": {
            "uuid": "19425837-f2fa-4a9f-8f01-712f626c983c",
            "name": "test1",
          },
          "name": "plex0",
          "online": true,
          "state": "normal",
          "pool": "pool0",
          "resync": {
            "active": false
          },
          "raid_groups": [
            {
              "name": "rg0",
              "cache_tier": false,
              "degraded": false,
              "recomputing_parity": {
                "active": false
              },
              "reconstruct": {
                "active": false
              },
              "disks": [
                {
                  "position": "dparity",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.29",
                  }
                },
                {
                  "position": "parity",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.4",
                  }
                },
                {
                  "position": "data",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.30",
                  }
                },
                {
                  "position": "data",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.5",
                  }
                },
                {
                  "position": "data",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.31",
                  }
                },
                {
                  "position": "data",
                  "state": "normal",
                  "type": "ssd",
                  "usable_size": 86769664,
                  "disk": {
                    "name": "1.1.6",
                  }
                }
              ]
            }
          ],
        }
        ```
      tags:
      - storage
  /storage/aggregates/{aggregate.uuid}/plexes/{name}:
    get:
      description: |-
        Retrieves the plex specified by the aggregate UUID and plex name.
        ### Related ONTAP commands
        * `storage aggregate plex show`

        ### Learn more
        * [`DOC /storage/aggregates/{aggregate.uuid}/plexes`](#docs-storage-storage_aggregates_{aggregate.uuid}_plexes)
      operationId: plex_get
      parameters:
      - description: Aggregate UUID
        in: path
        name: aggregate.uuid
        required: true
        type: string
      - description: Plex name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/plex'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/aggregates/{uuid}:
    delete:
      description: |-
        Deletes the aggregate specified by the UUID. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate delete`

        ### Learn more
        * [`DOC /storage/aggregates`](#docs-storage-storage_aggregates)
      operationId: aggregate_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Aggregate UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 460770 | The aggregate delete job failed to delete the aggregate. |
            | 460777 | Failed to get information on the delete job. |
            | 786435 | Internal Error. Failed to create a communication handle. |
            | 786451 | Failed to delete specified aggregate. |
            | 786468 | VLDB is offline. |
            | 786472 | Node that hosts the aggregate is offline. |
            | 786497 | Cannot delete an aggregate that has volumes. |
            | 786771 | Aggregate does not exist. |
            | 786867 | Specified aggregate resides on the remote cluster. |
            | 786897 | Specified aggregate cannot be deleted as it is a switched-over root aggregate. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves the aggregate specified by the UUID. The recommend query cannot be used for this operation.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `metrics.*`
        * `space.block_storage.inactive_user_data`
        * `space.footprint`
        * `statistics.*`
        ### Related ONTAP commands
        * `storage aggregate show`

        ### Learn more
        * [`DOC /storage/aggregates`](#docs-storage-storage_aggregates)
      operationId: aggregate_get
      parameters:
      - description: Aggregate UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/aggregate'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787092 | The target field cannot be specified for this operation. |
            | 8586225 | Encountered unexpected error in retrieving metrics and statistics for an aggregate. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Updates the aggregate specified by the UUID with the properties in the body. This request starts a job and returns a link to that job.
        ### Related ONTAP commands
        * `storage aggregate add-disks`
        * `storage aggregate mirror`
        * `storage aggregate modify`
        * `storage aggregate relocation start`
        * `storage aggregate rename`

        ### Learn more
        * [`DOC /storage/aggregates`](#docs-storage-storage_aggregates)
      operationId: aggregate_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Aggregate UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: If set, PATCH only selects disks of the specified size.
        in: query
        name: disk_size
        type: integer
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/aggregate'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 262247 | The value is invalid for the field. |
            | 460777 | Failed to get information on the job. |
            | 786434 | Cannot connect to node where the aggregate resides. |
            | 786435 | Internal Error. Failed to create a communication handle. |
            | 786439 | An aggregate already uses the specified name. |
            | 786447 | Failed to modify aggregate. |
            | 786456 | Failed to add disks to aggregate. |
            | 786458 | Failed to rename aggregate. |
            | 786468 | VLDB is offline. |
            | 786472 | Node that hosts the aggregate is offline. |
            | 786479 | Cannot find node ID for the node. |
            | 786730 | Internal Error |
            | 786771 | Aggregate does not exist. |
            | 786787 | Aggregate is not online. |
            | 786808 | Aggregate mirror failed. |
            | 786867 | Specified aggregate resides on the remote cluster. |
            | 786911 | Not every node in the cluster has the Data ONTAP version required for the feature. |
            | 786923 | This operation is disallowed during pre-commit phase of 7-mode to clustered Data ONTAP transition. |
            | 786924 | Internal Error for an aggregate that is in pre-commit phase of a 7-mode to clustered Data ONTAP transition. |
            | 786955 | Modifying raidtype to raid_tec requires a minimum of six disks in the RAID Group. |
            | 786956 | Modifying raidtype to raid_dp requires a minimum of four disks in the RAID Group. |
            | 786965 | Spare Selection in userspace failed. |
            | 787046 | Mirroring of a FabricPool is not allowed. |
            | 787092 | The target field cannot be specified for this operation. |
            | 787144 | Aggregate is not a FabricPool. |
            | 787156 | Modifying the attributes of mirror object store is not allowed. |
            | 787169 | Only one field can be modified per operation. |
            | 787170 | Failed to patch the \"block_storage.primary.disk_count\" because the disk count specified is smaller than existing disk count. |
            | 787178 | Unmirroring an aggregate with a PATCH operation is not supported. |
            | 2425736 | No matching node found for the UUID provided. |
            | 13108106 | Cannot run aggregate relocation because volume expand is in progress. |
            | 26542083 | Destination node is at higher Data ONTAP version than source node. |
            | 26542084 | Source node is at higher Data ONTAP version than destination node. |
            | 26542097 | Unable to get D-blade ID of destination. |
            | 26542101 | Unable to contact source node. |
            | 26542102 | Unable to contact destination node. |
            | 26542120 | A Vserver migrate operation is in progress. When the migrate operation completes, try the operation again. |
            | 26542121 | A MetroCluster disaster recovery operation is in progress. When the recovery operation completes, try the operation again. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/aggregates/{uuid}/metrics:
    get:
      description: |-
        Retrieves historical performance metrics for an aggregate.
        ### Learn more
        * [`DOC /storage/aggregates/{uuid}/metrics`](#docs-storage-storage_aggregates_{uuid}_metrics)
      operationId: aggregate_performance_metrics_collection_get
      parameters:
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the aggregate.
        in: path
        name: uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Values can be 1h, 1d, 1w, 1m, or 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_metric_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8586225 | Encountered unexpected error in retrieving metrics for the requested aggregate. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        The Storage Aggregate Metrics API provides historical performance metrics for the specified aggregate.
        The collection GET operation retrieves read, write, other and total metrics for a given aggregate, in terms of IOPS, latency and throughput. The read and write categories display the I/O operations that service user reads and writes across all the hosted volumes on a given aggregate. The other category encompasses background I/O operations that implement data protection services currently running on the aggregate. IOPs are the number of I/O operations reported per second, throughput is the amount of I/O operations measured in bytes per second and latency is the average response time for an IOP, reported in microseconds.
        Without a specified time interval, the output is limited to statistics collected at 15 second intervals over the last hour.
        ## Examples
        ### Retrieving metrics for an aggregate
        In this example, the API returns a set of records that exist for the aggregate with the given UUID for the last hour.
        ```
        # The API:
        /api/storage/aggregates/{uuid}/metrics
        #The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/538bf337-1b2c-11e8-bad0-005056b48388/metrics" -H "accept: application/json"
        #The response:
        {
          "records": [
            {
              "timestamp": "2019-01-14T23:33:45Z"
            },
            {
              "timestamp": "2019-01-14T23:33:30Z"
            },
            {
              "timestamp": "2019-01-14T23:33:15Z"
            },
            {
              "timestamp": "2019-01-14T23:33:00Z"
            },
            ...
          ],
          "num_records": 240
        }
        ```
        ### Retrieving metrics for an aggregate with a set timestamp
        In this example, the API returns metric values for latency, IOPS, and throughput properties such as read, write and total. The status and duration
        for which the metrics are requested are also returned.
        ```
        #The API:
        /api/storage/aggregates/{uuid}/metrics/{timestamp}
        #The call:
        curl -X GET "https://<mgmt-ip>/api/storage/aggregates/538bf337-1b2c-11e8-bad0-005056b48388/metrics/2019-01-1T23:33:00Z" -H "accept: application/json"
        #The response:
        {
          "uuid": "538bf337-1b2c-11e8-bad0-005056b48388",
          "timestamp": "2019-01-01T23:33:00Z",
          "status": "ok",
          "duration": "PT15S",
          "throughput": {
            "read": 6826,
            "write": 205892,
            "other": 0,
            "total": 212718
          },
          "latency": {
            "read": 148,
            "write": 216,
            "other": 0,
            "total": 199
          },
          "iops": {
            "read": 1,
            "write": 5,
            "other": 0,
            "total": 6
          }
        }
        ```
        ### Retrieving metrics for an aggregate for a set time interval
        In this example, the API returns the requested metrics for the given time interval of 1 week. The interval value can be
        1 hour, 1 day, 1 week, 1 month or 1 year. If the interval value is not set, a default value of 1 hour is used.
        ```
        #The API:
        /api/storage/aggregates/{uuid}/metrics
        #The call:
            curl -X GET "https://<mgmt-ip>/api/storage/aggregates/538bf337-1b2c-11e8-bad0-005056b48388/metrics?return_timeout=15&fields=*&interval=1w"  -H "accept: application/json"
        #The response:
        {
          "records": [
            {
               "timestamp": "2019-01-01T23:30:00Z",
               "status": "ok",
               "duration": "PT30M",
               "throughput": {
                 "read": 268328,
                 "write": 5556255,
                 "other": 0,
                 "total": 5824584
               },
               "latency": {
                 "read": 156,
                 "write": 430,
                 "other": 0,
                 "total": 318
               },
               "iops": {
                 "read": 18,
                 "write": 26,
                 "other": 0,
                 "total": 45
               }
            },
            {
               "timestamp": "2019-01-01T23:00:00Z",
               "status": "ok",
               "duration": "PT30M",
               "throughput": {
                 "read": 474266,
                 "write": 6121908,
                 "other": 0,
                 "total": 6596175
               },
               "latency": {
                 "read": 154,
                 "write": 448,
                 "other": 0,
                 "total": 262
               },
               "iops": {
                 "read": 48,
                 "write": 28,
                 "other": 0,
                 "total": 76
               }
            },
            {
               "timestamp": "2019-01-01T22:30:00Z",
               "status": "ok",
               "duration": "PT30M",
               "throughput": {
                 "read": 540164,
                 "write": 2411356,
                 "other": 26244685,
                 "total": 29196206
               },
               "latency": {
                 "read": 159,
                 "write": 394,
                 "other": 192,
                 "total": 193
               },
               "iops": {
                 "read": 94,
                 "write": 16,
                 "other": 437,
                 "total": 548
               }
            },
            {
               "timestamp": "2019-01-01T22:00:00Z",
               "status": "ok",
               "duration": "PT30M",
               "throughput": {
                 "read": 2842,
                 "write": 2765407,
                 "other": 0,
                 "total": 2768249
               },
               "latency": {
                 "read": 189,
                 "write": 540,
                 "other": 0,
                 "total": 523
               },
               "iops": {
                 "read": 0,
                 "write": 13,
                 "other": 0,
                 "total": 13
               }
            },
            ...
          ],
          "num_records": 336
        }
        ```
        ### Related ONTAP commands
        * `statistics aggregate show`
      tags:
      - storage
  /storage/cluster:
    get:
      description: |
        Reports cluster wide storage details across different tiers. By default, this endpoint returns all fields.
        Supports the following roles: admin, and readonly.
      operationId: storage_cluster_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/cluster_space'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/disks:
    get:
      description: |
        Retrieves a collection of disks.
        ### Related ONTAP commands
        * `storage disk show`
        ### Learn more
        * [`DOC /storage/disks`](#docs-storage-storage_disks)
      operationId: disk_collection_get
      parameters:
      - description: Filter by bay
        in: query
        name: bay
        type: integer
      - description: Filter by model
        in: query
        name: model
        type: string
      - description: Filter by self_encrypting
        in: query
        name: self_encrypting
        type: boolean
      - description: Filter by home_node.uuid
        in: query
        name: home_node.uuid
        type: string
      - description: Filter by home_node.name
        in: query
        name: home_node.name
        type: string
      - description: Filter by key_id.fips
        in: query
        name: key_id.fips
        type: string
      - description: Filter by key_id.data
        in: query
        name: key_id.data
        type: string
      - description: Filter by rated_life_used_percent
        in: query
        name: rated_life_used_percent
        type: integer
      - description: Filter by shelf.uid
        in: query
        name: shelf.uid
        type: string
      - description: Filter by rpm
        in: query
        name: rpm
        type: integer
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by firmware_version
        in: query
        name: firmware_version
        type: string
      - description: Filter by vendor
        in: query
        name: vendor
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by class
        in: query
        name: class
        type: string
      - description: Filter by protection_mode
        in: query
        name: protection_mode
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by uid
        in: query
        name: uid
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by container_type
        in: query
        name: container_type
        type: string
      - description: Filter by usable_size
        in: query
        name: usable_size
        type: integer
      - description: Filter by fips_certified
        in: query
        name: fips_certified
        type: boolean
      - description: Filter by aggregates.name
        in: query
        name: aggregates.name
        type: string
      - description: Filter by aggregates.uuid
        in: query
        name: aggregates.uuid
        type: string
      - description: Filter by pool
        in: query
        name: pool
        type: string
      - description: Filter by drawer.id
        in: query
        name: drawer.id
        type: integer
      - description: Filter by drawer.slot
        in: query
        name: drawer.slot
        type: integer
      - description: Filter by dr_node.uuid
        in: query
        name: dr_node.uuid
        type: string
      - description: Filter by dr_node.name
        in: query
        name: dr_node.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/disk_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates the encryption controls of self-encrypting disks.
        ### Related ONTAP commands
        * `storage encryption disk modify -data-key-id`
        * `security key-manager key query -key-type NSE-AK`
        ### Learn more
        * [`DOC /storage/disks`](#docs-storage-storage_disks)
      operationId: disk_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Disk name
        in: query
        name: name
        required: true
        type: string
      - description: Name of the operation to apply to encrypting disks.
        enum:
        - rekey_data_default
        - rekey_data_auto_id
        in: query
        name: encryption_operation
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1441795 | Setting the data key ID to the manufacture secure ID is not allowed when in FIPS-compliance mode. |
            | 14155777 | The operation failed on one or more disks. |
            | 14155778 | No self-encrypting disks were specified. |
            | 14155779 | Status from a node shows that a conflicting operation has occurred. Some disk controls might have changed. |
            | 14155780 | Could not retrieve the required key ID from the key manager. |
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Retrieving storage disk information
        The storage disk GET API retrieves all of the disks in the cluster.
        <br/>
        ---
        ## Examples
        ### 1) Retrieve a list of disks from the cluster
        #### The following example shows the response with a list of disks in the cluster:
        ---
        ```
        # The API:
        /api/storage/disks
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/disks" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "name": "1.24.4",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.4"
                }
              }
            },
            {
              "name": "1.24.3",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.3"
                }
              }
            },
            {
              "name": "1.24.5",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.5"
                }
              }
            },
            {
              "name": "1.24.0",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.0"
                }
              }
            },
            {
              "name": "1.24.2",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.2"
                }
              }
            },
            {
              "name": "1.24.1",
              "_links": {
                "self": {
                  "href": "/api/storage/disks/1.24.1"
                }
              }
            }
          ],
          "num_records": 6,
          "_links": {
            "self": {
              "href": "/api/storage/disks"
            }
          }
        }
        ```
        ---
        ### 2) Retrieve a specific disk from the cluster
        #### The following example shows the response of the requested disk. If there is no disk with the requested name, an error is returned.
        ---
        ```
        # The API:
        /api/storage/disks/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/disks/1.24.3" -H "accept: application/hal+json"
        # The response:
        {
          "name": "1.24.3",
          "uid": "50000394:0808AA88:00000000:00000000:00000000:00000000:00000000:00000000:00000000:00000000",
          "serial_number": "EC47PC5021SW",
          "model": "X421_FAL12450A10",
          "vendor": "NETAPP",
          "firmware_version": "NA02",
          "usable_size": 438304768000,
          "rpm": 10000,
          "type": "sas",
          "class": "performance",
          "container_type": "aggregate",
          "pool": "pool0",
          "state": "present",
          "node": {
            "uuid": "3a89ed49-8c6d-11e8-93bc-00a0985a64b6",
            "name": "node-2",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/3a89ed49-8c6d-11e8-93bc-00a0985a64b6"
              }
            }
          },
          "home_node": {
            "uuid": "3a89ed49-8c6d-11e8-93bc-00a0985a64b6",
            "name": "node-2",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/3a89ed49-8c6d-11e8-93bc-00a0985a64b6"
              }
            }
          },
          "aggregates": [
            {
              "uuid": "3fd9c345-ba91-4949-a7b1-6e2b898d74e3",
              "name": "node_2_SAS_1",
              "_links": {
                "self": {
                  "href": "/api/storage/aggregates/3fd9c345-ba91-4949-a7b1-6e2b898d74e3"
                }
              }
            }
          ],
          "shelf": {
            "uid": "10318311901725526608",
            "_links": {
              "self": {
                "href": "/api/storage/shelves/10318311901725526608"
              }
            }
          },
          "bay": 3,
          "_links": {
            "self": {
              "href": "/api/storage/disks/1.24.3"
            }
          }
        }
        ```
        ---
        ### 3) Rekey the data authentication key (AK) of all encrypting drives to an AK
        ###    created and maintained by the system.
        ---
        ```
        # The API:
        /api/storage/disks
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/storage/disks?name=*" -d '{"encrypt_operation" : "rekey_data_auto_id"}' -H "accept: application/hal+json" -H "Content-Type: application/hal+json"
        # The response contain the number of disks attempted.
        {
           "num_records": 32
        }
        ```
      tags:
      - storage
  /storage/disks/{name}:
    get:
      description: |
        Retrieves a specific disk.
        ### Related ONTAP commands
        * `storage disk show`
        ### Learn more
        * [`DOC /storage/disks`](#docs-storage-storage_disks)
      operationId: disk_get
      parameters:
      - description: Disk name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/disk'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/file/clone:
    post:
      description: Creates a clone of the file.
      operationId: file_clone_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/file_clone'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/file/copy:
    post:
      description: |
        Starts a file copy operation.
        ## Required properties
        * `files_to_copy` - List of files with the destination they are to be copied to.
        ## Default property values
        * `cutover_time` - _10_
        * `hold_quiescence` - _false_
        * `max_throughput` - _0_
        * `reference_cutover_time` - _10_
        ## Related ONTAP commands
        * `volume file copy start`
        ## Examples
        ### Copying two files
        The POST request is used to copy file(s).
        ```
        # The API:
        /api/storage/file/copy
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/file/copy" -H "accept: application/hal+json" -d '{"files_to_copy":[{"source":{"volume":{"name":"vol_a"},"svm":{"name":"vs0"},"path":"d1/src_f1"},"destination":{"volume":{"name":"vol_a"},"svm":{"name":"vs0"},"path":"d1/dst_f1"}}, {"source":{"volume":{"name":"vol_a"},"svm":{"name":"vs0"},"path":"d1/src_f2"},"destination":{"volume":{"name":"vol_a"},"svm":{"name":"vs0"},"path":"d1/dst_f2"}}]}'
        # The response:
        {
          "job": {
            "uuid": "b89bc5dd-94a3-11e8-a7a3-0050568edf84",
            "_links": {
               "self": {
                 "href": "/api/cluster/jobs/b89bc5dd-94a3-11e8-a7a3-0050568edf84"
               }
             }
           }
        }
        ```
      operationId: file_copy_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/file_copy'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 7012352 | File locations are inconsistent. All files must be on the same volume. |
            | 7012353 | Exceeded the file operations supported number of files. |
            | 7012354 | Unable to pair the number of source files to destination files. |
            | 7012357 | Cannot start a file operation until all cluster nodes support the file operations capability. |
            | 7012358 | The specified source path is invalid. |
            | 7012359 | The specified destination path is invalid. |
            | 7012360 | The SVMs are not in an intracluster peering relationship. |
            | 7012361 | The SVMs peering relationship does not include application \"file-copy\". |
            | 7012362 | The SVMs are not yet in a peered state yet. |
            | 7012363 | Cannot copy files. All file operations must be managed by the destination SVM's administrator. |
            | 7012365 | Copying a file between clusters is not supported. |
            | 7012367 | A reference path may only be specified if multiple source paths are specified. |
            | 7012368 | The reference path must have a matching source path. |
            | 7012371 | The reference cutover time exceeds the maximum allowable time. |
            | 7012374 | Source volume and destination volume have different home clusters. |
            | 7012376 | Operation not allowed on a volume that is part of a SnapMirror Synchronous relationship. |
            | 7012377 | Cannot start a file copy operation on the volume because an active volume conversion is in progress. |
            | 196608143 | Cannot start operation. The volume is undergoing a secure purge operation. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/flexcache/flexcaches:
    get:
      description: |
        Retrieves FlexCache in the cluster.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `origins.ip_address` - IP address of origin.
        * `origins.size` - Physical size of origin.
        * `origins.state` - State of origin.
        * `size` - Physical size of FlexCache.
        * `guarantee.type` - Space guarantee style of FlexCache.
        * `aggregates.name` or `aggregates.uuid` - Name or UUID of aggregrate of FlexCache volume.
        * `path` - Fully-qualified path of the owning SVM's namespace where the FlexCache is mounted.
        ### Related ONTAP commands
        * `volume flexcache show`
        ### Learn more
        * [`DOC /storage/flexcache/flexcaches`](#docs-storage-storage_flexcache_flexcaches)
      operationId: flexcache_collection_get
      parameters:
      - description: Filter by aggregates.name
        in: query
        name: aggregates.name
        type: string
      - description: Filter by aggregates.uuid
        in: query
        name: aggregates.uuid
        type: string
      - description: Filter by guarantee.type
        in: query
        name: guarantee.type
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by constituents_per_aggregate
        in: query
        name: constituents_per_aggregate
        type: integer
      - description: Filter by origins.svm.uuid
        in: query
        name: origins.svm.uuid
        type: string
      - description: Filter by origins.svm.name
        in: query
        name: origins.svm.name
        type: string
      - description: Filter by origins.size
        in: query
        name: origins.size
        type: integer
      - description: Filter by origins.ip_address
        in: query
        name: origins.ip_address
        type: string
      - description: Filter by origins.volume.uuid
        in: query
        name: origins.volume.uuid
        type: string
      - description: Filter by origins.volume.name
        in: query
        name: origins.volume.name
        type: string
      - description: Filter by origins.create_time
        in: query
        name: origins.create_time
        type: string
      - description: Filter by origins.state
        in: query
        name: origins.state
        type: string
      - description: Filter by origins.cluster.name
        in: query
        name: origins.cluster.name
        type: string
      - description: Filter by origins.cluster.uuid
        in: query
        name: origins.cluster.uuid
        type: string
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/flexcache_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Creates a FlexCache in the cluster.
        ### Required properties
        * `name` - Name of FlexCache volume.
        * `origins.volume.name` or `origins.volume.uuid` - Name or UUID of origin volume.
        * `origins.svm.name` - Name of origin Vserver.
        * `svm.name` or `svm.uuid` - Name or UUID of Vserver where FlexCache will be created.
        ### Recommended optional properties
        * `path` - Path to mount the FlexCache volume
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `size` - 10% of origin volume size or 1GB per constituent, whichever is greater.
        * `guarantee.type` - Same as for a non-FlexCache FlexGroup volume.
        * `constituents_per_aggregate` - 4 if aggregates.name or aggregates.uuid is used.
        ### Related ONTAP commands
        * `volume flexcache create`
        ### Learn more
        * [`DOC /storage/flexcache/flexcaches`](#docs-storage-storage_flexcache_flexcaches)
      operationId: flexcache_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/flexcache'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66846870   | Either the SVM name or origin volume name is missing |
            | 66846871   | Constituents per aggregate are specified but aggregate name is missing |
            | 66846872   | More than one origin volume is specified |
            | 66846873   | The specified SVM UUID is incorrect for the specified SVM name |
            | 66846874   | The specified aggregate UUID is incorrect for the specified aggregate name |
            | 66846875   | The specified aggregate name does not exist |
            | 66846876   | The specified SVM does not exist or is not peered |
            | 66846877   | The specified origin SVM name is of zero length  |
            | 66846878   | The specified SVM UUID is invalid |
            | 66846730   | Failed to create a FlexCache volume |
            | 66846760   | The specified SVM is not a data Vserver |
            | 66846787   | The specified aggregate is a SnapLock aggregate |
            | 66846812   | The specified aggregate is a Composite aggregate |
            | 66846812   | The specified junction path is under a FlexCache volume |
            | 66846834   | FlexCache encryption requires a cluster version of 9.6 or higher |
            | 66846835   | A volume encryption license is not found |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        FlexCache is a persistent cache of an origin volume. An origin volume can only be a FlexVol while a FlexCache is always a FlexGroup.</br>
        The following relationship configurations are supported:</br>
        &ndash; Intra-Vserver where FlexCache and the corresponding origin volume reside in the same Vserver.
        &ndash; Cross-Vserver but intra-cluster where FlexCache and the origin volume reside in the same cluster but belong to different Vservers.
        &ndash; Cross-cluster where FlexCache and the origin volume reside in different clusters.</br>
        FlexCache supports fan-out and more than one FlexCache can be created from one origin volume.
        This API retrieves and manages FlexCache configurations in the cache cluster.
        ## FlexCache APIs
        The following APIs can be used to perform operations related with FlexCache:
        &ndash; GET       /api/storage/flexcache/flexcaches
        &ndash; GET       /api/storage/flexcache/flexcaches/{uuid}
        &ndash; POST      /api/storage/flexcache/flexcaches
        &ndash; DELETE    /api/storage/flexcache/flexcaches/{uuid}
        ## Examples
        ### Creating a FlexCache
        The POST request is used to create a FlexCache.
        ```
        # The API:
        /api/storage/flexcache/flexcaches
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/flexcache/flexcaches" -H  "accept: application/json" -H  "Content-Type: application/json" -d "{ \"aggregates\": [ { \"name\": \"aggr_1\" } ], \"name\": \"fc_333\", \"origins\": [ {  \"svm\": { \"name\": \"vs_3\"  }, \"volume\": { \"name\": \"vol_o1\" } } ], \"svm\": { \"name\": \"vs_1\" } }"
        # The response:
        {
          "job": {
            "uuid": "e751dd5d-0f3c-11e9-8b2b-0050568e0b79",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/e751dd5d-0f3c-11e9-8b2b-0050568e0b79"
              }
            }
          }
        }
        ```
        ### Retrieving FlexCache attributes
        The GET request is used to retrieve FlexCache attributes. The object includes a large set of fields which can be expensive to retrieve. Most notably, the fields size, guarantee.type, aggregates, path, origins.ip_address, origins.size, and origins.state are expensive to retrieve. The recommended method to use this API is to filter and retrieve only the required fields.
        ```
        # The API:
        /api/storage/flexcache/flexcaches
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/flexcache/flexcaches?" -H  "accept: application/json"
        # The response:
          {
            "records": [
              {
                "uuid": "04d5e07b-0ebe-11e9-8180-0050568e0b79",
                "name": "fc_322",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/flexcaches/04d5e07b-0ebe-11e9-8180-0050568e0b79"
                  }
                }
              },
              {
                "uuid": "47902654-0ea4-11e9-8180-0050568e0b79",
                "name": "fc_321",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/flexcaches/47902654-0ea4-11e9-8180-0050568e0b79"
                  }
                }
              },
              {
                "uuid": "77e911ff-0ebe-11e9-8180-0050568e0b79",
                "name": "fc_323",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/flexcaches/77e911ff-0ebe-11e9-8180-0050568e0b79"
                  }
                }
              },
              {
                "uuid": "ddb42bbc-0e95-11e9-8180-0050568e0b79",
                "name": "fc_32",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/flexcaches/ddb42bbc-0e95-11e9-8180-0050568e0b79"
                  }
                }
              },
              {
                "uuid": "ec774932-0f3c-11e9-8b2b-0050568e0b79",
                "name": "fc_333",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/flexcaches/ec774932-0f3c-11e9-8b2b-0050568e0b79"
                  }
                }
              }
            ],
            "num_records": 5,
            "_links": {
              "self": {
                "href": "/api/storage/flexcache/flexcaches?"
              }
            }
          }
        ```
        ### Retrieving the attributes of a FlexCache
        The GET request is used to retrieve the attributes of a FlexCache. The object includes a large set of fields which can be expensive to retrieve. Most notably, the fields size, guarantee.type, aggregates, path, origins.ip_address, origins.size, and origins.state are expensive to retrieve. The recommended method to use this API is to filter and retrieve only the required fields.
        ```
        # The API:
        /api/storage/flexcache/flexcaches/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/flexcache/flexcaches/ec774932-0f3c-11e9-8b2b-0050568e0b79" -H  "accept: application/json"
        # The response:
          {
            "uuid": "ec774932-0f3c-11e9-8b2b-0050568e0b79",
            "name": "fc_333",
            "svm": {
              "name": "vs_1",
              "uuid": "e708fbe2-0e92-11e9-8180-0050568e0b79"
            },
            "size": 4294967296,
            "guarantee": {
                "type": "volume"
            },
            "aggregates": [
              {
                "name": "aggr_1",
                "uuid": "26f34b76-88f8-4a47-b5e0-d8e901fb1114"
              }
            ],
            "origins": [
              {
                "ip_address": "10.140.103.175",
                "size": 20971520,
                "create_time": "2019-01-03T15:19:55+05:30",
                "state": "online",
                "volume": {
                  "name": "vol_o1",
                  "uuid": "2bc957dd-2617-4afb-8d2f-66ac6070d313"
                },
                "svm": {
                  "name": "vs_3",
                  "uuid": "8aa2cd28-0e92-11e9-b391-0050568e4115"
                },
                "cluster": {
                  "name": "node2",
                  "uuid": "50733f81-0e90-11e9-b391-0050568e4115"
                }
              }
            ],
            "_links": {
              "self": {
                "href": "/api/storage/flexcache/flexcaches/ec774932-0f3c-11e9-8b2b-0050568e0b79"
              }
            }
          }
        ```
        ### Deleting a FlexCache
        The DELETE request is used to delete a FlexCache.
        ```
        # The API:
        /api/storage/flexcache/flexcaches
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/flexcache/flexcaches/ec774932-0f3c-11e9-8b2b-0050568e0b79" -H  "accept: application/json"
        # The response:
          {
            "job": {
              "uuid": "e17994f2-0f3e-11e9-8b2b-0050568e0b79",
              "_links": {
                "self": {
                  "href": "/api/cluster/jobs/e17994f2-0f3e-11e9-8b2b-0050568e0b79"
                }
              }
            }
          }
         ```
      tags:
      - storage
  /storage/flexcache/flexcaches/{uuid}:
    delete:
      description: |
        Deletes a FlexCache. If a FlexCache volume is online, it is offlined before deletion.
        ### Related ONTAP commands
        * `volume flexcache delete`
        ### Learn more
        * [`DOC /storage/flexcache/flexcaches`](#docs-storage-storage_flexcache_flexcaches)
      operationId: flexcache_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Unique identifier of the FlexCache.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 66846879   | The specified volume UUID is not a FlexCache volume |
            | 66846731   | Failed to delete the FlexCache volume |
            | 524546     | Failed to delete the FlexCache volume because the FlexCache volume is not unmounted |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves attributes of the FlexCache in the cluster.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are included by default in GET. The recommended method to use this API is to filter and retrieve only the required fields. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `origins.ip_address` - IP address of origin.
        * `origins.size` - Physical size of origin.
        * `origins.state` - State of origin.
        * `size` - Physical size of FlexCache.
        * `guarantee.type` - Space guarantee style of FlexCache.
        * `aggregates.name` or `aggregates.uuid` - Name or UUID of aggregrate of FlexCache volume.
        * `path` - Fully-qualified path of the owning SVM's namespace where the FlexCache is mounted.
        ### Related ONTAP commands
        * `volume flexcache show`
        ### Learn more
        * [`DOC /storage/flexcache/flexcaches`](#docs-storage-storage_flexcache_flexcaches)
      operationId: flexcache_get
      parameters:
      - description: Unique identifier of FlexCache.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/flexcache'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/flexcache/origins:
    get:
      description: |
        Retrieves origin of FlexCache in the cluster.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `flexcaches.ip_address` - IP address of FlexCache.
        * `flexcaches.size` - Physical size of FlexCache.
        * `flexcaches.guarantee.type` - Space guarantee style of FlexCache.
        * `flexcaches.state` - State of FlexCache.
        ### Related ONTAP commands
        * `volume flexcache origin show-caches`
        ### Learn more
        * [`DOC /storage/flexcache/origins`](#docs-storage-storage_flexcache_origins)
      operationId: flexcache_origin_collection_get
      parameters:
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by flexcaches.svm.uuid
        in: query
        name: flexcaches.svm.uuid
        type: string
      - description: Filter by flexcaches.svm.name
        in: query
        name: flexcaches.svm.name
        type: string
      - description: Filter by flexcaches.size
        in: query
        name: flexcaches.size
        type: integer
      - description: Filter by flexcaches.ip_address
        in: query
        name: flexcaches.ip_address
        type: string
      - description: Filter by flexcaches.volume.uuid
        in: query
        name: flexcaches.volume.uuid
        type: string
      - description: Filter by flexcaches.volume.name
        in: query
        name: flexcaches.volume.name
        type: string
      - description: Filter by flexcaches.create_time
        in: query
        name: flexcaches.create_time
        type: string
      - description: Filter by flexcaches.state
        in: query
        name: flexcaches.state
        type: string
      - description: Filter by flexcaches.cluster.name
        in: query
        name: flexcaches.cluster.name
        type: string
      - description: Filter by flexcaches.cluster.uuid
        in: query
        name: flexcaches.cluster.uuid
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/flexcache_origin_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        FlexCache is a persistent cache of an origin volume. An origin volume can only be a FlexVol while a FlexCache is always a FlexGroup.</br>
        The following relationship configurations are supported:
        &ndash; Intra-Vserver where FlexCache and the corresponding origin volume reside in the same Vserver.
        &ndash; Cross-Vserver but intra-cluster where FlexCache and the origin volume reside in the same cluster but belong to different Vservers.
        &ndash; Cross-cluster where FlexCache and the origin volume reside in different clusters.</br>
        FlexCache supports fan-out and more than one FlexCache can be created from one origin volume.
        This API retrieves the origin of FlexCache onfigurations in the origin cluster.
        ## FlexCache APIs
        The following APIs can be used to perform operations related to the origin of a FlexCache:
        &ndash; GET       /api/storage/flexcache/origins
        &ndash; GET       /api/storage/flexcache/origins/{uuid}
        ## Examples
        ### Retrieving origins of FlexCache attributes
        The GET request is used to retrieve the origins of FlexCache attributes.
        ```
        # The API:
        /api/storage/flexcache/origins
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/flexcache/origins?" -H  "accept: application/json"
        # The response:
          {
            "records": [
              {
                "uuid": "2bc957dd-2617-4afb-8d2f-66ac6070d313",
                "name": "vol_o1",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/origins/2bc957dd-2617-4afb-8d2f-66ac6070d313"
                  }
                }
              },
              {
                "uuid": "80fcaee4-0dc2-488b-afb8-86d28a34cda8",
                "name": "vol_1",
                "_links": {
                  "self": {
                    "href": "/api/storage/flexcache/origins/80fcaee4-0dc2-488b-afb8-86d28a34cda8"
                  }
                }
              }
            ],
            "num_records": 2,
            "_links": {
              "self": {
                "href": "/api/storage/flexcache/origins?"
              }
            }
          }
        ```
        ### Retrieving the attributes of an origin volume
        The GET request is used to retrieve the attributes of an origin volume.
        ```
        # The API:
        /api/storage/flexcache/origins/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/flexcache/origins/80fcaee4-0dc2-488b-afb8-86d28a34cda8" -H  "accept: application/json"
        # The response:
          {
            "uuid": "80fcaee4-0dc2-488b-afb8-86d28a34cda8",
            "name": "vol_1",
            "svm": {
              "name": "vs_3",
              "uuid": "8aa2cd28-0e92-11e9-b391-0050568e4115"
            },
            "flexcaches": [
              {
                "ip_address": "10.140.103.183",
                "create_time": "2019-01-02T19:27:22+05:30",
                "volume": {
                  "name": "fc_42",
                  "uuid": "4e7f9d49-0e96-11e9-aed0-0050568eddbe"
                },
                "svm": {
                  "name": "vs_1_4",
                  "uuid": "36f68322-0e93-11e9-aed0-0050568eddbe"
                },
                "cluster": {
                  "name": "node4",
                  "uuid": "c32f16b8-0e90-11e9-aed0-0050568eddbe"
                }
              },
              {
                "ip_address": "10.140.103.183",
                "create_time": "2019-01-02T21:08:34+05:30",
                "volume": {
                  "name": "fc_421",
                  "uuid": "71ee8f36-0ea4-11e9-aed0-0050568eddbe"
                },
                "svm": {
                  "name": "vs_1_4",
                  "uuid": "36f68322-0e93-11e9-aed0-0050568eddbe"
                },
                "cluster": {
                  "name": "node4",
                  "uuid": "c32f16b8-0e90-11e9-aed0-0050568eddbe"
                }
              },
              {
                "ip_address": "10.140.103.183",
                "create_time": "2019-01-03T11:14:38+05:30",
                "volume": {
                  "name": "fc_422"
                },
                "svm": {
                  "name": "vs_1_4",
                  "uuid": "36f68322-0e93-11e9-aed0-0050568eddbe"
                },
                "cluster": {
                  "name": "node4",
                  "uuid": "c32f16b8-0e90-11e9-aed0-0050568eddbe"
                }
              },
              {
                "ip_address": "10.140.103.179",
                "size": 4294967296,
                "create_time": "2019-01-02T19:24:14+05:30",
                "state": "online",
                "volume": {
                  "name": "fc_32",
                  "uuid": "ddb42bbc-0e95-11e9-8180-0050568e0b79"
                },
                "svm": {
                  "name": "vs_1",
                  "uuid": "e708fbe2-0e92-11e9-8180-0050568e0b79"
                },
                "cluster": {
                  "name": "node3",
                  "uuid": "8eb21b3b-0e90-11e9-8180-0050568e0b79"
                }
              },
              {
                "ip_address": "10.140.103.179",
                "size": 4294967296,
                "create_time": "2019-01-02T21:07:23+05:30",
                "state": "online",
                "volume": {
                  "name": "fc_321",
                  "uuid": "47902654-0ea4-11e9-8180-0050568e0b79"
                },
                "svm": {
                  "name": "vs_1",
                  "uuid": "e708fbe2-0e92-11e9-8180-0050568e0b79"
                },
                "cluster": {
                  "name": "node3",
                  "uuid": "8eb21b3b-0e90-11e9-8180-0050568e0b79"
                }
              },
              {
                "ip_address": "10.140.103.179",
                "size": 4294967296,
                "create_time": "2019-01-03T00:11:38+05:30",
                "state": "online",
                "volume": {
                  "name": "fc_322",
                  "uuid": "04d5e07b-0ebe-11e9-8180-0050568e0b79"
                },
                "svm": {
                  "name": "vs_1",
                  "uuid": "e708fbe2-0e92-11e9-8180-0050568e0b79"
                },
                "cluster": {
                  "name": "node3",
                  "uuid": "8eb21b3b-0e90-11e9-8180-0050568e0b79"
                }
              },
              {
                "ip_address": "10.140.103.179",
                "size": 4294967296,
                "create_time": "2019-01-03T00:14:52+05:30",
                "state": "online",
                "volume": {
                  "name": "fc_323",
                  "uuid": "77e911ff-0ebe-11e9-8180-0050568e0b79"
                },
                "svm": {
                  "name": "vs_1",
                  "uuid": "e708fbe2-0e92-11e9-8180-0050568e0b79"
                },
                "cluster": {
                  "name": "node3",
                  "uuid": "8eb21b3b-0e90-11e9-8180-0050568e0b79"
                }
              }
            ],
            "_links": {
              "self": {
                "href": "/api/storage/flexcache/origins/80fcaee4-0dc2-488b-afb8-86d28a34cda8"
              }
            }
          }
        ```
      tags:
      - storage
  /storage/flexcache/origins/{uuid}:
    get:
      description: |
        Retrieves attributes of the origin of a FlexCache in the cluster.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are included by default in GET results. The recommended method to use this API is to filter and retrieve only the required fields. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `flexcaches.ip_address` - IP address of FlexCache.
        * `flexcaches.size` - Physical size of FlexCache.
        * `flexcaches.guarantee.type` - Space guarantee style of FlexCache.
        * `flexcaches.state` - State of FlexCache.
        ### Related ONTAP commands
        * `volume flexcache origin show-caches`
        ### Learn more
        * [`DOC /storage/flexcache/origins`](#docs-storage-storage_flexcache_origins)
      operationId: flexcache_origin_get
      parameters:
      - description: Unique identifier of origin of FlexCache.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/flexcache_origin'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/luns:
    get:
      description: |
        Retrieves LUNs.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `auto_delete`
        * `lun_maps.*`
        * `movement.*`
        * `status.mapped`
        * `statistics.*`
        * `metrics.*`
        ### Related ONTAP commands
        * `lun mapping show`
        * `lun move show`
        * `lun show`
        * `volume file clone show-autodelete`
        ### Learn more
        * [`DOC /storage/luns`](#docs-SAN-storage_luns)
      operationId: lun_collection_get
      parameters:
      - description: Filter by qos_policy.uuid
        in: query
        name: qos_policy.uuid
        type: string
      - description: Filter by qos_policy.name
        in: query
        name: qos_policy.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by movement.paths.destination
        in: query
        name: movement.paths.destination
        type: string
      - description: Filter by movement.paths.source
        in: query
        name: movement.paths.source
        type: string
      - description: Filter by movement.progress.failure.code
        in: query
        name: movement.progress.failure.code
        type: string
      - description: Filter by movement.progress.failure.message
        in: query
        name: movement.progress.failure.message
        type: string
      - description: Filter by movement.progress.volume_snapshot_blocked
        in: query
        name: movement.progress.volume_snapshot_blocked
        type: boolean
      - description: Filter by movement.progress.percent_complete
        in: query
        name: movement.progress.percent_complete
        type: integer
      - description: Filter by movement.progress.elapsed
        in: query
        name: movement.progress.elapsed
        type: integer
      - description: Filter by movement.progress.state
        in: query
        name: movement.progress.state
        type: string
      - description: Filter by movement.max_throughput
        in: query
        name: movement.max_throughput
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by auto_delete
        in: query
        name: auto_delete
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by space.guarantee.requested
        in: query
        name: space.guarantee.requested
        type: boolean
      - description: Filter by space.guarantee.reserved
        in: query
        name: space.guarantee.reserved
        type: boolean
      - description: Filter by space.size
        in: query
        name: space.size
        type: integer
      - description: Filter by space.used
        in: query
        name: space.used
        type: integer
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by status.state
        in: query
        name: status.state
        type: string
      - description: Filter by status.container_state
        in: query
        name: status.container_state
        type: string
      - description: Filter by status.mapped
        in: query
        name: status.mapped
        type: boolean
      - description: Filter by status.read_only
        in: query
        name: status.read_only
        type: boolean
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by location.logical_unit
        in: query
        name: location.logical_unit
        type: string
      - description: Filter by location.volume.uuid
        in: query
        name: location.volume.uuid
        type: string
      - description: Filter by location.volume.name
        in: query
        name: location.volume.name
        type: string
      - description: Filter by location.qtree.name
        in: query
        name: location.qtree.name
        type: string
      - description: Filter by location.qtree.id
        in: query
        name: location.qtree.id
        type: integer
      - description: Filter by lun_maps.logical_unit_number
        in: query
        name: lun_maps.logical_unit_number
        type: integer
      - description: Filter by lun_maps.igroup.name
        in: query
        name: lun_maps.igroup.name
        type: string
      - description: Filter by lun_maps.igroup.uuid
        in: query
        name: lun_maps.igroup.uuid
        type: string
      - description: Filter by class
        in: query
        name: class
        type: string
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by metric.throughput.other
        in: query
        name: metric.throughput.other
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.throughput_raw.other
        in: query
        name: statistics.throughput_raw.other
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    post:
      description: |
        Creates a LUN.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the LUN.
        * `name`, `location.volume.name` or `location.volume.uuid` - Existing volume in which to create the LUN.
        * `name` or `location.logical_unit` - Base name of the LUN.
        * `os_type` - Operating system from which the LUN will be accessed. Required when creating a non-clone LUN and disallowed when creating a clone of an existing LUN. A clone's `os_type` is taken from the source LUN.
        * `space.size` - Size of the LUN. Required when creating a non-clone LUN and disallowed when creating a clone of an existing LUN. A clone's size is taken from the source LUN.
        ### Recommended optional properties
        * `qos_policy.name` or `qos_policy.uuid` - Existing traditional or adaptive QoS policy to be applied to the LUN. All LUNs should be managed by a QoS policy at the volume or LUN level.
        ### Default property values
        If not specified in POST, the follow default property values are assigned.
        * `auto_delete` - _false_
        ### Related ONTAP commands
        * `lun create`
        * `volume file clone autodelete`
        * `volume file clone create`
        ### Learn more
        * [`DOC /storage/luns`](#docs-SAN-storage_luns)
      operationId: lun_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new LUN.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/lun'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/lun_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917927 | The specified volume was not found. |
            | 918236 | The specified `location.volume.uuid` and `location.volume.name` do not refer to the same volume. |
            | 2621462 | The specified SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5242927 | The specified qtree was not found. |
            | 5242950 | The specified `location.qtree.id` and `location.qtree.name` do not refer to the same qtree. |
            | 5374121 | A LUN name can only contain characters A-Z, a-z, 0-9, "-", ".", "_", "{" and "}". |
            | 5374123 | A negative size was provided for the LUN. |
            | 5374124 | The specified size is too small for the LUN. |
            | 5374125 | The specified size is too large for the LUN. |
            | 5374129 | LUNs cannot be created on a load sharing mirror volume. |
            | 5374130 | An invalid size value was provided. |
            | 5374237 | LUNs cannot be created on an SVM root volume. |
            | 5374238 | LUNs cannot be created in Snapshot copies. |
            | 5374241 | A size value with invalid units was provided. |
            | 5374242 | A LUN or NVMe namespace already exists at the specified path. |
            | 5374352 | An invalid name was provided for the LUN. |
            | 5374707 | Creating a LUN in the specific volume is not allowed because the volume is reserved for an application. |
            | 5374858 | The volume specified by `name` is not the same as that specified by `location.volume`. |
            | 5374859 | No volume was specified for the LUN. |
            | 5374860 | The qtree specified by `name` is not the same as that specified by `location.qtree`. |
            | 5374861 | The LUN base name specified by `name` is not the same as that specified by `location.logical_unit`. |
            | 5374862 | No LUN path base name was provided for the LUN. |
            | 5374863 | An error occurred after successfully creating the LUN. Some properties were not set. |
            | 5374874 | The specified `clone.source.uuid` and `clone.source.name` do not refer to the same LUN. |
            | 5374875 | The specified `clone.source` was not found. |
            | 5374876 | The specified `clone.source` was not found. |
            | 5374883 | The property cannot be specified when creating a LUN clone. The `target` property of the error object identifies the property. |
            | 5374884 | The property is required except when creating a LUN clone. The `target` property of the error object identifies the property. |
            | 5374886 | An error occurred after successfully creating the LUN preventing the retrieval of its properties. |
            | 5374899 | The `clone.source.uuid` property is not supported when specifying a source LUN from a Snapshot copy. |
            | 13565952 | The LUN clone request failed. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    x-ntap-long-description:
      description: |
        ## Overview
        A LUN is the logical representation of storage in a storage area network (SAN).<br/>
        The LUN REST API allows you to create, update, delete, and discover LUNs.<br/>
        In ONTAP, a LUN is located within a volume. Optionally, it can be located within a qtree in a volume.<br/>
        A LUN can be created to a specified size using thin or thick provisioning. A LUN can then be renamed, resized, cloned, and moved to a different volume. LUNs support the assignment of a quality of service (QoS) policy for performance management or a QoS policy can be assigned to the volume containing the LUN. See the LUN object model to learn more about each of the properties supported by the LUN REST API.<br/>
        A LUN must be mapped to an initiator group to grant access to the initiator group's initiators (client hosts). Initiators can then access the LUN and perform I/O over a Fibre Channel (FC) fabric using the FC Protocol or a TCP/IP network using iSCSI.
        ## Performance monitoring
        Performance of a LUN can be monitored by observing the `metric.*` and `statistics.*` properties. These properties show the performance of a LUN in terms of IOPS, latency and throughput. The `metric.*` properties denote an average whereas `statistics.*` properies denote a real-time monotonically increasing value aggregated across all nodes.
        ## Examples
        ### Creating a LUN
        This example creates a 300 gigabyte, thin-provisioned LUN in SVM _svm1_, volume _vol1_, configured for use by _linux_ initiators. The `return_records` query parameter is used to retrieve properties of the newly created LUN in the POST response.
        <br/>
        ```
        # The API:
        POST /api/storage/luns
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/luns?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "os_type": "linux", "space": { "size": "300G" }, "name" : "/vol/vol1/lun1" }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "5a24ae5b-28af-47fb-b129-5adf6cfba0a6",
              "svm": {
                "uuid": "6bf967fd-2a1c-11e9-b682-005056bbc17d",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6bf967fd-2a1c-11e9-b682-005056bbc17d"
                  }
                }
              },
              "name": "/vol/vol1/lun1",
              "location": {
                "logical_unit": "lun1",
                "volume": {
                  "uuid": "71cd0dba-2a1c-11e9-b682-005056bbc17d",
                  "name": "vol1",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/71cd0dba-2a1c-11e9-b682-005056bbc17d"
                    }
                  }
                }
              },
              "class": "regular",
              "enabled": true,
              "os_type": "linux",
              "serial_number": "wf0Iq+N4uck3",
              "space": {
                "size": 322163441664,
                "used": 0,
                "guarantee": {
                  "requested": false,
                  "reserved": false
                }
              },
              "status": {
                "container_state": "online",
                "read_only": false,
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Updating a LUN
        This example sets the `comment` property of a LUN.
        <br/>
        ```
        # The API:
        PATCH /api/storage/luns/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6' -H 'accept: application/hal+json' -d '{ "comment": "Data for the finance department." }'
        ```
        ---
        ### Retrieving LUNs
        This example retrieves summary information for all online LUNs in SVM _svm1_. The `svm.name` and `status.state` query parameters are used to find the desired LUNs.
        <br/>
        ```
        # The API:
        GET /api/storage/luns
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/luns?svm.name=svm1&status.state=online' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "uuid": "5a24ae5b-28af-47fb-b129-5adf6cfba0a6",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol1/lun1",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6"
                }
              }
            },
            {
              "uuid": "c903a978-9bac-4ce9-8237-4a3ba8b13f08",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol1/lun2",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/luns/c903a978-9bac-4ce9-8237-4a3ba8b13f08"
                }
              }
            },
            {
              "uuid": "7faf0a9e-0a47-4876-8318-3638d5da16bf",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol2/lun3",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/luns/7faf0a9e-0a47-4876-8318-3638d5da16bf"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/storage/luns?svm.name=svm1&status.state=online"
            }
          }
        }
        ```
        ---
        ### Retrieving details for a specific LUN
        In this example, the `fields` query parameter is used to request all fields, including advanced fields, that would not otherwise be returned by default for the LUN.
        <br/>
        ```
        # The API:
        GET /api/storage/luns/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6?fields=**' -H 'accept: application/hal+json'
        # The response:
        {
          "uuid": "5a24ae5b-28af-47fb-b129-5adf6cfba0a6",
          "svm": {
            "uuid": "6bf967fd-2a1c-11e9-b682-005056bbc17d",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/6bf967fd-2a1c-11e9-b682-005056bbc17d"
              }
            }
          },
          "name": "/vol/vol1/lun1",
          "location": {
            "logical_unit": "lun1",
            "volume": {
              "uuid": "71cd0dba-2a1c-11e9-b682-005056bbc17d",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/71cd0dba-2a1c-11e9-b682-005056bbc17d"
                }
              }
            }
          },
          "auto_delete": false,
          "class": "regular",
          "comment": "Data for the finance department.",
          "enabled": true,
          "lun_maps": [
            {
              "logical_unit_number": 0,
              "igroup": {
                "uuid": "2b9d57e1-2a66-11e9-b682-005056bbc17d",
                "name": "ig1",
                "_links": {
                  "self": {
                    "href": "/api/protocols/san/igroups/2b9d57e1-2a66-11e9-b682-005056bbc17d"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/protocols/san/lun-maps/5a24ae5b-28af-47fb-b129-5adf6cfba0a6/2b9d57e1-2a66-11e9-b682-005056bbc17d"
                }
              }
            }
          ],
          "os_type": "linux",
          "serial_number": "wf0Iq+N4uck3",
          "space": {
            "size": 322163441664,
            "used": 0,
            "guarantee": {
              "requested": false,
              "reserved": false
            }
          },
         "metric": {
            "timestamp": "2019-04-09T05:50:15Z",
            "duration": "PT15S",
            "status": "ok",
            "latency": {
              "other": 0,
              "total": 0,
              "read": 0,
              "write": 0
            },
            "iops": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "throughput": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            }
          },
          "statistics": {
            "timestamp": "2019-04-09T05:50:42Z",
            "status": "ok",
            "latency_raw": {
              "other": 38298,
              "total": 38298,
              "read": 0,
              "write": 0
            },
            "iops_raw": {
              "read": 0,
              "write": 0,
              "other": 3,
              "total": 3
            },
            "throughput_raw": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            }
          },
          "status": {
            "container_state": "online",
            "mapped": true,
            "read_only": false,
            "state": "online"
          },
          "_links": {
            "self": {
              "href": "/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6?fields=**"
            }
          }
        }
        ```
        ---
        ## Cloning LUNs
        A clone of a LUN is an independent "copy" of the LUN that shares unchanged data blocks with the original. As blocks of the source and clone are modified, unique blocks are written for each. LUN clones can be created quickly and consume very little space initially. They can be created for the purpose of back-up, or to replicate data for multiple consumers.<br/>
        Space reservations can be set for the LUN clone independent of the source LUN by setting the `space.guarantee.requested` property in a POST or PATCH request.<br/>
        A LUN clone can also be set to auto-delete by setting the `auto_delete` property. If the LUN's volume is configured for automatic deletion, LUNs that have auto-delete enabled are deleted when a volume is nearly full to reclaim a target amount of free space in the volume.
        ## Examples
        ### Creating a new LUN clone
        You create a new LUN clone as you create any LUN - a POST request to [`/storage/luns`](#/SAN/lun_create). Set `clone.source.uuid` or `clone.source.name` to identify the source LUN from which the clone is created. The LUN clone and its source must reside in the same volume.
        <br/>
        The source LUN can reside in a Snapshot copy, in which case the `clone.source.name` field must be used to identify it. Add `/.snapshot/<snapshot_name>` to the path after the volume name to identify the Snapshot copy. For example `/vol/vol1/.snapshot/snap1/lun1`.
        <br/>
        By default, new LUN clones do not inherit the QoS policy of the source LUN; a QoS policy should be set for the clone by setting the `qos_policy` property.
        <br/>
        ```
        # The API:
        POST /api/storage/luns
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/luns' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "name": "/vol/vol1/lun2clone1", "clone": { "source": { "name": "/vol/vol1/lun2" } }, "qos_policy": { "name": "qos1" } }'
        ```
        ### Over-writing an existing LUN's data as a clone of another
        You can overwrite an existing LUN as a clone of another, using a PATCH request to [`/storage/luns/{uuid}`](#/SAN/lun_modify). Set the `clone.source.uuid` or `clone.source.name` property to identify the source LUN from which the clone data is taken. The LUN clone and its source must reside in the same volume.<br/>
        When used in a PATCH request, the patched LUN's data is overwritten as a clone of the source. The following properties are preserved from the patched LUN unless otherwise specified as part of the PATCH: `class`, `auto_delete`, `lun_maps`, `serial_number`, `status.state`, and `uuid`.<br/>
        Persistent reservations for the updated LUN are also preserved.
        <br/>
        ```
        # The API:
        PATCH /api/storage/luns/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/luns/5a24ae5b-28af-47fb-b129-5adf6cfba0a6' -H 'accept: application/hal+json' -d '{ "clone": { "source": { "name": "/vol/vol1/lun2" } } }'
        ```
        ---
        ## Moving LUNs between volumes
        You move a LUN between volumes by using a PATCH request to [`/storage/luns/{uuid}`](#/SAN/lun_modify). Set the volume portion of the fully qualified LUN path `name` property, `path.volume.uuid`, or `path.volume.name` property to a different volume than the LUN's current volume. Moving a LUN between volumes is an asynchronous activity. A successful request returns a response of 200 synchronously, which indicates that the movement has been successfully queued. The LUN object can then be further polled with a GET request to [`/storage/luns/{uuid}`](#lun_get) to monitor the status of the movement.<br/>
        The `movement` sub-object of the LUN object is populated while a LUN movement is in progress and for two minutes following completion of a movement.
        ## Examples
        ### Starting a LUN movement
        ```
        # The API:
        PATCH /api/storage/luns/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/luns/7faf0a9e-0a47-4876-8318-3638d5da16bf' -H 'accept: application/hal+json' -d '{ "name": "/vol/vol1/lun3" }'
        ```
        ### Checking on the status of the LUN movement
        ```
        # The API:
        GET /api/storage/luns/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/luns/7faf0a9e-0a47-4876-8318-3638d5da16bf?fields=movement' -H 'accept: application/hal+json'
        # The response:
        {
          "uuid": "7faf0a9e-0a47-4876-8318-3638d5da16bf",
          "name": "/vol/vol1/lun3",
          "movement": {
            "paths": {
              "destination": "/vol/vol1/lun3",
              "source": "/vol/vol2/lun3"
            },
            "progress": {
              "elapsed": 1,
              "percent_complete": 0,
              "state": "preparing",
              "volume_snapshot_blocked": false
            }
          },
          "_links": {
            "self": {
              "href": "/api/storage/luns/7faf0a9e-0a47-4876-8318-3638d5da16bf"
            }
          }
        }
        ```
        ---
        ### Deleting a LUN
        ```
        # The API:
        DELETE /api/storage/luns/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/storage/luns/c903a978-9bac-4ce9-8237-4a3ba8b13f08' -H 'accept: application/hal+json'
        ```
        ---
      tags:
      - SAN
  /storage/luns/{uuid}:
    delete:
      description: |
        Deletes a LUN.
        ### Related ONTAP commands
        * `lun delete`
        ### Learn more
        * [`DOC /storage/luns`](#docs-SAN-storage_luns)
      operationId: lun_delete
      parameters:
      - description: |
          The unique identifier of the LUN.
        in: path
        name: uuid
        required: true
        type: string
      - default: false
        description: |
          Allows deletion of a mapped LUN.
          A mapped LUN might be in use. Deleting a mapped LUN also deletes the LUN map and makes the data no longer available. This might cause a disruption in the availability of data.
          **This parameter should be used with caution.**
        in: query
        name: allow_delete_while_mapped
        required: false
        type: boolean
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1254197 | The LUN is mapped and cannot be deleted without specifying the `allow_delete_while_mapped` query parameter. |
            | 5374705 | Deleting the LUN is not allowed because it is part of an application. |
            | 5374865 | The LUN's aggregate is offline. The aggregate must be online to modify or remove the LUN. |
            | 5374866 | The LUN's volume is offline. The volume must be online to modify or remove the LUN. |
            | 5374875 | The specified LUN was not found. |
            | 5374876 | The specified LUN was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    get:
      description: |
        Retrieves a LUN.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `auto_delete`
        * `lun_maps.*`
        * `movement.*`
        * `status.mapped`
        * `statistics.*`
        * `metrics.*`
        ### Related ONTAP commands
        * `lun mapping show`
        * `lun move show`
        * `lun show`
        * `volume file clone show-autodelete`
        ### Learn more
        * [`DOC /storage/luns`](#docs-SAN-storage_luns)
      operationId: lun_get
      parameters:
      - description: |
          The unique identifier of the LUN to retrieve.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/lun'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5374875 | The specified LUN was not found. |
            | 5374876 | The specified LUN was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
    patch:
      description: |
        Updates the properties of a LUN. A PATCH request can also be be used to overwrite the contents of a LUN as a clone of another, to begin movement of a LUN between volumes, and to pause and resume the movement of a LUN between volumes.
        ### Related ONTAP commands
        * `lun modify`
        * `lun move modify`
        * `lun move pause`
        * `lun move resume`
        * `lun move start`
        * `lun resize`
        * `volume file clone autodelete`
        ### Learn more
        * [`DOC /storage/luns`](#docs-SAN-storage_luns)
      operationId: lun_modify
      parameters:
      - description: |
          The unique identifier of the LUN to update.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the LUN.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/lun'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917927 | The specified volume was not found. |
            | 918236 | The specified `location.volume.uuid` and `location.volume.name` do not refer to the same volume. |
            | 5242927 | The specified qtree was not found. |
            | 5242950 | The specified `location.qtree.id` and `location.qtree.name` do not refer to the same qtree. |
            | 5374124 | The specified LUN size is too small. |
            | 5374125 | The specified LUN size is too large. |
            | 5374130 | An invalid size value was provided. |
            | 5374241 | A size value with invalid units was provided. |
            | 5374480 | Modifying the LUN is not allowed because it is in a foreign LUN import relationship. |
            | 5374858 | The volume specified by `name` is not the same as that specified by `location.volume`. |
            | 5374860 | The qtree specified by `name` is not the same as that specified by `location.qtree`. |
            | 5374861 | The LUN base name specified by `name` is not the same as that specified by `location.logical_unit`. |
            | 5374864 | An error occurred after successfully overwriting data for the LUN as a clone. Some properties were not modified. |
            | 5374865 | The LUN's aggregate is offline. The aggregate must be online to modify or remove the LUN. |
            | 5374866 | The LUN's volume is offline. The volume must be online to modify or remove the LUN. |
            | 5374874 | The specified `clone.source.uuid` and `clone.source.name` do not refer to the same LUN. |
            | 5374875 | The specified LUN was not found. This can apply to `clone.source` or the target LUN. The `target` property of the error object identifies the property. |
            | 5374876 | The specified LUN was not found. This can apply to `clone.source` or the target LUN. The `target` property of the error object identifies the property. |
            | 5374885 | An error occurred after successfully modifying some of the properties of the LUN. Some properties were not modified. |
            | 5374889 | An invalid value was specified for `movement.progress.state`. Active LUN movement operations can be PATCHed to only _paused_ or _replicating_. |
            | 5374892 | An attempt was made to reduce the size of a LUN. |
            | 13565952 | The LUN clone request failed. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /storage/luns/{uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for a LUN.
      operationId: lun_collection_performance_metrics_get
      parameters:
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the LUN.
        in: path
        name: uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/performance_lun_metric_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SAN
  /storage/namespaces:
    get:
      description: |
        Retrieves NVMe namespaces.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `auto_delete`
        * `subsystem_map.*`
        * `status.mapped`
        ### Related ONTAP commands
        * `vserver nvme namespace show`
        * `vserver nvme subsystem map show`
        ### Learn more
        * [`DOC /storage/namespaces`](#docs-NVMe-storage_namespaces) to learn more and examples.
      operationId: nvme_namespace_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by subsystem_map.subsystem.uuid
        in: query
        name: subsystem_map.subsystem.uuid
        type: string
      - description: Filter by subsystem_map.subsystem.name
        in: query
        name: subsystem_map.subsystem.name
        type: string
      - description: Filter by subsystem_map.nsid
        in: query
        name: subsystem_map.nsid
        type: string
      - description: Filter by subsystem_map.anagrpid
        in: query
        name: subsystem_map.anagrpid
        type: string
      - description: Filter by space.block_size
        in: query
        name: space.block_size
        type: integer
      - description: Filter by space.used
        in: query
        name: space.used
        type: integer
      - description: Filter by space.guarantee.requested
        in: query
        name: space.guarantee.requested
        type: boolean
      - description: Filter by space.guarantee.reserved
        in: query
        name: space.guarantee.reserved
        type: boolean
      - description: Filter by space.size
        in: query
        name: space.size
        type: integer
      - description: Filter by status.mapped
        in: query
        name: status.mapped
        type: boolean
      - description: Filter by status.state
        in: query
        name: status.state
        type: string
      - description: Filter by status.container_state
        in: query
        name: status.container_state
        type: string
      - description: Filter by status.read_only
        in: query
        name: status.read_only
        type: boolean
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by os_type
        in: query
        name: os_type
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by location.namespace
        in: query
        name: location.namespace
        type: string
      - description: Filter by location.volume.uuid
        in: query
        name: location.volume.uuid
        type: string
      - description: Filter by location.volume.name
        in: query
        name: location.volume.name
        type: string
      - description: Filter by location.qtree.name
        in: query
        name: location.qtree.name
        type: string
      - description: Filter by location.qtree.id
        in: query
        name: location.qtree.id
        type: integer
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by auto_delete
        in: query
        name: auto_delete
        type: boolean
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_namespace_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    post:
      description: |
        Creates an NVMe namespace.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the NVMe namespace.
        * `name`, `location.volume.name` or `location.volume.uuid` - Existing volume in which to create the NVMe namespace.
        * `name` or `location.namespace` - Base name for the NVMe namespace.
        * `os_type` - Operating system from which the NVMe namespace will be accessed. (Not used for clones, which are created based on the `os_type` of the source NVMe namespace.)
        * `space.size` - Size for the NVMe namespace. (Not used for clones, which are created based on the size of the source NVMe namespace.)
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `auto_delete` - _false_
        * `space.block_size` - _4096_
        ### Related ONTAP commands
        * `volume file clone autodelete`
        * `volume file clone create`
        * `vserver nvme namespace create`
        ### Learn more
        * [`DOC /storage/namespaces`](#docs-NVMe-storage_namespaces)
      operationId: nvme_namespace_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: |
          The property values for the new NVMe namespace.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_namespace'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/nvme_namespace_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917927 | The specified volume was not found. |
            | 918236 | The specified `location.volume.uuid` and `location.volume.name` do not refer to the same volume. |
            | 2621462 | The supplied SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5242927 | The specified qtree was not found. |
            | 5242950 | The specified `location.qtree.id` and `location.qtree.name` do not refer to the same qtree. |
            | 5374352 | An invalid name was provided for the NVMe namespace. |
            | 5374858 | The volume specified by `name` is not the same as that specified by `location.volume`. |
            | 5374860 | The qtree specified by `name` is not the same as that specified by `location.qtree`. |
            | 5374861 | The NVME namespace base name specified by `name` is not the same as that specified by `location.name`. |
            | 5374862 | No NVMe namespace path base name was provided for the namespace. |
            | 13565952 | The NVMe namespace clone request failed. |
            | 72089720 | NVMe namespaces cannot be created in Snapshot copies. |
            | 72089721 | The volume specified is in a load sharing mirror relationship. Namespaces are not supported in load sharing mirrors. |
            | 72089722 | A negative size was provided for the NVMe namespace. |
            | 72089723 | The specified size is too small for the NVMe namespace. |
            | 72089724 | The specified size is too large for the NVMe namespace. |
            | 72089725 | A LUN or NVMe namespace already exists at the specified path. |
            | 72089727 | NVMe namespaces cannot be created on an SVM root volume. |
            | 72089728 | NVMe namespaces cannot be created on a FlexGroup volume. |
            | 72089732 | An NVMe namespace name can only contain characters A-Z, a-z, 0-9, "-", ".", "_", "{" and "}". |
            | 72090005 | The specified `clone.source.uuid` and `clone.source.name` do not refer to the same NVMe namespace. |
            | 72090006 | The specified `clone.source` was not found. |
            | 72090007 | The specified `clone.source` was not found. |
            | 72090009 | An error occurred after successfully creating the NVMe namespace. Some properties were not set. |
            | 72090012 | The property cannot be specified when creating an NVMe namespace clone. The `target` property of the error object identifies the property. |
            | 72090013 | The property is required except when creating an NVMe namespace clone. The `target` property of the error object identifies the property. |
            | 72090014 | No volume was specified for the NVMe namespace. |
            | 72090015 | An error occurred after successfully creating the NVMe namespace preventing the retrieval of its properties. |
            | 72090033 | The `clone.source.uuid` property is not supported when specifying a source NVMe namespace from a Snapshot copy. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    x-ntap-long-description:
      description: |
        ## Overview
        An NVMe namespace is a collection of addressable logical blocks presented to hosts connected to the storage virtual machine using the NVMe over Fabrics protocol.<br/>
        The NVMe namespace REST API allows you to create, update, delete and discover NVMe namespaces.<br/>
        In ONTAP, an NVMe namespace is located within a volume. Optionally, it can be located within a qtree in a volume.<br/>
        An NVMe namespace is created to a specified size using thin or thick provisioning as determined by the volume on which it is created. NVMe namespaces support being cloned. An NVMe namespace cannot be renamed, resized, or moved to a different volume. NVMe namespaces do not support the assignment of a QoS policy for performance management, but a QoS policy can be assigned to the volume containing the namespace. See the NVMe namespace object model to learn more about each of the properties supported by the NVMe namespace REST API.<br/>
        An NVMe namespace must be mapped to an NVMe subsystem to grant access to the subsystem's hosts. Hosts can then access the NVMe namespace and perform I/O using the NVMe over Fabrics protocol.
        ## Examples
        ### Creating an NVMe namespace
        This example creates a 300 gigabyte NVMe namespace, with 4096-byte blocks, in SVM _svm1_, volume _vol1_, configured for use by _linux_ hosts. The `return_records` query parameter is used to retrieve properties of the newly created NVMe namespace in the POST response.
        <br/>
        ```
        # The API:
        POST /api/storage/namespaces
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/namespaces?return_records=true' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "os_type": "linux", "space": { "block_size": "4096", "size": "300G" }, "name" : "/vol/vol1/namespace1" }'
        # The response:
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "dccdc3e6-cf4e-498f-bec6-f7897f945669",
              "svm": {
                "uuid": "6bf967fd-2a1c-11e9-b682-005056bbc17d",
                "name": "svm1",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/6bf967fd-2a1c-11e9-b682-005056bbc17d"
                  }
                }
              },
              "name": "/vol/vol1/namespace1",
              "location": {
                "namespace": "namespace1",
                "volume": {
                  "uuid": "71cd0dba-2a1c-11e9-b682-005056bbc17d",
                  "name": "vol1",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/71cd0dba-2a1c-11e9-b682-005056bbc17d"
                    }
                  }
                }
              },
              "enabled": true,
              "os_type": "linux",
              "space": {
                "block_size": 4096,
                "size": 322122547200,
                "used": 0,
                "guarantee": {
                  "requested": false,
                  "reserved": false
                }
              },
              "status": {
                "container_state": "online",
                "read_only": false,
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669"
                }
              }
            }
          ]
        }
        ```
        ---
        ### Updating an NVMe namespace
        This example sets the `comment` property of an NVMe namespace.
        <br/>
        ```
        # The API:
        PATCH /api/storage/namespaces/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669' -H 'accept: application/hal+json' -d '{ "comment": "Data for the research department." }'
        ```
        ---
        ### Retrieving NVMe namespaces
        This example retrieves summary information for all online NVMe namespaces in SVM _svm1_. The `svm.name` and `status.state` query parameters are to find the desired NVMe namespaces.
        <br/>
        ```
        # The API:
        GET /api/storage/namespaces
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/namespaces?svm.name=svm1&status.state=online' -H 'accept: application/hal+json'
        # The response:
        {
          "records": [
            {
              "uuid": "5c254d22-96a6-42ac-aad8-0cd9ebd126b6",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol1/namespace2",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/namespaces/5c254d22-96a6-42ac-aad8-0cd9ebd126b6"
                }
              }
            },
            {
              "uuid": "dccdc3e6-cf4e-498f-bec6-f7897f945669",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol1/namespace1",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669"
                }
              }
            },
            {
              "uuid": "be732687-20cf-47d2-a0e2-2a989d15661d",
              "svm": {
                "name": "svm1"
              },
              "name": "/vol/vol2/namespace3",
              "status": {
                "state": "online"
              },
              "_links": {
                "self": {
                  "href": "/api/storage/namespaces/be732687-20cf-47d2-a0e2-2a989d15661d"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/storage/namespaces?svm.name=svm1&status.state=online"
            }
          }
        }
        ```
        ---
        ### Retrieving details for a specific NVMe namespace
        In this example, the `fields` query parameter is used to request all fields, including advanced fields, that would not otherwise be returned by default for the NVMe namespace.
        <br/>
        ```
        # The API:
        GET /api/storage/namespaces/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669?fields=**' -H 'accept: application/hal+json'
        # The response:
        {
          "uuid": "dccdc3e6-cf4e-498f-bec6-f7897f945669",
          "svm": {
            "uuid": "6bf967fd-2a1c-11e9-b682-005056bbc17d",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/6bf967fd-2a1c-11e9-b682-005056bbc17d"
              }
            }
          },
          "name": "/vol/vol1/namespace1",
          "location": {
            "namespace": "namespace1",
            "volume": {
              "uuid": "71cd0dba-2a1c-11e9-b682-005056bbc17d",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/71cd0dba-2a1c-11e9-b682-005056bbc17d"
                }
              }
            }
          },
          "auto_delete": false,
          "enabled": true,
          "comment": "Data for the research department.",
          "os_type": "linux",
          "space": {
            "block_size": 4096,
            "size": 322122547200,
            "used": 0,
            "guarantee": {
              "requested": false,
              "reserved": false
            }
          },
          "status": {
            "container_state": "online",
            "mapped": true,
            "read_only": false,
            "state": "online"
          },
          "subsystem_map": {
            "nsid": "00000001h",
            "anagrpid": "00000001h",
            "subsystem": {
              "uuid": "01f17d05-2be9-11e9-bed2-005056bbc17d",
              "name": "subsystem1",
              "_links": {
                "self": {
                  "href": "/api/protocols/nvme/subsystems/01f17d05-2be9-11e9-bed2-005056bbc17d"
                }
              }
            },
            "_links": {
              "self": {
                "href": "/api/protocols/nvme/subsystem-maps/dccdc3e6-cf4e-498f-bec6-f7897f945669/01f17d05-2be9-11e9-bed2-005056bbc17d"
              }
            }
          },
          "_links": {
            "self": {
              "href": "/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669?fields=**"
            }
          }
        }
        ```
        ---
        ## Cloning NVMe namespaces
        A clone of an NVMe namespace is an independent "copy" of the namespace that shares unchanged data blocks with the original. As blocks of the source and clone are modified, unique blocks are written for each. NVMe namespace clones can be created quickly and consume very little space initially. They can be created for the purpose of back-up, or to replicate data for multiple consumers.<br/>
        An NVMe namespace clone can also be set to auto-delete by setting the `auto_delete` property. If the namespace's volume is configured for automatic deletion, NVMe namespaces that have auto-delete enabled are deleted when a volume is nearly full to reclaim a target amount of free space in the volume.
        ### Creating a new NVMe namespace clone
        You create an NVMe namespace clone as you create any NVMe namespace -- a POST to [`/storage/namespaces`](#/NVMe/nvme_namespace_create). Set `clone.source.uuid` or `clone.source.name` to identify the source NVMe namespace from which the clone is created. The NVMe namespace clone and its source must reside in the same volume.
        <br/>
        The source NVMe namespace can reside in a Snapshot copy, in which case, the `clone.source.name` field must be used to identify it. Add `/.snapshot/<snapshot_name>` to the path after the volume name to identify the Snapshot copy. For example `/vol/vol1/.snapshot/snap1/namespace1`.
        <br/>
        ```
        # The API:
        POST /api/storage/namespaces
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/namespaces' -H 'accept: application/hal+json' -d '{ "svm": { "name": "svm1" }, "name": "/vol/vol1/namespace2clone1", "clone": { "source": { "name": "/vol/vol1/namespace2" } } }'
        ```
        ---
        ### Over-writing an existing NVMe namespace's data as a clone of another
        You can over-write an existing NVMe namespace as a clone of another. You do this as a PATCH on the NVMe namespace to overwrite -- a PATCH to [`/storage/namespaces/{uuid}`](#/NVMe/nvme_namespace_modify). Set the `clone.source.uuid` or `clone.source.name` property to identify the source NVMe namespace from which the clone data is taken. The NVMe namespace clone and its source must reside in the same volume.<br/>
        When used in a PATCH, the patched NVMe namespace's data is over-written as a clone of the source and the following properties are preserved from the patched namespace unless otherwise specified as part of the PATCH: `auto_delete`, `subsystem_map`, `status.state`, and `uuid`.
        <br/>
        ```
        # The API:
        PATCH /api/storage/namespaces/{uuid}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/namespaces/dccdc3e6-cf4e-498f-bec6-f7897f945669' -H 'accept: application/hal+json' -d '{ "clone": { "source": { "name": "/vol/vol1/namespace2" } } }'
        ```
        ---
        ## Deleting an NVMe namespace
        ```
        # The API:
        DELETE /api/storage/namespaces/{uuid}
        # The call:
        curl -X DELETE 'https://<mgmt-ip>/api/storage/namespaces/5c254d22-96a6-42ac-aad8-0cd9ebd126b6' -H 'accept: application/hal+json'
        ```
        ---
      tags:
      - NVMe
  /storage/namespaces/{uuid}:
    delete:
      description: |
        Deletes an NVMe namespace.
        ### Related ONTAP commands
        * `vserver nvme namespace delete`
        ### Learn more
        * [`DOC /storage/namespaces`](#docs-NVMe-storage_namespaces)
      operationId: nvme_namespace_delete
      parameters:
      - description: |
          The unique identifier of the NVMe namespace to delete.
        in: path
        name: uuid
        required: true
        type: string
      - default: false
        description: |
          Allows deletion of a mapped NVMe namespace.
          A mapped NVMe namespace might be in use. Deleting a mapped namespace also deletes the namespace map and makes the data no longer available, possibly causing a disruption in the availability of data.
          **This parameter should be used with caution.**
        in: query
        name: allow_delete_while_mapped
        required: false
        type: boolean
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090006 | The specified namespace was not found. |
            | 72090007 | The specified namespace was not found. |
            | 72090016 | The namespace's aggregate is offline. The aggregate must be online to modify or remove the namespace. |
            | 72090017 | The namespace's volume is offline. The volume must be online to modify or remove the namespace. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    get:
      description: |
        Retrieves an NVMe namespace.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `auto_delete`
        * `subsystem_map.*`
        * `status.mapped`
        ### Related ONTAP commands
        * `vserver nvme namespace show`
        * `vserver nvme subsystem map show`
        ### Learn more
        * [`DOC /storage/namespaces`](#docs-NVMe-storage_namespaces)
      operationId: nvme_namespace_get
      parameters:
      - description: |
          The unique identifier of the NVMe namespace to retrieve.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/nvme_namespace'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 72090006 | The specified namespace was not found. |
            | 72090007 | The specified namespace was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
    patch:
      description: |
        Updates an NVMe namespace.
        ### Related ONTAP commands
        * `volume file clone autodelete`
        * `vserver nvme namespace modify`
        ### Learn more
        * [`DOC /storage/namespaces`](#docs-NVMe-storage_namespaces)
      operationId: nvme_namespace_modify
      parameters:
      - description: |
          The unique identifier of the NVMe namespace to update.
        in: path
        name: uuid
        required: true
        type: string
      - description: |
          The new property values for the NVMe namespace.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/nvme_namespace'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 13565952 | The namespace clone request failed. |
            | 72090005 | The specified `clone.source.uuid` and `clone.source.name` do not refer to the same LUN. |
            | 72090006 | The specified namespace was not found. This can apply to `clone.source` or the target namespace. The `target` property of the error object identifies the property. |
            | 72090007 | The specified namespace was not found. This can apply to `clone.source` or the target namespace. The `target` property of the error object identifies the property. |
            | 72090010 | An error occurred after successfully overwriting data for the namespace as a clone. Some properties were not modified. |
            | 72090011 | An error occurred after successfully modifying some of the properties of the namespace. Some properties were not modified. |
            | 72090016 | The namespace's aggregate is offline. The aggregate must be online to modify or remove the namespace. |
            | 72090017 | The namespace's volume is offline. The volume must be online to modify or remove the namespace. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - NVMe
  /storage/ports:
    get:
      description: |
        Retrieves a collection of storage ports.
        ### Related ONTAP commands
        * `storage port show`
        ### Learn more
        * [`DOC /storage/ports`](#docs-storage-storage_ports)
      operationId: port_collection_get
      parameters:
      - description: Filter by wwn
        in: query
        name: wwn
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by cable.identifier
        in: query
        name: cable.identifier
        type: string
      - description: Filter by cable.serial_number
        in: query
        name: cable.serial_number
        type: string
      - description: Filter by cable.part_number
        in: query
        name: cable.part_number
        type: string
      - description: Filter by cable.length
        in: query
        name: cable.length
        type: string
      - description: Filter by error.message
        in: query
        name: error.message
        type: string
      - description: Filter by error.corrective_action
        in: query
        name: error.corrective_action
        type: string
      - description: Filter by board_name
        in: query
        name: board_name
        type: string
      - description: Filter by mac_address
        in: query
        name: mac_address
        type: string
      - description: Filter by speed
        in: query
        name: speed
        type: number
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by part_number
        in: query
        name: part_number
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/storage_port_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Retrieving storage port information
        The storage port GET API retrieves all of the storage ports in the cluster.
        <br/>
        ---
        ## Examples
        ### 1) Retrieve a list of storage ports from the cluster
        #### The following example shows the response with a list of storage ports in the cluster:
        ---
        ```
        # The API:
        /api/storage/ports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/ports" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0a",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0a"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0b",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0b"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0c",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0c"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0d",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0d"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0e",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0e"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0f",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0f"
                }
              }
            },
            {
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "name": "0g",
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0g"
                }
              }
            },
          ],
          "num_records": 7,
          "_links": {
            "self": {
              "href": "/api/storage/ports"
            }
          }
        }
        ```
        ---
        ### 2) Retrieve a specific storage port from the cluster
        #### The following example shows the response of the requested storage port. If there is no storage port with the requested node uuid and name, an error is returned.
        ---
        ```
        # The API:
        /api/storage/ports/{node.uuid}/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0a" -H "accept: application/hal+json"
        # The response:
        {
          "node": {
            "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
            "name": "node-1",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
              }
            }
          },
          "name": "0a",
          "description": "SAS Host Adapter 0a (PMC-Sierra PM8001 rev. C)",
          "wwn": "500a098003633df0",
          "speed": 6,
          "cable": {
            "part_number": "112-00429+A0",
            "serial_number": "629230774",
            "identifier": "500a0980066e2c01-500a098003633df0",
            "length": "0.5m"
          },
          "state": "online",
          "_links": {
            "self": {
              "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0a"
            }
          }
        }
        ```
        ---
      tags:
      - storage
  /storage/ports/{node.uuid}/{name}:
    get:
      description: |
        Retrieves a specific storage port.
        ### Related ONTAP commands
        * `storage port show`
        ### Learn more
        * [`DOC /storage/ports`](#docs-storage-storage_ports)
      operationId: port_get
      parameters:
      - description: Node UUID
        in: path
        name: node.uuid
        required: true
        type: string
      - description: Port name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/storage_port'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/qos/policies:
    get:
      description: |-
        Retrieves a collection of QoS policies.
        ### Learn more
        * [`DOC /storage/qos/policies`](#docs-storage-storage_qos_policies)
      operationId: qos_policy_collection_get
      parameters:
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by fixed.capacity_shared
        in: query
        name: fixed.capacity_shared
        type: boolean
      - description: Filter by fixed.min_throughput_iops
        in: query
        name: fixed.min_throughput_iops
        type: integer
      - description: Filter by fixed.max_throughput_mbps
        in: query
        name: fixed.max_throughput_mbps
        type: integer
      - description: Filter by fixed.max_throughput_iops
        in: query
        name: fixed.max_throughput_iops
        type: integer
      - description: Filter by object_count
        in: query
        name: object_count
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by adaptive.expected_iops
        in: query
        name: adaptive.expected_iops
        type: integer
      - description: Filter by adaptive.peak_iops
        in: query
        name: adaptive.peak_iops
        type: integer
      - description: Filter by adaptive.absolute_min_iops
        in: query
        name: adaptive.absolute_min_iops
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qos_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Creates a QoS policy.
        ### Required properties
        * `svm.uuid` or `svm.name` - The existing SVM owning the QoS policy.
        * `name` - The name of the QoS policy.
        * `fixed.*` or `adaptive.*` - Either of the fixed or adaptive parameters.
        ### Default property values
        * If `fixed.*` parameters are specified, then capacity.shared is set to false by default.
        ### Related ONTAP commands
        * `qos policy-group create`
        * `qos adaptive-policy-group create`

        ### Learn more
        * [`DOC /storage/qos/policies`](#docs-storage-storage_qos_policies)
      operationId: qos_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/qos_policy'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8454147 | The maximum limit for QoS policies has been reached. |
            | 8454154 | The name specified for creating conflicts with an existing QoS policy name. |
            | 8454260 | Invalid value for maximum and minimum fields. Valid values for max_throughput_iops and max_throughput_mbps combination is for the ratio of max_throughput_mbps and max_throughput_iops to be within 1 to 4096. |
            | 8454273 | Invalid value for an adaptive field. Value should be non-zero. |
            | 8454277 | The name specified for creating an adaptive QoS policy conflicts with an existing fixed QoS policy name. |
            | 8454278 | The name specified for creating a fixed QoS policy conflicts with an existing adaptive QoS policy name. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Quality of Service Configuration
        A QoS policy defines measurable service level objectives (SLOs) that apply to the storage objects with which the policy is associated. There are two types of policies that can be configured: fixed, which defines a fixed SLO, or adaptive which defines a variable SLO for a storage object. Adaptive policies vary the SLO depending on the space usage of the storage object. A policy can be either a fixed policy or an adaptive one, not both.
        <br />
        Service level objectives include minimum and maximum limits on throughput in terms of IOPS. Only maximum limits can be set in terms of both IOPS and/or throughput (MB/s). A QoS policy can be used to enforce SLOs for multiple storage objects by specifying "capacity_shared" to true. For example, if a QoS policy with "capacity_shared" is set to true and it has maximum_throughput_iops set to 1000, and this policy is assigned to four volumes, then the combined throughput of all four volumes is limited to 1000 IOPS. If "capacity_shared" is set to false then, each storage object will have it's SLOs enforced individually. For example, in the previous case if the same policy was applied to four volumes but with "capacity_shared" set to false, then each of the volumes would be limited to 1000 IOPS individually. Once "capacity_shared" is set, it cannot be modified.
        <br />
        Adaptive parameters can specify the variable SLOs in terms of IOPS/TB. The actual IOPS enforced on the storage object can be calculated using the allocated space on the storage object. The policies are enforced individually amongst storage objects.
        ## Examples
        ### 1) Create a fixed QoS policy
        The following example shows how to create a fixed QoS policy to limit throughput for a storage object between 5000 IOPS and 10000 IOPS which has capacity_shared set to false. This QoS policy can be used as a template to apply on multiple storage objects to provide individual SLOs to each object.
        <br />
        ---
        ```
        curl -X POST "https://172.21.69.245/api/storage/qos/policies?return_timeout=0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"fixed\": { \"capacity_shared\": false, \"max_throughput_iops\": 10000, \"min_throughput_iops\": 5000 }, \"name\": \"qos_policy_5000_to_10000_iops\", \"svm\": { \"name\": \"vs0\" }}"
        ```
        ---
        ### 2) Create an adaptive QoS policy
        The following example shows how to create an adaptive QoS policy which provides 5000 IOPS per GB of allocated space for a storage object with a peak of 6000 IOPS. Minimum IOPS regardless of allocated space are 1000 IOPS.
        <br />
        ---
        ```
        curl -X POST "https://172.21.69.245/api/storage/qos/policies?return_timeout=0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"adaptive\": { \"absolute_min_iops\": 1000, \"expected_iops\": 5000, \"peak_iops\": 6000 }, \"name\": \"adaptive_pg_5k_to_6k\", \"svm\": { \"name\": \"vs0\" }}"
        ```
        ----
        ### 3) Update an existing QoS policy
        The following example shows how to update SLOs of an existing QoS policy and also rename it.
        <br />
        ---
        ```
        curl -X PATCH "https://172.21.69.245/api/storage/qos/policies/d38bafc0-5a51-11e9-bd5b-005056ac6f1f?return_timeout=0" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"fixed\": { \"max_throughput_iops\": 15000, \"min_throughput_iops\": 10000 }, \"name\": \"qos_policy_10k_to_15k_iops\"}"
        ```
        ---
        ### 4) Delete an existing QoS policy
        When a QoS policy is deleted any associations of the policy with a storage objects are also removed.
        <br />
        ---
        ```
        curl -X DELETE "https://172.21.69.245/api/storage/qos/policies/d38bafc0-5a51-11e9-bd5b-005056ac6f1f?return_timeout=0" -H "accept: application/json"
        ```
        ---
      tags:
      - storage
  /storage/qos/policies/{policy.uuid}:
    delete:
      description: |-
        Deletes a QoS policy. All QoS workloads associated with the policy are removed.
        ### Related ONTAP commands
        * `qos policy-group delete`
        * `qos adaptive-policy-group delete`

        ### Learn more
        * [`DOC /storage/qos/policies`](#docs-storage-storage_qos_policies)
      operationId: qos_policy_delete
      parameters:
      - in: path
        name: policy.uuid
        required: true
        type: string
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves a specific QoS policy.
        ### Related ONTAP commands
        * `qos policy-group show`
        * `qos adaptive-policy-group show`

        ### Learn more
        * [`DOC /storage/qos/policies`](#docs-storage-storage_qos_policies)
      operationId: qos_policy_get
      parameters:
      - in: path
        name: policy.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qos_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Update a specific QoS policy.
        ### Related ONTAP commands
        * `qos policy-group modify`
        * `qos adaptive-policy-group modify`

        ### Learn more
        * [`DOC /storage/qos/policies`](#docs-storage-storage_qos_policies)
      operationId: qos_policy_modify
      parameters:
      - in: path
        name: policy.uuid
        required: true
        type: string
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/qos_policy'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8454147 | The maximum limit for QoS policies has been reached. |
            | 8454154 | The name specified for creating conflicts with an existing QoS policy name. |
            | 8454260 | Invalid value for maximum and minimum fields. Valid values for max_throughput_iops and max_throughput_mbps combination is for the ratio of max_throughput_mbps and max_throughput_iops to be within 1 to 4096. |
            | 8454273 | Invalid value for an adaptive field. Value should be non-zero. |
            | 8454277 | The name specified for creating an adaptive QoS policy conflicts with an existing fixed QoS policy name. |
            | 8454278 | The name specified for creating a fixed QoS policy conflicts with an existing adaptive QoS policy name. |
            | 8454286 | Modifications on these cluster scoped preset policies is prohibited. |
            | 8454327 | The existing fixed QoS policy cannot be modified to an adaptive QoS policy. |
            | 8454328 | The existing adaptive QoS policy cannot be modified to a fixed QoS policy. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/qtrees:
    get:
      description: |-
        Retrieves qtrees configured for all FlexVol volumes or FlexGroup volumes. <br/>
        Use the `fields` query parameter to retrieve all properties of the qtree. If the `fields` query parameter is not used, then GET returns the qtree `name` and qtree `id` only.
        ### Related ONTAP commands
        * `qtree show`

        ### Learn more
        * [`DOC /storage/qtrees`](#docs-storage-storage_qtrees)
      operationId: qtree_collection_get
      parameters:
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by security_style
        in: query
        name: security_style
        type: string
      - description: Filter by export_policy.name
        in: query
        name: export_policy.name
        type: string
      - description: Filter by export_policy.id
        in: query
        name: export_policy.id
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by unix_permissions
        in: query
        name: unix_permissions
        type: integer
      - description: Filter by id
        in: query
        name: id
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qtree_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Creates a qtree in a FlexVol or a FlexGroup volume. <br/>
        After a qtree is created, the new qtree is assigned an identifier. This identifier is obtained using a qtree GET request. This identifier is used in the API path for the qtree PATCH and DELETE operations.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the qtree.
        * `volume.uuid` or `volume.name` - Existing volume in which to create the qtree.
        * `name` - Name for the qtree.
        ### Recommended optional properties
        If not specified in POST, the values are inherited from the volume.
        * `security_style` - Security style for the qtree.
        * `unix_permissions` - UNIX permissions for the qtree.
        * `export_policy.name or export_policy.id` - Export policy of the SVM for the qtree.
        ### Related ONTAP commands
        * `qtree create`

        ### Learn more
        * [`DOC /storage/qtrees`](#docs-storage-storage_qtrees)
      operationId: qtree_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/qtree'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917927 | The specified volume was not found. |
            | 918232 | Either `volume.name` or `volume.uuid` must be provided. |
            | 918236 | The specified `volume.uuid` and `volume.name` refer to different volumes. |
            | 2621462 | The specified SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5242886 | Failed to create qtree. |
            | 5242951 | Export Policy supplied does not belong to the specified Export Policy ID. |
            | 5242952 | Export Policy ID specified is invalid. |
            | 5242953 | Qtree name must be provided. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        A qtree is a logically defined file system that can exist as a special subdirectory of the root directory within a FlexVol or a FlexGroup volume.
        ## Qtree APIs
        The following APIs are used to create, retrieve, modify, and delete qtrees.
        &ndash; POST      /api/storage/qtrees
        &ndash; GET       /api/storage/qtrees
        &ndash; GET       /api/storage/qtrees/{volume-uuid}/{qtree-id}
        &ndash; PATCH     /api/storage/qtrees/{volume-uuid}/{qtree-id}
        &ndash; DELETE    /api/storage/qtrees/{volume-uuid}/{qtree-id}
        ## Examples
        ### Creating a qtree inside a volume for an SVM
        This API is used to create a qtree inside a volume for an SVM.<br/>
        The following example shows how to create a qtree in a FlexVol with a given security style, UNIX permissions and an export policy.
        <br/>
        ---
        ```
        # The API:
        POST /api/storage/qtrees
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/qtrees?return_records=true' -H 'accept: application/hal+json' -d @test_qtree_post.txt
        test_qtree_post.txt(body):
        {
          "svm": {
            "name": "svm1"
          },
          "volume": {
            "name": "fv"
          },
          "name": "qt1",
          "security_style": "unix",
          "unix_permissions": 744,
          "export_policy": {
              "name": "default"
          }
        }
        # The response:
        {
            "num_records": 1,
            "records": [
              {
                "svm": {
                  "name": "svm1"
                },
                "volume": {
                  "name": "fv"
                },
                "name": "qt1",
                "security_style": "unix",
                "unix_permissions": 744,
                "export_policy": {
                  "name": "default"
                },
                "_links": {
                  "self": {
                    "href": "/api/storage/qtrees/?volume.name=fv&name=qt1"
                  }
                }
              }
            ],
            "job": {
              "uuid": "84edef3c-4f6d-11e9-9a71-005056a7f717",
              "_links": {
                "self": {
                  "href": "/api/cluster/jobs/84edef3c-4f6d-11e9-9a71-005056a7f717"
                }
              }
            }
        }
        ```
        ---
        ### Retrieving qtrees
        This API is used to retrieve qtrees. <br/>
        The following example shows how to retrieve qtrees belonging to SVM _svm1_ and volume _fv_. The `svm.name` and `volume.name` query parameters are used to find the required qtrees.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/qtrees
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/qtrees/?svm.name=svm1&volume.name=fv" -H 'accept: application/hal+json'
        # The response
        {
            "records": [
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "id": 0,
                "name": "",
                "_links": {
                  "self": {
                    "href": "/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/0"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "id": 1,
                "name": "qt1",
                "_links": {
                  "self": {
                    "href": "/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/1"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "id": 2,
                "name": "qt2",
                "_links": {
                  "self": {
                    "href": "/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2"
                  }
                }
              }
            ],
            "num_records": 3,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/?svm.name=svm1&volume.name=fv"
              }
            }
        }
        ```
        ---
        ### Retrieving properties of a specific qtree using a qtree identifier
        This API is used to retrieve properties of a specific qtree using qtree.id.<br/>
        The following example shows how to use the qtree identifier to retrieve all properties of the qtree using the `fields` query parameter.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/qtrees/{volume.uuid}/{id}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2?fields=*' -H 'accept: application/hal+json'
        {
            "svm": {
              "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                }
              }
            },
            "volume": {
              "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
              "name": "fv",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                }
              }
            },
            "id": 2,
            "name": "qt2",
            "security_style": "unix",
            "unix_permissions": 744,
            "export_policy": {
              "name": "default",
              "id": 12884901889,
              "_links": {
                "self": {
                  "href": "/api/protocols/nfs/export-policies/12884901889"
                }
              }
            },
            "path": "/fv/qt2",
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2"
              }
            }
        }
        ```
        ---
        ### Retrieving properties of a specific qtree using the qtree name
        This API is used to retrieve properties of a specific qtree using qtree.name.
        The following example shows how to retrieve all of the properties belonging to qtree qt2. The `svm.name` and `volume.name` query parameters are used here along with the qtree name.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/qtrees/
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/qtrees/?svm.name=svm1&volume.name=fv&name=qt2&fields=*' -H 'accept: application/hal+json'
        {
            "svm": {
              "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                }
              }
            },
            "volume": {
              "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
              "name": "fv",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                }
              }
            },
            "id": 2,
            "name": "qt2",
            "security_style": "unix",
            "unix_permissions": 744,
            "export_policy": {
              "name": "default",
              "id": 12884901889,
              "_links": {
                "self": {
                  "href": "/api/protocols/nfs/export-policies/12884901889"
                }
              }
            },
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2"
              }
            }
        }
        ```
        ---
        ### Updating a qtree
        This API is used to update a qtree. <br/>
        The following example shows how to update properties in a qtree.
        <br/>
        ---
        ```
        # The API:
        PATCH /api/storage/qtrees/{volume.uuid}/{id}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2' -H 'accept: application/hal+json' -d '@test_qtree_patch.txt'
        test_qtree_patch.txt(body):
        {
          "security_style": "mixed",
          "unix_permissions": 777,
          "export_policy": {
              "id": "9",
              "name": "exp1"
          }
        }
        ```
        ---
        ### Renaming a qtree
        This API is used to rename a qtree. <br/>
        The following example below shows how to rename a qtree with a new name.
        <br/>
        ---
        ```
        # The API:
        PATCH /api/storage/qtrees/{volume.uuid}/{id}
        # The call:
        curl -X PATCH 'https://<mgmt-ip>/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/1' -H 'accept: application/hal+json' -d '{ "name": "new_qt1" }'
        ```
        ---
        ### Deleting a qtree inside a volume of an SVM
        This API is used to delete a qtree inside a volume of an SVM.</br>
        The following example shows how to delete a qtree.
        <br/>
        ---
        ```
        # The API:
        DELETE /api/storage/qtrees/{volume.uuid}/{id}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/qtrees/cb20da45-4f6b-11e9-9a71-005056a7f717/2" -H 'accept: application/hal+json'
        ```
        ---
      tags:
      - storage
  /storage/qtrees/{volume.uuid}/{id}:
    delete:
      description: |-
        Deletes a qtree.
        ### Related ONTAP commands
        * `qtree delete`

        ### Learn more
        * [`DOC /storage/qtrees`](#docs-storage-storage_qtrees)
      operationId: qtree_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Qtree ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 918235 | A volume with UUID was not found. |
            | 5242955 | The UUID of the volume is required. |
            | 5242957 | Failed to delete qtree with ID in volume and vserver. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves properties for a specific qtree identified by the `volume.uuid` and the `id` in the api path.
        ### Related ONTAP commands
        * `qtree show`

        ### Learn more
        * [`DOC /storage/qtrees`](#docs-storage-storage_qtrees)
      operationId: qtree_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Qtree ID
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/qtree'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 918235 | A volume with UUID was not found. |
            | 5242956 | Failed to obtain qtree with ID. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Updates properties for a specific qtree.
        ### Related ONTAP commands
        * `qtree modify`
        * `qtree rename`

        ### Learn more
        * [`DOC /storage/qtrees`](#docs-storage-storage_qtrees)
      operationId: qtree_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Qtree ID
        in: path
        name: id
        required: true
        type: string
      - description: |
          The new property values for the qtree.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/qtree'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 918235 | A volume with UUID was not found. |
            | 5242951 | Export policy supplied does not belong to the specified export policy ID. |
            | 5242955 | The UUID of the volume is required. |
            | 5242956 | Failed to obtain qtree with ID. |
            | 5242958 | Failed to rename qtree in volume in SVM with ID. |
            | 5242959 | Successfully renamed qtree but modify failed. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/quota:
    x-ntap-long-description:
      description: |
        ## Overview
        Quotas provide a way to restrict or track the files and space usage by a user, group, or qtree. Quotas are enabled for a specific FlexVol or a FlexGroup volume.</br>
        Quotas can have soft or hard limits. Soft limits cause ONTAP to send a notification when specified limits are exceeded. Hard limits prevent a write operation from succeeding when specified limits are exceeded.</br>
        ## Quota policy rule APIs
        Quotas are defined as quota policy rules specific to FlexVol or FlexGroup volumes. Each quota rule has a type. The type can be either "user", "group", or "tree".</br>
        The following APIs can be used to perform create, retrieve, modify, and delete operations related to quota policy rules for a FlexVol or a FlexGroup volume.
        &ndash; POST      /api/storage/quota/rules
        &ndash; GET       /api/storage/quota/rules
        &ndash; GET       /api/storage/quota/rules/{rule-uuid}
        &ndash; PATCH     /api/storage/quota/rules/{rule-uuid}
        &ndash; DELETE    /api/storage/quota/rules/{rule-uuid}
        ## Enabling and disabling quotas
        After the quota rules are created, the quota rules need to be enabled on each FlexVol or FlexGroup volume for soft or hard limits to take effect in the filesystem. Enabling quotas can be done on a volume-by-volume basis.</br>
        The following APIs can be used to enable and disable and obtain the quota state for a FlexVol or a FlexGroup volume.
        &ndash; PATCH  /api/storage/volumes/{volume-uuid} -d '{"quota.enabled":"true"}'
        &ndash; PATCH  /api/storage/volumes/{volume-uuid} -d '{"quota.enabled":"false"}'
        &ndash; GET    /api/storage/volumes/{volume-uuid}/?fields=quota.state
        ## Quota report APIs
        Quota report records provide usage information for a user, group, or qtree against the quota limits configured on a FlexVol or a FlexGroup volume.
        The following APIs can be used to retrieve quota reports associated with a FlexVol or a FlexGroup volume.
        &ndash; GET    /api/storage/quota/reports
        &ndash; GET    /api/storage/quota/reports/{volume-uuid}/{index}
        ## Quota resize
        Quota resize allows you to modify the quota limits directly in the filesystem.</br>
        It is important to note that quota must be enabled on a FlexVol or a FlexGroup volume for `quota resize` to take effect.
        You can perform a `quota resize` using the quota policy rule PATCH API. If the quota is disabled on the volume, the quota policy rule PATCH API modifies the rule, but this does not affect the limits in the filesystem.
        The following API can be used to perform `quota resize` provided quota is enabled on the volume.
        &ndash; PATCH  /api/storage/quota/rules/{rule-uuid}
        The changed limits in the filesystem can be confirmed using the quota report REST API.
        &ndash; GET  /api/storage/quota/reports
      tags:
      - storage
  /storage/quota/reports:
    get:
      description: |-
        Retrieves the quota report records for all FlexVol volumes and FlexGroup volumes.
        ### Related ONTAP commands
        * `quota report`

        ### Learn more
        * [`DOC /storage/quota/reports`](#docs-storage-storage_quota_reports)
      operationId: quota_report_collection_get
      parameters:
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by users.name
        in: query
        name: users.name
        type: string
      - description: Filter by users.id
        in: query
        name: users.id
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by files.hard_limit
        in: query
        name: files.hard_limit
        type: integer
      - description: Filter by files.soft_limit
        in: query
        name: files.soft_limit
        type: integer
      - description: Filter by files.used.total
        in: query
        name: files.used.total
        type: integer
      - description: Filter by files.used.hard_limit_percent
        in: query
        name: files.used.hard_limit_percent
        type: integer
      - description: Filter by files.used.soft_limit_percent
        in: query
        name: files.used.soft_limit_percent
        type: integer
      - description: Filter by group.name
        in: query
        name: group.name
        type: string
      - description: Filter by group.id
        in: query
        name: group.id
        type: string
      - description: Filter by space.soft_limit
        in: query
        name: space.soft_limit
        type: integer
      - description: Filter by space.used.total
        in: query
        name: space.used.total
        type: integer
      - description: Filter by space.used.soft_limit_percent
        in: query
        name: space.used.soft_limit_percent
        type: integer
      - description: Filter by space.used.hard_limit_percent
        in: query
        name: space.used.hard_limit_percent
        type: integer
      - description: Filter by space.hard_limit
        in: query
        name: space.hard_limit
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by specifier
        in: query
        name: specifier
        type: string
      - description: Filter by qtree.name
        in: query
        name: qtree.name
        type: string
      - description: Filter by qtree.id
        in: query
        name: qtree.id
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - default: true
        description: The default is true for GET calls. When set to false, the default
          records are not reported.
        in: query
        name: show_default_records
        type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/quota_report_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        Quota reports provide the current file and space consumption for a user, group, or qtree in a FlexVol or a FlexGroup volume.
        ## Quota report APIs
        The following APIs can be used to retrieve quota reports associated with a volume in ONTAP.
        &ndash; GET       /api/storage/quota/reports
        &ndash; GET       /api/storage/quota/reports/{volume_uuid}/{index}
        ## Examples
        ### Retrieving all the quota report records
        This API is used to retrieve all the quota report records. <br/>
        The following example shows how to retrieve quota report records for all FlexVol volumes and FlexGroup volumes.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/quota/reports
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports"  -H 'accept: application/hal+json'
        # The response:
          {
            "records": [
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "314a328f-502d-11e9-8771-005056a7f717",
                  "name": "fg",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/314a328f-502d-11e9-8771-005056a7f717"
                    }
                  }
                },
                "index": 0,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/314a328f-502d-11e9-8771-005056a7f717/0"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "314a328f-502d-11e9-8771-005056a7f717",
                  "name": "fg",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/314a328f-502d-11e9-8771-005056a7f717"
                    }
                  }
                },
                "index": 1152921504606846976,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/314a328f-502d-11e9-8771-005056a7f717/1152921504606846976"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "314a328f-502d-11e9-8771-005056a7f717",
                  "name": "fg",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/314a328f-502d-11e9-8771-005056a7f717"
                    }
                  }
                },
                "index": 3458764513820540928,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/314a328f-502d-11e9-8771-005056a7f717/3458764513820540928"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "314a328f-502d-11e9-8771-005056a7f717",
                  "name": "fg",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/314a328f-502d-11e9-8771-005056a7f717"
                    }
                  }
                },
                "index": 4611686018427387904,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/314a328f-502d-11e9-8771-005056a7f717/4611686018427387904"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "314a328f-502d-11e9-8771-005056a7f717",
                  "name": "fg",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/314a328f-502d-11e9-8771-005056a7f717"
                    }
                  }
                },
                "index": 5764607523034234880,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/314a328f-502d-11e9-8771-005056a7f717/5764607523034234880"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 0,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/0"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 281474976710656,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/281474976710656"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 1152921504606846976,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/1152921504606846976"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 1153202979583557632,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/1153202979583557632"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 2305843013508661248,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/2305843013508661248"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 3458764513820540928,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/3458764513820540928"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 3459045988797251584,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/3459045988797251584"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 4611686018427387904,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/4611686018427387904"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 4611967493404098560,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/4611967493404098560"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "b68f961b-4cee-11e9-930a-005056a7f717",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/b68f961b-4cee-11e9-930a-005056a7f717"
                    }
                  }
                },
                "volume": {
                  "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
                  "name": "fv",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717"
                    }
                  }
                },
                "index": 5764607523034234880,
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/reports/cb20da45-4f6b-11e9-9a71-005056a7f717/5764607523034234880"
                  }
                }
              }
            ],
            "num_records": 15,
            "_links": {
              "self": {
                "href": "/api/storage/quota/reports/"
              }
            }
          }
        ```
        ---
        ### Retrieving a specific quota report record
        This API is used to retrieve a specific quota report record. <br/>
        The following example shows how to retrieve a single quota report user record.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/quota/reports/{volume.uuid}/{index}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/281474976710656"  -H 'accept: application/hal+json'
        # Response for quota report user record:
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 281474976710656,
          "type": "user",
          "users": [
            {
              "name": "fred",
              "id"  : "300008"
            }
          ],
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/281474976710656"
              }
            }
          }
        }
        ```
        ---
        ### Retrieving a single quota report multi-user record
        <br/>
        ---
        ```
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/281474976710656"  -H 'accept: application/hal+json'
        # Response for quota report multi-user record:
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 1153484454560268288,
          "type": "user",
          "users": [
            {
              "name": "fred",
              "id"  : "300008"
            },
            {
              "name": "john",
              "id"  : "300009"
            },
            {
              "name": "smith",
              "id"  : "300010"
            }
          ],
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/1153484454560268288"
              }
            }
          }
        }
        ```
        ---
        ### Retrieving a single quota report group record
        <br/>
        ---
        ```
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/3459045988797251584"  -H 'accept: application/hal+json'
        # Response for quota report group record:
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 3459045988797251584,
          "type": "group",
          "group": {
            "name"  : "test_group",
            "id"    : "500009"
          },
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/3459045988797251584"
              }
            }
          }
        }
        ```
        ---
        ### Retrieving a single quota report tree record
        <br/>
        ---
        ```
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/4612248968380809216"  -H 'accept: application/hal+json'
        # Response for quota report tree record:
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 4612248968380809216,
          "type": "tree",
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/4612248968380809216"
              }
            }
          }
        }
        ```
        ---
        ### Retrieving only records enforced by non-default rules
        <br/>
        ---
        ```
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/quota/reports?show_default_records=false"  -H 'accept: application/hal+json'
        # Response from only  non-default records
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 4612248968380809216,
          "type": "tree",
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/4612248968380809216"
              }
            }
          }
        },
        {
          "svm": {
            "uuid": "5093e722-248e-11e9-96ee-005056a7657c",
            "name": "svm1",
            "_links": {
              "self": {
                "href": "/api/svm/svms/5093e722-248e-11e9-96ee-005056a7657c"
              }
            }
          },
          "volume": {
            "uuid": "cf480c37-2a6b-11e9-8513-005056a7657c",
            "name": "fv",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/cf480c37-2a6b-11e9-8513-005056a7657c"
              }
            }
          },
          "index": 1153484454560268288,
          "type": "user",
          "users": [
            {
              "name": "fred",
              "id"  : "300008"
            },
            {
              "name": "john",
              "id"  : "300009"
            },
            {
              "name": "smith",
              "id"  : "300010"
            }
          ],
          "qtree": {
            "name": "qt1",
            "id": 1,
            "_links": {
              "self": {
                "href": "/api/storage/qtrees/cf480c37-2a6b-11e9-8513-005056a7657c/1"
              }
            }
          },
          "space": {
            "hard_limit": 41943040,
            "soft_limit": 31457280,
            "used": {
              "total": 10567680,
              "soft_limit_percent": 34,
              "hard_limit_percent": 25
            }
          }
          "files": {
            "soft_limit": 30,
            "hard_limit": 40,
            "used": {
              "total": 11,
              "soft_limit_percent": 37,
              "hard_limit_percent": 28
            }
          }
          "_links": {
            "self": {
              "href": "/api/storage/quota/reports/cf480c37-2a6b-11e9-8513-005056a7657c/1153484454560268288"
              }
            }
          }
        }
        ```
        ---
      tags:
      - storage
  /storage/quota/reports/{volume.uuid}/{index}:
    get:
      description: |-
        Retrieves a specific quota report record.
        ### Related ONTAP commands
        * `quota report`

        ### Learn more
        * [`DOC /storage/quota/reports`](#docs-storage-storage_quota_reports)
      operationId: quota_report_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Quota report index
        in: path
        name: index
        required: true
        type: integer
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/quota_report'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 918235 | A volume with UUID was not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/quota/rules:
    get:
      description: |-
        Retrieves quota policy rules configured for all FlexVol volumes and FlexGroup volumes.
        ### Related ONTAP commands
        * `quota policy rule show`

        ### Learn more
        * [`DOC /storage/quota/rules`](#docs-storage-storage_quota_rules)
      operationId: quota_rule_collection_get
      parameters:
      - description: Filter by user_mapping
        in: query
        name: user_mapping
        type: boolean
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by qtree.name
        in: query
        name: qtree.name
        type: string
      - description: Filter by qtree.id
        in: query
        name: qtree.id
        type: integer
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by users.name
        in: query
        name: users.name
        type: string
      - description: Filter by users.id
        in: query
        name: users.id
        type: string
      - description: Filter by space.soft_limit
        in: query
        name: space.soft_limit
        type: integer
      - description: Filter by space.hard_limit
        in: query
        name: space.hard_limit
        type: integer
      - description: Filter by group.id
        in: query
        name: group.id
        type: string
      - description: Filter by group.name
        in: query
        name: group.name
        type: string
      - description: Filter by files.soft_limit
        in: query
        name: files.soft_limit
        type: integer
      - description: Filter by files.hard_limit
        in: query
        name: files.hard_limit
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/quota_rule_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Creates a quota policy rule for a FlexVol or a FlexGroup volume.<br/>
        Important notes:
        * Unlike CLI/ONTAPI, the `quota policy` input is not needed for POST.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the qtree.
        * `volume.uuid` or `volume.name` - Existing volume in which to create the qtree.
        * `type` - Quota type for the rule. This type can be `user`, `group`, or `tree`.
        * `users.name` or `user.id` -  If the quota type is user, this property takes the user name or user ID. For default user quota rules, the user name must be specified as "".
        * `group.name` or `group.id` - If the quota type is group, this property takes the group name or group ID. For default group quota rules, the group name must be specified as "".
        * `qtree.name` - Qtree for which to create the rule. For default tree rules, the qtree name must be specified as "".
        ### Recommended optional properties
        * `space.hard_limit` - Specifies the space hard limit, in bytes. If less than 1024 bytes, the value is rounded up to 1024 bytes.
        * `space.soft_limit` - Specifies the space soft limit, in bytes. If less than 1024 bytes, the value is rounded up to 1024 bytes.
        * `files.hard_limit` - Specifies the hard limit for files.
        * `files.hard_limit` - Specifies the soft limit for files.
        * `user_mapping` - Specifies the user_mapping. This property is valid only for quota policy rules of type `user`.
        ### Related ONTAP commands
        * `quota policy rule create`

        ### Learn more
        * [`DOC /storage/quota/rules`](#docs-storage-storage_quota_rules)
      operationId: quota_rule_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/quota_rule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917927 | The specified volume was not found. |
            | 918232 | Either `volume.name` or `volume.uuid` must be provided. |
            | 918236 | The specified `volume.uuid` and `volume.name` refer to different volumes. |
            | 2621462 | The specified SVM does not exist. |
            | 2621706 | The specified `svm.uuid` and `svm.name` do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either `svm.name` or `svm.uuid` must be supplied. |
            | 5308501 | Mapping from Windows user to UNIX user for user rule was unsuccessful. |
            | 5308502 | Mapping from UNIX user to Windows user for user rule was unsuccessful. |
            | 5308552 | Failed to get default quota policy name for SVM. |
            | 5308561 | Failed to obtain volume quota state or invalid quota state obtained for volume. |
            | 5308562 | users is a required input for creating a user rule and group is not allowed. |
            | 5308563 | group is a required input for creating a group rule and users is not allowed. |
            | 5308564 | qtree.name is a required input for creating a tree rule and users and group are not allowed. |
            | 5308565 | Only one of name or id is allowed for each entry in the users array. |
            | 5308566 | Only one of name or id is allowed for group. |
            | 5308568 | Quota policy rule create operation succeeded, but quota resize failed due to internal error. To activate the rule, disable and enable quotas for this volume. |
            | 5308571 | Quota policy rule create operation succeeded, but quota resize is skipped. To activate the rule, disable and enable quotas for this volume. |
            | 5308573 | Input value is greater than limit for field. |
            | 5308574 | Input value is out of range for field. |
            | 5308575 | Input value is incorrectly larger than listed field. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        Quotas are defined in quota rules specific to FlexVol volumes or FlexGroup volumes.  Each quota rule has a type. The type can be "user", "group", or "tree".</br>
        &ndash; User rules must have the user property and qtree property.
        &ndash; Group rules must have the group property and qtree property.
        &ndash; Tree rules must have the qtree property and not have the user or group property.
        ## Quota policy rule APIs
        The following APIs can be used to perform create, retrieve, modify, and delete operations related to quota policy rules.
        &ndash; POST      /api/storage/quota/rules
        &ndash; GET       /api/storage/quota/rules
        &ndash; GET       /api/storage/quota/rules/{rule-uuid}
        &ndash; PATCH     /api/storage/quota/rules/{rule-uuid}
        &ndash; DELETE    /api/storage/quota/rules/{rule-uuid}
        ## Examples
        ### Retrieving all quota policy rules
        This API is used to retrieve all quota policy rules.<br/>
        The following example shows how to retrieve quota policy rules for FlexVol volumes and FlexGroup volumes.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/quota/rules
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules' -H 'accept: application/hal+json'
        # The response:
        {
            "records": [
              {
                "svm": {
                  "uuid": "038545f8-9ff8-11e8-bce6-005056a73bed",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/038545f8-9ff8-11e8-bce6-005056a73bed"
                    }
                  }
                },
                "volume": {
                  "uuid": "ab3df793-0f02-43c6-9514-4f142fc8cc92",
                  "name": "vol1",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/ab3df793-0f02-43c6-9514-4f142fc8cc92"
                    }
                  }
                },
                "uuid": "66319cbe-b837-11e8-9c5a-005056a7e88c",
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/rules/66319cbe-b837-11e8-9c5a-005056a7e88c"
                  }
                }
              },
              {
                "svm": {
                  "uuid": "038545f8-9ff8-11e8-bce6-005056a73bed",
                  "name": "svm1",
                  "_links": {
                    "self": {
                      "href": "/api/svm/svms/038545f8-9ff8-11e8-bce6-005056a73bed"
                    }
                  }
                },
                "volume": {
                  "uuid": "ab3df793-0f02-43c6-9514-4f142fc8cc92",
                  "name": "vol1",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/ab3df793-0f02-43c6-9514-4f142fc8cc92"
                    }
                  }
                },
                "uuid": "dbd5b443-b7a4-11e8-bc58-005056a7e88c",
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/rules/dbd5b443-b7a4-11e8-bc58-005056a7e88c"
                  }
                }
              }
            ],
            "num_records": 2,
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules"
              }
            }
        }
        ```
        ---
        ### Retrieving a specific quota policy rule
        This API is used to retrieve a quota policy rule for a specific qtree.<br/>
        The following example shows how to retrieve a quota policy user rule for a specific qtree.
        <br/>
        ---
        ```
        # The API:
        GET /api/storage/quota/rules/{uuid}
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules/264a9e0b-2e03-11e9-a610-005056a7b72d' -H 'accept: application/hal+json'
        # Response for a user rule at a qtree level:
        {
            "svm": {
              "uuid": "fd5db15a-15b9-11e9-a6ad-005056a760e0",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/fd5db15a-15b9-11e9-a6ad-005056a760e0"
                }
              }
            },
            "volume": {
              "uuid": "c1b64eea-ca8b-45ec-9397-ab489830d268",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/c1b64eea-ca8b-45ec-9397-ab489830d268"
                }
              }
            },
            "uuid": "264a9e0b-2e03-11e9-a610-005056a7b72d",
            "type": "user",
            "users": [ {"name" : "fred"} ],
            "qtree": {
              "name": "qt1",
              "id": 1,
              "_links": {
                "self": {
                  "href": "/api/storage/qtrees/c1b64eea-ca8b-45ec-9397-ab489830d268/1"
                }
              }
            },
            "user_mapping": on,
            "space": {
              "hard_limit": 1222800,
              "soft_limit": 51200
            },
            "files": {
              "hard_limit": 100,
              "soft_limit": 80
            },
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules/264a9e0b-2e03-11e9-a610-005056a7b72d"
              }
            }
        }
        ```
        ---
        ### Retrieving a quota policy multi-user rule at the volume level
        <br/>
        ---
        ```
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules/0ab84fba-19aa-11e9-a04d-005056a72f42' -H 'accept: application/hal+json'
        # Response for a multi-user rule at volume level:
        {
            "svm": {
              "uuid": "fd5db15a-15b9-11e9-a6ad-005056a760e0",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/fd5db15a-15b9-11e9-a6ad-005056a760e0"
                }
              }
            },
            "volume": {
              "uuid": "c1b64eea-ca8b-45ec-9397-ab489830d268",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/c1b64eea-ca8b-45ec-9397-ab489830d268"
                }
              }
            },
            "uuid": "0ab84fba-19aa-11e9-a04d-005056a72f42",
            "type": "user",
            "users": [
              {
                "name": "sam",
              },
              {
                "name": "smith",
              },
              {
                "id": "300010",
              },
            ],
            "space": {
              "hard_limit": 1222800,
              "soft_limit": 51200
            },
            "files": {
              "hard_limit": 100,
              "soft_limit": 80
            },
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules/0ab84fba-19aa-11e9-a04d-005056a72f42"
              }
            }
        }
        ```
        ---
        ### Retrieving a quota policy default tree rule
        <br/>
        ---
        ```
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules/4a276b8c-1753-11e9-8101-005056a760e0' -H 'accept: application/hal+json'
        # Response for a default tree rule:
        {
            "svm": {
              "uuid": "fd5db15a-15b9-11e9-a6ad-005056a760e0",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/fd5db15a-15b9-11e9-a6ad-005056a760e0"
                }
              }
            },
            "volume": {
              "uuid": "c1b64eea-ca8b-45ec-9397-ab489830d268",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/c1b64eea-ca8b-45ec-9397-ab489830d268"
                }
              }
            },
            "uuid": "4a276b8c-1753-11e9-8101-005056a760e0",
            "type": "tree",
            "qtree": {
              "name": ""
            },
            "space": {
              "hard_limit": 1034000,
              "soft_limit": 51200
            },
            "files": {
              "hard_limit": 20,
              "soft_limit": 10
            },
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules/4a276b8c-1753-11e9-8101-005056a760e0"
              }
            }
        }
        ```
        ---
        ### Retrieving a quota policy tree rule for a specific qtree
        <br/>
        ---
        ```
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules/49b1134f-19ab-11e9-a04d-005056a72f42' -H 'accept: application/hal+json'
        # Response for a tree rule for a specific qtree:
        {
            "svm": {
              "uuid": "fd5db15a-15b9-11e9-a6ad-005056a760e0",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/fd5db15a-15b9-11e9-a6ad-005056a760e0"
                }
              }
            },
            "volume": {
              "uuid": "c1b64eea-ca8b-45ec-9397-ab489830d268",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/c1b64eea-ca8b-45ec-9397-ab489830d268"
                }
              }
            },
            "uuid": "49b1134f-19ab-11e9-a04d-005056a72f42",
            "type": "tree",
            "qtree": {
              "name": "qt1",
              "id": 1,
              "_links": {
                "self": {
                  "href": "/api/storage/qtrees/c1b64eea-ca8b-45ec-9397-ab489830d268/1"
                }
              }
            },
            "space": {
              "hard_limit": 1048576,
              "soft_limit": 838861
            },
            "files": {
              "hard_limit": 100,
              "soft_limit": 40
            },
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules/49b1134f-19ab-11e9-a04d-005056a72f42"
              }
            }
        }
        ```
        ---
        ### Retrieving a quota policy group rule for a specific qtree
        <br/>
        ---
        ```
        # The call:
        curl -X GET 'https://<mgmt-ip>/api/storage/quota/rules/b9236852-19ab-11e9-a04d-005056a72f42' -H 'accept: application/hal+json'
        # Response for a group rule:
        {
            "svm": {
              "uuid": "fd5db15a-15b9-11e9-a6ad-005056a760e0",
              "name": "svm1",
              "_links": {
                "self": {
                  "href": "/api/svm/svms/fd5db15a-15b9-11e9-a6ad-005056a760e0"
                }
              }
            },
            "volume": {
              "uuid": "c1b64eea-ca8b-45ec-9397-ab489830d268",
              "name": "vol1",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/c1b64eea-ca8b-45ec-9397-ab489830d268"
                }
              }
            },
            "uuid": "b9236852-19ab-11e9-a04d-005056a72f42",
            "type": "group",
            "group": {"name" : "group1"},
            "qtree": {
              "name": "qt1",
              "id": 1,
              "_links": {
                "self": {
                  "href": "/api/storage/qtrees/c1b64eea-ca8b-45ec-9397-ab489830d268/1"
                }
              }
            },
            "space": {
              "hard_limit": 2097152,
              "soft_limit": 1572864
            },
            "files": {
              "hard_limit": 250,
              "soft_limit": 200
            },
            "_links": {
              "self": {
                "href": "/api/storage/quota/rules/b9236852-19ab-11e9-a04d-005056a72f42"
              }
            }
        }
        ```
        ---
        ### Creating a quota policy rule
        This API is used to create a new quota policy rule. When an explicit rule or a qtree-scoped rule of a type is created on a volume, a default rule of the same type is automatically added if it does not already exist on the volume. <br/>
        The following example shows how to create a quota policy user rule using POST.
        <br/>
        ---
        ```
        # The API:
        POST /api/storage/quota/rules
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/quota/rules?return_records=true' -H 'accept: application/hal+json' -d @test_quota_post.txt
        test_quota_post.txt(body):
        {
          "svm": {
            "name": "svm1"
          },
          "volume": {
            "name": "vol1"
          },
          "type": "user",
          "users": [ {"name" : "jsmith"} ],
          "qtree": {
            "name":"qt1"
          },
          "user_mapping": "on",
          "space": {
            "hard_limit": 8192,
            "soft_limit": 1024
          },
          "files": {
            "hard_limit": 20,
            "soft_limit": 10
          }
        }
        # The response
        {
            "num_records": 1,
            "records": [
              {
                "svm": {
                  "name": "svm1"
                },
                "volume": {
                  "name": "fv"
                },
                "uuid": "3220eea6-5049-11e9-bfb7-005056a7f717",
                "type": "user",
                "users": [
                  {
                    "name" : "jsmith"
                  }
                ],
                "qtree": {
                  "name": "qt1"
                },
                "user_mapping": "on",
                "space": {
                  "hard_limit": 8192,
                  "soft_limit": 1024
                },
                "files": {
                  "hard_limit": 20,
                  "soft_limit": 10
                },
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/rules/3220eea6-5049-11e9-bfb7-005056a7f717"
                  }
                }
              }
            ],
            "job": {
              "uuid": "32223924-5049-11e9-bfb7-005056a7f717",
              "_links": {
                "self": {
                  "href": "/api/cluster/jobs/32223924-5049-11e9-bfb7-005056a7f717"
                }
              }
            }
        }
        ```
        ---
        ### Creating a quota policy group rule using POST.
        <br/>
        ---
        ```
        # The API:
        POST /api/storage/quota/rules
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/quota/rules?return_records=true' -H 'accept: application/hal+json' -d @test_quota_post.txt
        test_quota_post.txt(body):
        {
          "svm": {
            "name": "svm1"
          },
          "volume": {
            "name": "vol1"
          },
          "type": "group",
          "group": {
            "name" : "test_group1"
          }
          "qtree": {
            "name":"qt1"
          },
          "space": {
            "hard_limit": 8192,
            "soft_limit": 1024
          },
          "files": {
            "hard_limit": 20,
            "soft_limit": 10
          }
        }
        # The response
        {
            "num_records": 1,
            "records": [
              {
                "svm": {
                  "name": "svm1"
                },
                "volume": {
                  "name": "fv"
                },
                "uuid": "3b130f7d-504a-11e9-bfb7-005056a7f717",
                "type": "group",
                "group": {
                    "name" : "test_group1"
                },
                "qtree": {
                  "name": "qt1"
                },
                "space": {
                  "hard_limit": 8192,
                  "soft_limit": 1024
                },
                "files": {
                  "hard_limit": 20,
                  "soft_limit": 10
                },
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/rules/3b130f7d-504a-11e9-bfb7-005056a7f717"
                  }
                }
              }
            ],
            "job": {
              "uuid": "32223924-5049-11e9-bfb7-005056a7f717",
              "_links": {
                "self": {
                  "href": "/api/cluster/jobs/32223924-5049-11e9-bfb7-005056a7f717"
                }
              }
            }
        }
        ```
        ---
        ### Creating a quota policy tree rule using POST
        <br/>
        ---
        ```
        # The API:
        POST /api/storage/quota/rules
        # The call:
        curl -X POST 'https://<mgmt-ip>/api/storage/quota/rules?return_records=true' -H 'accept: application/hal+json' -d @test_quota_post.txt
        test_quota_post.txt(body):
        {
          "svm": {
            "name": "svm1"
          },
          "volume": {
            "name": "vol1"
          },
          "type": "tree",
          "qtree": {
            "name":"qt1"
          },
          "space": {
            "hard_limit": 8192,
            "soft_limit": 1024
          },
          "files": {
            "hard_limit": 20,
            "soft_limit": 10
          }
        }
        # The response
        {
            "num_records": 1,
            "records": [
              {
                "svm": {
                  "name": "svm1"
                },
                "volume": {
                  "name": "fv"
                },
                "uuid": "e5eb03be-504a-11e9-bfb7-005056a7f717",
                "type": "tree",
                "qtree": {
                  "name": "qt1"
                },
                "space": {
                  "hard_limit": 8192,
                  "soft_limit": 1024
                },
                "files": {
                  "hard_limit": 20,
                  "soft_limit": 10
                },
                "_links": {
                  "self": {
                    "href": "/api/storage/quota/rules/e5eb03be-504a-11e9-bfb7-005056a7f717"
                  }
                }
              }
            ],
            "job": {
              "uuid": "32223924-5049-11e9-bfb7-005056a7f717",
              "_links": {
                "self": {
                  "href": "/api/cluster/jobs/32223924-5049-11e9-bfb7-005056a7f717"
                }
              }
            }
        }
        ```
        ---
        ### Updating the quota policy rule
        This API is used to update a quota policy rule.<br/>
        The following example shows how to update a quota policy rule.
        <br/>
        ---
        ```
        # The API:
        PATCH /storage/quota/rules/{uuid}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/storage/quota/rules/364d38eb-8e87-11e8-a806-005056a7e73a" -H 'accept: application/hal+json' -d "@test_quota_patch.txt"
        test_quota_patch.txt(body):
        {
          "space": {
            "hard_limit": 16554,
            "soft_limit": 8192
          },
          "files": {
            "hard_limit": 40,
            "soft_limit": 20
          }
        }
        ```
        ---
        ### Deleting the quota policy rule
        This API is used to delete a quota policy rule.<br/>
        The following example shows how to delete a quota policy rule.
        <br/>
        ---
        ```
        # The API:
        DELETE /storage/quota/rules/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/quota/rules/364d38eb-8e87-11e8-a806-005056a7e73a" -H 'accept: application/hal+json'
        ```
        ---
      tags:
      - storage
  /storage/quota/rules/{uuid}:
    delete:
      description: |-
        Deletes a quota policy rule.
        ### Related ONTAP commands
        * `quota policy rule delete`

        ### Learn more
        * [`DOC /storage/quota/rules`](#docs-storage-storage_quota_rules)
      operationId: quota_rule_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Rule UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5308545 | The specified quota rule UUID is invalid. |
            | 5308561 | Failed to obtain volume quota state or invalid quota state obtained for volume. |
            | 5308569 | Quota policy rule delete operation succeeded, but quota resize failed due to internal error. |
            | 5308572 | Quota policy rule delete operation succeeded, however the rule is still being enforced. To stop enforcing the rule, disable quotas and enable them again for this volume. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves properties for a specific quota policy rule.
        ### Related ONTAP commands
        * `quota policy rule show`

        ### Learn more
        * [`DOC /storage/quota/rules`](#docs-storage-storage_quota_rules)
      operationId: quota_rule_get
      parameters:
      - description: Rule UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/quota_rule'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5308544 | The specified quota rule UUID is invalid. |
            | 5308545 | Unable to retrieve rule for the specified quota rule UUID. |
            | 5308576 | Parameter `show_default_records` only allowed for GET collection. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Updates properties of a specific quota policy rule. <br>
        Important notes:
        * The quota resize functionality is supported with the PATCH operation.
        * Quota resize allows you to modify the quota limits, directly in the filesystem.
        * The quota must be enabled on a FlexVol or a FlexGroup volume for `quota resize` to take effect.
        * If the quota is disabled on the volume, the quota policy rule PATCH API modifies the rule, but this does not affect the limits in the filesystem.
        ### Related ONTAP commands
        * `quota policy rule modify`
        * `quota resize`

        ### Learn more
        * [`DOC /storage/quota/rules`](#docs-storage-storage_quota_rules)
      operationId: quota_rule_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Rule UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/quota_rule'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5308501 | Mapping from Windows user to UNIX user for user rule was unsuccessful. |
            | 5308502 | Mapping from UNIX user to Windows user for user rule was unsuccessful. |
            | 5308545 | The specified quota rule UUID is invalid. |
            | 5308561 | Failed to obtain volume quota state or invalid quota state obtained for volume. |
            | 5308567 | Quota policy rule modify operation succeeded, but quota resize failed due to internal error. |
            | 5308573 | Input value is greater than limit for field. |
            | 5308574 | Input value is out of range for field. |
            | 5308575 | Input value is incorrectly larger than listed field. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/shelves:
    get:
      description: |
        Retrieves a collection of shelves.
        ### Related ONTAP commands
        * `storage shelf show`
        * `storage shelf port show`
        * `storage shelf drawer show`
        ### Learn more
        * [`DOC /storage/shelves`](#docs-storage-storage_shelves)
      operationId: shelf_collection_get
      parameters:
      - description: Filter by uid
        in: query
        name: uid
        type: string
      - description: Filter by connection_type
        in: query
        name: connection_type
        type: string
      - description: Filter by drawers.id
        in: query
        name: drawers.id
        type: integer
      - description: Filter by drawers.serial_number
        in: query
        name: drawers.serial_number
        type: string
      - description: Filter by drawers.part_number
        in: query
        name: drawers.part_number
        type: string
      - description: Filter by drawers.error
        in: query
        name: drawers.error
        type: string
      - description: Filter by drawers.closed
        in: query
        name: drawers.closed
        type: boolean
      - description: Filter by drawers.state
        in: query
        name: drawers.state
        type: string
      - description: Filter by drawers.disk_count
        in: query
        name: drawers.disk_count
        type: integer
      - description: Filter by module_type
        in: query
        name: module_type
        type: string
      - description: Filter by bays.state
        in: query
        name: bays.state
        type: string
      - description: Filter by bays.has_disk
        in: query
        name: bays.has_disk
        type: boolean
      - description: Filter by bays.type
        in: query
        name: bays.type
        type: string
      - description: Filter by bays.id
        in: query
        name: bays.id
        type: integer
      - description: Filter by model
        in: query
        name: model
        type: string
      - description: Filter by serial_number
        in: query
        name: serial_number
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by disk_count
        in: query
        name: disk_count
        type: integer
      - description: Filter by frus.state
        in: query
        name: frus.state
        type: string
      - description: Filter by frus.part_number
        in: query
        name: frus.part_number
        type: string
      - description: Filter by frus.firmware_version
        in: query
        name: frus.firmware_version
        type: string
      - description: Filter by frus.type
        in: query
        name: frus.type
        type: string
      - description: Filter by frus.serial_number
        in: query
        name: frus.serial_number
        type: string
      - description: Filter by frus.id
        in: query
        name: frus.id
        type: integer
      - description: Filter by ports.module_id
        in: query
        name: ports.module_id
        type: string
      - description: Filter by ports.wwn
        in: query
        name: ports.wwn
        type: string
      - description: Filter by ports.cable.identifier
        in: query
        name: ports.cable.identifier
        type: string
      - description: Filter by ports.cable.length
        in: query
        name: ports.cable.length
        type: string
      - description: Filter by ports.cable.part_number
        in: query
        name: ports.cable.part_number
        type: string
      - description: Filter by ports.cable.serial_number
        in: query
        name: ports.cable.serial_number
        type: string
      - description: Filter by ports.state
        in: query
        name: ports.state
        type: string
      - description: Filter by ports.remote.phy
        in: query
        name: ports.remote.phy
        type: string
      - description: Filter by ports.remote.wwn
        in: query
        name: ports.remote.wwn
        type: string
      - description: Filter by ports.remote.port
        in: query
        name: ports.remote.port
        type: string
      - description: Filter by ports.remote.mac_address
        in: query
        name: ports.remote.mac_address
        type: string
      - description: Filter by ports.remote.chassis
        in: query
        name: ports.remote.chassis
        type: string
      - description: Filter by ports.mac_address
        in: query
        name: ports.mac_address
        type: string
      - description: Filter by ports.internal
        in: query
        name: ports.internal
        type: boolean
      - description: Filter by ports.designator
        in: query
        name: ports.designator
        type: string
      - description: Filter by ports.id
        in: query
        name: ports.id
        type: integer
      - description: Filter by internal
        in: query
        name: internal
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by paths.name
        in: query
        name: paths.name
        type: string
      - description: Filter by paths.node.uuid
        in: query
        name: paths.node.uuid
        type: string
      - description: Filter by paths.node.name
        in: query
        name: paths.node.name
        type: string
      - description: Filter by id
        in: query
        name: id
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/shelf_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Retrieving storage shelf information
        The storage shelf GET API retrieves all of the shelves in the cluster.
        <br/>
        ---
        ## Examples
        ### 1) Retrieve a list of shelves from the cluster
        #### The following example shows the response with a list of shelves in the cluster:
        ---
        ```
        # The API:
        /api/storage/shelves
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/shelves" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uid": "3109174803597886800",
              "_links": {
                "self": {
                  "href": "/api/storage/shelves/3109174803597886800"
                }
              }
            },
            {
              "uid": "9237728366621690448",
              "_links": {
                "self": {
                  "href": "/api/storage/shelves/9237728366621690448"
                }
              }
            },
            {
              "uid": "9946762738829886800",
              "_links": {
                "self": {
                  "href": "/api/storage/shelves/9946762738829886800"
                }
              }
            },
            {
              "uid": "10318311901725526608",
              "_links": {
                "self": {
                  "href": "/api/storage/shelves/10318311901725526608"
                }
              }
            },
            {
              "uid": "13477584846688355664",
              "_links": {
                "self": {
                  "href": "/api/storage/shelves/13477584846688355664"
                }
              }
            }
          ],
          "num_records": 5,
          "_links": {
            "self": {
              "href": "/api/storage/shelves/"
            }
          }
        }
        ```
        ---
        ### 2) Retrieve a specific shelf from the cluster
        #### The following example shows the response of the requested shelf. If there is no shelf with the requested uid, an error is returned.
        ---
        ```
        # The API:
        /api/storage/shelves/{uid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/shelves/3109174803597886800" -H "accept: application/hal+json"
        # The response:
        {
          "uid": "3109174803597886800",
          "name": "6.10",
          "id": "10",
          "serial_number": "SHU0954292N0HAH",
          "model": "DS4246",
          "module_type": "iom6",
          "internal": false,
          "state": "ok",
          "connection_type": "sas",
          "disk_count": 24,
          "paths": [
            {
              "name": "0e",
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0e"
                }
              }
            },
            {
              "name": "0g",
              "node": {
                "uuid": "0530d6c1-8c6d-11e8-907f-00a0985a72ee",
                "name": "node-1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0530d6c1-8c6d-11e8-907f-00a0985a72ee"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/storage/ports/0530d6c1-8c6d-11e8-907f-00a0985a72ee/0g"
                }
              }
            }
          ],
          "bays": [
            {
              "id": 0,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 1,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 2,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 3,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 4,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 5,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 6,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 7,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 8,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 9,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 10,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 11,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 12,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 13,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 14,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 15,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 16,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 17,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 18,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 19,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 20,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 21,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 22,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            },
            {
              "id": 23,
              "has_disk": true,
              "type": "single_disk",
              "state": "ok"
            }
          ],
          "frus": [
            {
              "type": "module",
              "id": 0,
              "state": "ok",
              "part_number": "111-00690+B2",
              "serial_number": "8001900099",
              "firmware_version": "0191"
            },
            {
              "type": "module",
              "id": 1,
              "state": "ok",
              "part_number": "111-00190+B0",
              "serial_number": "7903785183",
              "firmware_version": "0191"
            },
            {
              "type": "psu",
              "id": 1,
              "state": "ok",
              "part_number": "0082562-12",
              "serial_number": "PMW82562007513E",
              "firmware_version": "0311"
            },
            {
              "type": "psu",
              "id": 2,
              "state": "ok",
              "part_number": "0082562-12",
              "serial_number": "PMW825620075138",
              "firmware_version": "0311"
            },
            {
              "type": "psu",
              "id": 3,
              "state": "ok",
              "part_number": "0082562-12",
              "serial_number": "PMW8256200750BA",
              "firmware_version": "0311"
            },
            {
              "type": "psu",
              "id": 4,
              "state": "ok",
              "part_number": "0082562-12",
              "serial_number": "PMW8256200750A2",
              "firmware_version": "0311"
            }
          ],
          "ports": [
            {
              "id": 0,
              "module_id": "a",
              "designator": "square",
              "state": "connected",
              "internal": false,
              "wwn": "500A098000C9EDBF",
              "cable": {
                "identifier": "5001086000702488-500a098000c9edbf",
                "part_number": "112-00430+A0",
                "length": "2m",
                "serial_number": "APF16510229807"
              },
              "remote": {
                "wwn": "5001086000702488",
                "phy": "08"
              }
            },
            {
              "id": 1,
              "module_id": "a",
              "designator": "circle",
              "state": "connected",
              "internal": false,
              "wwn": "500A098000C9EDBF",
              "cable": {
                "identifier": "500a098000d5c4bf-500a098000c9edbf",
                "part_number": "112-00176+A0",
                "length": "0.5-1.0m",
                "serial_number": "APF133917610YT"
              },
              "remote": {
                "wwn": "500A098000D5C4BF",
                "phy": "00"
              }
            },
            {
              "id": 2,
              "module_id": "b",
              "designator": "square",
              "state": "connected",
              "internal": false,
              "wwn": "500A098004F208BF",
              "cable": {
                "identifier": "5001086000702648-500a098004f208bf",
                "part_number": "112-00430+A0",
                "length": "2m",
                "serial_number": "APF16510229540"
              },
              "remote": {
                "wwn": "5001086000702648",
                "phy": "08"
              }
            },
            {
              "id": 3,
              "module_id": "b",
              "designator": "circle",
              "state": "connected",
              "internal": false,
              "wwn": "500A098004F208BF",
              "cable": {
                "identifier": "500a0980062ba33f-500a098004f208bf",
                "part_number": "112-00176+20",
                "length": "0.5-1.0m",
                "serial_number": "832210017"
              },
              "remote": {
                "wwn": "500A0980062BA33F",
                "phy": "00"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/storage/shelves/3109174803597886800"
            }
          }
        }
        ```
        ---
      tags:
      - storage
  /storage/shelves/{uid}:
    get:
      description: |
        Retrieves a specific shelf.
        ### Related ONTAP commands
        * `storage shelf show`
        * `storage shelf port show`
        * `storage shelf drawer show`
        ### Learn more
        * [`DOC /storage/shelves`](#docs-storage-storage_shelves)
      operationId: shelf_get
      parameters:
      - description: Shelf UID
        in: path
        name: uid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/shelf'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/snaplock/audit-logs:
    get:
      description: |
        Retrieves a list of SVMs configured with audit log volumes.
        ### Related ONTAP commands
        * `snaplock log show`
        ### Learn more
        * [`DOC /storage/snaplock/audit-logs`](#docs-snaplock-storage_snaplock_audit-logs)
      operationId: snaplock_log_collection_get
      parameters:
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by log_files.size
        in: query
        name: log_files.size
        type: integer
      - description: Filter by log_files.base_name
        in: query
        name: log_files.base_name
        type: string
      - description: Filter by log_files.path
        in: query
        name: log_files.path
        type: string
      - description: Filter by log_files.expiry_time
        in: query
        name: log_files.expiry_time
        type: string
      - description: Filter by log_volume.volume.uuid
        in: query
        name: log_volume.volume.uuid
        type: string
      - description: Filter by log_volume.volume.name
        in: query
        name: log_volume.volume.name
        type: string
      - description: Filter by log_volume.retention_period
        in: query
        name: log_volume.retention_period
        type: string
      - description: Filter by log_volume.max_log_size
        in: query
        name: log_volume.max_log_size
        type: integer
      - description: Filter by log_archive.size
        in: query
        name: log_archive.size
        type: integer
      - description: Filter by log_archive.base_name
        in: query
        name: log_archive.base_name
        type: string
      - description: Filter by log_archive.path
        in: query
        name: log_archive.path
        type: string
      - description: Filter by log_archive.expiry_time
        in: query
        name: log_archive.expiry_time
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_log_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    post:
      description: |
        Creates a SnapLock log configuration for an SVM. A SnapLock log configuration consists of a volume to store the log, the maximum size of the log file, and the default period of time for which the log file should be retained. The input parameter retention_period expects the duration in ISO 8601 format.
        ### Required properties
        * `svm.uuid` or `svm.name` - Name or UUID of the SVM.
        * `log_volume.volume.name` or `log_volume.volume.uuid` - Name or UUID of audit log volume.
        ### Recommended optional properties
        * `log_volume.max_log_size` - Max log file size.
        * `log_volume.volume.retention_period` - Retention period of log file.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `log_volume.retention_period` - _P6M_
        * `log_volume.max_log_size` - _10MB_
        ### Related ONTAP commands
        * `snaplock log create`
        ### Learn more
        * [`DOC /storage/snaplock/audit-logs`](#docs-snaplock-storage_snaplock_audit-logs)
      operationId: snaplock_log_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_log'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090340    | {field} is a required field  |
            | 14090343    | Invalid Field  |
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        The SnapLock log volume can be a SnapLock Compliance volume or SnapLock Enterprise volume. The SnapLock log infrastructure creates directories and files in this volume to store the SnapLock log records. The maximum log size specifies the maximum size of a log file that stores SnapLock log records. When the file reaches this size, the log infrastructure archives it and creates a new log file. The default retention period is the length of time the log file is retained, if the SnapLock log records that are stored in the file do not carry any retention period.
        ### Examples
        1. Verifies that the audit log is configured for the specified SVM:
           <br/>
           ```
           GET "/api/storage/snaplock/audit-logs/?svm.name=VS0"
           ```
           <br/>
        2. Verifies that the specified volume is an audit log volume:
           <br/>
           ```
           GET "/api/storage/snaplock/audit-logs/?log_volume.volume.name=VS0_ALOG"
           ```
           <br/>
        ### Examples
        1. Creates a SnapLock log configuration by providing SVM name:
           <br/>
           ```
           POST "/api/storage/snaplock/audit-logs" '{"svm": {"name":"VS3"}, "log_volume": { "volume": { "name":"VS3_ALOG"}, "max_log_size":"20971520", "retention_period":"P30Y" }}'
           ```
           <br/>
        2. Creates a SnapLock log configuration by providing SVM UUID:
           <br/>
           ```
           POST "/api/storage/snaplock/audit-logs" '{"svm": {"uuid":"bc744cc7-296d-11e9-a26f-0050568e5b05"}, "log_volume": { "volume": { "name":"VS3_ALOG"}, "max_log_size":"20971520", "retention_period":"P30Y" }}'
           ```
           <br/>
        3. Creates a SnapLock log configuration without specifying a retention period:
           <br/>
           ```
           POST "/api/storage/snaplock/audit-logs" '{"svm": {"name":"VS3"}, "log_volume": {"volume": {"name":"VS3_ALOG"}}}'
           ```
           <br/>
        ### Examples
        1. Updates the audit log volume:
           <br/>
           ```
           PATCH "/api/storage/snaplock/audit-logs/bc744cc7-296d-11e9-a26f-0050568e5b05" '{"log_volume":{"volume":{"name":"VS4_ALOG_NEW"}}}'
           ```
           <br/>
        2. Updates the maximum size of the log file and the retention period:
           <br/>
           ```
           PATCH "/api/storage/snaplock/audit-logs/420cac7a-296a-11e9-a26f-0050568e5b05" '{"log_volume":{"max_log_size":"20971520", "retention_period":"P1Y"}}'
           ```
           <br/>
        3. Archives all of the audit log files:
           <br/>
           ```
           PATCH "/api/storage/snaplock/audit-logs/c7e4fa7d-2968-11e9-a26f-0050568e5b05" '{"log_archive":{"archive":"true"}}'
           ```
           <br/>
        4. Archives the specified audit log file:
           <br/>
           ```
           PATCH "/api/storage/snaplock/audit-logs/c7e4fa7d-2968-11e9-a26f-0050568e5b05" '{"log_archive":{"archive":"true","base_name":"privileged_delete"}}'
           ```
      tags:
      - SnapLock 
  /storage/snaplock/audit-logs/{svm.uuid}:
    delete:
      description: |
        Disassociates a SnapLock volume as the audit log volume for an SVM. This API closes all the active log files in the log volume and marks the volume as disabled for SnapLock logging.
        ### Related ONTAP commands
        * `snaplock log delete`
        ### Learn more
        * [`DOC /storage/snaplock/audit-logs`](#docs-snaplock-storage_snaplock_audit-logs)
      operationId: snaplock_log_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves SnapLock logs for the specified SVM.
        ### Related ONTAP commands
        * `snaplock log show`
        ### Learn more
        * [`DOC /storage/snaplock/audit-logs`](#docs-snaplock-storage_snaplock_audit-logs)
      operationId: snaplock_log_get
      parameters:
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_log'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    patch:
      description: |
        Updates one of the following:
          - the audit log volume,
          - the attributes of the audit log volume present, or
          - archive the current audit log files
        ### Related ONTAP commands
        * `snaplock log modify`
        ### Learn more
        * [`DOC /storage/snaplock/audit-logs`](#docs-snaplock-storage_snaplock_audit-logs)
      operationId: snaplock_log_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_log'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090344    | If log_volume is specified, then log_archive must not be specified  |
            | 14090345    | If log_archive.base_name is specified, then log_archive.archive must also be specified  |
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/compliance-clocks:
    get:
      description: |
        Retrieves the SnapLock ComplianceClock for all of the nodes in the cluster.
        ### Related ONTAP commands
        * `snaplock compliance-clock show`
        ### Learn more
        * [`DOC /storage/snaplock/compliance-clocks`](#docs-snaplock-storage_snaplock_compliance-clocks)
      operationId: snaplock_compliance_clock_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_compliance_clock_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        This API manages the ComplianceClock of the system. ComplianceClock determines the expiry time of the SnapLock objects in the system. The user can initialize the ComplianceClock once and when it is set, it cannot be changed by the user. ComplianceClock initialize is not supported in REST.
      tags:
      - SnapLock 
  /storage/snaplock/compliance-clocks/{node.uuid}:
    get:
      description: |
        Retrieves the SnapLock ComplianceClock for a specific node.
        ### Related ONTAP commands
        * `snaplock compliance-clock show`
        ### Learn more
        * [`DOC /storage/snaplock/compliance-clocks`](#docs-snaplock-storage_snaplock_compliance-clocks)
      operationId: snaplock_compliance_clock_get
      parameters:
      - description: Node UUID
        in: path
        name: node.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_compliance_clock'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/event-retention/operations:
    get:
      description: |
        Retrieves a list of all EBR operations.
        ### Related ONTAP commands
        * `snaplock event-retention show`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/operations`](#docs-snaplock-storage_snaplock_event-retention_operations)
      operationId: snaplock_retention_operation_collection_get
      parameters:
      - description: Volume UUID
        in: query
        name: volume.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebr_operation_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    post:
      description: |
        Creates an EBR policy.
        ### Required properties
        * `path` - Path of the file.
        * `policy.name` - Name of the EBR policy.
        ### Related ONTAP commands
        * `snaplock event-retention apply`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/operations`](#docs-snaplock-storage_snaplock_event-retention_operations)
      operationId: snaplock_retention_operation_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ebr_operation'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ebr_operation'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        Use this API to display all Event Based Retention (EBR) operations and to apply an EBR policy on a specified volume.
        ### Examples
        1. Displays all of the EBR operations:
           <br/>
           ```
           GET "/api/storage/snaplock/event-retention/operations"
           ```
           <br/>
        2. Displays all completed EBR operations:
           <br/>
           ```
           GET "/api/storage/snaplock/event-retention/operations?state=completed"
           ```
           <br/>
        3. Displays all completed EBR operations with filter set as volume.uuid:
           <br/>
           ```
           GET "/api/storage/snaplock/event-retention/operations?volume.uuid=b96f976e-404b-11e9-bff2-0050568e4dbe"
           ```
           <br/>
        4. Displays all of the EBR operations with filter set as volume.name:
           <br/>
           ```
           GET "/api/storage/snaplock/event-retention/operations?volume.name=SLCVOL"
           ```
           <br/>
        ### Examples
        1. Applies an EBR policy on a specific path:
           <br/>
           ```
           POST "/api/storage/snaplock/event-retention/operations" '{"volume.name":"SLCVOL", "policy.name":"p1day", "path":"/dir1/file.txt"}'
           ```
           <br/>
        2. Applies an EBR policy on the complete volume:
           <br/>
           ```
           POST "/api/storage/snaplock/event-retention/operations" '{"volume.name":"SLCVOL", "policy.name":"p1day", "path":"/"}'
           ```
           <br/>
        ### Example
        <br/>
        ```
        DELETE "/api/storage/snaplock/event-retention/operations/16842999"
        ```
        <br/>
      tags:
      - SnapLock 
  /storage/snaplock/event-retention/operations/{id}:
    delete:
      description: |
        Aborts an ongoing EBR operation.
        ### Related ONTAP commands
        * `snaplock event-retention abort`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/operations`](#docs-snaplock-storage_snaplock_event-retention_operations)
      operationId: snaplock_retention_operation_delete
      parameters:
      - description: Unique identifier of an EBR operation
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090541    | A completed or failed operation cannot be aborted |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves a list of attributes for an EBR operation.
        ### Related ONTAP commands
        * `snaplock event-retention show`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/operations`](#docs-snaplock-storage_snaplock_event-retention_operations)
      operationId: snaplock_retention_operation_get
      parameters:
      - description: Unique identifier of an EBR operation
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebr_operation'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/event-retention/policies:
    get:
      description: |
        Retrieves all event retention policies for an SVM.
        ### Related ONTAP commands
        * `snaplock event-retention policy show`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/policies`](#docs-snaplock-storage_snaplock_event-retention_policies)
      operationId: snaplock_retention_policy_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_retention_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    post:
      description: |
        Creates an Event Based Retention (EBR) policy for an SVM. The input parameter retention_period expects the duration in ISO 8601 format or infinite.
        ### Required properties
        * `name` - Event retention policy name.
        * `retention_period` - Retention period of the EBR policy.
        ### Related ONTAP commands
        * `snaplock event-retention policy create`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/policies`](#docs-snaplock-storage_snaplock_event-retention_policies)
      operationId: snaplock_retention_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snaplock_retention_policy'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/snaplock_retention_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        An event retention policy consists of a policy-name and a retention-period. The policy can be applied to a single file or files in a directory. Only a user with the security login role vsadmin-snaplock can perform the operation. EBR policies cannot be applied to files under a Legal-Hold.
        ### Examples
        1. Creates an EBR policy policy_name with a retention period of "10 years":
           <br/>
           ```
           POST "/api/storage/snaplock/event-retention/policies/" '{"name": "policy_name","retention_period": "P10Y"}'
           ```
           <br/>
        2. Creates an EBR policy policy_name1 with a retention period of "infinite":
           <br/>
           ```
           POST "/api/storage/snaplock/event-retention/policies/" '{"name": "policy_name1","retention_period": "infinite"}'
           ```
           <br/>
      tags:
      - SnapLock 
  /storage/snaplock/event-retention/policies/{policy.name}:
    delete:
      description: |
        Deletes the specified Event Based Retention (EBR) policy.
        ### Related ONTAP commands
        * `snaplock event-retention policy delete`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/policies`](#docs-snaplock-storage_snaplock_event-retention_policies)
      operationId: snaplock_retention_policy_delete
      parameters:
      - description: Name of the retention policy
        in: path
        name: policy.name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves a list of attributes of the specified Event Based Retention (EBR) policy.
        ### Related ONTAP commands
        * `snaplock event-retention policy show`
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/policies`](#docs-snaplock-storage_snaplock_event-retention_policies)
      operationId: snaplock_retention_policy_get
      parameters:
      - description: Name of the retention policy
        in: path
        name: policy.name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_retention_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    patch:
      description: |
        Updates the retention period of an Event Based Retention (EBR) policy.
        ### Related ONTAP commands
        * `snaplock event-retention policy modify`
        ### Example
        Updates the retention period of an EBR policy "policy_name":
        <br/>
        ```
        PATCH "/api/storage/snaplock/event-retention/policies/" '{"name": "policy_name","retention_period": "P20Y"}'
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/event-retention/policies`](#docs-snaplock-storage_snaplock_event-retention_policies)
      operationId: snaplock_retention_policy_modify
      parameters:
      - description: Name of the retention policy
        in: path
        name: policy.name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_retention_policy'
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/file-fingerprints:
    get:
      description: |
        Retrieves a list of all the fingerprint operations of the specified SVM and volume.
        ### Related ONTAP commands
        * `volume file fingerprint show`
        ### Example
        <br/>
        ```
        GET "/api/storage/snaplock/file-fingerprints/?svm.uuid=23940494-3f3a-11e9-8675-0050568e8f89&volume.uuid=36cdb58c-3f3a-11e9-8675-0050568e8f89"
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/file-fingerprints`](#docs-snaplock-storage_snaplock_file-fingerprints)
      operationId: snaplock_fingerprint_operation_collection_get
      parameters:
      - description: SVM UUID
        in: query
        name: svm.uuid
        required: true
        type: string
      - description: Volume UUID
        in: query
        name: volume.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_file_fingerprint_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090442    | Invalid Vserver UUID  |
            | 14090445    | Invalid key values. Provide Vserver UUID and Volume UUID  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    post:
      description: |
        Creates a fingerprint computation session on the file and returns a session-id. This session-id is a unique identifier that you can use to retrieve the progress of an ongoing fingerprint operation. When the operation is complete, you can use the session-id to retrieve the complete fingerprint output for the file .
        ### Required properties
        * `svm.uuid` or `svm.name` - Name or UUID of the SVM.
        * `volume.name` or `volume.uuid` - Name or UUID of the volume.
        * `path` - Path of the file.
        ### Default property values
        If not specified in POST, the follow default property values are assigned:
        * `algorithm` - _md5_
        ### Related ONTAP commands
        * `volume file fingerprint start`
        ### Example
        <br/>
        ```
        POST "/api/storage/snaplock/file-fingerprints" '{"svm":{"uuid":"23940494-3f3a-11e9-8675-0050568e8f89"},"volume": {"uuid":"26cdb58c-3f3a-11e9-8675-0050568e8f89"},"path":"/vol/a1.txt","algorithm":"md5"}'
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/file-fingerprints`](#docs-snaplock-storage_snaplock_file-fingerprints)
      operationId: snaplock_fingerprint_operation_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_file_fingerprint'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090443    | Invalid volume name  |
            | 14090444    | Invalid Vserver name |
            | 14090447    | Invalid volume UUID  |
            | 14090448    | Invalid key values. Provide valid Vserver name and volume name or Vserver UUID and volume UUID  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        Use this API to view key information about files and volumes, including the file type (regular, WORM, or WORM appendable), the volume expiration date, and so on.
      tags:
      - SnapLock 
  /storage/snaplock/file-fingerprints/{id}:
    delete:
      description: |
        Aborts an in-progress fingerprint operation. This API takes session-id as input and aborts the fingerprint operation that is associated with the specified session-id.
        ### Related ONTAP commands
        * `volume file fingerprint abort`
        ### Learn more
        * [`DOC /storage/snaplock/file-fingerprints`](#docs-snaplock-storage_snaplock_file-fingerprints)
      operationId: snaplock_fingerprint_operation_delete
      parameters:
      - description: Unique identifier of the operation
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090440    | File fingerprint operation has completed  |
            | 14090446    | Invalid session ID  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves the file fingerprint information for a specific session ID.
        ### Related ONTAP commands
        * `volume file fingerprint dump`
        ### Learn more
        * [`DOC /storage/snaplock/file-fingerprints`](#docs-snaplock-storage_snaplock_file-fingerprints)
      operationId: snaplock_fingerprint_operation_get
      parameters:
      - description: Unique identifier of the operation
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_file_fingerprint'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090441    | Invalid key values. Provide session ID or Vserver UUID and volume UUID  |
            | 14090449    | File fingerprint operation has not completed  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/file/{volume.uuid}/{path}:
    delete:
      description: |
        Deletes unexpired WORM files of a SnapLock Enterprise volume. This is a privileged-delete operation. The only built-in role that has access to the command is vsadmin-snaplock.
        ### Related ONTAP commands
        * `volume file privileged-delete`
        ### Learn more
        * [`DOC /storage/snaplock/file/{volume.uuid}/{path}`](#docs-snaplock-storage_snaplock_file_{volume.uuid}_{path})
      operationId: snaplock_file_privileged_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Path of the file in the form "/\<dirpath\>/\<filename\>"
        in: path
        name: path
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090347    | File path must be in the format \"/<dir>/<file path>\"  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves the SnapLock retention details of the specified file. An indefinite expiry time indicates the file is under a Legal-Hold.
        ### Related ONTAP commands
        * `volume file retention show`
        ### Learn more
        * [`DOC /storage/snaplock/file/{volume.uuid}/{path}`](#docs-snaplock-storage_snaplock_file_{volume.uuid}_{path})
      operationId: snaplock_file_retention_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Path of the file in the form "/\<dirpath\>/\<filename\>"
        in: path
        name: path
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_file_retention'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090347    | File path must be in the format \"/<dir>/<file path>\"  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    patch:
      description: |
        Updates the SnapLock retention time of a file or extends the retention time of a WORM file. Input parameter expiry_time expects the date in ISO 8601 format or infinite.
        ### Related ONTAP commands
        * `volume file retention set`
        ### Learn more
        * [`DOC /storage/snaplock/file/{volume.uuid}/{path}`](#docs-snaplock-storage_snaplock_file_{volume.uuid}_{path})
      operationId: snaplock_file_retention_time_modify
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Path of the file in the form "/\<dirpath\>/\<filename\>"
        in: path
        name: path
        required: true
        type: string
      - description: New retention time to be set.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_file_retention'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090347    | File path must be in the format \"/<dir>/<file path>\"  |
            | 14090348    | Invalid Expiry time  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        This API manages the SnapLock retention time of a file. You can perform a privileged-delete operation by executing this API.
        ### Examples
        1. Sets the SnapLock retention time of a file:
           <br/>
           +
           ```
           PATCH "/api/storage/snaplock/file/000dc5fd-4175-11e9-b937-0050568e3f82/%2Ffile2.txt" '{"expiry_time": "2030-02-14T18:30:00+5:30"}'
           ```
           <br/>
           +
        2. Extends the retention time of a WORM file:
           <br/>
           +
           ```
           PATCH "/api/storage/snaplock/file/000dc5fd-4175-11e9-b937-0050568e3f82/%2Ffile2.txt" '{"expiry_time": "infinite"}'
           ```
           <br/>
      tags:
      - SnapLock 
  /storage/snaplock/litigations:
    get:
      description: |
        Retrieves the list of litigations under an SVM.
        ### Related ONTAP commands
        * `snaplock legal-hold show`
        ### Learn more
        * [`DOC /storage/snaplock/litigations`](#docs-snaplock-storage_snaplock_litigations)
      operationId: snaplock_legal_hold_collection_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_litigation_response'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    post:
      description: |
        Starts a  Legal-Hold.
        ### Required properties
        * `path` - Path of the file.
        * `name` - Litigation name.
        * `volume.name` or `volume.uuid` - Name or UUID  of the volume.
        ### Related ONTAP commands
        * `snaplock legal-hold begin`
        ### Example
        <br/>
        ```
        POST "/api/storage/snaplock/litigations" '{"volume.name":"SLC1","name":"l3","path":"/b.txt"}'
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/litigations`](#docs-snaplock-storage_snaplock_litigations)
      operationId: snaplock_legal_hold_begin
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_litigation'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/snaplock_litigation'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090340    | {field} is a required field  |
            | 14090343    | Invalid Field  |
            | 14090641    | The specified volume.name and volume.uuid refer to different volumes  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        Use this API to retain Compliance-mode WORM files for the duration of a litigation. A file under a legal-hold behaves as a WORM file with an indefinite retention period. Litigation ID is a combination of volume UUID and litigation name in the format `<volume UUID>:<litigation name>`. Only a user with the security login role vsadmin-snaplock can perform the operation.
      tags:
      - SnapLock 
  /storage/snaplock/litigations/{id}:
    delete:
      description: |
        Creates a legal-hold end on all of the files for the specified litigation ID. This is only allowed when an operation is no longer in progress.
        ### Related ONTAP commands
        * `snaplock legal-hold end`
        ### Example
        <br/>
        ```
        DELETE "/api/storage/snaplock/litigations/fd72e138-4bc3-11e9-a85f-0050568eb48f%3Al3"
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/litigations`](#docs-snaplock-storage_snaplock_litigations)
      operationId: snaplock_legal_hold_delete
      parameters:
      - description: Litigation ID
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090343    | Invalid Field  |
            | 14090642    | Legal-Hold operation is in progress. Legal-Hold end cannot be performed. Wait for the operation to complete or abort the operation  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves the list of ongoing operations for the specified litigation ID.
        ### Related ONTAP commands
        * `snaplock legal-hold show`
        ### Learn more
        * [`DOC /storage/snaplock/litigations`](#docs-snaplock-storage_snaplock_litigations)
      operationId: snaplock_legal_hold_collection_get
      parameters:
      - description: Litigation ID
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_litigation'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090343    | Invalid Field  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snaplock/litigations/{litigation.id}/files:
    get:
      description: |-
        Displays the list of files for the specified litigation ID.
        ### Learn more
        * [`DOC /storage/snaplock/litigations/{litigation.id}/files`](#docs-snaplock-storage_snaplock_litigations_{litigation.id}_files)
      operationId: snaplock_legal_hold_files_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Litigation ID
        in: path
        name: litigation.id
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_litigation_file_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        Displays the list of files under the specified litigation ID.
      tags:
      - SnapLock 
  /storage/snaplock/litigations/{litigation.id}/operations:
    post:
      description: |
        Creates or removes litigations for the specified path.
        ### Required properties
        * `type` - Legal-Hold operation type.
        * `path` - Litigation path.
        ### Related ONTAP commands
        * `snaplock legal-hold begin`
        * `snaplock legal-hold end`
        ### Learn more
        * [`DOC /storage/snaplock/litigations/{litigation.id}/operations`](#docs-snaplock-storage_snaplock_litigations_{litigation.id}_operations)
      operationId: snaplock_legal_hold_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Litigation ID
        in: path
        name: litigation.id
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/snaplock_legal_hold_operation'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/snaplock_legal_hold_operation'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090343    | Invalid Field  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    x-ntap-long-description:
      description: |
        Manages the legal-hold operations for the specified litigation ID.
        ### Examples
        1. Adds a Legal-Hold.
           <br/>
           ```
           POST "/api/storage/snaplock/litigations/f8a67b60-4461-11e9-b327-0050568ebef5:l1/operations" '{"type" : "begin", "path" : "/a.txt"}'
           ```
           <br/>
        2. Removes a Legal-Hold.
           <br/>
           ```
           POST "/api/storage/snaplock/litigations/f8a67b60-4461-11e9-b327-0050568ebef5:l1/operations" '{"type" : "end", "path" : "/a.txt"}'
           ```
           <br/>
      tags:
      - SnapLock 
  /storage/snaplock/litigations/{litigation.id}/operations/{id}:
    delete:
      description: |
        Aborts the ongoing legal-hold operation. An abort does not rollback any changes already made. You must re-run begin or end for cleanup.
        ### Related ONTAP commands
        * `snaplock legal-hold abort`
        ### Example
        <br/>
        ```
        DELETE "/api/storage/snaplock/litigations/f8a67b60-4461-11e9-b327-0050568ebef5:l1/operations/16908292"
        ```
        <br/>
        ### Learn more
        * [`DOC /storage/snaplock/litigations/{litigation.id}/operations`](#docs-snaplock-storage_snaplock_litigations_{litigation.id}_operations)
      operationId: snaplock_legal_hold_operation_delete
      parameters:
      - description: Litigation ID
        in: path
        name: litigation.id
        required: true
        type: string
      - description: Operation ID.
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090541    | A completed or failed operation cannot be aborted  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
    get:
      description: |
        Retrieves the status of legal-hold for the specified operation ID.
        ### Related ONTAP commands
        * `snaplock legal-hold show`
        ### Learn more
        * [`DOC /storage/snaplock/litigations/{litigation.id}/operations`](#docs-snaplock-storage_snaplock_litigations_{litigation.id}_operations)
      operationId: snaplock_legal_hold_get
      parameters:
      - description: Litigation ID
        in: path
        name: litigation.id
        required: true
        type: string
      - description: Operation ID.
        in: path
        name: id
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snaplock_legal_hold_operation'
        default:
          description: |
            ONTAP Error Response codes
            | Error code  |  Description |
            |-------------|--------------|
            | 14090346    | Internal Error. Wait a few minutes, then try the command again  |
            | 14090343    | Invalid Field  |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SnapLock 
  /storage/snapshot-policies:
    get:
      description: |
        Retrieves a collection of Snapshot copy policies.
        ### Related ONTAP commands
        * `snapshot policy show`
        ### Learn more
        * [`DOC /storage/snapshot-policies`](#docs-storage-storage_snapshot-policies)
      operationId: snapshot_policy_collection_get
      parameters:
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by enabled
        in: query
        name: enabled
        type: boolean
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by copies.prefix
        in: query
        name: copies.prefix
        type: string
      - description: Filter by copies.schedule.name
        in: query
        name: copies.schedule.name
        type: string
      - description: Filter by copies.snapmirror_label
        in: query
        name: copies.snapmirror_label
        type: string
      - description: Filter by copies.count
        in: query
        name: copies.count
        type: integer
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_policy_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Creates a Snapshot copy policy.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the Snapshot copy policy.
        * `name` - Name for the Snapshot copy policy.
        * `copies.schedule` - Schedule at which Snapshot copies are captured on the volume.
        * `copies.count` - Number of Snapshot copies to maintain for this schedule.
        ### Recommended optional properties
        * `copies.prefix` - Prefix to use when creating Snapshot copies at regular intervals.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `enabled` - _true_
        * `copies.prefix` - Value of `schedule.name`
        ### Related ONTAP commands
        * `snapshot policy create`
        ### Learn more
        * [`DOC /storage/snapshot-policies`](#docs-storage-storage_snapshot-policies)
      operationId: snapshot_policy_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot_policy'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638407    | When adding schedule to a Snapshot copy policy, the count for that schedule must be specified. |
            | 1638408    | When adding schedule to a Snapshot copy policy, the schedule name must be specified. |
            | 1638413    | Schedule not found. |
            | 1638417    | Specified policy name is invalid. |
            | 1638451    | This operation would result in total Snapshot copy count for the policy to exceed maximum supported count. |
            | 1638508    | Another schedule has the same prefix within this policy. |
            | 1638526    | This operation is not supported on a node Vserver. |
            | 1638527    | Policy name already exists. |
            | 1638528    | This operation is not supported in a mixed-version cluster. |
            | 1638531    | This operation is not supported because specified policy is owned by the cluster admin. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        In ONTAP, scheduled Snapshot copy creation works based on Snapshot copy policies.
        ONTAP provides three cluster-wide Snapshot copy policies: "default", "default-1weekly" and "none".
        A Snapshot copy policy can have more than one schedule associated with it.
        A Snapshot copy policy can be linked to a storage object and based on the schedule in the policy, Snapshot copies will be created on the object at that interval.
        Each schedule in a Snapshot copy policy has a Snapshot copy name prefix attached to it. Every Snapshot copy created using this policy will have this prefix in its name.
        There is also a retention count associated with every schedule. This count indicates the maximum number of Snapshot copies that can exist for a given schedule. Once the Snapshot copy count reaches the retention count, on the next create operation, the oldest Snapshot copy is deleted.<br/>
        ## Snapshot copy policy APIs
        The following APIs are used to perform operations related to Snapshot copy policy information:
        &ndash; POST      /api/storage/snapshot_policies
        &ndash; GET       /api/storage/snapshot_policies
        &ndash; GET       /api/storage/snapshot_policies/{uuid}
        &ndash; PATCH     /api/storage/snapshot_policies/{uuid}
        &ndash; DELETE    /api/storage/snapshot_policies/{uuid}
        ## Examples
        ### Creating a Snapshot copy policy
        The POST operation is used to create a Snapshot copy policy with the specified attributes.
        ```
        # The API:
        /api/storage/snapshot_policies
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/snapshot_policies" -H "accept: application/hal+json" -d '{"name": "new_policy", "enabled": "true", "comment": "policy comment", "copies": [{ "schedule": { "name": "5min" }, "count": "5", "prefix": "xyz" }], "svm": { "name": "vs0"}}'
        # The response:
        HTTP/1.1 201 Created
        Date: Tue, 12 Mar 2019 21:20:24 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/snapshot_policies/a69d8173-450c-11e9-aa44-005056bbc848
        Content-Length: 369
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "uuid": "a69d8173-450c-11e9-aa44-005056bbc848",
              "svm": {
                "name": "vs0"
              },
              "name": "new_policy",
              "comment": "This is a 5min schedule policy",
              "enabled": true,
              "copies": [
                {
                  "count": 5,
                  "schedule": {
                    "name": "5min"
                  }
                }
              ]
            }
          ]
        }
        ```
        ### Retrieving Snapshot copy policy attributes
        The GET operation is used to retrieve Snapshot copy policy attributes.
        ```
        # The API:
        /api/storage/snapshot_policies
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/snapshot_policies/" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Tue, 12 Mar 2019 21:17:17 GMT
        Server: libzapid-http
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 686
        Content-Type: application/json
        {
          "records": [
            {
              "uuid": "0fa7a554-348d-11e9-b55e-005056bbf1c8",
              "name": "spsv0",
              "_links": {
                "self": {
                  "href": "/api/storage/snapshot_policies/0fa7a554-348d-11e9-b55e-005056bbf1c8"
                }
              }
            },
            {
              "uuid": "3c112527-2fe8-11e9-b55e-005056bbf1c8",
              "name": "default",
              "_links": {
                "self": {
                  "href": "/api/storage/snapshot_policies/3c112527-2fe8-11e9-b55e-005056bbf1c8"
                }
              }
            },
            {
              "uuid": "3c1c1656-2fe8-11e9-b55e-005056bbf1c8",
              "name": "default-1weekly",
              "_links": {
                "self": {
                  "href": "/api/storage/snapshot_policies/3c1c1656-2fe8-11e9-b55e-005056bbf1c8"
                }
              }
            },
            {
              "uuid": "3c228b82-2fe8-11e9-b55e-005056bbf1c8",
              "name": "none",
              "_links": {
                "self": {
                  "href": "/api/storage/snapshot_policies/3c228b82-2fe8-11e9-b55e-005056bbf1c8"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/storage/snapshot_policies/"
            }
          }
        }
        ```
        ### Retrieving the attributes of a specific Snapshot copy policy
        The GET operation is used to retrieve the attributes of a specific Snapshot copy policy.
        ```
        # The API:
        /api/storage/snapshot_policies
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/snapshot_policies/3c112527-2fe8-11e9-b55e-005056bbf1c8" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Tue, 12 Mar 2019 21:24:48 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 381
        Content-Type: application/json
        {
          "uuid": "3c112527-2fe8-11e9-b55e-005056bbf1c8",
          "name": "default",
          "comment": "Default policy with hourly, daily & weekly schedules.",
          "enabled": true,
          "scope": "cluster",
          "copies": [
            {
              "count": 6,
              "prefix": "hourly",
              "schedule": {
                "name": "hourly"
              }
            },
            {
              "count": 2,
              "prefix": "daily",
              "schedule": {
                "name": "daily"
              }
            },
            {
              "count": 2,
              "prefix": "weekly",
              "schedule": {
                "name": "weekly"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/storage/snapshot_policies/3c112527-2fe8-11e9-b55e-005056bbf1c8"
            }
          }
        }
        ```
        ### Updating a Snapshot copy policy
        The PATCH operation is used to update the specific attributes of a Snapshot copy policy.
        ```
        # The API:
        /api/storage/snapshot_policies/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/snapshot_policies/ae9e65c4-4506-11e9-aa44-005056bbc848" -d '{"enabled": "false" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Tue, 12 Mar 2019 21:27:04 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/json
        ```
        ### Deleting a Snapshot copy policy
        The DELETE operation is used to delete a Snapshot copy policy.
        ```
        # The API:
        /api/storage/snapshot_policies/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/snapshot_policies/  ae9e65c4-4506-11e9-aa44-005056bbc848" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Tue, 12 Mar 2019 21:19:04 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/json
        ```
      tags:
      - storage
  /storage/snapshot-policies/{snapshot-policy.uuid}/schedules:
    get:
      description: |
        Retrieves a collection of Snapshot copy policy schedules.
        ### Related ONTAP commands
        * `snapshot policy show`
        ### Learn more
        * [`DOC /storage/snapshot-policies/{snapshot-policy.uuid}/schedules`](#docs-storage-storage_snapshot-policies_{snapshot-policy.uuid}_schedules)
      operationId: snapshot_policy_schedule_collection_get
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: snapshot-policy.uuid
        required: true
        type: string
      - description: Filter by count
        in: query
        name: count
        type: integer
      - description: Filter by prefix
        in: query
        name: prefix
        type: string
      - description: Filter by snapshot_policy.uuid
        in: query
        name: snapshot_policy.uuid
        type: string
      - description: Filter by snapshot_policy.name
        in: query
        name: snapshot_policy.name
        type: string
      - description: Filter by schedule.uuid
        in: query
        name: schedule.uuid
        type: string
      - description: Filter by schedule.name
        in: query
        name: schedule.name
        type: string
      - description: Filter by snapmirror_label
        in: query
        name: snapmirror_label
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_policy_schedule_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Adds a schedule to a Snapshot copy policy.
        ### Required properties
        * `schedule.uuid` or `schedule.name` - Schedule at which Snapshot copies are captured on the volume.
        * `count` - Number of Snapshot copies to maintain for this schedule.
        ### Recommended optional properties
        * `prefix` - Prefix to use when creating Snapshot copies at regular intervals.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `prefix` - Value of `schedule.name`
        ### Related ONTAP commands
        * `snapshot policy add-schedule`
        ### Learn more
        * [`DOC /storage/snapshot-policies/{snapshot-policy.uuid}/schedules`](#docs-storage-storage_snapshot-policies_{snapshot-policy.uuid}_schedules)
      operationId: snapshot_policy_schedule_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Snapshot copy policy UUID
        in: path
        name: snapshot-policy.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot_policy_schedule'
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638407    | When adding schedule to a Snapshot copy policy, the count for that schedule must be specified. |
            | 1638410    | Specified schedule already exists in snapshot policy. |
            | 1638413    | Schedule not found. |
            | 1638451    | This operation would result in total Snapshot copy count for the policy to exceed maximum supported count. |
            | 1638508    | Another schedule has the same prefix within this policy. |
            | 1638528    | This operation is not supported in a mixed-version cluster. |
            | 1638531    | This operation is not supported because specified policy is owned by the cluster admin. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        In ONTAP, scheduled Snapshot copy creation works based on the schedules associated with Snapshot copy policies.
        ONTAP provides six cluster-wide schedules: "5min", "8hour", "hourly", "daily", "weekly" and "monthly".
        A Snapshot copy policy is created using at least one of these schedules and up to 5 schedules can be associated with a Snapshot copy policy.
        A Snapshot copy policy can be linked to a storage object and based on the schedule in the policy, Snapshot copies are created on the object at that interval.
        Each schedule in a Snapshot copy policy has a Snapshot copy name prefix attached to it. Every Snapshot copy created using this policy has this prefix in its name.
        There is also a retention count associated with every schedule. This count indicates the maximum number of Snapshot copies that can exist for a given schedule.
        Once the Snapshot copy count reaches the retention count, on the next create operation, the oldest Snapshot copy is deleted.
        A schedule can be added, modified or deleted from a Snapshot copy policy.<br/>
        ## Snapshot copy policy schedule APIs
        The following APIs are used to perform operations related to Snapshot copy policy schedules:
        &ndash; POST      /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/
        &ndash; GET       /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/
        &ndash; GET       /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/{uuid}
        &ndash; PATCH     /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/{uuid}
        &ndash; DELETE    /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/{uuid}
        ## Examples
        ### Adding schedule to a Snapshot copy policy
        The POST operation is used to create a schedule for a Snapshot copy policy with the specified attributes.
        ```
        # The API:
        /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules" -H "accept: application/hal+json" -d '{"schedule.uuid": "7c985d80-818a-11e9-b4f4-005056bbab9c", "count": "5", "prefix": "new_hourly" }'
        # The response:
        HTTP/1.1 201 Created
        Date: Wed, 29 May 2019 22:41:33 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules
        Content-Length: 271
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "snapshot_policy": {
                "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
              },
              "schedule": {
                "uuid": "7c985d80-818a-11e9-b4f4-005056bbab9c"
              },
              "count": 5,
              "prefix": "new_monthly"
            }
          ]
        }
        ```
        ### Retrieving Snapshot copy policy schedules
        The GET operation is used to retrieve Snapshot copy policy schedules.
        ```
        # The API:
        /api/storage/snapshot-policies/{snapshot-policy.uuid}/schedules/
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 29 May 2019 22:49:58 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 898
        Content-Type: application/json
        {
          "records": [
            {
              "snapshot_policy": {
                "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
              },
              "schedule": {
                "uuid": "63d017dc-818a-11e9-b4f4-005056bbab9c",
                "name": "5min"
              }
            },
            {
              "snapshot_policy": {
                "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
              },
              "schedule": {
                "uuid": "64a5c5da-818a-11e9-b4f4-005056bbab9c",
                "name": "8hour"
              }
            },
            {
              "snapshot_policy": {
                "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
              },
              "schedule": {
                "uuid": "63e21a3e-818a-11e9-b4f4-005056bbab9c",
                "name": "daily"
              }
            },
            {
              "snapshot_policy": {
                "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
              },
              "schedule": {
                "uuid": "7c985d80-818a-11e9-b4f4-005056bbab9c",
                "name": "monthly"
              }
            }
          ],
          "num_records": 4
        }
        ```
        ### Retrieving the attributes of a specific Snapshot copy policy schedule
        The GET operation is used to retrieve the attributes of a specific Snapshot copy policy schedule.
        ```
        # The API:
        /api/storage/snapshot-policies/{uuid}/schedules/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules/7c985d80-818a-11e9-b4f4-005056bbab9c" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 29 May 2019 22:54:06 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 238
        Content-Type: application/json
        {
          "snapshot_policy": {
            "uuid": "32a0841a-818e-11e9-b4f4-005056bbab9c"
          },
          "schedule": {
            "uuid": "7c985d80-818a-11e9-b4f4-005056bbab9c",
            "name": "monthly"
          },
          "count": 5,
          "prefix": "new_monthly",
          "snapmirror_label": "-"
        }
        ```
        ### Updating a Snapshot copy policy schedule
        The PATCH operation is used to update the specific attributes of a Snapshot copy policy.
        ```
        # The API:
        /api/storage/snapshot-policies/{uuid}/schedules/{uuid}
        # The call:
          curl -X PATCH  "https://<mgmt-ip>/api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules/7c985d80-818a-11e9-b4f4-005056bbab9c" -d '{"count": "10" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 29 May 2019 23:08:00 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/json
        ```
        ### Deleting a Snapshot copy policy
        The DELETE operation is used to delete a Snapshot copy policy.
        ```
        # The API:
        /api/storage/snapshot-policies/{uuid}/schedules/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/snapshot-policies/32a0841a-818e-11e9-b4f4-005056bbab9c/schedules/7c985d80-818a-11e9-b4f4-005056bbab9c" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 29 May 2019 23:12:32 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/json
        ```
      tags:
      - storage
  /storage/snapshot-policies/{snapshot-policy.uuid}/schedules/{uuid}:
    delete:
      description: |
        Deletes a schedule from a Snapshot copy policy
        ### Related ONTAP commands
        * `snapshot policy remove-schedule`
        ### Learn more
        * [`DOC /storage/snapshot-policies/{snapshot-policy.uuid}/schedules`](#docs-storage-storage_snapshot-policies_{snapshot-policy.uuid}_schedules)
      operationId: snapshot_policy_schedule_delete
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: snapshot-policy.uuid
        required: true
        type: string
      - description: Snapshot copy policy schedule UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Code
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638412    | Schedule does not exist in snapshot policy. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves details of a specific Snapshot copy policy schedule.
        ### Related ONTAP commands
        * `snapshot policy show`
        ### Learn more
        * [`DOC /storage/snapshot-policies/{snapshot-policy.uuid}/schedules`](#docs-storage-storage_snapshot-policies_{snapshot-policy.uuid}_schedules)
      operationId: snapshot_policy_schedule_get
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: snapshot-policy.uuid
        required: true
        type: string
      - description: Snapshot copy policy schedule ID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_policy_schedule'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates a Snapshot copy policy schedule
        ### Related ONTAP commands
        * `snapshot policy modify-schedule`
        ### Learn more
        * [`DOC /storage/snapshot-policies/{snapshot-policy.uuid}/schedules`](#docs-storage-storage_snapshot-policies_{snapshot-policy.uuid}_schedules)
      operationId: snapshot_policy_schedule_modify
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: snapshot-policy.uuid
        required: true
        type: string
      - description: Snapshot copy policy schedule UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot_policy_schedule'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Code
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638451    | This operation would result in total Snapshot copy count for the policy to exceed maximum supported count. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/snapshot-policies/{uuid}:
    delete:
      description: |
        Deletes a Snapshot copy policy
        ### Related ONTAP commands
        * `snapshot policy delete`
        ### Learn more
        * [`DOC /storage/snapshot-policies`](#docs-storage-storage_snapshot-policies)
      operationId: snapshot_policy_delete
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Code
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638415    | Cannot delete policy. Reason: Policy is in use by at least one volume. |
            | 1638416    | Cannot delete policy. Reason: Cannot verify whether policy is in use. |
            | 1638430    | Cannot delete policy. Reason: Policy is in use by at least one Vserver. |
            | 1638430    | Cannot delete built-in policy. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves details of a specific Snapshot copy policy.
        ### Related ONTAP commands
        * `snapshot policy show`
        ### Learn more
        * [`DOC /storage/snapshot-policies`](#docs-storage-storage_snapshot-policies)
      operationId: snapshot_policy_get
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_policy'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates a Snapshot copy policy
        ### Related ONTAP commands
        * `snapshot policy modify`
        * `snapshot policy modify-schedule`
        * `snapshot policy add-schedule`
        ### Learn more
        * [`DOC /storage/snapshot-policies`](#docs-storage-storage_snapshot-policies)
      operationId: snapshot_policy_modify
      parameters:
      - description: Snapshot copy policy UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot_policy'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Code
            | Error Code | Description |
            | ---------- | ----------- |
            | 1638414    | Cannot enable policy. Reason: Specified schedule not found. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/volumes:
    get:
      description: |-
        Retrieves volumes.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `is_svm_root`
        * `application.*`
        * `encryption.*`
        * `clone.parent_snapshot.name`
        * `clone.parent_snapshot.uuid`
        * `clone.parent_svm.name`
        * `clone.parent_svm.uuid`
        * `clone.parent_volume.name`
        * `clone.parent_volume.uuid`
        * `clone.split_complete_percent`
        * `clone.split_estimate`
        * `clone.split_initiated`
        * `efficiency.*`
        * `error_state.*`
        * `files.*`
        * `nas.export_policy.id`
        * `nas.gid`
        * `nas.path`
        * `nas.security_style`
        * `nas.uid`
        * `nas.unix_permissions`
        * `snaplock.*`
        * `restore_to.*`
        * `snapshot_policy.uuid`
        * `quota.*`
        * `qos.*`
        * `flexcache_endpoint_type`
        * `space.block_storage_inactive_user_data`
        * `space.capacity_tier_footprint`
        * `space.footprint`
        * `space.over_provisioned`
        * `space.metadata`
        * `space.logical_space.*`
        * `space.snapshot.*`
        * `guarantee.*`
        * `autosize.*`
        * `movement.*`
        * `statistics.*`
        ### Related ONTAP commands
        * `volume show`
        * `volume clone show`
        * `volume efficiency show`
        * `volume encryption show`
        * `volume flexcache show`
        * `volume flexgroup show`
        * `volume move show`
        * `volume quota show`
        * `volume show-space`
        * `volume snaplock show`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_collection_get
      parameters:
      - description: Filter by snapshot_policy.uuid
        in: query
        name: snapshot_policy.uuid
        type: string
      - description: Filter by snapshot_policy.name
        in: query
        name: snapshot_policy.name
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by application.name
        in: query
        name: application.name
        type: string
      - description: Filter by application.uuid
        in: query
        name: application.uuid
        type: string
      - description: Filter by style
        in: query
        name: style
        type: string
      - description: Filter by aggregates.name
        in: query
        name: aggregates.name
        type: string
      - description: Filter by aggregates.uuid
        in: query
        name: aggregates.uuid
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by tiering.policy
        in: query
        name: tiering.policy
        type: string
      - description: Filter by space.capacity_tier_footprint
        in: query
        name: space.capacity_tier_footprint
        type: integer
      - description: Filter by space.over_provisioned
        in: query
        name: space.over_provisioned
        type: integer
      - description: Filter by space.logical_space.reporting
        in: query
        name: space.logical_space.reporting
        type: boolean
      - description: Filter by space.logical_space.available
        in: query
        name: space.logical_space.available
        type: integer
      - description: Filter by space.logical_space.enforcement
        in: query
        name: space.logical_space.enforcement
        type: boolean
      - description: Filter by space.logical_space.used_by_afs
        in: query
        name: space.logical_space.used_by_afs
        type: integer
      - description: Filter by space.block_storage_inactive_user_data
        in: query
        name: space.block_storage_inactive_user_data
        type: integer
      - description: Filter by space.snapshot.used
        in: query
        name: space.snapshot.used
        type: integer
      - description: Filter by space.snapshot.reserve_percent
        in: query
        name: space.snapshot.reserve_percent
        type: integer
      - description: Filter by space.metadata
        in: query
        name: space.metadata
        type: integer
      - description: Filter by space.size
        in: query
        name: space.size
        type: integer
      - description: Filter by space.footprint
        in: query
        name: space.footprint
        type: integer
      - description: Filter by space.used
        in: query
        name: space.used
        type: integer
      - description: Filter by space.available
        in: query
        name: space.available
        type: integer
      - description: Filter by files.maximum
        in: query
        name: files.maximum
        type: integer
      - description: Filter by files.used
        in: query
        name: files.used
        type: integer
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by efficiency.policy.name
        in: query
        name: efficiency.policy.name
        type: string
      - description: Filter by efficiency.cross_volume_dedupe
        in: query
        name: efficiency.cross_volume_dedupe
        type: string
      - description: Filter by efficiency.compaction
        in: query
        name: efficiency.compaction
        type: string
      - description: Filter by efficiency.compression
        in: query
        name: efficiency.compression
        type: string
      - description: Filter by efficiency.dedupe
        in: query
        name: efficiency.dedupe
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by consistency_group.name
        in: query
        name: consistency_group.name
        type: string
      - description: Filter by snapmirror.is_protected
        in: query
        name: snapmirror.is_protected
        type: boolean
      - description: Filter by statistics.iops_raw.other
        in: query
        name: statistics.iops_raw.other
        type: integer
      - description: Filter by statistics.iops_raw.write
        in: query
        name: statistics.iops_raw.write
        type: integer
      - description: Filter by statistics.iops_raw.read
        in: query
        name: statistics.iops_raw.read
        type: integer
      - description: Filter by statistics.iops_raw.total
        in: query
        name: statistics.iops_raw.total
        type: integer
      - description: Filter by statistics.cloud.timestamp
        in: query
        name: statistics.cloud.timestamp
        type: string
      - description: Filter by statistics.cloud.latency_raw.other
        in: query
        name: statistics.cloud.latency_raw.other
        type: integer
      - description: Filter by statistics.cloud.latency_raw.write
        in: query
        name: statistics.cloud.latency_raw.write
        type: integer
      - description: Filter by statistics.cloud.latency_raw.read
        in: query
        name: statistics.cloud.latency_raw.read
        type: integer
      - description: Filter by statistics.cloud.latency_raw.total
        in: query
        name: statistics.cloud.latency_raw.total
        type: integer
      - description: Filter by statistics.cloud.status
        in: query
        name: statistics.cloud.status
        type: string
      - description: Filter by statistics.cloud.iops_raw.other
        in: query
        name: statistics.cloud.iops_raw.other
        type: integer
      - description: Filter by statistics.cloud.iops_raw.write
        in: query
        name: statistics.cloud.iops_raw.write
        type: integer
      - description: Filter by statistics.cloud.iops_raw.read
        in: query
        name: statistics.cloud.iops_raw.read
        type: integer
      - description: Filter by statistics.cloud.iops_raw.total
        in: query
        name: statistics.cloud.iops_raw.total
        type: integer
      - description: Filter by statistics.throughput_raw.other
        in: query
        name: statistics.throughput_raw.other
        type: integer
      - description: Filter by statistics.throughput_raw.write
        in: query
        name: statistics.throughput_raw.write
        type: integer
      - description: Filter by statistics.throughput_raw.read
        in: query
        name: statistics.throughput_raw.read
        type: integer
      - description: Filter by statistics.throughput_raw.total
        in: query
        name: statistics.throughput_raw.total
        type: integer
      - description: Filter by statistics.timestamp
        in: query
        name: statistics.timestamp
        type: string
      - description: Filter by statistics.latency_raw.other
        in: query
        name: statistics.latency_raw.other
        type: integer
      - description: Filter by statistics.latency_raw.write
        in: query
        name: statistics.latency_raw.write
        type: integer
      - description: Filter by statistics.latency_raw.read
        in: query
        name: statistics.latency_raw.read
        type: integer
      - description: Filter by statistics.latency_raw.total
        in: query
        name: statistics.latency_raw.total
        type: integer
      - description: Filter by statistics.status
        in: query
        name: statistics.status
        type: string
      - description: Filter by metric.iops.other
        in: query
        name: metric.iops.other
        type: integer
      - description: Filter by metric.iops.write
        in: query
        name: metric.iops.write
        type: integer
      - description: Filter by metric.iops.read
        in: query
        name: metric.iops.read
        type: integer
      - description: Filter by metric.iops.total
        in: query
        name: metric.iops.total
        type: integer
      - description: Filter by metric.timestamp
        in: query
        name: metric.timestamp
        type: string
      - description: Filter by metric.status
        in: query
        name: metric.status
        type: string
      - description: Filter by metric.cloud.latency.other
        in: query
        name: metric.cloud.latency.other
        type: integer
      - description: Filter by metric.cloud.latency.write
        in: query
        name: metric.cloud.latency.write
        type: integer
      - description: Filter by metric.cloud.latency.read
        in: query
        name: metric.cloud.latency.read
        type: integer
      - description: Filter by metric.cloud.latency.total
        in: query
        name: metric.cloud.latency.total
        type: integer
      - description: Filter by metric.cloud.duration
        in: query
        name: metric.cloud.duration
        type: string
      - description: Filter by metric.cloud.status
        in: query
        name: metric.cloud.status
        type: string
      - description: Filter by metric.cloud.iops.other
        in: query
        name: metric.cloud.iops.other
        type: integer
      - description: Filter by metric.cloud.iops.write
        in: query
        name: metric.cloud.iops.write
        type: integer
      - description: Filter by metric.cloud.iops.read
        in: query
        name: metric.cloud.iops.read
        type: integer
      - description: Filter by metric.cloud.iops.total
        in: query
        name: metric.cloud.iops.total
        type: integer
      - description: Filter by metric.cloud.timestamp
        in: query
        name: metric.cloud.timestamp
        type: string
      - description: Filter by metric.throughput.other
        in: query
        name: metric.throughput.other
        type: integer
      - description: Filter by metric.throughput.write
        in: query
        name: metric.throughput.write
        type: integer
      - description: Filter by metric.throughput.read
        in: query
        name: metric.throughput.read
        type: integer
      - description: Filter by metric.throughput.total
        in: query
        name: metric.throughput.total
        type: integer
      - description: Filter by metric.duration
        in: query
        name: metric.duration
        type: string
      - description: Filter by metric.latency.other
        in: query
        name: metric.latency.other
        type: integer
      - description: Filter by metric.latency.write
        in: query
        name: metric.latency.write
        type: integer
      - description: Filter by metric.latency.read
        in: query
        name: metric.latency.read
        type: integer
      - description: Filter by metric.latency.total
        in: query
        name: metric.latency.total
        type: integer
      - description: Filter by encryption.status.code
        in: query
        name: encryption.status.code
        type: string
      - description: Filter by encryption.status.message
        in: query
        name: encryption.status.message
        type: string
      - description: Filter by encryption.enabled
        in: query
        name: encryption.enabled
        type: boolean
      - description: Filter by encryption.state
        in: query
        name: encryption.state
        type: string
      - description: Filter by encryption.type
        in: query
        name: encryption.type
        type: string
      - description: Filter by encryption.rekey
        in: query
        name: encryption.rekey
        type: boolean
      - description: Filter by encryption.key_id
        in: query
        name: encryption.key_id
        type: string
      - description: Filter by error_state.has_bad_blocks
        in: query
        name: error_state.has_bad_blocks
        type: boolean
      - description: Filter by error_state.is_inconsistent
        in: query
        name: error_state.is_inconsistent
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by quota.state
        in: query
        name: quota.state
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by autosize.mode
        in: query
        name: autosize.mode
        type: string
      - description: Filter by autosize.grow_threshold
        in: query
        name: autosize.grow_threshold
        type: integer
      - description: Filter by autosize.minimum
        in: query
        name: autosize.minimum
        type: integer
      - description: Filter by autosize.maximum
        in: query
        name: autosize.maximum
        type: integer
      - description: Filter by autosize.shrink_threshold
        in: query
        name: autosize.shrink_threshold
        type: integer
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by snaplock.retention.minimum
        in: query
        name: snaplock.retention.minimum
        type: string
      - description: Filter by snaplock.retention.maximum
        in: query
        name: snaplock.retention.maximum
        type: string
      - description: Filter by snaplock.retention.default
        in: query
        name: snaplock.retention.default
        type: string
      - description: Filter by snaplock.litigation_count
        in: query
        name: snaplock.litigation_count
        type: integer
      - description: Filter by snaplock.compliance_clock_time
        in: query
        name: snaplock.compliance_clock_time
        type: string
      - description: Filter by snaplock.privileged_delete
        in: query
        name: snaplock.privileged_delete
        type: string
      - description: Filter by snaplock.autocommit_period
        in: query
        name: snaplock.autocommit_period
        type: string
      - description: Filter by snaplock.expiry_time
        in: query
        name: snaplock.expiry_time
        type: string
      - description: Filter by snaplock.is_audit_log
        in: query
        name: snaplock.is_audit_log
        type: boolean
      - description: Filter by snaplock.type
        in: query
        name: snaplock.type
        type: string
      - description: Filter by snaplock.append_mode_enabled
        in: query
        name: snaplock.append_mode_enabled
        type: boolean
      - description: Filter by clone.parent_snapshot.name
        in: query
        name: clone.parent_snapshot.name
        type: string
      - description: Filter by clone.parent_snapshot.uuid
        in: query
        name: clone.parent_snapshot.uuid
        type: string
      - description: Filter by clone.parent_volume.uuid
        in: query
        name: clone.parent_volume.uuid
        type: string
      - description: Filter by clone.parent_volume.name
        in: query
        name: clone.parent_volume.name
        type: string
      - description: Filter by clone.split_estimate
        in: query
        name: clone.split_estimate
        type: integer
      - description: Filter by clone.parent_svm.uuid
        in: query
        name: clone.parent_svm.uuid
        type: string
      - description: Filter by clone.parent_svm.name
        in: query
        name: clone.parent_svm.name
        type: string
      - description: Filter by clone.split_initiated
        in: query
        name: clone.split_initiated
        type: boolean
      - description: Filter by clone.split_complete_percent
        in: query
        name: clone.split_complete_percent
        type: integer
      - description: Filter by clone.is_flexclone
        in: query
        name: clone.is_flexclone
        type: boolean
      - description: Filter by qos.policy.max_throughput_iops
        in: query
        name: qos.policy.max_throughput_iops
        type: integer
      - description: Filter by qos.policy.uuid
        in: query
        name: qos.policy.uuid
        type: string
      - description: Filter by qos.policy.max_throughput_mbps
        in: query
        name: qos.policy.max_throughput_mbps
        type: integer
      - description: Filter by qos.policy.min_throughput_iops
        in: query
        name: qos.policy.min_throughput_iops
        type: integer
      - description: Filter by qos.policy.name
        in: query
        name: qos.policy.name
        type: string
      - description: Filter by flexcache_endpoint_type
        in: query
        name: flexcache_endpoint_type
        type: string
      - description: Filter by guarantee.type
        in: query
        name: guarantee.type
        type: string
      - description: Filter by guarantee.honored
        in: query
        name: guarantee.honored
        type: boolean
      - description: Filter by nas.unix_permissions
        in: query
        name: nas.unix_permissions
        type: integer
      - description: Filter by nas.gid
        in: query
        name: nas.gid
        type: integer
      - description: Filter by nas.export_policy.name
        in: query
        name: nas.export_policy.name
        type: string
      - description: Filter by nas.export_policy.id
        in: query
        name: nas.export_policy.id
        type: integer
      - description: Filter by nas.security_style
        in: query
        name: nas.security_style
        type: string
      - description: Filter by nas.path
        in: query
        name: nas.path
        type: string
      - description: Filter by nas.uid
        in: query
        name: nas.uid
        type: integer
      - description: Filter by is_svm_root
        in: query
        name: is_svm_root
        type: boolean
      - description: Filter by language
        in: query
        name: language
        type: string
      - description: Filter by movement.percent_complete
        in: query
        name: movement.percent_complete
        type: integer
      - description: Filter by movement.state
        in: query
        name: movement.state
        type: string
      - description: Filter by movement.cutover_window
        in: query
        name: movement.cutover_window
        type: integer
      - description: Filter by movement.destination_aggregate.name
        in: query
        name: movement.destination_aggregate.name
        type: string
      - description: Filter by movement.destination_aggregate.uuid
        in: query
        name: movement.destination_aggregate.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |-
        Creates a volume on a specified SVM and storage aggregates.
        ### Required properties
        * `svm.uuid` or `svm.name` - Existing SVM in which to create the volume.
        * `name` - Name of the volume.
        * `aggregates.name` or `aggregates.uuid` - Existing aggregates in which to create the volume.
        ### Default property values
        * `state` -  _online_
        * `size` - _20MB_
        * `style` - _flexvol_
        * `type` - _rw_
        * `encryption.enabled` - _false_
        * `snapshot_policy.name` - _default_
        * `gaurantee.type` - _volume_
        ### Related ONTAP commands
        * `volume create`
        * `volume clone create`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/volume'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787140 | One of \"aggregates.uuid\", \"aggregates.name\", or \"style\" must be provided. |
            | 787141 | The specified \"aggregates.name\" and \"aggregates.uuid\" refer to different aggregates. |
            | 917835 | Maximum allowed snapshot.reserve_percent value during a volume creation is 90. Use PATCH to set it to a higher value after the volume has been created. |
            | 918233 | The target field cannot be specified for this operation. |
            | 918236 | The specified \"parent_volume.uuid\" and \"parent_volume.name\" do not refer to the same volume. |
            | 918240 | The target style is an invalid volume style. |
            | 918241 | The target style is an unsupported volume style for volume creation. |
            | 918242 | When creating a flexible volume, exactly one aggregate must be specified via either \"aggregates.name\" or \"aggregates.uuid\". |
            | 918243 | The specified Snapshot copy UUID is not correct for the specified Snapshot copy name. |
            | 918244 | Invalid \"volume.type\" for clone volume. |
            | 918246 | \"volume.clone.parent_volume.name\" or \"volume.clone.parent_volume.uuid\" must be provided. |
            | 918247 | Specifying a value is not valid for a volume FlexClone creation. |
            | 918252 | \"nas.path\" is invalid. |
            | 2621706 | The specified \"svm.uuid\" and \"svm.name\" do not refer to the same SVM. |
            | 2621707 | No SVM was specified. Either \"svm.name\" or \"svm.uuid\" must be supplied. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        FlexVol volumes are logical containers used by ONTAP to serve data to clients.  They contain file systems in a NAS environment and LUNs in a SAN environment.<br/>
        A FlexGroup volume is a scale-out NAS container that provides high performance along with automatic load distribution and scalability. A FlexGroup volume contains several constituents that automatically and transparently share the traffic.</br>
        FlexClone volumes are writable, point-in-time copies of a FlexVol volume. At this time, FlexClones of FlexGroups are not supported.<br/>
        Volumes with SnapLock type Compliance or Enterprise, are referred to as SnapLock volumes. Volumes with SnapLock type cannot be of FlexGroup style. Once a SnapLock aggregate is created, by default, volumes created inside the aggregate inherit the "snaplock" property from the aggregate. It is possible to create a SnapLock volume by specifying SnapLock parameters. SnapLock parameters are only available at the "advanced" privilege level.<br/>
        ONTAP storage APIs allow you to create, modify, and monitor volumes and aggregates.<br/>
        ## Storage efficiency
        Storage efficiency is used to remove duplicate blocks in the data and to compress the data. Efficiency has deduplication, compression, cross volume deduplication, and compaction options. On All Flash systems, all efficiencies are enabled by default on volume creation. Options such as "background/inline/both" are treated as both, which means both background and inline are enabled for any efficiency option. The option "none"  disables both background and inline efficiency.<br/>
        To enable any efficiency option on all-flash or FAS systems, background deduplication is always enabled.<br/>
        ## Quotas
        Quotas provide a way to restrict or track the files and space usage by a user, group, or qtree. Quotas are enabled for a specific FlexVol or a FlexGroup volume.<br/>
        The following APIs can be used to enable or disable and obtain quota state for a FlexVol or a FlexGroup volume:
        &ndash; PATCH  /api/storage/volumes/{uuid} -d '{"quota.enabled":"true"}'
        &ndash; PATCH  /api/storage/volumes/{uuid} -d '{"quota.enabled":"false"}'
        &ndash; GET    /api/storage/volumes/{uuid}/?fields=quota.state
        ## QoS
        QoS policy and settings enforce Service Level Objectives (SLO) on a volume. SLO can be set by specifying qos.max_throughput_iops and/or qos.max_throughput_mbps or qos.min_throughput_iops. Specifying min_throughput_iops is only supported on volumes hosted on a node that is flash optimized. A pre-created QoS policy can also be used by specifying qos.name or qos.uuid property. <br/>
        ## Performance monitoring
        Performance of a volume can be monitored by the `metric.*` and `statistics.*` fields. These show the performance of the volume in terms of IOPS, latency and throughput. The `metric.*` fields denote an average whereas `statistics.*` fields denote a real-time monotonically increasing value aggregated across all nodes. <br/>
        ## Volume APIs
        The following APIs are used to perform operations related with FlexVol volumes and FlexGroup volumes:
        &ndash; POST      /api/storage/volumes
        &ndash; GET       /api/storage/volumes
        &ndash; GET       /api/storage/volumes/{uuid}
        &ndash; PATCH     /api/storage/volumes/{uuid}
        &ndash; DELETE    /api/storage/volumes/{uuid}
        ## Examples
        ### Creating a volume
        The POST request is used to create a new volume and to specify its properties.
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name": "vol1", "aggregates":[{"name":"aggr1"}], "svm":{"name" : "vs1"}}'
        # The response:
        {
          "job": {
            "uuid": "b89bc5dd-94a3-11e8-a7a3-0050568edf84",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/b89bc5dd-94a3-11e8-a7a3-0050568edf84"
              }
            }
          }
        }
        ```
        ### Creating a SnapLock volume and specifying its properties using POST
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name": "vol1",  "aggregates":[{"name": "aggr1"}],  "svm":{"name" : "vs1"}, "snaplock":{"retention":{"default": "P20Y"}}}'
        # The response:
        {
          "job": {
            "uuid": "e45b123b-c228-11e8-aa20-0050568e36bb",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/e45b123b-c228-11e8-aa20-0050568e36bb"
              }
            }
          }
        }
        ```
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name" : "vol1", "state" : "online", "type" : "RW", "aggregates" : [{"name" : "aggr1"}, {"name" : "aggr2"}, {"name":"aggr3"}], "constituents_per_aggregate" : "1", "svm" : {"name" : "vs1"}, "size" : "240MB", "encryption" : {"enabled" : "False"}, "efficiency" : {"compression" : "both"}, "autosize" : {"maximum" : "500MB", "minimum" : "240MB"}}'
        # The response:
        {
          "job": {
            "uuid": "3cfa38bd-3a78-11e9-ae39-0050568ed7dd",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/3cfa38bd-3a78-11e9-ae39-0050568ed7dd"
              }
            }
          }
        }
        ```
        ### Creating a FlexClone and specifying its properties using POST
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X POST  "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json" -d '{"name":"vol1_clone",{"clone":"parent_volume": {"name": "vol1"}},"svm":{"name": "vs0"}, {"clone": {"is_flexclone":"true"}}}'
        # The response:
        HTTP/1.1 202 Accepted
        Date: Tue, 26 Feb 2019 09:06:22 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/volumes/?name=vol1_clone
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "c9ee0040-39a5-11e9-9b24-00a098439a83",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/c9ee0040-39a5-11e9-9b24-00a098439a83"
              }
            }
          }
        }
        ```
        ## Volumes reported in the GET REST API
        ### The following types of volumes are reported:
        &ndash;  RW, DP and LS volume
        &ndash;  FlexGroup volume
        &ndash;  FlexCache volume
        &ndash;  FlexClone volume
        <br/>
        ### The following types of volumes are not reported:
        &ndash;  DEL volume
        &ndash;  TEMP volume
        &ndash;  Node Root volume
        &ndash;  System Vserver volume
        &ndash;  FlexGroup constituent
        &ndash;  FlexCache constituent
        ## Examples
        ### Retrieving the attributes of a volume
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "uuid": "2d1167cc-c3f2-495a-a23f-8f50b071b9b8",
              "name": "vsdata_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/2d1167cc-c3f2-495a-a23f-8f50b071b9b8"
                }
              }
            },
            {
              "uuid": "3969be7e-78b4-4b4c-82a4-fa86331f03df",
              "name": "vsfg_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/3969be7e-78b4-4b4c-82a4-fa86331f03df"
                }
              }
            },
            {
              "uuid": "59c03ac5-e708-4ce8-a676-278dc249fda2",
              "name": "svm_root",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/59c03ac5-e708-4ce8-a676-278dc249fda2"
                }
              }
            },
            {
              "uuid": "6802635b-8036-11e8-aae5-0050569503ac",
              "name": "fgvol",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/6802635b-8036-11e8-aae5-0050569503ac"
                }
              }
            },
            {
              "uuid": "d0c3359c-5448-4a9b-a077-e3295a7e9057",
              "name": "datavol",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057"
                }
              }
            }
          ],
          "num_records": 5,
          "_links": {
            "self": {
              "href": "/api/storage/volumes"
            }
          }
        }
        ```
        ### Retrieving the attributes a volume
        The GET request is used to retrieve the attributes of a volume.
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "d0c3359c-5448-4a9b-a077-e3295a7e9057",
          "comment": "This is a data volume",
          "create_time": "2018-07-05T14:56:44+05:30",
          "language": "en_us",
          "name": "datavol",
          "size": 20971520,
          "state": "online",
          "style": "flexvol",
          "tiering_policy": "auto",
          "type": "rw",
          "aggregates": [
            {
              "name": "data",
              "uuid": "aa742322-36bc-4d98-bbc4-0a827534c035",
              "_links": {
                "self": {
                  "href": "/api/cluster/aggregates/data"
                }
              }
            }
          ],
          "encryption": {
            "enabled": false,
            "state": "none",
            "key_id": "",
            "type" : "none"
          },
          "error_state": {
            "has_bad_blocks": false,
            "is_inconsistent": false
          },
          "files": {
            "maximum": 566,
            "used": 96
          },
          "nas": {
            "gid": 2468,
            "security_style": "unix",
            "uid": 1357,
            "unix_permissions": 4755
            "export_policy": {
              "name": "default",
              "id": 8589934593
            }
          },
          "metric": {
            "timestamp": "2019-04-09T05:50:15Z",
            "status": "ok",
            "duration": "PT15S",
            "latency": {
              "other": 0,
              "total": 0,
              "read": 0,
              "write": 0
            },
            "iops": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "throughput": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "cloud": {
              "timestamp": "2019-04-09T05:50:15Z",
              "status": "ok",
              "duration": "PT15S",
              "iops" : {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              },
              "latency": {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              }
            }
          },
          "statistics": {
            "timestamp": "2019-04-09T05:50:42Z",
            "status": "ok",
            "latency_raw": {
              "other": 38298,
              "total": 38298,
              "read": 0,
              "write": 0
            },
            "iops_raw": {
              "read": 0,
              "write": 0,
              "other": 3,
              "total": 3
            },
            "throughput_raw": {
              "read": 0,
              "write": 0,
              "other": 0,
              "total": 0
            },
            "cloud": {
              "timestamp": "2019-04-09T05:50:42Z",
              "status": "ok",
              "iops_raw" : {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              },
              "latency_raw": {
                "read": 0,
                "write": 0,
                "other": 0,
                "total": 0
              }
            }
          },
          "qos": {
            "policy": {
            "min_throughput_iops": 0,
            "max_throughput_iops": 1000,
            "max_throughput_mbps": 0,
            "uuid": "228454af-5a8b-11e9-bd5b-005056ac6f1f",
            "name": "pg1"
            }
          },
          "snaplock": {
            "append_mode_enabled": false,
            "autocommit_period": "none",
            "compliance_clock_time": "2019-05-24T10:59:00+05:30",
            "expiry_time": "2038-01-19T08:44:28+05:30",
            "is_audit_log": false,
            "litigation_count": 0,
            "privileged_delete": "disabled",
            "type": "enterprise",
            "retention": {
              "default": "P0Y",
              "minimum": "P0Y",
              "maximum": "P30Y"
            }
          },
          "snapshot_policy": {
            "name": "default"
          },
          "svm": {
            "name": "vsdata",
            "uuid": "d61b69f5-7458-11e8-ad3f-0050569503ac"
          },
          "_links": {
            "self": {
              "href": "/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057"
            }
          }
        }
        ```
        ### Retrieving the quota state of a FlexVol or a FlexGroup volume
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717/?fields=quota.state" -H "accept: application/hal+json"
        # The response:
        {
          "uuid": "cb20da45-4f6b-11e9-9a71-005056a7f717",
          "name": "fv",
          "quota": {
            "state": "on"
          },
          "_links": {
            "self": {
              "href": "/api/storage/volumes/cb20da45-4f6b-11e9-9a71-005056a7f717/"
            }
          }
        }
        ```
        ## Updating the attributes of a volume
        ## Examples
        ### Updating the attributes of a volume
        The PATCH request is used to update the attributes of a volume.
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{ "size": 26214400, {"nas":{"security_style": "mixed"}, "comment": "This is a data volume" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Tue, 31 Jul 2018 09:36:43 GMT
        Server: libzapid-httpd
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "3c5be5a6-94a5-11e8-8ca3-00505695c11b",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/3c5be5a6-94a5-11e8-8ca3-00505695c11b"
              }
            }
          }
        }
        ```
        ### Updating the attributes of a FlexClone using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"clone":{"split_initiated":"true"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "8e01747f-38e5-11e9-8a3a-00a09843994b",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/8e01747f-38e5-11e9-8a3a-00a09843994b"
              }
            }
          }
        }
        ```
        ### Enabling quotas for a FlexVol or a FlexGroup volume using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"quota":{"enabled":"true"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "d2fe7299-57d0-11e9-a2dc-005056a7f717",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/d2fe7299-57d0-11e9-a2dc-005056a7f717"
              }
            }
          }
        }
        ```
        ### Disabling quotas for a FlexVol or a FlexGroup volume using PATCH
        ```
        # The API:
        /api/storage/volumes/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/d0c3359c-5448-4a9b-a077-e3295a7e9057" -d '{"quota":{"enabled":"false"}}' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Mon, 25 Feb 2019 10:10:19 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "0c8f6bea-57d1-11e9-a2dc-005056a7f717",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/0c8f6bea-57d1-11e9-a2dc-005056a7f717"
              }
            }
          }
        }
        ```
        ## Deleting a volume
        ## Example
        ### Deleting a volume
        The DELETE request is used to delete a volume.
        ```
        # The API:
        /api/storage/volumes
        # The call:
        curl -X DELETE  "https://<mgmt-ip>/api/storage/volumes/{uuid} " -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        cache-control: no-cache,no-store,must-revalidate
        connection: Keep-Alive
        content-length: 189
        content-type: application/json
        date: Wed, 01 Aug 2018 09:40:36 GMT
        keep-alive: timeout=5, max=100
        server: libzapid-httpd
        {
          "job": {
            "uuid": "f1aa3eb8-956e-11e8-86bf-0050568e2249",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/f1aa3eb8-956e-11e8-86bf-0050568e2249"
              }
            }
          }
        }
        ```
      tags:
      - storage
  /storage/volumes/{uuid}:
    delete:
      description: |-
        Deletes a volume. If the UUID belongs to a volume, all of its blocks are freed and returned to its containing aggregate. If a volume is online, it is offlined before deletion. If a volume is mounted, unmount the volume by specifying the nas.path as empty before deleting it using the DELETE operation.
        ### Related ONTAP commands
        * `volume delete`
        * `volume clone delete`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |-
        Retrieves a volume. The GET API can be used to retrieve the quota state for a FlexVol or a FlexGroup volume.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `is_svm_root`
        * `application.*`
        * `encryption.*`
        * `clone.parent_snapshot.name`
        * `clone.parent_snapshot.uuid`
        * `clone.parent_svm.name`
        * `clone.parent_svm.uuid`
        * `clone.parent_volume.name`
        * `clone.parent_volume.uuid`
        * `clone.split_complete_percent`
        * `clone.split_estimate`
        * `clone.split_initiated`
        * `efficiency.*`
        * `error_state.*`
        * `files.*`
        * `nas.export_policy.id`
        * `nas.gid`
        * `nas.path`
        * `nas.security_style`
        * `nas.uid`
        * `nas.unix_permissions`
        * `snaplock.*`
        * `restore_to.*`
        * `snapshot_policy.uuid`
        * `quota.*`
        * `qos.*`
        * `flexcache_endpoint_type`
        * `space.block_storage_inactive_user_data`
        * `space.capacity_tier_footprint`
        * `space.footprint`
        * `space.over_provisioned`
        * `space.metadata`
        * `space.logical_space.*`
        * `space.snapshot.*`
        * `guarantee.*`
        * `autosize.*`
        * `movement.*`
        * `statistics.*`
        ### Related ONTAP commands
        * `volume show`
        * `volume clone show`
        * `volume efficiency show`
        * `volume encryption show`
        * `volume flexcache show`
        * `volume flexgroup show`
        * `volume move show`
        * `volume quota show`
        * `volume show-space`
        * `volume snaplock show`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_get
      parameters:
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |-
        Updates the attributes of a volume. For movement, use the "validate_only" field on the request to validate but not perform the operation. The PATCH API can be used to enable or disable quotas for a FlexVol or a FlexGroup volume.
        ### Related ONTAP commands
        * `volume modify`
        * `volume clone modify`
        * `volume efficiency modify`
        * `volume quota on`
        * `volume quota off`
        * `volume snaplock modify`

        ### Learn more
        * [`DOC /storage/volumes`](#docs-storage-storage_volumes)
      operationId: volume_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Unique identifier of the volume.
        in: path
        name: uuid
        required: true
        type: string
      - description: UUID of the Snapshot copy to restore volume to the point in time
          the Snapshot copy was taken.
        in: query
        name: restore_to.snapshot.uuid
        type: string
      - description: Name of the Snapshot copy to restore volume to the point in time
          the Snapshot copy was taken.
        in: query
        name: restore_to.snapshot.name
        type: string
      - default: use_existing_resources
        description: |
          Represents the method to modify the size of a Flexgroup. The following methods are supported:
          * use_existing_resources - Increases or decreases the size of the FlexGroup by increasing or decreasing the size of the current FlexGroup resources
          * add_new_resources - Increases the size of the FlexGroup by adding new resources
        enum:
        - use_existing_resources
        - add_new_resources
        in: query
        name: sizing_method
        type: string
      - $ref: '#/parameters/validate_only_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/volume'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 787141 | The specified \"aggregates.name\" and \"aggregates.uuid\" refer to different aggregates. |
            | 918248 | Specifying a value is not valid for initiating volume FlexClone split operation. |
            | 918251 | Specifying a value is not valid for a Snapshot copy restore operation. |
            | 918252 | specified \"nas.path\" is invalid. |
            | 918265 | Volume is on the same aggregate. |
            | 918266 | \"movement.destination_aggregate\" and \"movement.state\" are mutually exclusive, unless the state is \"cutover-wait\". |
            | 918267 | The specified \"movement.destination_aggregate\" does not exist. |
            | 13107404 | When adding new resources to a FlexGroup by specifying \"aggregates.name\" or \"aggregates.uuid\", the FlexGroup cannot be resized using \"size\". These operations must be done separately. |
            | 13109187 | When adding new resources to a FlexGroup using \"sizing_method\", \"size\" must be specified.  Neither \"aggregates.name\" nor \"aggregates.uuid\" are allowed to be specified, as the aggregates are selected automatically by the system. |
            | 13109198 | Resizing by adding new resources is only supported for FlexGroups. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/volumes/{volume.uuid}/files/{path}:
    get:
      consumes:
      - application/json
      description: |-
        Retrieves a list of files and directories for a given directory of a volume along with the directory's properties or only the properties of a given file of a volume.

        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/files/{path}`](#docs-storage-storage_volumes_{volume.uuid}_files_{path})
      operationId: file_info_collection_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Relative path of a file or directory in the volume. The path
          field requires using "%2E" to represent "." and "%2F" to represent "/" for
          the path provided.
        in: path
        name: path
        required: true
        type: string
      - description: The file offset to start reading from.
        in: query
        name: byte_offset
        type: integer
      - description: Length of the range in bytes.
        in: query
        name: length
        type: integer
      - default: false
        description: If true, the request returns metadata for the the directory or
          file specified in the path.
        in: query
        name: return_metadata
        type: boolean
      - description: Filter by unix_permissions
        in: query
        name: unix_permissions
        type: integer
      - description: Filter by inode_number
        in: query
        name: inode_number
        type: integer
      - description: Filter by accessed_time
        in: query
        name: accessed_time
        type: string
      - description: Filter by creation_time
        in: query
        name: creation_time
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by owner_id
        in: query
        name: owner_id
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by target
        in: query
        name: target
        type: string
      - description: Filter by hard_links_count
        in: query
        name: hard_links_count
        type: integer
      - description: Filter by changed_time
        in: query
        name: changed_time
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      - description: Filter by bytes_used
        in: query
        name: bytes_used
        type: integer
      - description: Filter by is_empty
        in: query
        name: is_empty
        type: boolean
      - description: Filter by is_vm_aligned
        in: query
        name: is_vm_aligned
        type: boolean
      - description: Filter by modified_time
        in: query
        name: modified_time
        type: string
      - description: Filter by qos_policy.uuid
        in: query
        name: qos_policy.uuid
        type: string
      - description: Filter by qos_policy.name
        in: query
        name: qos_policy.name
        type: string
      - description: Filter by is_snapshot
        in: query
        name: is_snapshot
        type: boolean
      - description: Filter by inode_generation
        in: query
        name: inode_generation
        type: integer
      - description: Filter by path
        in: query
        name: path
        type: string
      - description: Filter by group_id
        in: query
        name: group_id
        type: integer
      - description: Filter by is_junction
        in: query
        name: is_junction
        type: boolean
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/file_info_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Writes to an existing file with the supplied data or modifies the QoS policy of a file.
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/files/{path}`](#docs-storage-storage_volumes_{volume.uuid}_files_{path})
      operationId: file_info_modify
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Relative path of a file in the volume. The path field requires
          using "%2E" to represent "." and "%2F" to represent "/" for the path provided.
        in: path
        name: path
        required: true
        type: string
      - description: How many bytes into the file to begin writing. Use -1 to append
          (default).
        in: query
        name: byte_offset
        required: false
        type: integer
      - description: If false, and the file exists, the write will fail. Default is
          false.
        in: query
        name: overwrite
        required: false
        type: bool
      - description: Name of stream associated with the file to write data to.
        in: query
        name: stream_name
        required: false
        type: string
      - description: Info specification
        in: body
        name: info
        required: false
        schema:
          $ref: '#/definitions/file_info'
      - description: Data to write to the file.
        in: formData
        name: data
        type: string
      produces:
      - application/json
      responses:
        '200':
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      consumes:
      - application/json
      - multipart/form-data
      description: |-
        Creates a new file with the supplied data, creates a new directory or creates a new symlink.
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/files/{path}`](#docs-storage-storage_volumes_{volume.uuid}_files_{path})
      operationId: file_info_create
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Relative path of a new file, directory or symlink. The path field
          requires using "%2E" to represent "." and "%2F" to represent "/" for the
          path provided.
        in: path
        name: path
        required: true
        type: string
      - description: How many bytes into the file to begin writing. Use -1 to append
          (default).
        in: query
        name: byte_offset
        required: false
        type: integer
      - description: If false, and the file exists, the write will fail. Default is
          false.
        in: query
        name: overwrite
        required: false
        type: bool
      - description: Name of stream associated with the file to write data to.
        in: query
        name: stream_name
        required: false
        type: string
      - description: Info specification
        in: body
        name: info
        required: false
        schema:
          $ref: '#/definitions/file_info'
      - description: Data to write to the file.
        in: formData
        name: data
        type: string
      produces:
      - application/json
      responses:
        '201':
          description: Created
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 917505 | The SVM does not exist. |
            | 917525 | The volume in the symlink path does not exist in the SVM. |
            | 917698 | The volume in the symlink path is not mounted in the namespace. |
            | 6488064 | This command is not supported. |
            | 6488065 | The volume in the symlink path is invalid. |
            | 6488066 | Mounting the unjunctioned volume in the symlink path failed. |
            | 6488069 | Internal file error. |
            | 8257536 | This operation is not supported for the system volume specified in the symlink path. |
            | 8257541 | Failed to compute the SVM identification from this content. |
            | 8257542 | This operation is not supported for the administrative SVM. |
            | 9437549 | This operation is not allowed on SVMs with Infinite Volume. |
            | 13172837 | This operation is not permitted because the SVM is locked for a migrate operation. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        This API is used to read a file, write to a file, retrieve a list of files and directories, and retrieve or modify certain properties of files and directories. The path field is used to specify the path to the directory or file to be acted on. The path field requires using "%2E" to represent "." and "%2F" to represent "/" for the path provided.
        ## File data
        Read and write data from/to a named file. To read a file, the Accept request HTTP header must be specified as multipart/form-data, and a value for the `length` query property, which represents the number of bytes to be read, must be specified. The API will fail if the length of data being read/written exceeds 1 MB. This API should only be used on normal files or streams associated with files. The results for other file types, such as LUNs is undefined.<br/>
        The following APIs are used to read or write data to a file:
        &ndash; GET     /api/storage/volumes/{volume.uuid}/files/{path}?byte_offset=0&length=40 -H "Accept: multipart/form-data"
        &ndash; POST    /api/storage/volumes/{volume.uuid}/files/{path} -H "Content-Type: multipart/form-data" --form "file=the data to be written to the new file"
        &ndash; PATCH   /api/storage/volumes/{volume.uuid}/files/{path}?byte_offset=10 -H "Content-Type: multipart/form-data" --form "file=the new data to be written or overwritten to the existing file starting at byte_offset"
        ## Listing directories and files
        A list of files and directories and their properties can be retrieved for a specified path.<br/>
        The following APIs are used to view a list of files and directories:
        &ndash; GET       /api/storage/volumes/{volume.uuid}/files
        &ndash; GET       /api/storage/volumes/{volume.uuid}/files/{path}
        &ndash; GET       /api/storage/volumes/{volume.uuid}/files/{path}?fields=*
        ## File information
        The metadata and detailed information about a single directory or file can be retrieved by setting the `return_metadata` query property to `true`. The information returned includes type, creation_time, modified_time, changed_time, accessed_time, unix_permissions, ownder_id, group_id, size, hard_links_count, inode_number, is_empty, bytes_used, inode_generation, is_vm_aligned, is_junction, is_snapshot, and links.<br/>
        The following API is used to view the properties of a single file or directory:
        &ndash; GET       /api/storage/volumes/{volume.uuid}/files/{path}?return_metadata=true
        ## QoS
        QoS policies and settings enforce Service Level Objectives (SLO) on a file. A pre-created QoS policy can be used by specifying the `qos.name` or `qos.uuid` properties.</br>
        The following APIs are used to assign a QoS policy to a file:
        &ndash; PATCH   /api/storage/volumes/{volume.uuid}/files/{path} -d '{ "qos_policy.name" : "policy" }'
        &ndash; PATCH   /api/storage/volumes/{volume.uuid}/files/{path} -d '{ "qos_policy.uuid" : "b89bc5dd-94a3-11e8-a7a3-0050568edf84" }'
        ## Symlinks
        The following APIs are used to create a symlink and read the contents of a symlink:
        &ndash; POST   /api/storage/volumes/{volume.uuid}/files/{path}  -d '{ "target" : "directory2/file1" }'
        &ndash; GET    /api/storage/volumes/{volume.uuid}/files/{path}?return_metadata=true&fields=target
        ## Examples
        ### Writing to a new file
        ```
        # The API:
        POST /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/volumes/54c06ce2-5430-11ea-90f9-005056a73aff/files/aNewFile" -H "Content-Type: multipart/form-data" --form "file=the data to be written to the new file"
        ```
        ### Writing to an existing file
        ```
        # The API:
        PATCH /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/storage/volumes/54c06ce2-5430-11ea-90f9-005056a73aff/files/aNewFile?byte_offset=39" -H "Content-Type: multipart/form-data" --form "file=*here is a little more data"
        ```
        ### Reading a file
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/54c06ce2-5430-11ea-90f9-005056a73aff/files/aNewFile?byte_offset=0&length=100" -H "Accept: multipart/form-data"
        # Response for file data:
        --ec51b3541741ade7
        Content-Disposition: form-data; name="bytes_read"
        Content-Type: text/plain
        66
        --ec51b3541741ade7
        Content-Disposition: form-data; filename="aNewFile"
        Content-Type: application/octet-stream
        the data to be written to the new file*here is a little more data
        --ec51b3541741ade7--
        ```
        ### Creating a stream on a file
        ```
        # The API:
        POST /api/storage/volumes/{volume.uuid}/files/{path}?overwrite=true
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/volumes/54c06ce2-5430-11ea-90f9-005056a73aff/files/aNewFile?overwrite=true&byte_offset=-1&stream_name=someStream" -H "Content-Type: multipart/form-data" --form "file=the data to be written to the new file"
        ```
        ###  Retrieving the list of files in a directory
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/d1%2Fd2%2Fd3"
        # Response for file records:
        {
          "records": [
            {
              "path": "d1/d2/d3",
              "name": ".",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2F%2E?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "..",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E%2E"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2F%2E%2E?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "f1",
              "type": "file",
              "_links": {
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2File1?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "d5",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2Fd5"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2Fd5?return_metadata=true"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3"
            }
          }
        }
        ```
        ###  Retrieving a list of files based on file type
        You can filter the list of files you retrieve based on multiple file types by including a query parameter in the following format type="file|symlink"
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/d1%2Fd2%2Fd3?type=file|directory"
        # Response for file records:
        {
          "records": [
            {
              "path": "d1/d2/d3",
              "name": ".",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2F%2E?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "..",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2F%2E%2E"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2F%2E%2E?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "f1",
              "type": "file",
              "_links": {
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2File1?return_metadata=true"
                }
              }
            },
            {
              "path": "d1/d2/d3",
              "name": "d5",
              "type": "directory",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3%2Fd5"
                },
                "metadata": {
                  "href": "/api/storage/volumes/e8274d79-3bba-11ea-b780-005056a7d72a/files/d1%2Fd2%2Fd3%2Fd5?return_metadata=true"
                }
              }
            }
          ],
          "num_records": 4,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/cb6b1b39-8d21-11e9-b926-005056aca658/files/d1%2Fd2%2Fd3"
            }
          }
        }
        ```
        ###  Retrieving the properties of a directory or a file
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}?return_metadata=true
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/d1%2Fd2%2Fd3%2Ff1?return_metadata=true"
        # Response for file properties:
        {
          "records": [
            {
              "path": "d1/d2/d3/f1",
              "name": "",
              "type": "file",
              "creation_time": "2019-06-12T21:27:28-04:00",
              "modified_time": "2019-06-12T21:27:28-04:00",
              "changed_time": "2019-06-12T21:27:28-04:00",
              "accessed_time": "2019-06-12T21:27:28-04:00",
              "unix_permissions": 644,
              "owner_id": 54738,
              "group_id": 30,
              "size": 200,
              "hard_links_count": 1,
              "inode_number": 1233,
              "bytes_used": 4096,
              "inode_generation": 214488325,
              "is_vm_aligned": false,
              "is_junction": false,
              "is_snapshot": false
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/da8bb06c-823e-11e9-b790-005056acdcb0/files/d1%2Fd2%2Fd3%2Ff1?return_metadata=true"
            }
          }
        }
        ```
        ###  Creating a symlink to a relative path
        You can use the POST request to create a symlink.
        ```
        # The API:
        POST /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/symlink1"  -H 'accept: application/hal+json' -d '{ "target" : "d1/f1"}'
        # The response:
        {}
        ```
        ###  Retrieving the target of a symlink
        You can use the GET request to view the target of a symlink.
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/symlink1?return_metadata=true&fields=target"
        # The response:
        {
          "records": [
            {
              "path": "symlink1",
              "target": "d1/f1"
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/54c06ce2-5430-11ea-90f9-005056a73aff/files/symlink1?return_metadata=true&fields=target"
            }
          }
        }
        ```
        ###  Retrieving all information for a directory
        ```
        # The API:
        GET /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/1ef5d1b2-f9d7-11e9-8043-00505682f860/files/d1?return_metadata=true&fields=**"
        # Response for all fields of the directory:
        {
          "records": [
            {
              "svm": {
                "uuid": "58a996a2-f9d5-11e9-8043-00505682f860",
                "_links": {
                  "self": {
                    "href": "/api/svm/svms/58a996a2-f9d5-11e9-8043-00505682f860"
                  }
                }
              },
              "volume": {
                  "uuid": "1ef5d1b2-f9d7-11e9-8043-00505682f860",
                  "_links": {
                    "self": {
                      "href": "/api/storage/volumes/1ef5d1b2-f9d7-11e9-8043-00505682f860"
                    }
                }
              },
              "path": "d1",
              "type": "directory",
              "creation_time": "2019-10-28T23:04:13+00:00",
              "modified_time": "2019-10-28T23:10:30+00:00",
              "changed_time": "2019-10-28T23:10:30+00:00",
              "accessed_time": "2019-10-28T23:10:38+00:00",
              "unix_permissions": 755,
              "owner_id": 1002,
              "group_id": 65533,
              "size": 4096,
              "hard_links_count": 5,
              "inode_number": 96,
              "is_empty": false,
              "bytes_used": 4096,
              "inode_generation": 214514951,
              "is_vm_aligned": false,
              "is_junction": false,
              "is_snapshot": false,
              "qos_policy": {
                "name": "pg1",
                "uuid": "00725264-688f-11ea-8f10-005056a7b8ac"
              }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/1ef5d1b2-f9d7-11e9-8043-00505682f860/files/d1?return_metadata=true&fields=**"
            }
          }
        }
        ```
        ###  Assigning a QoS policy to a file
        You can use the PATCH request to assign a QoS policy to a file.
        ```
        # The API:
        PATCH /api/storage/volumes/{volume.uuid}/files/{path}
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/storage/volumes/cb6b1b39-8d21-11e9-b926-05056aca658/files/directory1%2Ffile1" -d '{ "qos_policy.name" : "policy"}'
        # The response:
        {}
        ```
      tags:
      - storage
  /storage/volumes/{volume.uuid}/metrics:
    get:
      description: Retrieves historical performance metrics for a volume.
      operationId: volume_metrics_collection_get
      parameters:
      - description: Filter by iops.other
        in: query
        name: iops.other
        type: integer
      - description: Filter by iops.write
        in: query
        name: iops.write
        type: integer
      - description: Filter by iops.read
        in: query
        name: iops.read
        type: integer
      - description: Filter by iops.total
        in: query
        name: iops.total
        type: integer
      - description: Filter by timestamp
        in: query
        name: timestamp
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by cloud.latency.other
        in: query
        name: cloud.latency.other
        type: integer
      - description: Filter by cloud.latency.write
        in: query
        name: cloud.latency.write
        type: integer
      - description: Filter by cloud.latency.read
        in: query
        name: cloud.latency.read
        type: integer
      - description: Filter by cloud.latency.total
        in: query
        name: cloud.latency.total
        type: integer
      - description: Filter by cloud.duration
        in: query
        name: cloud.duration
        type: string
      - description: Filter by cloud.status
        in: query
        name: cloud.status
        type: string
      - description: Filter by cloud.iops.other
        in: query
        name: cloud.iops.other
        type: integer
      - description: Filter by cloud.iops.write
        in: query
        name: cloud.iops.write
        type: integer
      - description: Filter by cloud.iops.read
        in: query
        name: cloud.iops.read
        type: integer
      - description: Filter by cloud.iops.total
        in: query
        name: cloud.iops.total
        type: integer
      - description: Filter by cloud.timestamp
        in: query
        name: cloud.timestamp
        type: string
      - description: Filter by throughput.other
        in: query
        name: throughput.other
        type: integer
      - description: Filter by throughput.write
        in: query
        name: throughput.write
        type: integer
      - description: Filter by throughput.read
        in: query
        name: throughput.read
        type: integer
      - description: Filter by throughput.total
        in: query
        name: throughput.total
        type: integer
      - description: Filter by duration
        in: query
        name: duration
        type: string
      - description: Filter by latency.other
        in: query
        name: latency.other
        type: integer
      - description: Filter by latency.write
        in: query
        name: latency.write
        type: integer
      - description: Filter by latency.read
        in: query
        name: latency.read
        type: integer
      - description: Filter by latency.total
        in: query
        name: latency.total
        type: integer
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/return_records_get_param'
      - description: Unique identifier of the volume.
        in: path
        name: volume.uuid
        required: true
        type: string
      - default: 1h
        description: |
          The time range for the data. Examples can be 1h, 1d, 1m, 1w, 1y.
          The period for each time range is as follows:
          * 1h: Metrics over the most recent hour sampled over 15 seconds.
          * 1d: Metrics over the most recent day sampled over 5 minutes.
          * 1w: Metrics over the most recent week sampled over 30 minutes.
          * 1m: Metrics over the most recent month sampled over 2 hours.
          * 1y: Metrics over the most recent year sampled over a day.
        enum:
        - 1h
        - 1d
        - 1w
        - 1m
        - 1y
        in: query
        name: interval
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/volume_metrics_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /storage/volumes/{volume.uuid}/snapshots:
    get:
      description: |
        Retrieves a collection of volume Snapshot copies.
        ### Related ONTAP commands
        * `snapshot show`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_collection_get
      parameters:
      - description: Volume
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Filter by volume.uuid
        in: query
        name: volume.uuid
        type: string
      - description: Filter by volume.name
        in: query
        name: volume.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by create_time
        in: query
        name: create_time
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by snaplock_expiry_time
        in: query
        name: snaplock_expiry_time
        type: string
      - description: Filter by expiry_time
        in: query
        name: expiry_time
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by snapmirror_label
        in: query
        name: snapmirror_label
        type: string
      - description: Filter by owners
        in: query
        name: owners
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    post:
      description: |
        Creates a volume Snapshot copy.
        ### Required properties
        * `name` - Name of the Snapshot copy to be created.
        ### Recommended optional properties
        * `comment` - Comment associated with the Snapshot copy.
        * `expiry_time` - Snapshot copies with an expiry time set are not allowed to be deleted until the retention time is reached.
        * `snapmirror_label` - Label for SnapMirror operations.
        ### Related ONTAP commands
        * `snapshot create`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    x-ntap-long-description:
      description: |
        ## Overview
        A Snapshot copy is the view of the filesystem as it exists at the time when the Snapshot copy is created. <br/>
        In ONTAP, different types of Snapshot copies are supported, such as scheduled Snapshot copies, user requested Snapshot copies, SnapMirror Snapshot copies, and so on. <br/>
        ONTAP Snapshot copy APIs allow you to create, modify, delete and retrieve Snapshot copies. <br/>
        ## Snapshot copy APIs
        The following APIs are used to perform operations related to Snapshot copies.
        &ndash; POST      /api/storage/volumes/{volume.uuid}/snapshots
        &ndash; GET       /api/storage/volumes/{volume.uuid}/snapshots
        &ndash; GET       /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        &ndash; PATCH     /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        &ndash; DELETE    /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        ## Examples
        ### Creating a Snapshot copy
        The POST operation is used to create a Snapshot copy with the specified attributes.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots
        # The call:
        curl -X POST "https://<mgmt-ip>/api/storage/volumes/{volume.uuid}/snapshots" -H "accept: application/hal+json" -d '{"name": "snapshot_copy", "comment": "Store this copy." }'
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:43:34 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/?name=snapshot_copy
        Content-Length: 189
        Content-Type: application/json
        {
          "num_records": 1,
          "records": [
            {
              "volume": {
                "name": "v2"
              },
              "svm": {
                "uuid": "8139f958-3c6e-11e9-a45f-005056bbc848",
                "name": "vs0"
              }
              "name": "snapshot_copy",
              "comment": "Store this copy."
            }
          ],
          "job": {
            "uuid": "6f68c85b-45e1-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6f68c85b-45e1-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:43:57 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 224
        Content-Type: application/json
        {
          "uuid": "6f68c85b-45e1-11e9-8fc7-005056bbc848",
          "description": "POST /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/?name=snapshot_copy",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
        ### Retrieving Snapshot copy attributes
        The GET operation is used to retrieve Snapshot copy attributes.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/{volume.uuid}/snapshots" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 21:14:06 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Type: application/json
        Transfer-Encoding: chunked
        {
          "records": [
            {
              "uuid": "402b6c73-73a0-4e89-a58a-75ee0ab3e8c0",
              "name": "hourly.2019-03-13_1305",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0"
                }
              }
            },
            {
              "uuid": "f0dd497f-efe8-44b7-a4f4-bdd3890bc0c8",
              "name": "hourly.2019-03-13_1405",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/f0dd497f-efe8-44b7-a4f4-bdd3890bc0c8"
                }
              }
            },
            {
              "uuid": "02701900-51bd-46b8-9c77-47d9a9e2ce1d",
              "name": "hourly.2019-03-13_1522",
              "_links": {
                "self": {
                  "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/02701900-51bd-46b8-9c77-47d9a9e2ce1d"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots"
            }
          }
        }
        ```
        ### Retrieving the attributes of a specific Snapshot copy
        The GET operation is used to retrieve the attributes of a specific Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:39:26 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 308
        Content-Type: application/json
        {
          "volume": {
            "uuid": "0353dc05-405f-11e9-acb6-005056bbc848",
            "name": "v2",
            "_links": {
              "self": {
                "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848"
              }
            }
          },
          "uuid": "402b6c73-73a0-4e89-a58a-75ee0ab3e8c0",
          "svm": {
            "uuid": "8139f958-3c6e-11e9-a45f-005056bbc848",
            "name": "vs0",
            "_links": {
              "self": {
                "href": "/api/svm/svms/8139f958-3c6e-11e9-a45f-005056bbc848"
              }
            }
          },
          "name": "hourly.2019-03-13_1305",
          "create_time": "2019-03-13T13:05:00-04:00",
          "_links": {
            "self": {
              "href": "/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/402b6c73-73a0-4e89-a58a-75ee0ab3e8c0"
            }
          }
        }
        ```
        ### Updating a Snapshot copy
        The PATCH operation is used to update the specific attributes of a Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X PATCH  "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f" -d '{"name": "snapshot_copy_new" }' -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:50:44 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "6f7c3a82-45e2-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6f7c3a82-45e2-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 22:54:16 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 242
        Content-Type: application/json
        {
          "uuid": "6f7c3a82-45e2-11e9-8fc7-005056bbc848",
          "description": "PATCH /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
        ### Deleting a Snapshot copy
        The DELETE operation is used to delete a Snapshot copy.
        ```
        # The API:
        /api/storage/volumes/{volume.uuid}/snapshots/{uuid}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f" -H "accept: application/hal+json"
        # The response:
        HTTP/1.1 202 Accepted
        Date: Wed, 13 Mar 2019 22:57:51 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 189
        Content-Type: application/json
        {
          "job": {
            "uuid": "6da1dfdd-45e3-11e9-8fc7-005056bbc848",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/6da1dfdd-45e3-11e9-8fc7-005056bbc848"
              }
            }
          }
        }
        # The Job:
        HTTP/1.1 200 OK
        Date: Wed, 13 Mar 2019 23:02:46 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 243
        Content-Type: application/json
        {
          "uuid": "6da1dfdd-45e3-11e9-8fc7-005056bbc848",
          "description": "DELETE /api/storage/volumes/0353dc05-405f-11e9-acb6-005056bbc848/snapshots/16f7008c-18fd-4a7d-8485-a0e290d9db7f",
          "state": "success",
          "message": "success",
          "code": 0
        }
        ```
      tags:
      - storage
  /storage/volumes/{volume.uuid}/snapshots/{uuid}:
    delete:
      description: |
        Deletes a Volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot delete`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    get:
      description: |
        Retrieves details of a specific volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot show`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_get
      parameters:
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snapshot'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
    patch:
      description: |
        Updates a Volume Snapshot copy.
        ### Related ONTAP commands
        * `snapshot modify`
        * `snapshot rename`
        ### Learn more
        * [`DOC /storage/volumes/{volume.uuid}/snapshots`](#docs-storage-storage_volumes_{volume.uuid}_snapshots)
      operationId: snapshot_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: Volume UUID
        in: path
        name: volume.uuid
        required: true
        type: string
      - description: Snapshot copy UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snapshot'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - storage
  /support/autosupport:
    get:
      description: |
        Retrieves the AutoSupport configuration of the cluster and if requested, returns connectivity issues with the AutoSupport configuration.<p/>
        </br>Important note:
        * The **issues** field consists of a list of objects containing details of the node that has a connectivity issue, the issue description, and corrective action you can take to address the issue. When not empty, this indicates a connection issue to the **HTTP/S**, **SMTP**, or **AutoSupport On Demand** server.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `issues`
        ### Related ONTAP commands
        * `system node autosupport show -instance`
        * `system node autosupport check show-details`
        ### Learn more
        * [`DOC /support/autosupport`](#docs-support-support_autosupport)
      operationId: autosupport_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/autosupport'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |
        Updates the AutoSupport configuration for the entire cluster.
        ### Related ONTAP commands
        * `system node autosupport modify`
        ### Learn more
        * [`DOC /support/autosupport`](#docs-support-support_autosupport)
      operationId: autosupport_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/autosupport'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8650862    | The SMTP mail host provided cannot be empty |
            | 8650863    | A maximum of 5 SMTP mail hosts can be provided |
            | 8650864    | A maximum of 5 email addresses can be provided |
            | 8650865    | A maximum of 5 partner email addresses can be provided |
            | 53149727   | The proxy URI provided is invalid |
            | 53149728   | The mailhost URI provided is invalid |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        AutoSupport is the NetApp *call home* mechanism. AutoSupport sends configuration details, status details, and error reporting details to NetApp.<p/>
        This endpoint supports both GET and PATCH calls. GET is used to retrieve AutoSupport configuration details for the cluster and PATCH is used to modify the AutoSupport configuration of the cluster. You can also use GET calls to check AutoSupport connectivity.
        ---
        ## Examples
        ### Configuring 'to' addresses
        The following example configures AutoSupport to send emails to 'to' addresses.
        ```JSON
        # The API:
        PATCH /support/autosupport
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/support/autosupport" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"to\": [ \"abc@netapp.com\", \"xyz@netapp.com\" ]}"
        # The response:
        200 OK
        {}
        ```
        ---
        ### Configuring 'SMTP' transport
        The following example configures AutoSupport to use 'SMTP' transport. The default transport is 'HTTPS'.
        ```JSON
        # The API:
        PATCH /support/autosupport
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/support/autosupport" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"transport\": \"smtp\"}"
        # The response:
        200 OK
        {}
        ```
        ---
        ### Retrieving the AutoSupport configuration
        The following example retrieves AutoSupport configuration for the cluster.
        ```JSON
        # The API:
        GET /support/autosupport
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/autosupport" -H "accept: application/hal+json" OR
        curl -X GET "https://<mgmt-ip>/api/support/autosupport?fields=*" -H "accept: application/hal+json"
        # The response:
        200 OK
        {
          "enabled": true,
          "mail_hosts": [
            "mailhost"
          ],
          "from": "Postmaster",
          "to": [
            "abc@netapp.com",
            "xyz@netapp.com"
          ],
          "contact_support": true,
          "transport": "smtp",
          "proxy_url": "",
          "is_minimal": false,
          "_links": {
            "self": {
              "href": "/api/support/autosupport"
            }
          }
        }
        ```
        ---
        ### Retrieving AutoSupport connectivity issues
        The following example retrieves AutoSupport connectivity issues for the cluster. The `fields=issues` parameter must be specified, for the response to return connectivity issues. The `corrective_action` section might contain commands which needs to be executed on the ONTAP CLI.<p/>
        Note that the connectivity check can take up to 10 seconds to complete.
        ```JSON
        # The API:
        GET /support/autosupport
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/autosupport?fields=issues" -H "accept: application/hal+json"
        # The response:
        200 OK
        {
          "issues": [
            {
              "node": {
                "name": "node3",
                "uuid": "0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc"
                  }
                }
              },
              "issue": {
                "message": "SMTP connectivity check failed for destination: mailhost. Error: Could not resolve host - 'mailhost'",
                "code": "53149746"
              },
              "corrective_action": {
                "message": "Check the hostname of the SMTP server",
                "code": "53149746"
              }
            },
            {
              "node": {
                "name": "node3",
                "uuid": "0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc"
                  }
                }
              },
              "issue": {
                "message": "AutoSupport OnDemand is disabled when \"-transport\" is not set to \"https\".",
                "code": "53149740"
              },
              "corrective_action": {
                "message": "Run \"system node autosupport modify -transport https -node <node name>\" to set \"-transport\" to \"https\".",
                "code": "53149740"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport"
            }
          }
        }
        ```
        ---
        ### Retrieving AutoSupport configuration and connectivity issues
        The following example retrieves AutoSupport configuration and connectivity issues on the cluster. Use `fields=*,issues` parameter to return both configuration and connectivity issues.
        ```JSON
        # The API:
        GET /support/autosupport
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/autosupport?fields=*%2Cissues" -H "accept: application/hal+json"
        # The response:
        200 OK
        {
          "enabled": true,
          "mail_hosts": [
            "mailhost"
          ],
          "from": "Postmaster",
          "to": [
            "abc@netapp.com",
            "xyz@netapp.com"
          ],
          "contact_support": true,
          "transport": "smtp",
          "proxy_url": "",
          "is_minimal": false,
          "issues": [
            {
              "node": {
                "name": "node3",
                "uuid": "0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc"
                  }
                }
              },
              "issue": {
                "message": "SMTP connectivity check failed for destination: mailhost. Error: Could not resolve host - 'mailhost'",
                "code": "53149746"
              },
              "corrective_action": {
                "message": "Check the hostname of the SMTP server",
                "code": "53149746"
              }
            },
            {
              "node": {
                "name": "node3",
                "uuid": "0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/0ecfd0a6-f1b3-11e8-9d9f-005056bbaadc"
                  }
                }
              },
              "issue": {
                "message": "AutoSupport OnDemand is disabled when \"-transport\" is not set to \"https\".",
                "code": "53149740"
              },
              "corrective_action": {
                "message": "Run \"system node autosupport modify -transport https -node <node name>\" to set \"-transport\" to \"https\".",
                "code": "53149740"
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport"
            }
          }
        }
        ```
        ---
      tags:
      - support
  /support/autosupport/messages:
    get:
      description: |
        Retrieves AutoSupport message history from all nodes in the cluster.<p/>
        There can be a short delay on invoked AutoSupport messages showing in history, dependent on processing of other AutoSupports in the queue.
        ### Related ONTAP commands
        * `system node autosupport history show`
        ### Learn more
        * [`DOC /support/autosupport/messages`](#docs-support-support_autosupport_messages)
      operationId: autosupport_message_collection_get
      parameters:
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by destination
        in: query
        name: destination
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by generated_on
        in: query
        name: generated_on
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by subject
        in: query
        name: subject
        type: string
      - description: Filter by error.message
        in: query
        name: error.message
        type: string
      - description: Filter by error.code
        in: query
        name: error.code
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/autosupport_message_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |
        Creates and sends an AutoSupport message with the provided input parameters.<p/>
        Important note:
        * By default, the response is an empty object. If `return_records=true` is passed in the request, the response includes information about the node and the index of the invoked AutoSupport message.
        ### Recommended optional properties
        * `message` - Message included in the AutoSupport subject. Use this to identify the generated AutoSupport message.
        ### Default property values
        If not specified in POST, the following are the default property values:
        * `type` - _all_
        * `node.name` or `node.uuid` - Not specifying these properties invokes AutoSupport on all nodes in the cluster.
        ### Related ONTAP commands
        * `system node autosupport invoke`
        ### Learn more
        * [`DOC /support/autosupport/messages`](#docs-support-support_autosupport_messages)
      operationId: autosupport_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/autosupport_message'
      responses:
        '201':
          description: Created
          schema:
            description: List of messages invoked on the node
            properties:
              _links:
                properties:
                  self:
                    $ref: '#/definitions/href'
                readOnly: true
                type: object
              num_records:
                description: Number of records
                example: 3
                type: integer
              records:
                items:
                  properties:
                    _links:
                      properties:
                        self:
                          $ref: '#/definitions/href'
                      readOnly: true
                      type: object
                    index:
                      description: Sequence number of the generated AutoSupport
                      example: 9
                      type: integer
                    node:
                      properties:
                        _links:
                          properties:
                            self:
                              $ref: '#/definitions/href'
                          readOnly: true
                          type: object
                        name:
                          example: node1
                          type: string
                        uuid:
                          example: 1cd8a442-86d1-11e0-ae1c-123478563412
                          type: string
                      readOnly: true
                      type: object
                  type: object
                type: array
            type: object
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 53149748   | The destination URI provided for the invoked AutoSupport is invalid |
            | 655294464  | The message parameter is not supported with performance AutoSupports |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Use this API to invoke and retrieve AutoSupport messages from the nodes in the cluster.<p/>
        This API supports POST and GET calls. Use a POST call to invoke AutoSupport and a GET call to retrieve AutoSupport messages.
        ---
        ## Examples
        ### Invoking an AutoSupport on all nodes in the cluster
        The following example invokes an AutoSupport on every node in the cluster.
        Note that AutoSupport is invoked on all nodes in the cluster if the `node` parameter is omitted. Also, note that the `subject` line is the same when invoking on all nodes.<p/>
        By default, the response is an empty object. If `return_records=true` is passed in the request, the response includes information about the node and the index of the invoked AutoSupport message.
        ```JSON
        # The API:
        POST /support/autosupport/messages
        # The call:
        curl -X POST "https://<mgmt-ip>/api/support/autosupport/messages?return_records=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"message\": \"test_msg\", \"type\": \"all\"}"
        # The response:
        201 CREATED
        {
          "num_records": 2,
          "records": [
            {
              "index": 4,
              "node": {
                "name": "node1",
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/4"
                }
              }
            },
            {
              "index": 2,
              "node": {
                "name": "node2",
                "uuid": "e47d2630-f250-11e8-b186-005056bb5cab",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/e47d2630-f250-11e8-b186-005056bb5cab"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/e47d2630-f250-11e8-b186-005056bb5cab/2"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages/"
            }
          }
        }
        ```
        ---
        ### Invoking an AutoSupport on a single node
        The following examples invoke an AutoSupport on a single node in the cluster.
        Note that AutoSupport is invoked on all nodes in the cluster if the `node` parameter is omitted. You can specify the node-name with either `node` or `node.name` parameter. You can also specify UUID of the node with the `node.uuid` parameter.<p/>
        By default, the response is an empty object. If `return_records=true` is passed in the request, the response includes information about the node and the index of the invoked AutoSupport message.
        ```JSON
        # The API:
        POST /support/autosupport/messages
        # The call:
        curl -X POST "https://<mgmt-ip>/api/support/autosupport/messages?return_records=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"message\": \"test_msg\", \"type\": \"test\", \"node\":\"node1\"}"
        # The response:
        201 CREATED
        {
          "num_records": 1,
          "records": [
            {
              "index": 8,
              "node": {
                "name": "node1",
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/8"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages/"
            }
          }
        }
        # The call:
        curl -X POST "https://<mgmt-ip>/api/support/autosupport/messages?return_records=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"message\": \"test_msg\", \"type\": \"test\", \"node.name\":\"node2\"}"
        # The response:
        201 CREATED
        {
          "num_records": 1,
          "records": [
            {
              "index": 4,
              "node": {
                "name": "node2",
                "uuid": "e47d2630-f250-11e8-b186-005056bb5cab",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/e47d2630-f250-11e8-b186-005056bb5cab"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/e47d2630-f250-11e8-b186-005056bb5cab/4"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages/"
            }
          }
        }
        # The call:
        curl -X POST "https://<mgmt-ip>/api/support/autosupport/messages?return_records=true" -H "accept: application/hal+json" -H "Content-Type: application/json" -d "{ \"message\": \"test_msg\", \"type\": \"test\", \"node.uuid\":\"092e0298-f250-11e8-9a05-005056bb6666\"}"
        # The response:
        201 CREATED
        {
          "num_records": 1,
          "records": [
            {
              "index": 5,
              "node": {
                "name": "node1",
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/5"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages/"
            }
          }
        }
        ```
        ---
        ### Retrieving AutoSupport messages from all nodes in the cluster
        The following example retrieves AutoSupport messages from every node in the cluster.
        Note that if the <i>fields=*</i> parameter is not specified, only node, index, and destination fields are returned.
        Filters can be added on the fields to limit the results.
        ```JSON
        # The API:
        GET /support/autosupport/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/autosupport/messages?fields=*&return_timeout=15" -H "accept: application/hal+json"
        # The response:
        200 OK
        {
          "records": [
            {
              "node": {
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "name": "node1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "index": 1,
              "destination": "smtp",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "ignore",
              "generated_on": "2019-03-28T10:18:04-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/1/smtp"
                }
              }
            },
            {
              "node": {
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "name": "node1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "index": 1,
              "destination": "http",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "sent_successful",
              "generated_on": "2019-03-28T10:18:04-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/1/http"
                }
              }
            },
            {
              "node": {
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "name": "node1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "index": 1,
              "destination": "noteto",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "ignore",
              "generated_on": "2019-03-28T10:18:04-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/1/noteto"
                }
              }
            },
            {
              "node": {
                "uuid": "e47d2630-f250-11e8-b186-005056bb5cab",
                "name": "node2",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/e47d2630-f250-11e8-b186-005056bb5cab"
                  }
                }
              },
              "index": 1,
              "destination": "smtp",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "ignore",
              "generated_on": "2019-03-28T10:18:06-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/e47d2630-f250-11e8-b186-005056bb5cab/1/smtp"
                }
              }
            },
            {
              "node": {
                "uuid": "e47d2630-f250-11e8-b186-005056bb5cab",
                "name": "node2",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/e47d2630-f250-11e8-b186-005056bb5cab"
                  }
                }
              },
              "index": 1,
              "destination": "http",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "sent_successful",
              "generated_on": "2019-03-28T10:18:06-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/e47d2630-f250-11e8-b186-005056bb5cab/1/http"
                }
              }
            },
            {
              "node": {
                "uuid": "e47d2630-f250-11e8-b186-005056bb5cab",
                "name": "node2",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/e47d2630-f250-11e8-b186-005056bb5cab"
                  }
                }
              },
              "index": 1,
              "destination": "noteto",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "ignore",
              "generated_on": "2019-03-28T10:18:06-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/e47d2630-f250-11e8-b186-005056bb5cab/1/noteto"
                }
              }
            }
          ],
          "num_records": 6,
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages?fields=*&return_timeout=15"
            }
          }
        }
        ```
        ---
        ### Retrieving AutoSupport messages from a specific node and has 'sent_succesful' state
        The following example retrieves AutoSupport messages from a specific node in the cluster.
        Note that if the `fields=*` parameter is not specified, only node, index, and destination fields are returned.
        This example uses a filter on the `node.name` and `state` fields. You can add filters to any fields in the response.
        ```JSON
        # The API:
        GET /support/autosupport/messages
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/autosupport/messages?node.name=node1&state=sent_successful&fields=*&return_timeout=15" -H "accept: application/hal+json"
        # The response:
        200 OK
        {
          "records": [
            {
              "node": {
                "uuid": "092e0298-f250-11e8-9a05-005056bb6666",
                "name": "node1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/092e0298-f250-11e8-9a05-005056bb6666"
                  }
                }
              },
              "index": 1,
              "destination": "http",
              "subject": "USER_TRIGGERED (TEST:test_msg)",
              "state": "sent_successful",
              "generated_on": "2019-03-28T10:18:04-04:00",
              "_links": {
                "self": {
                  "href": "/api/support/autosupport/messages/092e0298-f250-11e8-9a05-005056bb6666/1/http"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/support/autosupport/messages?node.name=node1&state=sent_successful&fields=*&return_timeout=15"
            }
          }
        }
        ```
        ---
      tags:
      - support
  /support/configuration-backup:
    get:
      description: |-
        Retrieves the cluster configuration backup information.
        ### Learn more
        * [`DOC /support/configuration-backup`](#docs-support-support_configuration-backup)
      operationId: configuration_backup_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/configuration_backup'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |-
        Updates the cluster configuration backup information.

        ### Learn more
        * [`DOC /support/configuration-backup`](#docs-support-support_configuration-backup)
      operationId: configuration_backup_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Cluster configuration backup information
        in: body
        name: info
        schema:
          $ref: '#/definitions/configuration_backup'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 39387137   | Invalid URL |
            | 39387138   | Invalid URL Scheme |
            |  5963792   | Using HTTPS for URL requires an effective cluster version of 9.7.0 or later. |
            |  5963794   | Validating the certificate is supported for the HTTPS protocol only. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        This API retrieves the current settings for the configuration and updates configuration backup settings. The GET operation retrieves the current settings for the configuration and the PATCH operation updates the configuration backup settings.
        ## Examples
        These examples show how to retrieve and update the configuration backup settings.
        ### Retrieving the configuration backup settings
        ---
        ```
        # The API:
        /api/support/configuration-backup
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/configuration-backup" -H "accept: application/hal+json"
        # The response:
        {
            "url": "http://10.224.65.198/backups",
            "username": "me",
            "_links": {
                "self": {
                    "href": "/api/support/configuration-backup"
                }
            }
        }
        ```
        ---
        ### Updating the configuration backup settings
        ---
        ```
        # The API:
        /api/support/configuration-backup
        # The call:
        curl -X PATCH "https://<mgmt-ip>/api/support/configuration-backup" -H "accept: application/hal+json"
        # The body:
        {
            "url": "https://10.224.65.198/new_backups",
            "username": "new_me",
            "password": "new_pass",
            "validate_certificate": "true"
        }
        # The response header:
        HTTP/1.1 200 OK
        Date: Tue, 05 Jun 2018 18:17:48 GMT
        Server: libzapid-httpd
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/hal+json
        ```
        ---
      tags:
      - support
  /support/configuration-backup/backups:
    get:
      description: |-
        Retrieves a list of configuration backup files.
        ### Related ONTAP commands
        * `system configuration backup show`

        ### Learn more
        * [`DOC /support/configuration-backup/backups`](#docs-support-support_configuration-backup_backups)
      operationId: configuration_backup_file_collection_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      - description: Filter by time
        in: query
        name: time
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by download_link
        in: query
        name: download_link
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by backup_nodes.name
        in: query
        name: backup_nodes.name
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by auto
        in: query
        name: auto
        type: boolean
      - description: Filter by version
        in: query
        name: version
        type: string
      - description: Filter by size
        in: query
        name: size
        type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/configuration_backup_file_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |-
        Creates a configuration backup. The required backup file name must end with .7z extension.
        ### Required properties
        * `node.uuid` or `node.name` - The node UUID or node name on which the configuration backup will be created.
        * `name` - The backup file name
        ### Related ONTAP commands
        * `system configuration backup create`

        ### Learn more
        * [`DOC /support/configuration-backup/backups`](#docs-support-support_configuration-backup_backups)
      operationId: configuration_backup_file_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Details of the configuration backup to be created.
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/configuration_backup_file'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5963818 | Failed to queue private job. |
            | 5963819 | Failed to queue cluster job. |
            | 5963871 | Requested backup name is missing .7z suffix. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        This API supports creating, deleting and retrieving configuration backup files.
        Configuration backups can be 'cluster' or 'node' type. A 'cluster' backup contains cluster-wide configuration in addition to the configuration of each node in the cluster. A 'node' backup contains only node-specific configuration such as configuration files on the root volume and the boot variables. For creating a cluster backup, a cluster-wide job is queued. For creating a node backup, a private job local to the node is queued.
        In addition to the backups created using this API, ONTAP creates configuration backups automatically based on job schedules. This API supports creating configuration backups on demand only. It supports deleting and retrieving configuration backups that are created automatically or on demand.
        For information on configuration backup settings for automatically created backups, see [`DOC /support/configuration-backup`](#docs-support-support_configuration-backup)
        ## Examples
        ### Retrieving a list of configuration backup files
        ---
        ```
        # The API:
        /api/support/configuration-backup/backups
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/configuration-backup/backups" -H "accept: application/hal+json"
        # The response:
        {
          "records": [
            {
              "node": {
                "uuid": "5cafe0f6-499f-11e9-b644-005056bbcf93",
                "name": "node1",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/5cafe0f6-499f-11e9-b644-005056bbcf93"
                  }
                }
              },
              "name": "backup1.7z",
              "_links": {
                "self": {
                  "href": "/api/support/configuration_backup/backups/5cafe0f6-499f-11e9-b644-005056bbcf93/backup1.7z"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/support/configuration_backup/backups"
            }
          }
        }
        ```
        ---
        ### Retrieving details of the specified configuration backup file
        ---
        ```
        # The API:
        /api/support/configuration-backup/backups/{node.uuid}/{name}
        # The call:
        curl -X GET "https://<mgmt-ip>/api/support/configuration-backup/backups/bc2f15d0-8b93-11e9-90e9-005056bb6a30/backup1.7z" -H "accept: application/hal+json"
        # The response:
        {
          "node": {
            "uuid": "bc2f15d0-8b93-11e9-90e9-005056bb6a30",
            "name": "node1",
            "_links": {
              "self": {
                "href": "/api/cluster/nodes/bc2f15d0-8b93-11e9-90e9-005056bb6a30"
              }
            }
          },
          "name": "backup1.7z",
          "type": "cluster",
          "time": "2019-06-10T13:35:06-04:00",
          "size": 6058408,
          "backup_nodes": [
            {
              "name": "node1"
            },
            {
              "name": "node2"
            }
          ],
          "version": "9.7.0",
          "auto": false,
          "download_link": "https://10.224.66.113/backups/backup1.7z",
          "_links": {
            "self": {
              "href": "/api/support/configuration-backup/backups/bc2f15d0-8b93-11e9-90e9-005056bb6a30/backup1.7z"
            }
          }
        }
        ```
        ---
        ### Creating a configuration backup file
        ---
        ```
        # The API:
        /api/support/configuration-backup/backups
        # The call:
        curl -X POST "https://<mgmt-ip>/api/support/configuration-backup/backups" -H "accept: application/hal+json"
        # The body:
        {
          "node":
            {
              "uuid": "ac13c636-4fc9-11e9-94c2-005056bb2516",
              "name": "node1"
            },
          "name": "backup3.7z"
        }
        # The response header:
        HTTP/1.1 202 Accepted
        Date: Tue, 26 Mar 2019 14:26:24 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Location: /api/support/configuration_backup/backups/ac13c636-4fc9-11e9-94c2-005056bb2516/backup3.7z
        Content-Length: 189
        Content-Type: application/hal+json
        {
          "job": {
            "uuid": "22acfb68-4fd3-11e9-94c2-005056bb2516",
            "_links": {
              "self": {
                "href": "/api/cluster/jobs/22acfb68-4fd3-11e9-94c2-005056bb2516"
              }
            }
          }
        }
        ```
        ---
        ### Deleting a configuration backup file
        ---
        ```
        # The API:
        /api/support/configuration-backup/backups/{node.uuid}/{name}
        # The call:
        curl -X DELETE "https://<mgmt-ip>/api/support/configuration_backup/backups/5cafe0f6-499f-11e9-b644-005056bbcf93/backup1.7z" -H "content-type: application/json"
        # The response header:
        HTTP/1.1 200 OK
        Date: Tue, 26 Mar 2019 14:32:23 GMT
        Server: libzapid-httpd
        X-Content-Type-Options: nosniff
        Cache-Control: no-cache,no-store,must-revalidate
        Content-Length: 3
        Content-Type: application/hal+json
        ```
        ---
      tags:
      - support
  /support/configuration-backup/backups/{node.uuid}/{name}:
    delete:
      description: |-
        Deletes a configuration backup.
        ### Related ONTAP commands
        * `system configuration backup delete`

        ### Learn more
        * [`DOC /support/configuration-backup/backups`](#docs-support-support_configuration-backup_backups)
      operationId: configuration_backup_file_delete
      parameters:
      - description: UUID of the node that owns the configuration backup.
        in: path
        name: node.uuid
        required: true
        type: string
      - description: Name of the configuration backup to be deleted.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5963826 | Failed to delete backup file. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |-
        Retrieves details of the specified configuration backup file.
        ### Related ONTAP commands
        * `system configuration backup show`

        ### Learn more
        * [`DOC /support/configuration-backup/backups`](#docs-support-support_configuration-backup_backups)
      operationId: configuration_backup_file_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - description: UUID of the node that owns the configuration backup.
        in: path
        name: node.uuid
        required: true
        type: string
      - description: Name of the configuration backup.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/configuration_backup_file_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 5963777 | Configuration backup file does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
  /support/ems:
    get:
      description: |-
        Retrieves the EMS configuration.
        ### Related ONTAP commands
        * `event config show`

        ### Learn more
        * [`DOC /support/ems`](#docs-support-support_ems)
      operationId: ems_config_get
      parameters:
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_config'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |-
        Updates the EMS configuration.
        ### Related ONTAP commands
        * `event config modify`

        ### Learn more
        * [`DOC /support/ems`](#docs-support-support_ems)
      operationId: ems_config_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_config'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983123     | The validation of the mail server provided failed |
            | 983136     | The proxy URL cannot contain a username or password |
            | 983137     | The proxy URLprovided is invalid |
            | 983139     | The IPv6 proxy URL provided is invalid |
            | 983140     | The proxy URL provided contains an invalid scheme. Supported schemes are 'http' or 'https' |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        The Event Management System (EMS) collects and processes events, and sends notification of the events through various reporting mechanisms. The following endpoints defined under '/support/ems', allow you to query a list of observed events, and configure which events you handle and how you are notified:
        - /support/ems
        - /support/ems/events
        - /support/ems/messages
        - /support/ems/filters
        - /support/ems/filters/{name}/rules
        - /support/ems/filters/{name}/rules/{index}
        - /support/ems/destinations
        - /support/ems/destinations/{name}
        ## Examples
        ### Configuring an email destination
        The following example configures EMS to send a support email when a WAFL event is observed with an error severity.
        #### Configure the system-wide email parameters
        ```JSON
        # API
        PATCH /support/ems
        # JSON Body
        {
          "mail_from": "administrator@mycompany.com",
          "mail_server": "smtp@mycompany.com"
        }
        # Response
        200 OK
        ```
        ### Configuring a filter with an enclosed rule
        ```JSON
        # API
        POST /support/ems/filters
        # JSON Body
        {
          "name": "critical-wafl",
          "rules": [
            {
              "index": 1,
              "type": "include",
              "message_criteria": {
                "name_pattern": "wafl.*",
                "severities": "emergency,error,alert"
              }
            }
          ]
        }
        # Response
        201 Created
        ```
        ### Setting up an email destination
        ```JSON
        # API
        POST /support/ems/destinations
        # JSON Body
        {
          "name": "Technician_Email",
          "type": "email",
          "destination": "technician@mycompany.com",
          "filters": [
            { "name" : "critical-wafl" }
          ]
        }
        # Response
        201 Created
        ```
      tags:
      - support
  /support/ems/destinations:
    get:
      description: |-
        Retrieves a collection of event destinations.
        ### Related ONTAP commands
        * `event notification destination show`
        * `event notification show`

        ### Learn more
        * [`DOC /support/ems/destinations`](#docs-support-support_ems_destinations)
      operationId: ems_destination_collection_get
      parameters:
      - description: Filter by filters.name
        in: query
        name: filters.name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by destination
        in: query
        name: destination
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by certificate.serial_number
        in: query
        name: certificate.serial_number
        type: string
      - description: Filter by certificate.ca
        in: query
        name: certificate.ca
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_destination_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |-
        Creates an event destination.
        ### Required properties
        * `name` - String that uniquely identifies the destination.
        * `type` - Type of destination that is to be created.
        * `destination` - String that identifies the destination. The contents of this property changes depending on type.
        ### Recommended optional properties
        * `filters.name` - List of filter names that should direct to this destination.
        * `certificate` - When specifying a rest api destination, a client certificate can be provided.
        ### Related ONTAP commands
        * `event notification destination create`
        * `event notification create`

        ### Learn more
        * [`DOC /support/ems/destinations`](#docs-support-support_ems_destinations)
      operationId: ems_destination_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_destination'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ems_destination_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983088     | The destination name provided cannot be empty |
            | 983089     | The destination name provided cannot contain spaces |
            | 983094     | The destination name provided is invalid. The destination name must contain between 2 and 64 characters and start and end with an alphanumeric symbol or _(underscore). The allowed special characters are _(underscore) and -(hyphen) |
            | 983104     | The syslog destination provided is invalid |
            | 983116     | The number of notifications has reached maximum capacity |
            | 983117     | The number of destinations has reached maximum capacity |
            | 983129     | The rest-api destination provided must contain a valid scheme, such as http// or https// |
            | 983130     | The rest-api destination provided contains an invalid URL |
            | 983131     | The rest-api destination provided contains an invalid IPv6 URL |
            | 983144     | The security certificate information provided is incomplete. Provide the certificate and serial number |
            | 983145     | The rest-api destination provided has an 'http://' scheme. It is invalid to provide certificate information |
            | 983149     | New SNMP destinations cannot be created |
            | 983151     | A property provided cannot be configured on the requested destination type |
            | 983152     | Default destinations cannot be modified or removed |
            | 983153     | The security certificate provided does not exist |
            | 983154     | The necessary private key is not installed on the system |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages the list of destinations. A destination is defined by a type and a place to which an event's information is transmitted.
        ## Destination Types
        An EMS destination is defined by a single type, which is one of the following:
        - email
        - syslog
        - rest_api
        - snmp
        ### Email
        The 'email' type allows you to define a mailbox where information about an observed event is sent by SMTP. Enter the address in the destination field in a valid format.
        For example: administrator@mycompany.com
        ### Syslog
        The 'syslog' type allows you to specify a remote syslog server that can receive information about an observed event. Enter the hostname or IP address in the destination field.
        For example: syslog.mycompany.com, 192.168.1.1
        ### Rest API
        The 'rest_api' type allows you to define a URL where information about an observed event is sent using the REST protocol. Enter the URL in the destination field.
        The URL must contain a valid transmission schema which can be one of the following:
        - http
        - https
        Using the 'https' schema, you can configure a client-side certificate for mutual authentication.
        For example: http://rest.mycompany.com, https://192.168.1.1
        ### SNMP
        The 'snmp' type describes addresses where information about an observed event is sent using SNMP traps. The system defines a default instance of this type and it is restricted to read-only.
        This type has the following limitations:
        - Cannot create new destinations of type 'snmp'
        - Cannot modify the default 'snmp' destination
        </br>SNMP trap host details need to be configured through one of the following:
        | Type | Command / API |
        | ---- | ------------------- |
        | CLI  | 'system snmp traphost' |
        | ZAPI | 'snmp-traphost-add' / 'snmp-traphost-delete' |
        ## Examples
        ### Retrieving the list of active destinations
        ```JSON
        # API
        GET /api/support/ems/destinations
        # Response
        200 OK
        # JSON Body
        {
          "records": [
            {
              "name": "snmp-traphost",
              "_links": {
                "self": {
                  "href": "/api/support/ems/destinations/snmp-traphost"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/support/ems/destinations"
            }
          }
        }
        ```
        ### Creating a new 'email' destination
        ```JSON
        # API
        POST /support/ems/destinations
        # JSON Body
        {
          "name": "Technician_Email",
          "type": "email",
          "destination": "technician@mycompany.com",
          "filters": [
            { "name" : "critical-wafl" }
          ]
        }
        # Response
        201 Created
        ```
      tags:
      - support
  /support/ems/destinations/{name}:
    delete:
      description: |-
        Deletes an event destination.
        ### Related ONTAP commands
        * `event notification destination delete`
        * `event notification delete`

        ### Learn more
        * [`DOC /support/ems/destinations/{name}`](#docs-support-support_ems_destinations_{name})
      operationId: ems_destination_delete
      parameters:
      - description: Destination name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983152     | Default destinations cannot be modified or removed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |-
        Retrieves event destinations.
        ### Related ONTAP commands
        * `event notification destination show`
        * `event notification show`

        ### Learn more
        * [`DOC /support/ems/destinations/{name}`](#docs-support-support_ems_destinations_{name})
      operationId: ems_destination_get
      parameters:
      - description: Destination name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_destination'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |-
        Updates an event destination.
        ### Recommended optional properties
        * `filters.name` - New list of filters that should direct to this destination. The existing list is discarded.
        * `certificate` - New certificate parameters when the destination type is `rest api`.
        ### Related ONTAP commands
        * `event notification destination modify`
        * `event notification modify`

        ### Learn more
        * [`DOC /support/ems/destinations/{name}`](#docs-support-support_ems_destinations_{name})
      operationId: ems_destination_modify
      parameters:
      - description: Destination name
        in: path
        name: name
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_destination'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_destination'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983088     | The destination name provided cannot be empty |
            | 983089     | The destination name provided cannot contain spaces |
            | 983094     | The destination name provided is invalid. The destination name must contain between 2 and 64 characters and start and end with an alphanumeric symbol or _(underscore). The allowed special characters are _(underscore) and -(hyphen) |
            | 983104     | The syslog destination provided is invalid |
            | 983116     | The number of notifications has reached maximum capacity |
            | 983117     | The number of destinations has reached maximum capacity |
            | 983129     | The rest-api destination must contain a valid scheme, such as http// or https// |
            | 983130     | The rest-api destination provided contains an invalid URL |
            | 983131     | The rest-api destination provided contains an invalid IPv6 URL |
            | 983142     | The security certificate provided does not exist |
            | 983143     | The private security key provided does not exist |
            | 983144     | The security certificate information provided is incomplete. Provide the certificate and serial number |
            | 983145     | The rest-api destination provided has an 'http://' scheme. It is invalid to provide certificate information |
            | 983150     | The type of an existing destination cannot be changed |
            | 983151     | A property provided cannot be configured on the requested destination type |
            | 983152     | Default destinations cannot be modified or removed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages a specific instance of a destination. There are limits to the information that you can modify after a destination is created. For example, you cannot change a destination's type, but you can modify the underlying details of the type.
        See the documentation for [/support/ems/destinations](#/docs/support/support_ems_destinations) for details on the various properties in a destination.
        ## Examples
        ### Retrieving a specific destination instance
        ```JSON
        # API
        GET /api/support/ems/destinations/snmp-traphost
        # Response
        200 OK
        # JSON Body
        {
          "name": "snmp-traphost",
          "type": "snmp",
          "destination": "",
          "filters": [
            {
              "name": "default-trap-events",
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/default-trap-events"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/ems/destinations/snmp-traphost"
            }
          }
        }
        ```
        ### Updating an existing destination (change of email address)
        ```JSON
        # API
        PATCH /api/support/ems/destinations/test-destination
        # JSON Body
        {
          "destination": "support@mycompany.com"
        }
        # Response
        200 OK
        ```
        ### Deleting an existing destination
        ```JSON
        # API
        DELETE /api/support/ems/destinations/test-destination
        # Response
        200 OK
        ```
      tags:
      - support
  /support/ems/events:
    get:
      description: |-
        Retrieves a collection of observed events.
        ### Related ONTAP commands
        * `event log show`

        ### Learn more
        * [`DOC /support/ems/events`](#docs-support-support_ems_events)
      operationId: ems_event_collection_get
      parameters:
      - description: Filter by source
        in: query
        name: source
        type: string
      - description: Filter by parameters.name
        in: query
        name: parameters.name
        type: string
      - description: Filter by parameters.value
        in: query
        name: parameters.value
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - description: Filter by message.severity
        in: query
        name: message.severity
        type: string
      - description: Filter by message.name
        in: query
        name: message.name
        type: string
      - description: Filter by time
        in: query
        name: time
        type: string
      - description: Filter by node.uuid
        in: query
        name: node.uuid
        type: string
      - description: Filter by node.name
        in: query
        name: node.name
        type: string
      - description: Filter by log_message
        in: query
        name: log_message
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_event_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Queries a live collection of observed events on the system.
        ## Example
        ### Querying for the latest event received by EMS
        ```JSON
        # API
        GET /api/support/ems/events?fields=message.name&max_records=1
        # Response
        200 OK
        # JSON Body
        {
          "records": [
            {
              "node": {
                "name": "node1",
                "uuid": "f087b8e3-99ac-11e8-b5a5-005056bb4ec7",
                "_links": {
                  "self": {
                    "href": "/api/cluster/nodes/f087b8e3-99ac-11e8-b5a5-005056bb4ec7"
                  }
                }
              },
              "index": 661,
              "message": {
                "name": "raid.aggr.log.CP.count"
              },
              "_links": {
                "self": {
                  "href": "/api/support/ems/events/node1/661"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/support/ems/events?fields=message.name&max_records=1"
            },
          }
        }
        ```
      tags:
      - support
  /support/ems/filters:
    get:
      description: |-
        Retrieves a collection of event filters.
        ### Related ONTAP commands
        * `event filter show`

        ### Learn more
        * [`DOC /support/ems/filters`](#docs-support-support_ems_filters)
      operationId: ems_filter_collection_get
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by rules.message_criteria.name_pattern
        in: query
        name: rules.message_criteria.name_pattern
        type: string
      - description: Filter by rules.message_criteria.severities
        in: query
        name: rules.message_criteria.severities
        type: string
      - description: Filter by rules.message_criteria.snmp_trap_types
        in: query
        name: rules.message_criteria.snmp_trap_types
        type: string
      - description: Filter by rules.type
        in: query
        name: rules.type
        type: string
      - description: Filter by rules.index
        in: query
        name: rules.index
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_filter_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |-
        Creates an event filter.
        ### Required properties
        * `name` - String that uniquely identifies the filter.
        ### Recommended optional properties
        * `rules` - List of criteria which is used to match a filter with an event.
        ### Related ONTAP commands
        * `event filter create`

        ### Learn more
        * [`DOC /support/ems/filters`](#docs-support-support_ems_filters)
      operationId: ems_filter_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_filter'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ems_filter_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983088     | The filter name provided is empty |
            | 983089     | The filter name provided cannot contain spaces |
            | 983092     | The index of the rule provided is outside the allowed range for the filter provided |
            | 983094     | The filter name provided is invalid. The filter name must contain between 2 and 64 characters and start and end with an alphanumeric symbol or (underscore). The allowed special characters are (underscore) and -(hyphen) |
            | 983095     | The   rule index provided is invalid for the filter provided |
            | 983101     | No event is matched by the rule provided |
            | 983113     | Default filters cannot be modified or removed |
            | 983114     | The maximum number of filters is reached |
            | 983115     | The maximum number of filter rules is reached |
            | 983126     | A rule requires at least one name_pattern, severities, or snmp_trap_types to be defined |
            | 983127     | A property cannot contain a combination of the wildcard character and other values |
            | 983128     | An invalid value is provided for the property 'snmp_trap_types' |
            | 983146     | An invalid value is provided for the property 'severities' |
            | 983147     | The severity provided are not supported |
            | 983155     | The provided severities property does not match that of the name_pattern |
            | 983156     | The provided snmp_trap_types property does not match that of the name_pattern |
            | 983157     | The provided severities and snmp_trap_types do not match those of the name_pattern |
            | 983158     | The name_pattern provided does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages the list of available filters. A filter is a named collection of rules that enable the system to identify events that require additional handling. A filter is linked with a destination to which the system sends specific events.</br>
        When EMS processes an event, each filter is evaluated for a match. More than one filter can handle a single event.
        ### Filter rule position
        A filter's rules are evaluated sequentially, according to their position index. When a rule is added or modified, the position can be set to customize the filter's logic. If no position is specified, a new rule is appended to the end of the list.
        ### Filter rule types
        A filter rule can be one of two types: 'include' or 'exclude'.
        If an event matches the criteria of the rule, the type dictates whether it should be forwarded to the destination or ignored.
        ### Filter rule matching criteria
        A valid filter rule must contain at least one set of criteria.
        #### Name pattern
        A name pattern is matched against an event's name. Multiple characters can be matched using the wildcard character '*'.
        #### Severity
        The severity pattern is matched against an event's severity. Multiple severities can be specified in a comma separated list. A single wildcard '*' will match all severities. Valid values are:
        - emergency
        - alert
        - error
        - notice
        - informational
        - debug
        #### SNMP trap type
        The SNMP trap type pattern is matched against an event's trap type. Multiple trap types can be specified in a comma separated list. A single wildcard '*' matches all trap types. Valid values are:
        - standard
        - built_in
        - severity_based
        ## Examples
        ### Retrieving a list of filters whose names contain a hyphen
        ```JSON
        # API
        GET /api/support/ems/filters?name=*-*
        # Response
        200 OK
        # JSON Body
        {
          "records": [
            {
              "name": "default-trap-events",
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/default-trap-events"
                }
              }
            },
            {
              "name": "important-events",
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/important-events"
                }
              }
            },
            {
              "name": "no-info-debug-events",
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/no-info-debug-events"
                }
              }
            }
          ],
          "num_records": 3,
          "_links": {
            "self": {
              "href": "/api/support/ems/filters?name=*-*"
            }
          }
        }
        ```
        ### Creating a new filter using various matching criteria
        ```JSON
        # API
        POST /api/support/ems/filters
        # JSON Body
        {
          "name": "test-filter",
          "rules": [
            {
              "index": 1,
              "type": "include",
              "message_criteria": {
                "name_pattern": "LUN.*",
                "severities": "alert,error",
                "snmp_trap_types": "severity_based"
              }
            }
          ]
        }
        # Response
        201 Created
        ```
      tags:
      - support
  /support/ems/filters/{name}:
    delete:
      description: |-
        Deletes an event filter.
        ### Related ONTAP commands
        * `event filter delete`

        ### Learn more
        * [`DOC /support/ems/filters/{name}`](#docs-support-support_ems_filters_{name})
      operationId: ems_filter_delete
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983113     | Default filters cannot be modified or removed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |-
        Retrieves an event filter.
        ### Related ONTAP commands
        * `event filter show`

        ### Learn more
        * [`DOC /support/ems/filters/{name}`](#docs-support-support_ems_filters_{name})
      operationId: ems_filter_get
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_filter'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |-
        Updates an event filter.
        ### Recommended optional properties
        * `new_name` - New string that uniquely identifies a filter.
        * `rules` - New list of criteria used to match the filter with an event. The existing list is discarded.
        ### Related ONTAP commands
        * `event filter create`
        * `event filter delete`
        * `event filter rename`
        * `event filter rule add`
        * `event filter rule delete`
        * `event filter rule reorder`

        ### Learn more
        * [`DOC /support/ems/filters/{name}`](#docs-support-support_ems_filters_{name})
      operationId: ems_filter_modify
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - description: New filter name for renames. Valid in PATCH.
        in: query
        name: new_name
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_filter'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983088     | The filter name provided is empty |
            | 983089     | The filter name provided cannot contain spaces |
            | 983092     | The index of the rule provided is outside the allowed range for the filter provided |
            | 983094     | The filter name provided is invalid. The filter name must contain between 2 and 64 characters and start and end with an alphanumeric symbol or (underscore). The allowed special characters are (underscore) and -(hyphen) |
            | 983095     | The rule index provided is invalid for the filter provided |
            | 983101     | No event is matched by the rule provided |
            | 983113     | Default filters cannot be modified or removed |
            | 983114     | The maximum number of filters is reached |
            | 983115     | The maximum number of filter rules is reached |
            | 983126     | A rule requires at least one of name_pattern, severities or snmp-trap-types to be defined |
            | 983127     | A property cannot contain a combination of the wildcard characters and other values |
            | 983128     | An invalid value is provided for the property 'snmp_trap_types' |
            | 983146     | An invalid value is provided for the property 'severities' |
            | 983147     | The severity levels provided are not supported |
            | 983155     | The provided severities property does not match that of the name_pattern |
            | 983156     | The provided snmp_trap_types property does not match that of the name_pattern |
            | 983157     | The provided severities and snmp_trap_types do not match those of the name_pattern |
            | 983158     | The name_pattern provided does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages a specific filter instance.
        See the documentation for [/support/ems/filters](#/docs/support/support_ems_filters) for details on the various properties.
        ## Examples
        ### Retrieving a specific filter instance
        ```JSON
        # API
        GET /api/support/ems/filters/no-info-debug-events
        # Response
        200 OK
        # JSON Body
        {
          "name": "no-info-debug-events",
          "rules": [
            {
              "index": 1,
              "type": "include",
              "message_criteria": {
                "name_pattern": "*",
                "severities": "emergency,alert,error,notice",
                "snmp_trap_types": "*",
                "_links": {
                  "related": {
                    "href": "/api/support/ems/messages?name=*&severity=emergency,alert,error,notice&snmp_trap_type=*"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/no-info-debug-events/rules/1"
                }
              }
            },
            {
              "index": 2,
              "type": "exclude",
              "message_criteria": {
                "name_pattern": "*",
                "severities": "*",
                "snmp_trap_types": "*",
                "_links": {
                  "related": {
                    "href": "/api/support/ems/messages?name=*&severity=*&snmp_trap_type=*"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/no-info-debug-events/rules/2"
                }
              }
            }
          ],
          "_links": {
            "self": {
              "href": "/api/support/ems/filters/no-info-debug-events"
            }
          }
        }
        ```
        ### Updating an existing filter with a new rule
        ```JSON
        # API
        PATCH /api/support/ems/filters/test-filter
        # JSON Body
        {
          "rules": [
            {
              "type": "include",
              "message_criteria": {
                "name_pattern": "wafl.*",
                "severities": "error"
              }
            }
          ]
        }
        # Response
        200 OK
        ```
        ### Deleting an existing filter
        ```JSON
        # API
        DELETE /api/support/ems/filters/test-filter
        # Response
        200 OK
        ```
      tags:
      - support
  /support/ems/filters/{name}/rules:
    get:
      description: |-
        Retrieves event filter rules.
        ### Related ONTAP commands
        * `event filter show`

        ### Learn more
        * [`DOC /support/ems/filters/{name}/rules`](#docs-support-support_ems_filters_{name}_rules)
      operationId: ems_filter_rule_collection_get
      parameters:
      - description: Filter Name
        in: path
        name: name
        required: true
        type: string
      - description: Filter by message_criteria.name_pattern
        in: query
        name: message_criteria.name_pattern
        type: string
      - description: Filter by message_criteria.severities
        in: query
        name: message_criteria.severities
        type: string
      - description: Filter by message_criteria.snmp_trap_types
        in: query
        name: message_criteria.snmp_trap_types
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by index
        in: query
        name: index
        type: integer
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_filter_rule_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |-
        Creates an event filter rule.
        ### Required properties
        * `message_criteria` - Criteria on which a rule is to match an event.
        ### Recommended optional properties
        * `index` - One-based position index of the new rule.
        ### Related ONTAP commands
        * `event filter rule add`

        ### Learn more
        * [`DOC /support/ems/filters/{name}/rules`](#docs-support-support_ems_filters_{name}_rules)
      operationId: ems_filters_rules_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_filter_rule'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ems_filter_rule_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983092     | The index of the rule provided is outside the allowed range for the filter provided |
            | 983095     | The rule index provided is invalid for the filter provided |
            | 983113     | Default filters cannot be modified or removed |
            | 983115     | The maximum number of filter rules is reached |
            | 983126     | A rule requires at least one name_pattern, severities, or snmp_trap_types to be defined |
            | 983127     | A property cannot contain a combination of the wildcard characters and other values |
            | 983128     | An invalid value is provided for the property 'snmp_trap_types' |
            | 983146     | An invalid value is provided for the property 'severities' |
            | 983147     | The severity levels provided are not supported |
            | 983155     | The provided severities property does not match that of the name_pattern |
            | 983156     | The provided snmp_trap_types property does not match that of the name_pattern |
            | 983157     | The provided severities and snmp_trap_types do not match those of the name_pattern |
            | 983158     | The name_pattern provided does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages the list of rules associated with a specific filter. A filter contains a list of rules that are evaluated to determine whether an event matches the filter. When a rule matches an event, the filter is considered a match.
        See the documentation for [/support/ems/filters](#/docs/support/support_ems_filters) for details on the various properties in a rule.
        ## Examples
        ### Retrieving the collection of rules connected to a filter
        ```JSON
        # API
        GET /api/support/ems/filters/no-info-debug-events/rules
        # Response
        200 OK
        # JSON Body
        {
          "records": [
            {
              "index": 1,
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/no-info-debug-events/rules/1"
                }
              }
            },
            {
              "index": 2,
              "_links": {
                "self": {
                  "href": "/api/support/ems/filters/no-info-debug-events/rules/2"
                }
              }
            }
          ],
          "num_records": 2,
          "_links": {
            "self": {
              "href": "/api/support/ems/filters/no-info-debug-events/rules"
            }
          }
        }
        ```
        ### Creating a new rule under an existing filter
        Note: The absence of a position index appends the rule to the end of the list.
        ```JSON
        # API
        POST /api/support/ems/filters/test-filter/rules
        # JSON Body
        {
          "type": "include",
          "message_criteria": {
            "name_pattern": "wafl.*",
            "severities": "error,informational"
          }
        }
        # Response
        201 Created
        ```
      tags:
      - support
  /support/ems/filters/{name}/rules/{index}:
    delete:
      description: |-
        Deletes an event filter rule.
        ### Related ONTAP commands
        * `event filter rule delete`

        ### Learn more
        * [`DOC /support/ems/filters/{name}/rules/{index}`](#docs-support-support_ems_filters_{name}_rules_{index})
      operationId: ems_filter_rule_delete
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - description: Filter index
        in: path
        name: index
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983091     | A default rule cannot be removed |
            | 983092     | The index of the rule provided is outside the allowed range for the filter provided |
            | 983095     | The rule index provided is invalid for the filter provided |
            | 983110     | There are no user defined rules in the filter provided |
            | 983113     | Default filters cannot be modified or removed |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |-
        Retrieves an event filter rule.
        ### Related ONTAP commands
        * `event filter show`

        ### Learn more
        * [`DOC /support/ems/filters/{name}/rules/{index}`](#docs-support-support_ems_filters_{name}_rules_{index})
      operationId: ems_filter_rule_get
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - description: Filter index
        in: path
        name: index
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_filter_rule'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |-
        Updates an event filter rule.
        ### Recommended optional properties
        * `message_criteria` - New criteria on which a rule is to match an event.
        ### Related ONTAP commands
        * `event filter rule add`
        * `event filter rule delete`

        ### Learn more
        * [`DOC /support/ems/filters/{name}/rules/{index}`](#docs-support-support_ems_filters_{name}_rules_{index})
      operationId: ems_filter_rule_modify
      parameters:
      - description: Filter name
        in: path
        name: name
        required: true
        type: string
      - description: Filter index
        in: path
        name: index
        required: true
        type: string
      - description: New position for the filter rule index
        in: query
        name: new_index
        type: integer
      - description: Information specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/ems_filter_rule'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 983092     | The index of the rule provided is outside the allowed range for the filter provided |
            | 983095     | The rule index provided is invalid for the filter provided |
            | 983113     | Default filters cannot be modified or removed |
            | 983126     | A rule requires at least one name_pattern, severities, or snmp_trap_types to be defined |
            | 983127     | A property cannot contain a combination of the wildcard characters and other values. |
            | 983128     | An invalid value is provided for the property 'snmp_trap_types' |
            | 983146     | An invalid value is provided for the property 'severities' |
            | 983147     | The severity levels provided are not supported |
            | 983155     | The provided severities property does not match that of the name_pattern |
            | 983156     | The provided snmp_trap_types property does not match that of the name_pattern |
            | 983157     | The provided severities and snmp_trap_types do not match those of the name_pattern |
            | 983158     | The name_pattern provided does not exist |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Manages a specific instance of a rule within a filter.
        See the documentation for [/support/ems/filters](#/docs/support/support_ems_filters) for details on the various properties in a rule.
        ## Examples
        ### Retrieving a single instance of a rule
        ```JSON
        # API
        GET /api/support/ems/filters/no-info-debug-events/rules/1
        # Response
        200 OK
        # JSON Body
        {
          "name": "no-info-debug-events",
          "index": 1,
          "type": "include",
          "message_criteria": {
            "name_pattern": "*",
            "severities": "emergency,alert,error,notice",
            "snmp_trap_types": "*",
            "_links": {
              "self": {
                "href": "/api/support/ems/messages?name=*&severity=emergency,alert,error,notice&snmp_trap_type=*"
              }
            }
          },
          "_links": {
            "self": {
              "href": "/api/support/ems/filters/no-info-debug-events/rules/1"
            }
          }
        }
        ```
        ### Updating an existing rule to use severity emergency
        ```JSON
        # API
        PATCH /api/support/ems/filters/test-filter/rules/1
        # JSON Body
        {
          "message_criteria": {
            "severities": "emergency"
          }
        }
        # Response
        200 OK
        ```
        ### Deleting a rule from an existing filter
        ```JSON
        # API
        DELETE /api/support/ems/filters/test-filter/rules/1
        # Response
        200 OK
        ```
      tags:
      - support
  /support/ems/messages:
    get:
      description: |-
        Retrieves the event catalog definitions.
        ### Related ONTAP commands
        * `event catalog show`

        ### Learn more
        * [`DOC /support/ems/messages`](#docs-support-support_ems_messages)
      operationId: ems_message_collection_get
      parameters:
      - description: Filter by description
        in: query
        name: description
        type: string
      - description: Filter by deprecated
        in: query
        name: deprecated
        type: boolean
      - description: Filter by snmp_trap_type
        in: query
        name: snmp_trap_type
        type: string
      - description: Filter by corrective_action
        in: query
        name: corrective_action
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by severity
        in: query
        name: severity
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ems_message_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Allows access to the EMS event catalog. The catalog contains a list of all events supported by the system and their corresponding descriptions, the reason for an event occurrence, and how to correct issues related to the event.
        ## Example
        ### Querying for the first event that has a message name beginning with 'C'
        ```JSON
        # API
        GET /api/support/ems/messages?fields=name&max_records=1&name=C*
        # Response
        200 OK
        # JSON Body
        {
          "records": [
            {
              "name": "CR.Data.File.Inaccessible",
              "_links": {
                "self": {
                  "href": "/api/support/ems/messages/CR.Data.File.Inaccessible"
                }
              }
            }
          ],
          "num_records": 1,
          "_links": {
            "self": {
              "href": "/api/support/ems/messages?fields=name&max_records=1&name=C*"
            },
          }
        }
        ```
      tags:
      - support
  /support/snmp:
    get:
      description: |
        Retrieves the cluster wide SNMP configuration.
        ### Related ONTAP commands
        * `options snmp.enable`
        * `system snmp show`
        ### Learn more
        * [`DOC /support/snmp`](#docs-support-support_snmp)
      operationId: snmp_get
      parameters:
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snmp'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |
        Updates the cluster wide SNMP configuration, such as enabling or disabling SNMP and enabling or disabling authentication traps.
        ### Related ONTAP commands
        * `options snmp.enable`
        * `system snmp authtrap`
        ### Learn more
        * [`DOC /support/snmp`](#docs-support-support_snmp)
      operationId: snmp_modify
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snmp'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 1179738 | Cluster identification not available for modification since a cluster has not been created. |
            | 1179739 | Cluster identification modification is not available in maintenance mode or other boot modes. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Cluster wide SNMP configuration. You can configure or retrieve the following SNMP parameters using this endpoint:
        * enable or disable SNMP
        * enable or disable SNMP authentication traps
        ## Examples
        ### Disables SNMP protocol in the cluster.
            <br/>
            ```
            # The API:
            PATCH "/api/support/snmp"
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X PATCH "https://<mgmt-ip>/api/support/snmp" -d '{"enabled":"false"}'
            # The response
            200 OK
        ### Enables SNMP authentication traps in the cluster.
            <br/>
            ```
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X PATCH "https://<mgmt-ip>/api/support/snmp" -d '{"auth_traps_enabled":"true"}'
            # The response
            200 OK
        ### Enables SNMP protocol and SNMP authentication traps in the cluster.
            <br/>
            ```
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X PATCH "https://<mgmt-ip>/api/support/snmp" -d '{"enabled":"true", "auth_traps_enabled":"true"}'
            # The response
            200 OK
      tags:
      - support
  /support/snmp/traphosts:
    get:
      description: |
        Retrieves the list of SNMP traphosts along with the SNMP users configured for those traphosts.
        ### Related ONTAP commands
        * `system snmp traphost show`
        ### Learn more
        * [`DOC /support/snmp/traphosts`](#docs-support-support_snmp_traphosts)
      operationId: snmp_traphosts_collection_get
      parameters:
      - description: Filter by host
        in: query
        name: host
        type: string
      - description: Filter by ip_address
        in: query
        name: ip_address
        type: string
      - description: Filter by user.name
        in: query
        name: user.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snmp_traphost_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |
        Creates SNMP traphosts. While adding an SNMPv3 traphost, an SNMPv3 user configured in ONTAP must be specified. ONTAP uses this user's credentials to authenticate and/or encrypt traps sent to this SNMPv3 traphost. While adding an SNMPv1/SNMPv2c traphost, SNMPv1/SNMPv2c user or community need not be specified.
        ### Required properties
        * `host` - Fully Qualified Domain Name (FQDN), IPv4 address or IPv6 address of SNMP traphost.
        ### Recommended optional properties
        * If `host` refers to an SNMPv3 traphost, the following field is required:
          * `user` - SNMPv3 or User-based Security Model (USM) user.
        * For an SNMPv1/SNMPv2c traphost, ONTAP automatically uses 'public' if 'public' is configured or no community is configured. Otherwise, ONTAP uses the first configured community.
        ### Related ONTAP commands
        * `system snmp traphost add`
        ### Learn more
        * [`DOC /support/snmp/traphosts`](#docs-support-support_snmp_traphosts)
      operationId: snmp_traphosts_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snmp_traphost'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/snmp_traphost_response'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 8847365 | Unknown host. |
            | 9043969 | Duplicate traphost entry. |
            | 9043980 | IPv6 support is disabled. |
            | 9043991 | Not a USM user. |
            | 9043993 | Current cluster version does not support SNMPv3 traps. |
            | 9044001 | Failed to create SNMPv1 traphost. |
            | 9044002 | Failed to create SNMPv3 traphost. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        This SNMP endpoint is used to retrieve, configure and reconfigure SNMP traphosts. An SNMP traphost is a host machine that is configured to receive SNMP traps from ONTAP. An SNMP traphost can be an SNMPv1/SNMPv2c traphost or an SNMPv3 traphost. ONTAP sends SNMPv1/SNMPv2c traps to an SNMPv1/SNMPv2c traphost over the SNMPv1/SNMPv2c protocol. Similarly, it sends SNMPv3 traps to an SNMPv3 traphost over the SNMPv3 protocol.
        ## Examples
        ### Retrieves a list of SNMP traphosts in the cluster, sorted by IP address
            <br/>
            ```
            # The API:
            GET "/api/support/snmp/traphosts"
            # The call:
            curl -H "accept: application/hal+json" -X GET "https://<mgmt-ip>/api/support/snmp/traphosts?order_by=ip_address"
            # The response:
            {
              "records": [
                {
                  "host": "scspr0651011001.gdl.englab.netapp.com",
                  "ip_address": "10.235.36.62",
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/traphosts/scspr0651011001.gdl.englab.netapp.com"
                    }
                  }
                },
                {
                  "host": "scspr0647726006.gdl.englab.netapp.com",
                  "ip_address": "10.235.36.139",
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/traphosts/scspr0647726006.gdl.englab.netapp.com"
                    }
                  }
                },
                {
                  "host": "scspr0651055012.gdl.englab.netapp.com",
                  "ip_address": "10.237.245.106",
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/traphosts/scspr0651055012.gdl.englab.netapp.com"
                    }
                  }
                }
              ],
              "num_records": 3,
              "_links": {
                "self": {
                  "href": "/api/support/snmp/traphosts?order_by=ip_address"
                }
              }
            }
            <br/>
        ### Retrieves a list of SNMP traphosts in the cluster for which SNMP user is 'snmpv3user1'
            <br/>
            ```
            # The call:
            curl -H "accept: application/hal+json" -X GET "https://<mgmt-ip>/api/support/snmp/traphosts?name=snmpv3user1"
            # The response:
            {
              "records": [
                {
                  "host": "scspr0653246020.gdl.englab.netapp.com",
                  "user": {
                    "name": "snmpv3user1",
                    "_links": {
                      "self": {
                        "href": "/api/support/snmp/users/800003150558b57e8dbd9ce9119d82005056a7b4e5/snmpv3user1"
                      }
                    }
                  },
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/traphosts/scspr0653246020.gdl.englab.netapp.com"
                    }
                  }
                }
              ],
              "num_records": 1,
              "_links": {
                "self": {
                  "href": "/api/support/snmp/traphosts?user.name=snmpv3user1"
                }
              }
            }
            <br/>
        ### Adds an SNMPv1 or SNMPv2c traphost
            <br/>
            ```
            # The API:
            POST "/api/support/snmp/traphosts"
            # The call:
            curl -H "accept: application/json" -H "Content-Type: application/json" -X POST "https://<mgmt-ip>/api/support/snmp/traphosts" -d '{"host":"10.140.128.48"}'
            # The response:
            201 Created
        ### Adds an SNMPv3 traphost
            <br/>
            ```
            # The API:
            POST "/api/support/snmp/traphosts"
            # The call:
            curl -H "accept: application/json" -H "Content-Type: application/json" -X POST "https://<mgmt-ip>/api/support/snmp/traphosts" -d '{"host":"fd-geoycpi-uno.gycpi.b.yahoodns.net", "user":{"name":"snmpv3user1"}}'
            # The response:
            201 Created
      tags:
      - support
  /support/snmp/traphosts/{host}:
    delete:
      description: |
        Deletes an SNMP traphost.
        ### Learn more
        * [`DOC /support/snmp/traphosts/{host}`](#docs-support-support_snmp_traphosts_{host})
      operationId: snmp_traphosts_delete
      parameters:
      - description: Fully Qualified Domain Name (FQDN), IPv4 address or IPv6 address
          of SNMP traphost.
        in: path
        name: host
        required: true
        type: string
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 9043970 | Traphost entry does not exist. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |
        Retrieves the details of an SNMP traphost along with the SNMP user configured for that traphost.
        ### Learn more
        * [`DOC /support/snmp/traphosts/{host}`](#docs-support-support_snmp_traphosts_{host})
      operationId: snmp_traphosts_get
      parameters:
      - description: Fully Qualified Domain Name (FQDN), IPv4 address or IPv6 address
          of SNMP traphost.
        in: path
        name: host
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snmp_traphost'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Defines, retrieves or deletes an individual SNMP traphost.
        ## Examples
        ### Retrieves an individual traphost in the cluster
            <br/>
            ```
            # The API:
            GET "/api/support/snmp/traphosts/{host}"
            # The call
            curl -H "accept: application/hal+json" -X GET "https://<mgmt-ip>/api/support/snmp/traphosts/10.235.36.62"
            # The response
            {
              "host": "scspr0651011001.gdl.englab.netapp.com",
              "ip_address": "10.235.36.62",
              "user": {
                "name": "public",
                "_links": {
                  "self": {
                    "href": "/api/support/snmp/users/800003150558b57e8dbd9ce9119d82005056a7b4e5/public"
                  }
                }
              },
              "_links": {
                "self": {
                  "href": "/api/support/snmp/traphosts/10.235.36.62"
                }
              }
            }
            <br/>
        ### Deletes an individual traphost in the cluster
            <br/>
            ```
            # The API:
            DELETE "/api/support/snmp/traphosts/{host}"
            # The call:
            curl -H "accept: application/json" -H "Content-Type: application/json" -X DELETE "https://<mgmt-ip>/api/support/snmp/traphosts/3ffe:ffff:100:f102::1"
            # The response:
            200 OK
      tags:
      - support
  /support/snmp/users:
    get:
      description: |
        Retrieves the list of SNMP users on the cluster.
        ### Related ONTAP commands
        * `security snmpusers`
        * `security login show -application snmp`
        ### Learn more
        * [`DOC /support/snmp/users`](#docs-support-support_snmp_users)
      operationId: snmp_users_collection_get
      parameters:
      - description: Filter by engine_id
        in: query
        name: engine_id
        type: string
      - description: Filter by owner.uuid
        in: query
        name: owner.uuid
        type: string
      - description: Filter by owner.name
        in: query
        name: owner.name
        type: string
      - description: Filter by snmpv3.privacy_protocol
        in: query
        name: snmpv3.privacy_protocol
        type: string
      - description: Filter by snmpv3.authentication_protocol
        in: query
        name: snmpv3.authentication_protocol
        type: string
      - description: Filter by authentication_method
        in: query
        name: authentication_method
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by switch_address
        in: query
        name: switch_address
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snmp_user_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    post:
      description: |
        Creates either a cluster-scoped or an SVM-scoped SNMP user. This user can be an SNMPv1 or SNMPv2c community user or an SNMPv3 user. An SNMPv3 user can be a local SNMPv3 user or a remote SNMPv3 user.
        ### Required properties
        * `owner` - Name and UUID of owning SVM.
        * `engine_id` - Engine ID of owning SVM or remote switch.
        * `name` - SNMP user name
        * `authentication_method` - Authentication method
        ### Optional properties
        * `switch_address` - Optional remote switch address
        * `snmpv3` - SNMPv3-specific credentials
        * `comment` - Comment text
        ### Default property values
        * `snmpv3.authentication_protocol` - none
        * `snmpv3.privacy_protocol` - none
        ### Related ONTAP commands
        * `security login create`
        * `system snmp community add`
        ### Learn more
        * [`DOC /support/snmp/users`](#docs-support-support_snmp_users)
      operationId: snmp_users_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snmp_user'
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/snmp_user'
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621475 | This operation is not allowed on a node SVM. |
            | 2621601 | This operation is not permitted on a system SVM. |
            | 5636101 | One role for all applications and authentication methods is recommended for a user account. |
            | 5636106 | Engine ID starting with first bit set as 1 in first octet should have a minimum of 5 or maximum of 32 octets. |
            | 5636107 | Engine ID specified is based on an IP address, and must therefore be 9 octets in length. |
            | 5636108 | Engine ID specified is based on an IPv6 address, and must therefore be 21 octets in length. |
            | 5636109 | Engine ID specified is based on a MAC address, and must therefore be 11 octets in length. |
            | 5636110 | Engine ID starting with first bit set as 0 in the first octet needs to be 12 octets in length. |
            | 5636111 | Engine ID cannot have all zeroes. |
            | 5636112 | Invalid Engine ID specified. |
            | 5636113 | Cannot enable SNMP user capability for data SVM. |
            | 5636116 | Cannot read SNMP user capability for data SVM. |
            | 5636121 | User account name is reserved for use by the system. |
            | 5636123 | Cannot create an SNMP user with a role other than readonly, none, or admin. |
            | 5636124 | Cannot create an SNMP user with a role other than vsadmin-readonly, none, or vsadmin. |
            | 5636126 | Cannot create a user with the user name, group name, or role \"autosupport\" because it is reserved by the system. |
            | 5636148 | Failed to discover SNMPv3 engine ID of remote SNMP agent. |
            | 5636150 | The switch_address parameter can be specified only for administrative SVMs. |
            | 5636152 | 0.0.0.0 cannot be specified as the IP Address for the switch_address parameter. |
            | 5636153 | Engine ID is already associated with user. |
            | 5832711 | The only application permitted for user \"diag\" is \"console.\" |
            | 7077897 | Invalid character in username. Valid characters\":\" A-Z, a-z, 0-9, \".\", \"_\", and \"-\". Note that the user name cannot start with \"-\". |
            | 7077898 | The username must contain both letters and numbers. |
            | 7077899 | Username does not meet length requirements. |
            | 7077906 | Cannot use given role with this SVM because a role with that name has not been defined for the SVM. |
            | 9043995 | Failed to create SNMP community. Reason\":\" SNMPv1 and SNMPv2c are not supported when cluster FIPS mode is enabled. |
            | 9043999 | ONTAP failed to create an SNMPv3 user because SNMPv3 is disabled in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Defines, retrieves and adds new SNMP users. An SNMP user can be an SNMPv1/SNMPv2c user or an SNMPv3 user. SNMPv1/SNMPv2c user is also called a "community" user. Use a "community" user to query ONTAP SNMP server over SNMPv1/SNMPv2c protocol. An SNMPv3 user, also called a User-based Security Model (USM) user, can be a local SNMPv3 user or a remote SNMPv3 user. Use a local SNMPv3 user to query ONTAP SNMP server over SNMPv3 and/or to send SNMPv3 traps. A remote SNMPv3 user is configured in ONTAP as well as on a remote switch. ONTAP SNMP client uses a remote SNMPv3 user to query the switch over SNMPv3.
        ## Examples
        ### Retrieves a list of SNMP users in the cluster, sorted by SVM UUID
            <br/>
            ```
            # The API:
            GET "/api/support/snmp/users"
            # The call:
            curl -H "accept: application/hal+json" -X GET "https://<mgmt-ip>/api/support/snmp/users?order_by=owner.uuid"
            # The response:
            {
              "records": [
                {
                  "engine_id": "80000315052d7d2c4410b8e911bc9f005056bb942e",
                  "name": "snmpv1user1",
                  "owner": {
                    "uuid": "442c7d2d-b810-11e9-bc9f-005056bb942e"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/users/80000315052d7d2c4410b8e911bc9f005056bb942e/snmpv1user1"
                    }
                  }
                },
                {
                  "engine_id": "80000315058e02057c0fb8e911bc9f005056bb942e",
                  "name": "snmpv3user1",
                  "owner": {
                    "uuid": "7c05028e-b80f-11e9-bc9f-005056bb942e"
                  },
                  "_links": {
                    "self": {
                      "href": "/api/support/snmp/users/80000315058e02057c0fb8e911bc9f005056bb942e/snmpv3user1"
                    }
                  }
                }
              ],
              "num_records": 2,
              "_links": {
                "self": {
                  "href": "/api/support/snmp/users?order_by=owner.uuid"
                }
              }
            }
            <br/>
        ### Creates an SNMPv1 or SNMPv2c community user
            <br/>
            ```
            # The API:
            POST "/api/support/snmp/users"
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X POST "https://<mgmt-ip>/api/support/snmp/users" -d '{"owner":{"uuid":"02c9e252-41be-11e9-81d5-00a0986138f7", "name":"cluster1"}, "name":"public", "authentication_method":"community"}'
            # The response:
            201 Created
        ### Creates a local SNMPv3 user
            <br/>
            ```
            # The API:
            POST "/api/support/snmp/users"
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X POST "https://<mgmt-ip>/api/support/snmp/users" -d '{"owner":{"uuid":"02c9e252-41be-11e9-81d5-00a0986138f7", "name":"cluster1"}, "name":"snmpv3u1", "authentication_method":"usm", "snmpv3":{"authentication_protocol":"sha", "authentication_password":"jelly22fi$h", "privacy_protocol":"aes", "privacy_password":"a11Black$"}}'
            # The response:
            201 Created
        ### Creates a remote SNMPv3 user
            <br/>
            ```
            # The API:
            POST "/api/support/snmp/users"
            # The call
            curl -H "accept: application/json" -H "Content-Type: application/json" -X POST "https://<mgmt-ip>/api/support/snmp/users" -d '{"owner":{"uuid":"02c9e252-41be-11e9-81d5-00a0986138f7", "name":"cluster1"}, "engine_id":"8000031505b67667a26975e9118a480050568e6f74", "name":"switchuser1", "authentication_method":"usm", "switch_address":"fdf8:f53b:82e4::53", "snmpv3":{"authentication_protocol":"md5", "authentication_password":"TfhIeliw601lS.Rw$3pm"}}'
            # The response:
            201 Created
      tags:
      - support
  /support/snmp/users/{engine_id}/{name}:
    delete:
      description: |
        Deletes an SNMP user. The engine ID can be the engine ID of the administrative SVM or a data SVM. It can also be the SNMPv3 engine ID of a remote switch.
        ### Related ONTAP commands
        * `security login delete`
        * `system snmp community delete`
        ### Learn more
        * [`DOC /support/snmp/users/{engine_id}/{name}`](#docs-support-support_snmp_users_{engine_id}_{name})
      operationId: snmp_users_delete
      parameters:
      - description: Engine ID of owning SVM or remote switch.
        in: path
        name: engine_id
        required: true
        type: string
      - description: SNMP user name.
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621475 | This operation is not allowed on a node SVM. |
            | 2621699 | This operation is not allowed on a system SVM. |
            | 5636123 | Cannot create an SNMP user with a role other than readonly, none, or admin. |
            | 5636124 | Cannot create an SNMP user with a role other than vsadmin-readonly, none, or vsadmin. |
            | 5832712 | Cannot modify attributes for user \"diag.\" |
            | 7077906 | Cannot use given role with this SVM because a role with that name has not been defined for the SVM. |
            | 9043999 | ONTAP failed to create an SNMPv3 user because SNMPv3 is disabled in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    get:
      description: |
        Retrieves the details of an SNMP user. The engine ID can be the engine ID of the administrative SVM or a data SVM. It can also be the SNMPv3 engine ID of a remote switch.
        ### Related ONTAP commands
        * `security snmpusers -vserver <SVM Name> -username <User Name>`
        * `security login show -application snmp -vserver <SVM Name> -user-or-group-name <User Name>`
        ### Learn more
        * [`DOC /support/snmp/users/{engine_id}/{name}`](#docs-support-support_snmp_users_{engine_id}_{name})
      operationId: snmp_users_get
      parameters:
      - description: Engine ID of owning SVM or remote switch.
        in: path
        name: engine_id
        required: true
        type: string
      - description: SNMP user name.
        in: path
        name: name
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/snmp_user'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    patch:
      description: |
        Updates the comment parameter of an SNMP user.
        ### Optional properties
        * `comment` - Comment text.
        ### Related ONTAP commands
        * `security login modify`
        ### Learn more
        * [`DOC /support/snmp/users/{engine_id}/{name}`](#docs-support-support_snmp_users_{engine_id}_{name})
      operationId: snmp_users_modify
      parameters:
      - description: Engine ID of owning SVM or remote switch.
        in: path
        name: engine_id
        required: true
        type: string
      - description: SNMP user name.
        in: path
        name: name
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/snmp_user'
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            | Error Code | Description |
            | ---------- | ----------- |
            | 2621475 | This operation is not allowed on a node SVM. |
            | 2621699 | This operation is not allowed on a system SVM. |
            | 5636123 | Cannot create an SNMP user with a role other than readonly, none, or admin. |
            | 5636124 | Cannot create an SNMP user with a role other than vsadmin-readonly, none, or vsadmin. |
            | 5832712 | Cannot modify attributes for user \"diag.\" |
            | 7077906 | Cannot use given role with this SVM because a role with that name has not been defined for the SVM. |
            | 9043999 | ONTAP failed to create an SNMPv3 user because SNMPv3 is disabled in the cluster. |
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - support
    x-ntap-long-description:
      description: |
        ## Overview
        Defines, retrieves, updates and deletes an individual SNMP user.
        ## Examples
        ### Retrieves the details of an SNMP user
            <br/>
            ```
            # The API:
            GET "/api/support/snmp/users/{engine_id}/{name}"
            # The call:
            curl -H "accept: application/hal+json" -X GET "https://<mgmt-ip>/api/support/snmp/users/80000315056622e52625a9e911a981005056bb1dcb/snmpv1user2"
            # The response:
            {
              "engine_id": "80000315056622e52625a9e911a981005056bb1dcb",
              "name": "snmpv1user2",
              "scope": "cluster",
              "owner": {
                "name": "cluster-1",
                "uuid": "26e52266-a925-11e9-a981-005056bb1dcb"
              },
              "authentication_method": "community",
              "_links": {
                "self": {
                  "href": "/api/support/snmp/users/80000315056622e52625a9e911a981005056bb1dcb/snmpv1user2"
                }
              }
            }
            <br/>
        ### Updates the comment parameter for an individual SNMP user
            <br/>
            ```
            # The API:
            PATCH "/api/support/snmp/users/{engine_id}/{name}"
            # The call:
            curl -H "accept: application/json" -H "Content-Type: application/json" -X PATCH "https://<mgmt-ip>/api/support/snmp/users/8000031505b67667a26975e9118a480050568e6f74/public" -d '{"comment":"Default SNMP community"}'
            # The response:
            200 OK
        ### Deletes an individual SNMP user in the cluster
            <br/>
            ```
            # The API:
            DELETE "/api/support/snmp/users/{engine_id}/{name}"
            # The call:
            curl -H "accept: application/json" -H "Content-Type: application/json" -X DELETE "https://<mgmt-ip>/api/support/snmp/users/8000031505b67667a26975e9118a480050568e6f74/snmpuser"
            # The response:
            200 OK
      tags:
      - support
  /svm/peer-permissions:
    get:
      description: |
        Retrieves the list of SVM peer permissions.
        ### Related ONTAP commands
        * `vserver peer permission show`
        ### Examples
        The following examples show how to retrieve a collection of SVM peer permissions based on a query.
        <br/>
        1. Retrieves a list of SVM peer permissions of a specific local SVM
           <br/>
           ```
           GET "/api/svm/peer-permissions/?svm.name=VS1"
           ```
           <br/>
        2. Retrieves a list of SVM peer permissions of a specific cluster peer
           <br/>
           ```
           GET "/api/svm/peer-permissions/?cluster_peer.name=cluster2"
           ```
           <br/>
        ### Learn more
        * [`DOC /svm/peer-permissions`](#docs-svm-svm_peer-permissions)
      operationId: svm_peer_permission_collection_get
      parameters:
      - description: Filter by cluster_peer.uuid
        in: query
        name: cluster_peer.uuid
        type: string
      - description: Filter by cluster_peer.name
        in: query
        name: cluster_peer.name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - description: Filter by applications
        in: query
        name: applications
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_peer_permission_response'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345574    | Failed to find the SVM or volume name with UUID. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    post:
      description: |
        Creates an SVM peer permission.
        ### Required properties
        * `svm.name` or `svm.uuid` - SVM name
        * `cluster_peer.uuid` or `cluster_peer.name` - Peer cluster name or peer cluster UUID
        * `applications` - Peering applications
        ### Related ONTAP commands
        * `vserver peer permission create`
        ### Examples
        The following examples show how to create SVM peer permissions.
        <br/>
        1. Creates an SVM peer permission entry with the local SVM and cluster peer names
           <br/>
           ```
           POST "/api/svm/peer-permissions" '{"cluster_peer":{"name":"cluster2"}, "svm":{"name":"VS1"}, "applications":["snapmirror"]}'
           ```
           <br/>
        2. Creates an SVM peer permission entry with the local SVM and cluster peer UUID
           <br/>
           ```
           POST "/api/svm/peer-permissions" '{"cluster_peer":{"uuid":"d3268a74-ee76-11e8-a9bb-005056ac6dc9"}, "svm":{"uuid":"8f467b93-f2f1-11e8-9027-005056ac81fc"}, "applications":["snapmirror"]}'
           ```
           <br/>
        3. Creates an SVM peer permission entry with all SVMs and the cluster peer name
           <br/>
           ```
           POST "/api/svm/peer-permissions" '{"cluster_peer":{"name":"cluster2"}, "svm":{"name":"*"}, "applications":["snapmirror"]}'
           ```
           <br/>
        ### Learn more
        * [`DOC /svm/peer-permissions`](#docs-svm-svm_peer-permissions)
      operationId: svm_peer_permission_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm_peer_permission'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/svm_peer_permission'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345572    | {field} is a required field. |
            | 26345573    | Failed to find the SVM or volume UUID with name. |
            | 26345574    | Failed to find the SVM or volume name with UUID. |
            | 26345575    | The specified peer cluster name and peer cluster UUID do not match. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    x-ntap-long-description:
      description: |
        ## Managing SVM peer permissions
        A cluster administrator can provide permissions for use during intercluster SVM peer relationship creation. Once this permission exists for a local SVM and peer cluster combination on a local cluster, no explicit SVM peer accept (or REST PATCH) API is required for any incoming SVM peer relationship creation requests from a remote cluster for that local SVM. Peer relationship directly changes the state to peered on both clusters. Use an SVM name as "*" to create permissions that apply to all local SVMs.
        ### SVM peer permission APIs
        The following APIs are used to manage SVM peer permissions:
        - GET /api/svm/peer-permissions
        - POST /api/svm/peer-permissions
        - GET /api/svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}
        - PATCH /api/svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}
        - DELETE /api/svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}
      tags:
      - SVM 
  /svm/peer-permissions/{cluster_peer.uuid}/{svm.uuid}:
    delete:
      description: |
        Deletes the SVM peer permissions.
        ### Related ONTAP commands
        * `verver peer permission delete`
        ### Example
        Deletes an SVM peer permission.
        <br/>
        ```
        DELETE "/api/svm/peer-permissions/d3268a74-ee76-11e8-a9bb-005056ac6dc9/8f467b93-f2f1-11e8-9027-005056ac81fc"
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peer-permissions`](#docs-svm-svm_peer-permissions)
      operationId: svm_peer_permission_delete
      parameters:
      - description: Peer cluster UUID
        in: path
        name: cluster_peer.uuid
        required: true
        type: string
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345574    | Failed to find the SVM or volume name with UUID. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    get:
      description: |
        Retrieves the SVM peer permission instance.
        ### Related ONTAP commands
        * `vserver peer permission show`
        ### Example
        The following example shows how to retrieve the parameters for an SVM peer permission.
        <br/>
        ```
        GET "/api/svm/peer-permissions/d3268a74-ee76-11e8-a9bb-005056ac6dc9/8f467b93-f2f1-11e8-9027-005056ac81fc"
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peer-permissions`](#docs-svm-svm_peer-permissions)
      operationId: svm_peer_permission_instance_get
      parameters:
      - description: Peer cluster UUID
        in: path
        name: cluster_peer.uuid
        required: true
        type: string
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_peer_permission'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345574    | Failed to find the SVM or volume name with UUID. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    patch:
      description: |
        Updates the SVM peer permissions.
        ### Related ONTAP commands
        * `vserver peer permission modify`
        ### Example
        Updates an SVM peer permission.
        <br/>
        ```
        PATCH "/api/svm/peer-permissions/d3268a74-ee76-11e8-a9bb-005056ac6dc9/8f467b93-f2f1-11e8-9027-005056ac81fc" '{"applications":["flexcache"]}'
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peer-permissions`](#docs-svm-svm_peer-permissions)
      operationId: svm_peer_permission_modify
      parameters:
      - description: Peer cluster UUID
        in: path
        name: cluster_peer.uuid
        required: true
        type: string
      - description: SVM UUID
        in: path
        name: svm.uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm_peer_permission'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_peer_permission'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345572    | {field} is a required field. |
            | 26345574    | Failed to find the SVM or volume name with UUID. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
  /svm/peers:
    get:
      description: |
        Retrieves the list of SVM peer relationships.
        ### Related ONTAP commands
        * `vserver peer show`
        ### Examples
        The following examples show how to retrieve a collection of SVM peer relationships based on a query.
        1. Retrieves a list of SVM peers of a specific local SVM
           <br/>
           ```
           GET "/api/svm/peers/?svm.name=VS1"
           ```
           <br/>
        2. Retrieves a list of SVM peers of a specific cluster peer
           <br/>
           ```
           GET "/api/svm/peers/?peer.cluster.name=cluster2"
           ```
           <br/>
        ### Learn more
        * [`DOC /svm/peers`](#docs-svm-svm_peers)
      operationId: svm_peer_collection_get
      parameters:
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by peer.cluster.uuid
        in: query
        name: peer.cluster.uuid
        type: string
      - description: Filter by peer.cluster.name
        in: query
        name: peer.cluster.name
        type: string
      - description: Filter by peer.svm.uuid
        in: query
        name: peer.svm.uuid
        type: string
      - description: Filter by peer.svm.name
        in: query
        name: peer.svm.name
        type: string
      - description: Filter by applications
        in: query
        name: applications
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by svm.uuid
        in: query
        name: svm.uuid
        type: string
      - description: Filter by svm.name
        in: query
        name: svm.name
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_peer_response'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345578    | Internal error. Unable to retrieve local or peer SVM name. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    post:
      description: |
        Creates a new SVM peer relationship.
        ### Important notes
          * The create request accepts peer SVM name as input instead of peer SVM UUID as the local cluster cannot validate peer SVM based on UUID.
          * The input parameter `name` refers to the local name of the peer SVM. The `peer cluster name` parameter is optional for creating intracluster SVM peer relationships.
        ### Required properties
        * `svm.name` or `svm.uuid` - SVM name or SVM UUID
        * `peer.svm.name` or `peer.svm.uuid` - Peer SVM name or Peer SVM UUID
        * `peer.cluster.name` or `peer.cluster.uuid` - Peer cluster name or peer cluster UUID
        * `applications` - Peering applications
        ### Related ONTAP commands
        * `vserver peer create`
        ### Example
        Creates a new SVM peer relationship.
        <br/>
        ```
        POST "/api/svm/peers" '{"svm":{"name":"vs1", "peer.cluster.name":"cluster2", "peer.svm.name":"VS1", "applications":["snapmirror"]}'
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peers`](#docs-svm-svm_peers)
      operationId: svm_peer_create
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm_peer'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/svm_peer'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 13434889    | Internal error. Wait and retry. |
            | 26345575    | The specified peer cluster name and peer cluster UUID do not match. |
            | 26345579    | The specified field is invalid. |
            | 26345580    | SVM name or SVM UUID must be provided. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    x-ntap-long-description:
      description: |
        ## Managing SVM peers
        The SVM peer commands allow you to create and manage SVM peering relationships.
        ### SVM peer APIs
        The following APIs are used to manage SVM peers:
        - GET /api/svm/peers
        - POST /api/svm/peers
        - GET /api/svm/peers/{uuid}
        - PATCH /api/svm/peers/{uuid}
        - DELETE /api/svm/peers/{uuid}
      tags:
      - SVM 
  /svm/peers/{uuid}:
    delete:
      description: |
        Deletes the SVM peer relationship.
        ### Related ONTAP commands
        * `vserver peer delete`
        ### Example
        Deletes an SVM peer relationship.
        <br/>
        ```
        DELETE "/api/svm/peers/d3268a74-ee76-11e8-a9bb-005056ac6dc9"
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peers`](#docs-svm-svm_peers)
      operationId: svm_peer_delete
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: SVM peer relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345578    | Internal error. Unable to retrieve local or peer SVM name. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    get:
      description: |
        Retrieves the SVM peer relationship instance.
        ### Related ONTAP commands
        * `vserver peer show`
        ### Example
        Retrieves the parameters of an SVM peer relationship.
        <br/>
        ```
        GET "/api/svm/peers/d3268a74-ee76-11e8-a9bb-005056ac6dc9"
        ```
        <br/>
        ### Learn more
        * [`DOC /svm/peers`](#docs-svm-svm_peers)
      operationId: svm_peer_instance_get
      parameters:
      - description: SVM peer relation UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/return_timeout_get_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_peer'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 26345578    | Internal error. Unable to retrieve local or peer SVM name. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    patch:
      description: |
        Updates the SVM peer relationship.
        ### Related ONTAP commands
        * `vserver peer modify`
        ### Examples
        The following examples show how to update an SVM peer relationship. The input parameter 'name' refers to the local name of the peer SVM.
        <br/>
        1. Accepts an SVM peer relationship
           <br/>
           ```
           PATCH "/api/svm/peers/d3268a74-ee76-11e8-a9bb-005056ac6dc9" '{"state":"peered"}'
           ```
           <br/>
        2. Updates the local name of an SVM peer relationship
           <br/>
           ```
           PATCH "/api/svm/peers/d3268a74-ee76-11e8-a9bb-005056ac6dc9" '{"name":"vs2"}'
           ```
           <br/>
        ### Learn more
        * [`DOC /svm/peers`](#docs-svm-svm_peers)
      operationId: svm_peer_modify
      parameters:
      - $ref: '#/parameters/return_timeout_update_param'
      - description: SVM peer relationship UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm_peer'
      responses:
        '202':
          description: Accepted
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 13434889    | Internal error. Wait and retry. |
            | 26345575    | The specified peer cluster name and peer cluster UUID do not match. |
            | 26345576    | Given peer state is invalid. |
            | 26345577    | One of the following is required: applications, state, or name. |
            | 26345578    | Internal error. Unable to retrieve local or peer SVM name. |
            | 26345579    | The specified field is invalid. |
            | 26345581    | Peer cluster name could not be retrieved or validated. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
  /svm/svms:
    get:
      description: |
        Retrieves a list of SVMs and individual SVM properties. This includes protocol configurations such as CIFS and NFS, export policies, name service configurations, and network services.
        ### Important notes
        * The SVM object includes a large set of fields and can be expensive to retrieve. Use this API to list the collection of SVMs, and to retrieve only the full details of individual SVMs as needed.
        * It is not recommended to create or delete more than five SVMs in parallel.
        * REST APIs only expose a data SVM as an SVM.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `snapmirror.*`
        ### Related ONTAP commands
        * `vserver show`
        ### Examples
        1. Retrieves a list of SVMs in the cluster sorted by name
            <br/>
            ```
            GET "/api/svm/svms?order_by=name"
            ```
            <br/>
        2. Retrieves a list of SVMs in the cluster that have the NFS protocol enabled
            <br/>
            ```
            GET "/api/svm/svms?nfs.enabled=true"
            ```
            <br/>
        3. Retrieves a list of SVMs in the cluster that have the CIFS protocol enabled
            <br/>
            ```
            GET "/api/svm/svms?cifs.enabled=true"
            ```
            <br/>
        4. Retrieves a list of SVMs in the cluster that have the S3 protocol enabled
            <br/>
            ```
            GET "/api/svm/svms?s3.enabled=true"
            ```
            <br/>
        ### Learn more
        * [`DOC /svm/svms`](#docs-svm-svm_svms)
      operationId: svm_collection_get
      parameters:
      - description: Filter by nis.enabled
        in: query
        name: nis.enabled
        type: boolean
      - description: Filter by nis.servers
        in: query
        name: nis.servers
        type: string
      - description: Filter by nis.domain
        in: query
        name: nis.domain
        type: string
      - description: Filter by nvme.enabled
        in: query
        name: nvme.enabled
        type: boolean
      - description: Filter by language
        in: query
        name: language
        type: string
      - description: Filter by nfs.enabled
        in: query
        name: nfs.enabled
        type: boolean
      - description: Filter by comment
        in: query
        name: comment
        type: string
      - description: Filter by aggregates.name
        in: query
        name: aggregates.name
        type: string
      - description: Filter by aggregates.uuid
        in: query
        name: aggregates.uuid
        type: string
      - description: Filter by subtype
        in: query
        name: subtype
        type: string
      - description: Filter by dns.servers
        in: query
        name: dns.servers
        type: string
      - description: Filter by dns.domains
        in: query
        name: dns.domains
        type: string
      - description: Filter by fcp.enabled
        in: query
        name: fcp.enabled
        type: boolean
      - description: Filter by iscsi.enabled
        in: query
        name: iscsi.enabled
        type: boolean
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by ipspace.uuid
        in: query
        name: ipspace.uuid
        type: string
      - description: Filter by ipspace.name
        in: query
        name: ipspace.name
        type: string
      - description: Filter by ldap.base_dn
        in: query
        name: ldap.base_dn
        type: string
      - description: Filter by ldap.servers
        in: query
        name: ldap.servers
        type: string
      - description: Filter by ldap.enabled
        in: query
        name: ldap.enabled
        type: boolean
      - description: Filter by ldap.bind_dn
        in: query
        name: ldap.bind_dn
        type: string
      - description: Filter by ldap.ad_domain
        in: query
        name: ldap.ad_domain
        type: string
      - description: Filter by uuid
        in: query
        name: uuid
        type: string
      - description: Filter by cifs.name
        in: query
        name: cifs.name
        type: string
      - description: Filter by cifs.ad_domain.fqdn
        in: query
        name: cifs.ad_domain.fqdn
        type: string
      - description: Filter by cifs.ad_domain.organizational_unit
        in: query
        name: cifs.ad_domain.organizational_unit
        type: string
      - description: Filter by cifs.enabled
        in: query
        name: cifs.enabled
        type: boolean
      - description: Filter by s3.name
        in: query
        name: s3.name
        type: string
      - description: Filter by s3.enabled
        in: query
        name: s3.enabled
        type: boolean
      - description: Filter by nsswitch.netgroup
        in: query
        name: nsswitch.netgroup
        type: string
      - description: Filter by nsswitch.group
        in: query
        name: nsswitch.group
        type: string
      - description: Filter by nsswitch.hosts
        in: query
        name: nsswitch.hosts
        type: string
      - description: Filter by nsswitch.namemap
        in: query
        name: nsswitch.namemap
        type: string
      - description: Filter by nsswitch.passwd
        in: query
        name: nsswitch.passwd
        type: string
      - description: Filter by fc_interfaces.name
        in: query
        name: fc_interfaces.name
        type: string
      - description: Filter by fc_interfaces.data_protocol
        in: query
        name: fc_interfaces.data_protocol
        type: string
      - description: Filter by snapshot_policy.uuid
        in: query
        name: snapshot_policy.uuid
        type: string
      - description: Filter by snapshot_policy.name
        in: query
        name: snapshot_policy.name
        type: string
      - description: Filter by state
        in: query
        name: state
        type: string
      - description: Filter by certificate.uuid
        in: query
        name: certificate.uuid
        type: string
      - $ref: '#/parameters/fields_param'
      - $ref: '#/parameters/max_records_param'
      - $ref: '#/parameters/return_records_get_param'
      - $ref: '#/parameters/return_timeout_get_param'
      - $ref: '#/parameters/order_by_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm_response'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    post:
      description: |
        Creates and provisions an SVM. If no IPspace is provided, then the SVM is created on the `Default` IPspace.
        * The number of parallel SVMs that can be created must not be greater than five.
        * If a sixth SVM POST request is issued, the following error message is generated: "Maximum allowed SVM jobs exceeded. Wait for the existing SVM jobs to complete and try again."
        ### Required properties
        * `name` - Name of the SVM to be created.
        ### Recommended optional properties
        * `ipspace.name` or `ipspace.uuid` - IPspace of the SVM
        * `ip_interfaces` - If provided, the following fields are required:
        * `ip_interfaces.name` - Name of the interface
        * `ip_interfaces.ip.address` - IP address
        * `ip_interfaces.ip.netmask` - Netmask length or IP address
        * `ip_interfaces.location.broadcast_domain.uuid` or `ip_interfaces.location.broadcast_domain.name` - Broadcast domain name or UUID belonging to the same IPspace of the SVM.
        * `routes` - If provided, the following field is required:
          * `routes.gateway` - Gateway IP address
        * `cifs` - If provided, interfaces, routes and DNS must be provided. The following fields are also required:
          * `cifs.name` - Name of the CIFS server to be created for the SVM.
          * `cifs.ad_domain.fqdn` - Fully qualified domain name
          * `cifs.ad_domain.user` - Administrator username
          * `cifs.ad_domain.password` - User password
        * `ldap` - If provided, the following fields are required:
          * `ldap.servers` or `ldap.ad_domain` - LDAP server list or Active Directory domain
          * `ldap.bind_dn` - Bind DN
          * `ldap.base_dn` - Base DN
        * `nis` - If provided, the following fields are required:
          * `nis.servers` - NIS servers
          * `nis.domain` - NIS domain
        * `dns` - If provided, the following fields are required:
          * `dns.servers` - Name servers
          * `dns.domains` - Domains
        * `fc_interfaces` - If provided, the following fields are required:
          * `fc_interfaces.name` - Fibre Channel interface name
          * `fc_interfaces.data_protocol` - Fibre Channel interface data protocol
          * `fc_interfaces.location.port.uuid` or `fc_interfaces.location.port.name` and `fc_interfaces.location.port.node.name` - Either port UUID or port name and node name together must be provided.
        * `s3` - If provided, the following field should also be specified:
          * `s3.name` - Name of the S3 server. If `s3.name' is not specified while `s3.enabled` is set to 'true', the S3 server will be created with the default name '<svm.name>_S3Server'.
        ### Default property values
        If not specified in POST, the following default property values are assigned:
        * `language` - _C.UTF-8_
        * `ipspace.name` - _Default_
        * `snapshot_policy.name` - _Default_
        * `subtype` - _Default_ ( _sync-source_ if MetroCluster configuration )
        ### Related ONTAP commands
        * `vserver create`
        * `vserver add-aggregates`
        * `network interface create`
        * `network route create`
        * `vserver services name-service dns create`
        * `vserver nfs create`
        * `vserver services name-service ldap client create`
        * `vserver cifs create`
        * `vserver services name-service nis-domain create`
        * `vserver iscsi create`
        * `vserver nvme create`
        * `vserver fcp create`
        * `vserver services name-service ns-switch create`
        * `vserver object-store-server create`
        ### Examples
        1. Creates an SVM with default "snapshot_policy"
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "snapshot_policy":{"name":"default"}}'
            ```
            <br/>
        2. Creates an SVM and configures NFS, ISCSI and FCP
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "nfs":{"enabled":"true"}, "fcp":{"enabled":"true"}, "iscsi":{"enabled":"true"}}'
            ```
            <br/>
        3. Creates an SVM and configures NVMe
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "nvme":{"enabled":"true"}}'
            ```
            <br/>
        4. Creates an SVM and configures LDAP
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "snapshot_policy":{"name":"default"}, "ldap":{"servers":["10.140.101.1","10.140.101.2"], "ad_domain":"abc.com", "base_dn":"dc=netapp,dc=com", "bind_dn":"dc=netapp,dc=com"}}'
            ```
            <br/>
        5. Creates an SVM and configures NIS
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "snapshot_policy":{"name":"default"}, "nis":{"enabled":"true", "domain":"def.com","servers":["10.224.223.130", "10.224.223.131"]}}'
            ```
            <br/>
        6. Creates an SVM and configures DNS
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "snapshot_policy":{"name":"default"}, "dns":{"domains":["abc.com","def.com"], "servers":["10.224.223.130", "10.224.223.131"]}}'
            ```
            <br/>
        7. Creates an SVM and configures a LIF
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "ip_interfaces": [{"name":"lif1", "ip":{"address":"10.10.10.7", "netmask": "255.255.255.0"}, "location":{"broadcast_domain":{"name":"bd1"}, "home_node":{"name":"node1"}}, "service_policy": "default-management"}]}'
            ```
            <br/>
        8. Creates an SVM and configures a LIF with IPV6 address
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "ip_interfaces": [{"name":"lif2", "ip":{"address":"fd22:8b1e:b255:202:2a0:98ff:fe01:7d5b", "netmask":"24"}, "location":{"broadcast_domain":{"name":"bd1"}, "home_node":{"name":"node1"}}, "service_policy": "default-management"}]}'
            ```
            <br/>
        9. Creates an SVM and configures CIFS
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"testVs", "cifs":{"name":"CIFDOC", "ad_domain":{"fqdn":"abc.def.com", "organizational_unit":"CN=Computers", "user":"cif_admin", "password":"abc123"}}, "ip_interfaces":[{"name":"lif1", "ip":{"address":"10.10.10.7", "netmask": "255.255.255.0"}, "location":{"broadcast_domain":{"name":"bd1"}, "home_node":{"name":"node1"}}, "service_policy": "default-management"}],"routes": [{"destination": {"address": "0.0.0.0", "netmask": "0"}, "gateway": "10.10.10.7"}], "dns":{"domains":["abc.def.com", "def.com"], "servers":["10.224.223.130", "10.224.223.131"]}}'
            ```
            <br/>
        10. Creates an SVM and configures an S3 server
            <br/>
            ```
            POST "/api/svm/svms" '{"name":"svm5", "s3":{"name":"s3-server-1", "enabled":true}}'
            ```
            <br/>
        ### Learn more
        * [`DOC /svm/svms`](#docs-svm-svm_svms)
      operationId: svm_create
      parameters:
      - $ref: '#/parameters/return_records_update_param'
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm'
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 2621580     | Cannot specify options other than SVM name, comment and ipspace for a Vserver that is being configured as the destination for SVM DR. |
            | 2621634     | \"sync-source\" SVM can only be created in a MetroCluster configuration. |
            | 2621657     | \"sync-destination\" SVM can only be created by the system. |
            | 13434884    | Cannot create an SVM because of incorrect fields. |
            | 13434885    | Non-UTF8 language(s) not supported. |
            | 13434888    | IPspace UUID and IPspace name mismatch. |
            | 13434889    | Internal Error. Wait and retry. |
            | 13434894    | Maximum allowed SVM jobs exceeded. Wait for the existing SVM jobs to complete and try again. |
            | 13434908    | Invalid SVM name. The name is already in use by another SVM, IPSpace or cluster. |
            | 13434909    | Internal Error. Failed to identify the aggregate to host SVM root volume. |
            | 13434910    | Internal Error. Failed to allocate new SVM ID. |
            | 13434911    | Invalid SVM name. Maximum supported length is 41 if SVM is of type \\\"sync-source\\\", otherwise 47. |
            | 13434912    | Failed to find IPspace. |
            | 13434913    | Internal error: Failed to check if an SVM create operation is in progress. Contact technical support for assistance. |
            | 13434914    | Request to create the root volume of the SVM failed because there is not enough space in specified aggregate. |
            | 13434915    | Failed to unlock the SVM because SVM create or delete job is in progress. Wait a few minutes, and then try the command again. |
            | 13434916    | SVM is in the process of being created. Wait a few minutes, and then try the command again. |
            | 13434917    | SVM creation successful. |
            | 13434918    | IPspace name not provided for creating an SVM. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    x-ntap-long-description:
      description: |
        ## Managing SVMs
        <br/>Cluster administrators can manage any SVM bound to the cluster. In addition, SVMs can also be managed by their SVM administrators. The SVM administrator manages the SVM resources, such as volumes, protocols and services, depending on the capabilities assigned by the cluster administrator. SVM administrators cannot create, modify, or delete SVMs. The cluster administrator manages SVM create, modify, or delete operations.<br/>
        <br/>While configuring CIFS, you must also configure IP interfaces and DNS. No other protocol configuration is allowed when configuring NVMe. NFS, FCP, CIFS and iSCSI protocols can be configured together.<br/>
        SVM administrators might have all or some of the following administration capabilities:
        1. Data access protocol configuration
           Configures data access protocols, such as NFS, CIFS, iSCSI, and Fibre Channel (FC) protocol (Fibre Channel over Ethernet included).
        2. Services configuration
           Configures services such as LDAP, NIS, and DNS.
        3. Monitoring SVM
           Monitors jobs, network connections, network interfaces, and SVM health.
        4. Updating the TLS certificate for this SVM.
      tags:
      - SVM 
  /svm/svms/{uuid}:
    delete:
      description: |
        Deletes an SVM. As a prerequisite, SVM objects must be deleted first. SnapMirror relationships must be deleted and data volumes must be offline and deleted.
        * The number of parallel SVMs that can be created must not be greater than five.
        * If a sixth SVM POST request is issued, the following error message is generated: "Maximum allowed SVM jobs exceeded. Wait for the existing SVM jobs to complete and try again."
        ### Related ONTAP commands
        * `vserver delete`
        ### Example
        Deleting an individual SVM in the cluster.
          <br/>
          ```
          DELETE "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485"
          ```
          <br/>
        ### Learn more
        * [`DOC /svm/svms`](#docs-svm-svm_svms)
      operationId: svm_delete
      parameters:
      - description: Filter by UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 13434894    | Maximum allowed SVM jobs exceeded. Wait and retry. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    get:
      description: |-
        Retrieves the properties for an individual SVM. This includes protocol configurations such as CIFS and NFS, export policies, name service configurations, and network services.
        ### Important notes
        * The SVM object includes a large set of fields and can be expensive to retrieve.
        * REST APIs only expose a data SVM as an SVM.
        ### Expensive properties
        There is an added cost to retrieving values for these properties. They are not included by default in GET results and must be explicitly requested using the `fields` query parameter. See [`DOC Requesting specific fields`](#docs-docs-Requesting-specific-fields) to learn more.
        * `snapmirror.*`
        ### Example
            Retrieving an individual SVM in the cluster
            <br/>
            ```
            GET "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485"
            ```
            <br/>

        ### Learn more
        * [`DOC /svm/svms`](#docs-svm-svm_svms)
      operationId: svm_get
      parameters:
      - description: Filter by UUID
        in: path
        name: uuid
        required: true
        type: string
      - $ref: '#/parameters/fields_param'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/svm'
        default:
          description: Error
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
    patch:
      description: |
        Updates one or more of the following properties of an individual SVM: SVM name, SVM default volume language code, SVM comment, and SVM state.
        ### Related ONTAP commands
        * `vserver modify`
        * `vserver rename`
        * `vserver start`
        * `vserver stop`
        * `security ssl modify`
        ### Examples
        1.  Stops an SVM and updates the "comment" field for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"state":"stopped", "comment":"This SVM is stopped."}'
            ```
            <br/>
        2.  Starts an SVM and updates the "comment" field for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"state":"running", "comment":"This SVM is running."}'
            ```
            <br/>
        3.  Updates the "language" field for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"language":"en.UTF-8"}'
            ```
            <br/>
        4.  Updates the "name" field for an SVM or renames the SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"name":"svm_new"}'
            ```
            <br/>
        5.  Updates the aggregates for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"aggregates":{"name":["aggr1","aggr2","aggr3"]}}'
            ```
            <br/>
        6.  Updates the Snapshot copy policy for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"snapshot_policy":{"name":"custom1"}}'
            ```
            <br/>
        7.  Updates the TLS certificate for an individual SVM
            <br/>
            ```
            PATCH "/api/svm/svms/f16f0935-5281-11e8-b94d-005056b46485" '{"certificate":{"uuid":"1cd8a442-86d1-11e0-ae1c-123478563412"}}'
            ```
            <br/>
        ### Learn more
        * [`DOC /svm/svms`](#docs-svm-svm_svms)
      operationId: svm_modify
      parameters:
      - description: Filter by UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Info specification
        in: body
        name: info
        schema:
          $ref: '#/definitions/svm'
      - $ref: '#/parameters/return_timeout_update_param'
      responses:
        '202':
          description: Accepted
          schema:
            $ref: '#/definitions/job_link_response'
        default:
          description: |
            ONTAP Error Response Codes
            <br/>
            ```
            | Error codes | Description |
            | ----------- | ----------- |
            | 13434880    | Failed to modify SVM parameters. |
            | 13434881    | Failed to rename SVM. |
            | 13434883    | SVM parameters except name modified successfully. |
            | 13434885    | Non-UTF8 language(s) not supported. |
            | 13434886    | Invalid Snapshot copy policy. |
            | 13434902    | Modification of NSSwitch parameters failed for the SVM. |
            | 13434906    | Operation not supported for an SVM of type sync-destination. |
            | 12451843    | Certificate does not exist. |
            | 13434908    | Invalid SVM name. The name is already in use by another SVM, IPSpace or cluster. |
            | 13434916    | SVM is in the process of being created. Wait a few minutes, and then try the command again. |
            | 13434915    | Failed to unlock the SVM because SVM create or delete job is in progress. Wait a few minutes, and then try the command again. |
            | 13434911    | Invalid SVM name. Maximum supported length is 41 if SVM is of type \\\"sync-source\\\", otherwise 47. |
            ```
            <br/>
          schema:
            $ref: '#/definitions/error_response'
      tags:
      - SVM 
produces:
- application/json
- application/hal+json
schemes:
- https
security:
- simple: []
securityDefinitions:
  simple:
    type: basic
swagger: '2.0'
tags:
- description: Manages cloud (object storage) targets
  name: cloud
- description: |
    Manages clusters, nodes, jobs, and cluster software
  name: cluster
  x-ntap-long-description: |
    ## Overview
    These APIs enable you to perform a number of independent workflows, including:
    * Creating the cluster
    * Adding nodes to the cluster
    * Managing cluster configuration data (including name, version, NTP servers, name servers, and DNS domains)
    * Managing node configuration data (including node names, models, serial numbers, and HA group information)
    * Discovering the nodes on the cluster network that can be added to the cluster
    * Viewing and updating current and recent jobs
    * Updating the cluster software
    ### Pre-Cluster APIs
    A few of the cluster APIs (namely, POST/OPTIONS on /api/cluster, GET/HEAD/OPTIONS on /api/cluster/nodes, and calls on /api/cluster/jobs) are allowed before the cluster is created.  These APIs support creation of the cluster and monitoring of its progress. Any other cluster API used before the cluster is created will fail.
- description: Manages physical and logical networking
  name: networking
  x-ntap-long-description: |
    ## Overview
    The ONTAP networking APIs enable reporting on networking information, such as IPspaces, interfaces, routes, ports, service policies and broadcast domains. Some can also be used to manage networking.
    <br/>
    ---
    ## IPspaces
    IPspaces enable you to configure a single ONTAP cluster so that it can be accessed by clients from more than one administratively separate network domain, even if those clients are using the same IP address subnet range. This allows for separation of client traffic for privacy and security.<br/>
    An IPspace defines a distinct IP address space in which storage virtual machines (SVMs) reside. Ports and IP addresses defined for an IPspace are applicable only within that IPspace. A distinct routing table is maintained for each SVM within an IPspace, so that no cross-SVM or cross-IPspace traffic routing occurs.
    <br/>
    ---
    ## Ethernet
    ### Broadcast Domains
    A broadcast domain is a set of ports which would all receive a broadcast packet that is sent from any of the ports.<br/>
    By accurately representing the physical network with an ONTAP broadcast domain, ONTAP ensures that IP interfaces are able to migrate to appropriate ports in case of failure. ONTAP also ensures that characteristics, such as MTU, stay matched across all ports of the broadcast domain.<br/>
    A broadcast domain resides in an IPspace, and can be used by cluster-scoped or SVM-scoped IP interfaces in that IPspace. The scope of the broadcast domain's uniqueness is the IPspace it is in. You must create as many broadcast domains in an IPspace as there are IP subnets with interfaces in that IPspace.<br/>
    Ports are mapped to an IPspace by assigning the port's broadcast domain.
    ### Ports
    A port is a physical or virtual Ethernet network device. Physical ports may be combined into Link Aggregation Groups (LAGs, or ifgrps), or divided into Virtual LANs (VLANs).<br/>
    The GET and PATCH APIs are available for all port types. The POST and DELETE APIs are available for "lag" and "vlan" port types.<br/>
    A given port can host zero or more IP interfaces.<br/>
    A port exists in a broadcast domain and all ports within the same broadcast domain must have layer 2 network connectivity to one another. If a port within a broadcast domain goes down, any IP interfaces hosted by that port can fail over to other ports in the same broadcast domain.
     <br/>
    ---
    ## Fibre Channel
    ### Interfaces
    Fibre Channel (FC) interfaces are the logical endpoints for Fibre Channel network connections to an SVM. A Fibre Channel interface provides Fibre Channel access to storage within the interface's SVM using either Fibre Channel Protocol (FCP) or Non-Volatile Memory Express over Fibre Channel (NVMe over FC).<br/>
    The Fibre Channel interface REST API allows you to create, delete, update and discover Fibre Channel interfaces and obtain status information for Fibre Channel interfaces.<br/>
    A Fibre Channel interface is created on a Fibre Channel port that is located on a cluster node. The Fibre Channel port must be specified to identify the location of the interface for a POST or PATCH that relocates an interface. You can identify the port by either supplying the node and port names or the port UUID.
    ### Ports
    Fibre Channel ports are the physical ports of Fibre Channel adapters on ONTAP cluster nodes that can be connected to Fibre Channel networks to provide Fibre Channel network connectivity. A Fibre Channel port defines the location of a Fibre Channel interface within the ONTAP cluster.<br/>
    The Fibre Channel port REST API allows you to discover Fibre Channel ports, obtain status information for Fibre Channel ports, and configure Fibre Channel port properties.
    ### Learn More
    * _Fibre Channel Logins_ found in both the _SAN_ and _NVMe_ sections. Fibre Channel logins represent connections formed by Fibre Channel initiators that have successfully logged in to ONTAP.
    ---
    ## IP
    ### Interfaces
    An interface (also referred to as a _LIF_ in ONTAP documentation) represents a network access point to a node in a cluster. In other words, an interface is essentially an IPv4 or IPv6 address with associated attributes.<br/>
    IP interfaces are configured on ports to send and receive communications over the network. The port that will host the interface can either be explicitly specified using node and/or port fields or implicitly specified using a broadcast domain.<br/>
    The IPspace of the interface is required for cluster-scoped interfaces. The SVM owning the interface is required for SVM-scoped interfaces. These interfaces are in the SVM's IPspace.<br/>
    The service policy of an interface defines what network services are provided by the interface.
    ### Routes
    Routes indicate which IPv4 or IPv6 gateway to use to communicate with hosts that are not on the local subnet. Typically, an IP interface (or LIF) can only use a gateway if it has the same address family and is in the LIF's subnet.<br/>
    It is important that every gateway address belongs to a physical or virtual router that has connectivity to the specified destination network.<br/>
    SVM-scoped routes can only be used by IP interfaces of the specified SVM. Likewise, cluster-scoped routes can only be used by cluster-scoped IP interfaces in the specified IPspace.
    ### Service Policies
    Service policies are named groupings that define what services are supported by an IP interface. These include both built-in service policies (for example: default-data-files or default-management) and custom service policies.<br/>
    Service policies are scoped to either an SVM or IPspace.
    <br/>
    ---
- description: Manages storage virtual machines (SVMs)
  name: svm
  x-ntap-long-description: |
    ## Overview
    Storage Virtual Machine (SVM) APIs enable you to manage SVMs and their attributes, including the configuration of the CIFS and NFS protocols, export policies, name mappings between CIFS and NFS users, and network services.
    <br/>SVMs contain data volumes and one or more network interfaces through which they serve data to the clients. SVMs securely isolate the shared virtualized data storage and network, and each SVM appears as a single dedicated server to the clients. Each SVM has a separate administrator authentication domain, and each SVM can be managed independently by its SVM administrator.
    <br/>In a cluster, SVMs facilitate data access. A cluster must have at least one SVM to serve data. Multiple SVMs can coexist in a single cluster without being bound to any particular node in the cluster. However, they are bound to the physical cluster on which they exist.
    <br/>SVMs with volumes can contain files and LUNs. They provide file-level data access by using NFS and CIFS protocols for the NAS clients, and block-level data access by using iSCSI and Fibre Channel (FC) (FCoE included) for SAN hosts. The volumes within each NAS SVM are related to each other through junctions and they are mounted on junction paths. These junctions present the file system in each volume. The root volume of the SVM resides at the top level of the namespace hierarchy; additional volumes are mounted to the SVM root volume to extend the namespace. As volumes are created for the SVM, the root volume of the SVM contains junction paths.
    <br/>The ONTAP REST APIs only expose data SVMs as an SVM. The information and configuration associated with the cluster and nodes are exposed from REST, but the cluster and nodes are not treated as if they are a type of SVM from REST APIs. Some APIs that expose both cluster-owned resources and SVM-owned resources from the same endpoint only return and support the "svm" sub-object for the resources that are within a data SVM. In those endpoints, the resources that are not in a data SVM do not return the "svm" sub-object. Generally, such endpoints have a "scope" attribute that returns either "svm" or "cluster" to identify the resource as either a cluster-level resource or one that is completely contained in a data SVM.
- description: Manages SVM name services such as LDAP, NIS, and DNS
  name: name-services
  x-ntap-long-description: |
    ## Overview
    ONTAP uses name-services to obtain information about users and clients. This information is used to authenticate users accessing data on or administering the storage system, and to map user credentials in a mixed environment. If the user database is stored in NIS or LDAP servers, NIS and LDAP name services need to be configured in ONTAP.
    DNS is used for resolving the hostnames. ns-switch is used to configure the SVMs with sources to search for network information and the order in which to search them.
- description: Manages resources for storage area networks (SAN)
  name: SAN
  x-ntap-long-description: |
    ## Overview
    The storage area network (SAN) endpoints and objects enable you to configure, provision, and manage SAN-related objects.
    <br/>
    ---
    ## Fibre Channel
    ### Logins
    Fibre Channel logins represent connections, formed by Fibre Channel initiators, that have successfully logged in to ONTAP. This represents the Fibre Channel login on which higher-level protocols, such as Fibre Channel Protocol (FCP) and Non-Volatile Memory Express over Fibre Channel (NVMe over FC), rely.<br/>
    The Fibre Channel logins REST API provides information about active Fibre Channel logins.
    ### WWPN Aliases
    A WWPN (world wide port name) is a unique 64-bit identifier for a Fibre Channel initiator. It is displayed as a 16-character hexadecimal value. SAN administrators may find it easier to identify Fibre Channel initiators using an alias, especially in larger SANs.<br/>
    The WWPN alias REST API allows you to create, delete and discover aliases for WWPNs.
    ### Services
    A Fibre Channel Protocol (FCP) service defines the properties of the Fibre Channel Protocol target for an SVM. There can be at most one FCP service for a given SVM. An SVM's FCP service must be created before FCP initiators can login to the SVM.<br/>
    The Fibre Channel Proctocol (FCP) service REST API allows you to create, update, delete, and discover Fibre Channel Services for SVMs.
    Fibre Channel interfaces are the logical endpoints for Fibre Channel network connections to an SVM.
    ---
    ## iSCSI
    ### Credentials
    An iSCSI credentials object defines the authentication credentials to be used between an iSCSI initiator and ONTAP. It identifies an authentication type, user names, and the passwords that must be used to authenticate a specific initiator.<br/>
    The iSCSI credentials REST API allows you to create, update, delete, and discover iSCSI credential objects.
    ### Services
    An iSCSI service defines the properties of the iSCSI target for an SVM. There can be at most one iSCSI service for an SVM. An SVM's iSCSI service must be created before iSCSI initiators can login to the SVM.<br/>
    The iSCSI service REST API allows you to create, update, delete, and discover iSCSI services for SVMs.
    ### Sessions
    An iSCSI session consists of one or more TCP connections that link an iSCSI initiator with an iSCSI target. TCP connections can be added and removed from an iSCSI session by the iSCSI initiator. Across all TCP connections within an iSCSI session, an initiator sees one and the same target. After the connection is established, iSCSI control, data, and status messages are communicated over the session.<br/>
    The iSCSI sessions REST API provides information about iSCSI initiators that have successfully logged in to ONTAP.
    ### Learn More
    * _IP Interfaces_ found in the _networking_ section. IP interfaces are the logical endpoints for iSCSI network connections to an SVM.
    ---
    ## Initiator Groups
    An initiator group (igroup) is a collection of Fibre Channel WWPNs (world wide port names), iSCSI IQNs (qualified names), iSCSI EUIs (extended unique identifiers), or any combination of these, that identify host initiators.<br/>
    Initiator groups are used to control which hosts can access specific LUNs. To grant access to a LUN from one or more hosts, a network administrator creates an initiator group containing the hosts' initiator names, and then creates a LUN map that associates the initiator group with the LUN.<br/>
    The initator group REST API allows you to create, update, delete, and discover initiator groups. It also enables you to add and remove initiators that can access the target and associated LUNs.
    ## LUN Maps
    A LUN map is an association between a LUN and an initiator group. When a LUN is mapped to an initiator group, the group's initiators are granted access to the LUN. The relationship between an initiator group and a LUN is many initiator groups to many LUNs.<br/>
    The LUN map REST API allows you to create, delete, and discover LUN maps.
    ## LUNs
    A LUN is the logical representation of storage in a storage area network (SAN).<br/>
    The LUN REST API allows you to create, update, delete, and discover LUNs.
- description: Manages resources for Non-Volatile Memory Express (NVMe)
  name: NVMe
  x-ntap-long-description: |
    ## Overview
    The Non-Volatile Memory Express (NVMe) API endpoints and objects provide for configuration, provisioning and management of the NVMe-related objects.
    NVMe over Fabrics (NVMe-oF) refers to the extensions and changes to the base NVMe command set to support NVMe commands over a fabric interconnect and from multiple hosts simultaneously. ONTAP implements elements of both NVMe and NVMe-oF. Throughout this documentation, NVMe is generally used to refer to both NVMe and NVMe-oF.
    ### Fibre Channel Logins
    Fibre Channel logins represent connections, formed by Fibre Channel initiators, that have successfully logged in to ONTAP. This represents the Fibre Channel login on which higher-level protocols such as Fibre Channel Protocol (FCP) and Non-Volatile Memory Express over Fibre Channel (NVMe over FC) rely.<br/>
    The Fibre Channel logins REST API provides information about active Fibre Channel logins.
    ### NVMe Interfaces
    NVMe interfaces are network interfaces configured to support an NVMe over Fabrics protocol. The NVMe interfaces are Fibre Channel interfaces supporting an NVMe-oF data protocol. Regardless of the underlying physical and data protocol, NVMe interfaces are treated equally for the host-side application configuration. This endpoint provides a consolidated view of all NVMe interfaces for the purpose of configuring host-side applications.<br/>
    The NVMe interfaces REST API provides NVMe-specific information about network interfaces configured to support an NVMe-oF protocol.
    #### Learn More
    * _Fibre Channel Interfaces_ found in the _networking_ section. Fibre Channel interfaces are the logical endpoints for Fibre Channel network connections to an SVM.
    ### NVMe Services
    A Non-Volatile Memory Express (NVMe) service defines the properties of the NVMe controller target for an SVM. There can be at most one NVMe service for a given SVM. An SVM's NVMe service must be created before NVMe host initiators can connect to the SVM.<br/>
    The Non-Volatile Memory Express (NVMe) service REST API allows you to create, update, delete, and discover NVMe services for SVMs.
    ### NVMe Subsystem Controllers
    Non-Volatile Memory Express (NVMe) subsystem controllers represent dynamic connections between hosts and a storage solution.<br/>
    The NVMe subsystem controllers REST API provides information about connected hosts.
    ### NVMe Subsystem Maps
    An NVMe subsystem map is an association of an NVMe namespace with an NVMe subsystem. When an NVMe namespace is mapped to an NVMe subsystem, the NVMe subsystem's hosts are granted access to the NVMe namespace. The relationship between an NVMe subsystem and an NVMe namespace is one subsystem to many namespaces.<br/>
    The NVMe subsystem map REST API allows you to create, delete, and discover NVMe subsystem maps.
    ### NVMe Subsystems
    An NVMe subsystem maintains configuration state and namespace access control for a set of NVMe-connected hosts.<br/>
    The NVMe subsystem REST API allows you to create, update, delete, and discover NVMe subsystems. It also allows you to add and remove NVMe hosts that can access the subsystem and associated namespaces.
    ### NVMe Namespaces
    An NVMe namespace is a collection of addressable logical blocks presented to hosts connected to the storage virtual machine using the NVMe over Fabrics protocol.<br/>
    The NVMe namespace REST API allows you to create, update, delete, and discover NVMe namespaces.
- description: Manages applications
  name: application
  x-ntap-long-description: |
    ## Overview
    ONTAP application APIs simplify storage management by using terminology specific to a type of application. This application-specific terminology can be used to provision and manage ONTAP storage objects. A single call using application-specific parameters provisions storage and enables protocol access for an application following NetApp best practices. You can view and manage the ONTAP objects making up the application as a group using the application APIs. The library of available application templates already includes several database and virtualization applications.
    ## APIs
    There are several application APIs that must be used to fully manage an application. Templates are used to represent any parameters specific to a given application. Some APIs expose applications in terms of their specific template, while others only expose a generic view that all applications share. The template view is present on the _templates_ and _applications_ APIs (although these APIs do also include some generic fields). The _components_ and _snapshots_ APIs are entirely generic and do not differ across types of applications.
    <br/>The following section provides an overview of each API, followed by a lifecycle example of managing an application to demonstrate how the APIs can be used together.
    ***
    ### Template
    A template is an ONTAP representation of a specific type of application. Each template represents one type of application, the parameters that can be used to customize it, the layout of its storage, and how it can be accessed. Templates are intended to expose an application in terms specifically applicable to an administrator of a given application. As such, traditional ONTAP storage elements are generally not included in an application template.
    <br/>The template APIs can be used to discover what templates are currently available. The ONTAP API documentation also includes a model of the templates. The template APIs generally provide the same information as the documentation, but the template APIs might provide more up-to-date details about the default values of template parameters based on the current ONTAP configuration. However, only the ONTAP API documentation includes a full description of each template parameter, its usage, and whether it is optional.
    ***
    ### Application
    The application APIs are the only interfaces that allow management of an application using template properties.
    <br/>The application object includes the following three sections:
    1. Generic metadata about the application, including common fields such as the name of the application, the template used to provision it, and the generation number of the application.
    2. Statistics information about the application, including space and IOPS details about the entire application and each of its components. These are expensive to collect and should only be requested when needed using a _fields=_ query.
    3. A template view of the application. The application object itself presents a mutually exclusive list of all possible templates. Only one of these fields can be used per application. The name of the field corresponds to the name of the template used by the application. Currently, the creation of a new application and the modification of the storage service for an existing application are supported through the template parameters.
    ***
    ### Component
    The component API offers a generic view of the application and how to access the application from the host application. This is the only API that exposes the underlying ONTAP storage elements of which the application is composed. It is read-only; it cannot support modifications specific to the type of application it is presenting.
    <br/>The component object includes the following details for an application:
    1. The NFS export rules for accessing the application from the host.
    2. The CIFS share and users that can access the application from the host.
    3. The SAN initiators that can access the application from the host.
    4. For IP-based protocols, the IP addresses that are best suited for accessing the component.
    5. The underlying storage elements that make up the component, such as volumes or LUNs.
    ***
    ### Snapshot copy
    The Snapshot copy APIs offer full CRUD for application-level Snapshot copies. Application Snapshot copies can be flagged as either crash-consistent or application-consistent. From the perspective of ONTAP, there is no difference between the two. It is the responsibility of the administrator to ensure that the application is in a consistent state before flagging a Snapshot copy as application-consistent. Use of the SnapCenter Backup Management suite is recommended to ensure correct interaction between host applications and ONTAP.
    ***
    ## Example
    The following example outlines the APIs necessary to manage applications and how they fit together. However, this example does not provide detailed information on each API. See the documentation for the individual APIs for more information.
    ### 1) Discover the templates
    This documentation, which includes the model of each template as part of the _templates_ and _applications_ APIs, is the easiest and most comprehensive way to discover the available templates. The _templates_ API can also be used to query the system for templates in a programmatic way.<br/>
    To discover the templates available to provision an Oracle application, the following query is used.
    ---
    ```
    # The API:
    /api/application/templates
    # The query:
    name=oracle*
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/templates?name=oracle*" -H "accept: application/json"
    # The response:
    {
      "records": [
        {
          "name": "oracle_on_nfs", "description": "Oracle using NFS."
        },
        {
          "name": "oracle_on_san", "description": "Oracle using SAN."
        },
        {
          "name": "oracle_rac_on_nfs", "description": "Oracle RAC using NFS."
        },
        {
          "name": "oracle_rac_on_san", "description": "Oracle RAC using SAN."
        }
      ],
      "num_records": 4
    }
    ```
    ---
    ### 2) Create an application
    Now that we know the possible templates, we use one to create an application. The template properties differ from template to template, and can be found by exploring the model of the application object in this documentation. Each call to create an application must include the properties for exactly one template. These properties are provided under the property with the same name as the template. Other than the template properties, the only other required properties to create an application are the SVM and name.
    <br/>Note: In the following call example, not all of the template properties are included. Where a property is not needed or the default is sufficient, the property can be excluded. In this case using the _oracle_on_nfs_ template, the _archive_log_, and _protection_type_ are not included. The template name, _oracle_on_nfs_, is specified above the group of template properties, after the names of the application and the SVM.
    <br/>Creating an application is asynchronous, so the response for this API includes information about the job doing the work. The response header also includes the _location_ of where the application can be found if the job is successful.
    ---
    Prior to creating an application, the following prerequisites must be met for the protocols associated with the template:
    * Licences must be installed.
      ** [`POST /cluster/licensing/licenses`](#cluster/license_create)
    * Aggregates must exist with enough available space and IOPS to satisfy the requested size.
      ** [`POST /storage/aggregates`](#storage/aggregate_create)
    * An SVM must exist with protocol services enabled.
      ** [`POST /svm/svms`](#svm/svm_create)
    * LIFs must exist. For SAN applications, only High Availability groups where each node has at least on LIF will be considered for placement of storage objects.
      ** [`POST /network/ip/interfaces`](#networking/network_ip_interfaces_create)
      ** [`POST /network/fc/interfaces`](#networking/fc_interface_create)
    ---
    The following are not required prior to creating an application, but might be necessary before connecting to the application:
    * Network routes must be created to access ethernet based LIFs.
      ** [`POST /network/ip/routes`](#networking/network_ip_routes_create)
    * For volumes created by this operation to be successfully mounted, ONTAP requirements related to mounting must be met.
    ---
    ```
    # The API:
    /api/application/applications
    # The query:
    No query is needed for this command. Optionally, you can specify the return_timeout or set the return_records flag to alter the behavior of the command.
    # The body:
    {
      "name": "my_ora_app",
      "svm": {
        "name": "svm1"
      },
      "oracle_on_nfs": {
        "db": {
          "size": "2GB",
          "storage_service": {
            "name": "value"
          },
          "nfs_access": [
              {
                  "access": "rw",
                  "host": "0.0.0.0/0"
              }
          ]
        },
        "redo_log": {
          "size": "1GB"
        },
        "ora_home": {
          "size": "1GB"
        }
      }
    }
    # The call:
          curl -X POST "https://<mgmt-ip>/api/application/applications" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "name": "my_ora_app", "svm": { "name": "vs1" }, "oracle_on_nfs": { "db": { "size": "2GB", "storage_service": { "name": "value" }, "nfs_access": [ { "access": "rw", "host": "0.0.0.0/0" } ] }, "redo_log": { "size": "1GB" }, "ora_home": { "size": "1GB" } } }'
    # The response:
    {
      "job": {
        "uuid": "dc0d01dd-df5a-11e7-b5d2-005056b47eb2",
        "id": 94,
        "_links": {
          "self": {
            "href": "/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2"
          }
        }
      }
    }
    # The response header:
    date: Tue, 12 Dec 2017 16:38:18 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 203
    ```
    ---
    ### 3) Wait for the application to be created
    The call to create the application returns information about the job, including a HAL link to retrieve details about the job. The job object includes a state and a message to indicate the progress of the job. When the job is complete, and the application has been fully created, the message indicates success and the _state_ of the job property is _success_.
    <br/>For brevity purposes, the successful job response is shown here. On a real cluster, an application might take several seconds to several minutes to be created, depending on the system load. If the job is not complete, the _message_ property includes a short description on the progress of the job, and the _state_ indicates _running_.
    ---
    ```
    # The API:
    /api/cluster/jobs/{uuid}
    # The call, provided by the HAL link from step 3:
    curl -X GET "https://<mgmt-ip>/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2" -H "accept: application/hal+json"
    # The response:
    {
      "uuid": "dc0d01dd-df5a-11e7-b5d2-005056b47eb2",
      "state": "success",
      "message": "Complete: Success [0]",
      "code": 0,
      "_links": {
        "self": {
          "href": "/api/cluster/jobs/dc0d01dd-df5a-11e7-b5d2-005056b47eb2"
        }
      }
    }
    ```
    ---
    ### 4) Retrieve the new application
    You can look up the application directly without listing all the applications. Use the _location_ header that is included in the response when the application is created.
    <br/>Note: The following example uses a query to retrieve only a small number of the application's properties.
    ---
    ```
    # The API:
    /api/application/applications/{uuid}
    # The query:
    fields=name,template.name,generation,state
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2?fields=name,template.name,generation,state" -H "accept: application/json"
    # The response:
    {
      "uuid": "dbc10d87-df5a-11e7-b5d2-005056b47eb2",
      "name": "my_ora_app",
      "template": { "name": "oracle_on_nfs" },
      "generation": 2,
      "state": "online"
    }
    ```
    ---
    ### 5) Discover how to access the application
    The components API provides information on how to access the storage that is provisioned for the application.
    <br/>For brevity, only the names of the components are requested. See the API documentation for more information on the other available fields.
    ---
    ```
    # The API:
    api/application/applications/{application.uuid}/components
    # The query:
    fields=name
    # The call:
    curl -X GET "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/components?fields=name" -H "accept: application/json"
    # The response:
    {
      "records": [
        { "uuid": "e06fb407-df5a-11e7-b5d2-005056b47eb2", "name": "db" },
        { "uuid": "e0709732-df5a-11e7-b5d2-005056b47eb2", "name": "ora_home" },
        { "uuid": "e07158eb-df5a-11e7-b5d2-005056b47eb2", "name": "redo_log" }
      ],
      "num_records": 3
    }
    ```
    ---
    ### 6) Update the application
    To update the storage service, the same template that is used for creating the application is reused, but with only the storage_service properties set. In the generic SAN and NAS templates, the name of each component must also be specified.
    <br/>In this example, the cluster only supports the _value_ storage service, so modifications of the application to a faster storage service fail. Note how the error message indicates the parameter that caused the problem.
    <br/>Application modification, like application creation, is an asynchronous operation. If a valid command is passed, the API returns information about the job instead of an error.
    ---
    ```
    # The API:
    /api/application/applications/{uuid}
    # The body:
    {
      "oracle_on_nfs": { "db": { "storage_service": { "name": "extreme" } } }
    }
    # The call:
    curl -X PATCH "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "oracle_on_nfs": { "db": { "storage_service": { "name": "extreme" } } } }'
    # The response:
    {
      "error": {
        "message": "Invalid value for parameter \"oracle_on_nfs.db.storage-service.name\": extreme. Supported values are: value.",
        "code": "65995152"
      }
    }
    ```
    ---
    ### 7) Manage Snapshot copies
    For applications created with the _local_ _protection_type_ set to _hourly_, Snapshot copies are automatically taken every hour. These Snapshot copies can be retrieved or restored using the Snapshot copy APIs. Snapshot copies can also be taken on demand using these APIs. It is important to note that the _consistency_type_ flag of the Snapshot copy is for record-keeping only: it is the responsibility of the administrator to ensure that the application is in a consistent state prior to flagging a Snapshot copy as _application_ consistent.
    <br/>Take a Snapshot copy manually:
    ---
    ```
    # The API:
    /api/application/applications/{uuid}/snapshots
    # The body:
    {
        "name": "little_bobby_tables",
        "consistency_type": "crash"
    }
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots" -H "accept: application/hal+json" -H "content-type: application/json" -d '{ "name": "little_bobby_tables", "consistency_type": "crash"}'
    # The response:
    {}
    # The response header:
    date: Tue, 12 Dec 2017 17:40:10 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots/dbc10d87-df5a-11e7-b5d2-005056b47eb2_13_little_bobby_tables
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 3
    ```
    ---
    In the above example, the response body is empty, and the response header includes the _location_ of the newly created Snapshot copy. By default, all POST calls return an empty body unless a job is used to process the creation asynchronously. This behavior can be changed with the query flag _return_records_.
    <br/>Restoring a Snapshot copy uses an action API. Action paths can also be performed asynchronously as jobs, as with creating or modifying an application. The response header does not include a _location_, because this action is not creating a resource.
    ---
    ```
    # The API:
    /api/application/applications/{application.uuid}/snapshots/{snapshot.uuid}/restore
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications/dbc10d87-df5a-11e7-b5d2-005056b47eb2/snapshots/dbc10d87-df5a-11e7-b5d2-005056b47eb2_13_little_bobby_tables/restore" -H "accept: application/hal+json"
    # The response:
    {
      "job": {
        "uuid": "00e81690-df64-11e7-b5d2-005056b47eb2",
        "id": 100,
        "_links": {
          "self": {
            "href": "/api/cluster/jobs/00e81690-df64-11e7-b5d2-005056b47eb2"
          }
        }
      }
    }
    # The response header:
    date: Tue, 12 Dec 2017 17:43:46 GMT
    cache-control: no-cache,no-store,must-revalidate
    server: libzapid-httpd
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 204
    content-type: application/hal+json
    ```
    ---
    ## Smart containers
    Smart containers are traditional ONTAP storage objects such as FlexVol or FlexGroup created using the application REST API.
    * NAS - FlexVolume, FlexGroup, and FlexCache objects
    * SAN - LUNs
    * NVME - Namespaces
    ---
    The benefits of creating a Smart Container are as follows:
    * ONTAP determines the best placement for the storage object based on available performance and space capacity.
    * Access controls can be optionally set.
    * Snapshot copy schedules can be optionally set.
    * A single atomic job that does all the above.
    ***
    Smart containers are similar to generic enterprise applications (NAS, SAN, NVME), but with certain restrictions. Smart containers are restricted to 1 application-component. Any post-provisioning data management operations on smart containers must be performed via PATCH operations corresponding to the object created. However, the POST, GET and DELETE operations that exist for applications will also operate for smart containers.
    <br/>To create a Smart Container the "smart_container:true" parameter must be provided.<br/>
    ---
    Prior to creating a smart container, the following prerequisites must be met for the protocols associated with the template:
    * Licences must be installed.
      ** [`POST /cluster/licensing/licenses`](#cluster/license_create)
    * Aggregates must exist with enough available space to satisfy the requested size.
      ** [`POST /storage/aggregates`](#storage/aggregate_create)
    * An SVM must exist with protocol services enabled.
      ** [`POST /svm/svms`](#svm/svm_create)
    * LIFs must exist. For SAN objects, only High Availability groups where each node has at least one LIF to be considered for placement of storage objects.
      ** [`POST /network/ip/interfaces`](#networking/network_ip_interfaces_create)
      ** [`POST /network/fc/interfaces`](#networking/fc_interface_create)
    ---
    The following are not required prior to creating a smart container:
    * Network routes must be created to access Ethernet-based LIFs.
      ** [`POST /network/ip/routes`](#networking/network_ip_routes_create)
    * To mount volumes by this operation successfully, all ONTAP requirements related to mounting must be met.
    ***
    ### Example
    The following example outlines the APIs necessary to create a smart container. This is an addendum to the example provided on how to create an application.
    ```
    # The API:
    /api/application/applications
    # The query:
    No query is needed for this command. Optionally, you can specify the return_timeout or set the return_records flag to alter the behavior of the command.
    # The body:
    {
      "name": "my_container",
      "svm": {
          "name":"vs1"
      },
      "template": {
          "name":"nas"
      },
      "smart_container": "true"
      "nas": {
          "application_components": [
              {
                  "share_count": "1",
                  "name": "myVolume",
                  "storage_service": {
                      "name": "value"
                  },
                  "total_size": "100mb"
              }
          ]
      }
    }
    # The call:
    curl -X POST "https://<mgmt-ip>/api/application/applications" -H "accept: application/hal+json" -H "Content-Type: application/json" -d '{"name": "my_container", "svm": {"name": "vs1"} , "smart_container": true , "template": {"name": "nas"} , "nas": {"application_components": [{"share_count": "1", "name": "myVolume", "storage_service": {"name": "value"} , "total_size": "100mb"} ] } }'
    # The response:
     {
         "job": {
             "uuid": "5440db05-77f0-11e9-a5a0-005056bba32f",
             "_links": {
                 "self": {
                     "href": "/api/cluster/jobs/5440db05-77f0-11e9-a5a0-005056bba32f"
                 }
             }
         }
     }
    # The response header:
    date: Tue, 23 May 2019 16:38:18 GMT
    server: libzapid-httpd
    content-type: application/hal+json
    location: /api/application/applications/5440db05-77f0-11e9-a5a0-005056bba32f
    cache-control: no-cache,no-store,must-revalidate
    connection: Keep-Alive
    keep-alive: timeout=5, max=100
    content-length: 203
    ```
    ---
    ## Smart Container Properties
    These sections are only allowed for smart containers and will return an error when provided on traditional applications. The following is an example of the error returned:
    ```
    {
    "error": {
        "message": "Field \"<field>\" is only supported on smart containers.",
        "code": "65996161"
        }
    }
    ```
    ## Application API limitations
    ### Template versus generic
    Applications can be represented in either template or generic terms. All applications can be represented in generic terms as a list of components. Each component generally maps to a field in the template. For example, Microsoft SQL Server applications have a component named _sqldata_ that corresponds to the _db_ parameter in the sql_on_san template. These mappings are usually straightforward and allow the templates to present application terminology, while the generic view uses the traditional naming schemes for ONTAP storage elements.
    <br/>The current release supports the creation and modification of applications in template terms, but retrieval is not supported. The mapping from template to generic terms is left to your own discretion.za
    ### ONTAP feature support
    Application APIs are interfaces layered on top of traditional ONTAP storage. While the intent is to provide a full management suite through application APIs, some features of the underlying ONTAP objects are not directly supported through application APIs. Applications are provisioned using ONTAP best practices, so the need for additional modifications of the underlying objects should be minimal. If such modifications are necessary, the traditional ONTAP APIs can be used. The _/api/application/{application.uuid}/components_ API provides a _backing_storage_ field that can be used to locate the storage objects associated with an application. This API also provides details of the NFS, CIFS, or SAN protocol access objects associated with the application.
    <br/>The application APIs use the extra information known about the application to coordinate multiple ONTAP objects in unison. When using non-application APIs, certain settings might interfere with the ONTAP object coordination and cause the application APIs to behave unexpectedly. To continue to supply the full ONTAP feature set, these modifications on the underlying objects are allowed, but there is no guarantee that these modifications will not adversely affect the application experience. You should use this feature with caution.
- description: Manages backups, autosupports, and event handling
  name: support
  x-ntap-long-description: |
    ## Overview
    You can use ONTAP support APIs to manage configuration backups, autosupport settings, and event handling.
    ### Configuration backups
    Configuration backups are copies of node and cluster settings saved to an external server.
    Single-node clusters must have configuration backups as protection against corruption of the configuration database. Multi-node clusters back up the configuration automatically between the nodes in the cluster.
- description: Manage the security settings for the cluster and SVMs
  name: security
  x-ntap-long-description: |
    ## Overview
    You can use ONTAP security APIs to manage security settings for the cluster and SVMs.
    ### SAML
    Configure the SAML 2.0 SP (Service Provider) protocol inside ONTAP. Doing so redirects the authentication task to a third-party Identity Provider (IDP) that can utilize any number of approaches for multi-factor authentication. After SAML authentication is enabled, all interactive web access (System Manager, SPI) is authenticated via SAML and a third-party IDP.
- description: Manages physical and logical storage
  name: storage
  x-ntap-long-description: |
    ## Overview
    The ONTAP storage APIs can be used to manage physical and logical storage. This includes management of aggregates, volumes, LUNs, qtrees, snapshots, quotas, and storage effeciency.
    <br/>
- description: Manages asynchronous extended data protection (XDP) relationships for
    FlexVols, FlexGroups, or SVMs
  name: snapmirror
  x-ntap-long-description: |
    ## Overview
    SnapMirror technology enables customers to copy and backup their production data. The secondary or destination volume in such a backup relationship can reside anywhere, locally or remotely, and can be used to restore access to the protected data. You can restore access to protected data by drawing upon a vault of backups or, in the event that a primary is unusable, by using a disaster recovery copy that can be activated for clients and applications. SnapMirror periodically updates a replica to create new backups and/or to keep a replica up-to-date with changes that have been written to the primary. The SnapMirror subsystems are designed to keep many pairs of source (primary) and destination (secondary) copies up-to-date in an efficient and scalable manner. <br/>
    The SnapMirror APIs can be used to create and manage SnapMirror relationships of type "async", and "sync". These APIs can also be used to manage restore-relationships. These APIs allow you to manage the following endpoints:
    * SnapMirror policies - When applied to a SnapMirror relationship, the SnapMirror policy controls the behavior of the relationship and specifies the configuration attributes for that relationship.
    * SnapMirror relationships - You can create and manage SnapMirror relationships, and you can change the state of the SnapMirror relationship using a PATCH request.
    * SnapMirror transfers - You can manage data transfers on the specified SnapMirror relationship.
- description: Manages NDMP services
  name: ndmp
  x-ntap-long-description: |
    NDMP (Network Data Management Protocol) provides an open standard for network-based backup of network-attached storage (NAS). NDMP minimizes the coding required for different applications by providing standard commands for backing up and restoring file servers. NDMP increases the speed and efficiency of NAS data protection, as data can bypass backup servers and be written directly to tape storage. Starting from ONTAP 8.2, the software supports SVM aware NDMP backups. This helps in optimizing NDMP backup performance by choosing efficient data transfer paths and is fully compatible with integrated non-disruptive operations and volume mobility capabilities of ONTAP software. In order to support this feature, a CAB extension must be implemented by backup vendors.
    These APIs allow you to manage the following endpoints:
    * ndmp
    * ndmp nodes
    * ndmp svms
    * ndmp sessions
    ## APIs
    ### NDMP
    These APIs are used to manage NDMP mode, SVM-scope or node-scope.
    ### NDMP nodes
    These APIs are used to manage node configurations.
    ### NDMP SVMs
    These APIs are used to manage NDMP configurations of SVMs.
    ### NDMP sessions
    These APIs are used to manage diagnostic information on NDMP sessions belonging to a specific SVM in the case of SVM-scope or to a specific node in the case of node-scope.
- description: SnapLock is a high-performance compliance solution that uses WORM storage
    to retain files in an unmodified form.
  name: snaplock
  x-ntap-long-description: |
    SnapLock is an alternative to the traditional optical "write once, read many" (WORM) data. SnapLock is used for the storage of read-only WORM data. SnapLock is a license-based, disk-based, open-protocol feature that works with application software to administer non-rewritable storage of data. The primary objective of this feature is to provide storage-enforced WORM and retention functionality. SnapLock can be deployed for protecting data in strict regulatory environments in such a way that even the storage administrator is considered an untrusted party. SnapLock provides special purpose volumes in which files can be stored and committed to a non-erasable, non-rewritable state either forever or for a designated retention period. SnapLock allows this retention to be performed at the granularity of individual files.
    These APIs allow you to manage the following endpoints:
    * SnapLock log
    * SnapLock compliance-clock
    * SnapLock event-retention
    * SnapLock file retention
    * SnapLock privileged-delete
    * SnapLock file fingerprint
    * SnapLock legal-hold
    ## APIs
    ###  SnapLock log
    These APIs are used to create and initialize the SnapLock log configuration for an SVM, modify attributes associated with the SnapLock log configuration,and delete the auditlog configuration.
    ###  SnapLock compliance-clock
    This API  manages the ComplianceClock of the system. ComplianceClock determines the expiry time of the SnapLock objects in the system. ComplianceClock can be initialized only once by the user and once it is set, it cannot be changed or altered by the user.
    ### SnapLock event-retention
    This API is used to create Event Based Retention (EBR) policies for an SVM. A policy consists of a policy-name and a retention-period. Only a user with security login role vsadmin-snaplock is allowed to perform this operation.
    ### SnapLock file retention
    This API is used to set the retention time of a file. Retention time expects the date in ISO 8601 format or "infinite".
    ### SnapLock privileged-delete
    This API is used to perform a privileged-delete operation on unexpired WORM files on a SnapLock Enterprise volume. The only built-in role that has access to the command is "vsadmin-snaplock".
    ### SnapLock file fingerprint
    This API is used to start the fingerprint computation on a file.
    ### SnapLock legal-hold
    This API is used to retain Compliance-mode WORM files for the duration of a litigation. A file under a Legal-Hold behaves like a WORM file with an indefinite retention period. Only a user with security login role vsadmin-snaplock is allowed to perform the operation.
- description: Manages the NFS and export settings for clusters and SVMs
  name: NAS
  x-ntap-long-description: |
    ## Overview
    These APIs allow you to complete various tasks, including:
    * Creating an NFS server for an SVM
    * Managing an NFS configuration of an SVM
    * Viewing and updating the NFS configuration of an SVM
    * Configuring export policies and rules for an SVM
    * Managing export policies and rules for an SVM
    ## APIs
    ### NFS
    The NFS APIs enable you to create and configure NFS settings for an SVM. You can delete or update NFS configurations, and you can also disable or enable different NFS features as needed.
    ### Exports
    The export APIs allow you to create and manage export policies for an SVM that enable an administrator to restrict access to volumes for clients that match specific IP addresses and specific authentication types. Export APIs are also used to create export rules for an export policy. The APIs allow each rule to specify the number of mask bits in the client IP address that must be matched for that rule to apply to a particular client request. The APIs also allow each export rule to specify the authentication types that are required for both read-only and read-write operations.
    ### Kerberos
    Kerberos is a protocol designed to provide strong authentication for users and hosts within a client/server environment. The basis of the protocol is a shared, secret-key cryptology system. (Kerberos uses shared-key encryption to ensure the confidentiality of the data. It also uses hashing techniques to ensure the integrity of the data (so that no one can modify the data unless allowed to do so). With the NetApp multiprotocol storage platform, through which clients based on UNIX or Windows can access data using CIFS or NFS, it is crucial to provide the ability to use standard network services for authentication and for identity storage.<br/>
    To configure an ONTAP system to use Kerberos for NFS, Kerberos must be enabled on a data LIF in the SVM that owns the NFS server. A Kerberos realm needs to be created before enabling Kerberos on a data LIF. (The Kerberos realm is needed so that the cluster knows how to format Kerberos ticket requests.) The Kerberos APIs allow you to define, create, modify, and delete realms for the SVM. The APIs also allow you to enable/disable Kerberos on a data LIF and update the Kerberos interface configuration for a particular data LIF in the SVM.
